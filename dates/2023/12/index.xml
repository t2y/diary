<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/12 on forest nook</title><link>/diary/dates/2023/12/</link><description>Recent content in 2023/12 on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/dates/2023/12/index.xml" rel="self" type="application/rss+xml"/><item><title>mongodb のレプリカセットのデプロイ調査</title><link>/diary/posts/2023/1207/</link><pubDate>Thu, 07 Dec 2023 09:26:50 +0900</pubDate><guid>/diary/posts/2023/1207/</guid><description>4時前に寝て6時半に起きた。1時過ぎまで作業して、帰って少しゲームして、うまく眠れなくてだらだらしていた。
mongodb のレプリカセットの調査 以前 mongodb でトランザクションを使うときにレプリカセットが必要 なことがわかった。他機能の開発途中だったので一旦後回しにしていたものを回収している。状況によってはメンバーに委譲してもよかったんだけど、私が遊撃で出張ってみることにした。実際に調べてみてコンテナの運用も考慮するとけっこう難しいことがわかってきた。
mongosh からは Replication Methods を使ってレプリカセットの操作ができる。これはユーティリティのようなもので mongodb としての低レベルのコマンド操作は Replication Commands になる。mongo-go-driver はレプリカセット向けのユーティリティを提供していないため、Replication Commands を RunCommand() の低レベル API を使って自分で実装しないといけない。
例えば、レプリカセットの初期化をするときは次のように replSetInitiate というコマンドを適切なパラメーターで呼び出す。あまりドキュメントで丁寧に説明されていないので試行錯誤でエラーメッセージをみながら実装することになる。とくにはまるのが mongod のサーバーは --replSet myrs のようにレプリカセットを指定して起動させるものの、初期化コマンドを実行するときはまだレプリカセットを設定していないため、レプリカセットを指定せず、且つ direct パラメーターをセットしないと mongod サーバーに接続できない。この微妙な設定を把握するのにはまった。これが正しい手順かどうかもわからないが、ググったりしているとフォーラムでそういったコメントが散見されたりする。おそらく mongosh の Replication Methods を使うと、クライアントからサーバー接続は裏方でよしなにやってくれるのでそっちの方が簡単ではある。
func (r *ReplicaSet) Initiate(ctx context.Context, config bson.M) error { client, err := r.connectDirect(ctx) if err != nil { return fmt.Errorf(&amp;#34;failed to connect with direct: %w&amp;#34;, err) } defer client.Disconnect(ctx) var result bson.</description><content>&lt;p>4時前に寝て6時半に起きた。1時過ぎまで作業して、帰って少しゲームして、うまく眠れなくてだらだらしていた。&lt;/p>
&lt;h2 id="mongodb-のレプリカセットの調査">mongodb のレプリカセットの調査&lt;/h2>
&lt;p>以前 &lt;a href="/diary/diary/posts/2023/1101/#mongo-とトランザクションとレプリカセット">mongodb でトランザクションを使うときにレプリカセットが必要&lt;/a> なことがわかった。他機能の開発途中だったので一旦後回しにしていたものを回収している。状況によってはメンバーに委譲してもよかったんだけど、私が遊撃で出張ってみることにした。実際に調べてみてコンテナの運用も考慮するとけっこう難しいことがわかってきた。&lt;/p>
&lt;p>&lt;a href="https://www.mongodb.com/docs/mongodb-shell/">mongosh&lt;/a> からは &lt;a href="https://www.mongodb.com/docs/v7.0/reference/method/js-replication/">Replication Methods&lt;/a> を使ってレプリカセットの操作ができる。これはユーティリティのようなもので mongodb としての低レベルのコマンド操作は &lt;a href="https://www.mongodb.com/docs/manual/reference/command/nav-replication/">Replication Commands&lt;/a> になる。&lt;a href="https://github.com/mongodb/mongo-go-driver">mongo-go-driver&lt;/a> はレプリカセット向けのユーティリティを提供していないため、Replication Commands を RunCommand() の低レベル API を使って自分で実装しないといけない。&lt;/p>
&lt;p>例えば、レプリカセットの初期化をするときは次のように &lt;code>replSetInitiate&lt;/code> というコマンドを適切なパラメーターで呼び出す。あまりドキュメントで丁寧に説明されていないので試行錯誤でエラーメッセージをみながら実装することになる。とくにはまるのが mongod のサーバーは &lt;code>--replSet myrs&lt;/code> のようにレプリカセットを指定して起動させるものの、初期化コマンドを実行するときはまだレプリカセットを設定していないため、レプリカセットを指定せず、且つ &lt;code>direct&lt;/code> パラメーターをセットしないと mongod サーバーに接続できない。この微妙な設定を把握するのにはまった。これが正しい手順かどうかもわからないが、ググったりしているとフォーラムでそういったコメントが散見されたりする。おそらく mongosh の Replication Methods を使うと、クライアントからサーバー接続は裏方でよしなにやってくれるのでそっちの方が簡単ではある。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>) &lt;span style="color:#a6e22e">Initiate&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#a6e22e">config&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">client&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">connectDirect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to connect with direct: %w&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Disconnect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">result&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cmd&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">D&lt;/span>{{&lt;span style="color:#a6e22e">Key&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;replSetInitiate&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Value&lt;/span>: &lt;span style="color:#a6e22e">config&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Database&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">db&lt;/span>).&lt;span style="color:#a6e22e">RunCommand&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">cmd&lt;/span>).&lt;span style="color:#a6e22e">Decode&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">result&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to run replSetInitiate(): %w&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">PrettyPrint&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;completed to initiate&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">result&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>) &lt;span style="color:#a6e22e">connectDirect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">mongo&lt;/span>.&lt;span style="color:#a6e22e">Client&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">opts&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">options&lt;/span>.&lt;span style="color:#a6e22e">Client&lt;/span>().
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetAuth&lt;/span>(&lt;span style="color:#a6e22e">options&lt;/span>.&lt;span style="color:#a6e22e">Credential&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Username&lt;/span>: &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">User&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Password&lt;/span>: &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Passwd&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetHosts&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Hosts&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetDirect&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>) &lt;span style="color:#75715e">// must be true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">mongo&lt;/span>.&lt;span style="color:#a6e22e">Connect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">opts&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">InitSingleReplicaSet&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#a6e22e">cfg&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">MongoDB&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rs&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">NewReplicaSet&lt;/span>(&lt;span style="color:#a6e22e">cfg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">initConfig&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#a6e22e">cfg&lt;/span>.&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;members&amp;#34;&lt;/span>: []&lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;localhost:27017&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">rs&lt;/span>.&lt;span style="color:#a6e22e">Initiate&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">initConfig&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>さらに mongod サーバーを起動するときに &lt;code>--replSet&lt;/code> と &lt;code>--keyFile&lt;/code> (認証が必要な場合のみ？) という2つのパラメーターを指定する必要がある。&lt;code>--replSet&lt;/code> はレプリカセットの識別子を指定する。そして &lt;code>--keyFile&lt;/code> は共通鍵を指定する。この共通鍵を生成するには次のようにする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ openssl rand -base64 &lt;span style="color:#ae81ff">756&lt;/span> &amp;gt; my-mongo-keyfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ chown mongodb:mongodb my-mongo-keyfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ chmod &lt;span style="color:#ae81ff">400&lt;/span> my-mongo-keyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>普通のサーバーインスタンスならすぐできることだが、コンテナの運用において面倒なのが owner とパーミッションを設定しないといけないところ。mongo のコンテナは mongodb ユーザーで起動するため、root でマウントされたファイルシステムには書き込みできなかったりして keyFile の配置をどう扱えばよいのかが難しい。docker hub の mongo の issues でもどうやって設定したらいいの？って議論が発散している。mongo 本体が公式のスクリプトや仕組みを提供していれば済む話しだけど、どうもそうではないみたい。だから泥臭い方法で自分でなんとかしないといけないようにみえる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/docker-library/mongo/issues/246">Creating a mongo image set with &amp;ndash;replSet #246&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/docker-library/mongo/issues/339">Cannot configure replica sets with entrypoint-initdb #339&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>dockertest でもレプリカセットの設定について次の issue として登録されている。mongo のコンテナを使ったテストの場合、dockertest のレイヤーが挟まるのでさらにわかりにくくなっている。テストを動かすためにどういった設定が必要かは把握できたのでなにかよい方法を考えてコントリビュートしたい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ory/dockertest/issues/480">Create an example for starting mongodb as a replica set #480&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>記事のレビューをしてもらえるサービス</title><link>/diary/posts/2023/1206/</link><pubDate>Wed, 06 Dec 2023 21:56:08 +0900</pubDate><guid>/diary/posts/2023/1206/</guid><description>疲れて18時過ぎにはお仕事を終えて、帰ってきて晩ご飯も食べずにそのまま寝てた。22時頃に起きてそれから晩ご飯を作って食べて、また夜に寝て6時に起きた。
テックブログレビュー 顧問のはらさんに昨日書いたテックブログのレビューをお願いした。一通り、調査した内容の範囲内で書いてはいるが、私はフロントエンドについて明るくないため、大きな勘違いや誤りを含んだ文章を書いてしまう可能性がある。本来テックブログは会社のブランディングにつながるものだが、誤った記事を書いてしまうと逆効果になってしまう。自社なら私の責任で済むが、他社のテックブログでブランドイメージを毀損するのは申し訳ない。
私が書いた記事をレビューしてもらえる有識者を、報酬をつけて広く募るみたいなサービスがあってもいいなと思えた。うちの会社がもう少し財務的に余裕ができたら、いくつかの分野の有識者と顧問契約して、技術に限定せず、いろんな分野で私の書いた記事のレビューをお願いできるような体制にしたい。余談だが、レビュー依頼して誰もレビューしてくれないというのも書いていて寂しい。よい開発文化をもつチームならそんなこと起きない。私を書いた記事をメンバーが率先してレビューしないという時点でまだまだうちのチームには改善の余地がある。
円形テーブル受け取り ジモティーで「籐 ラタン 木製丸テーブル」を500円で購入した。使わないときは折り畳みできる。省スペースでよさそうにみえた。現物を受け取ってみて、使用感はあるが傷んではいない。まだ実家の離れで使うか、自分の部屋で使うかは決めていない。しばらく部屋で使ってみてその用途や感触で決めようと思う。問い合わせしてから2日後に近所のローソン前で待ち合わせをして受け取りできた。近所だと、引き取りの調整もしやすいし、軽いものだったので自転車の荷台に乗せて運んできた。これまでジモティーで6件の取引を行ったが、いまのところ、トラブルはない。</description><content>&lt;p>疲れて18時過ぎにはお仕事を終えて、帰ってきて晩ご飯も食べずにそのまま寝てた。22時頃に起きてそれから晩ご飯を作って食べて、また夜に寝て6時に起きた。&lt;/p>
&lt;h2 id="テックブログレビュー">テックブログレビュー&lt;/h2>
&lt;p>顧問のはらさんに昨日書いたテックブログのレビューをお願いした。一通り、調査した内容の範囲内で書いてはいるが、私はフロントエンドについて明るくないため、大きな勘違いや誤りを含んだ文章を書いてしまう可能性がある。本来テックブログは会社のブランディングにつながるものだが、誤った記事を書いてしまうと逆効果になってしまう。自社なら私の責任で済むが、他社のテックブログでブランドイメージを毀損するのは申し訳ない。&lt;/p>
&lt;p>私が書いた記事をレビューしてもらえる有識者を、報酬をつけて広く募るみたいなサービスがあってもいいなと思えた。うちの会社がもう少し財務的に余裕ができたら、いくつかの分野の有識者と顧問契約して、技術に限定せず、いろんな分野で私の書いた記事のレビューをお願いできるような体制にしたい。余談だが、レビュー依頼して誰もレビューしてくれないというのも書いていて寂しい。よい開発文化をもつチームならそんなこと起きない。私を書いた記事をメンバーが率先してレビューしないという時点でまだまだうちのチームには改善の余地がある。&lt;/p>
&lt;h2 id="円形テーブル受け取り">円形テーブル受け取り&lt;/h2>
&lt;p>ジモティーで「籐 ラタン 木製丸テーブル」を500円で購入した。使わないときは折り畳みできる。省スペースでよさそうにみえた。現物を受け取ってみて、使用感はあるが傷んではいない。まだ実家の離れで使うか、自分の部屋で使うかは決めていない。しばらく部屋で使ってみてその用途や感触で決めようと思う。問い合わせしてから2日後に近所のローソン前で待ち合わせをして受け取りできた。近所だと、引き取りの調整もしやすいし、軽いものだったので自転車の荷台に乗せて運んできた。これまでジモティーで6件の取引を行ったが、いまのところ、トラブルはない。&lt;/p></content></item><item><title>全員採用のためのテックブログ</title><link>/diary/posts/2023/1205/</link><pubDate>Tue, 05 Dec 2023 09:48:16 +0900</pubDate><guid>/diary/posts/2023/1205/</guid><description>2時に寝て6時に起きて9時前に起きた。寝るのがどんどん遅くなってきて生活のリズムが乱れてきた。
sveltekit に関するテックブログ執筆 先日の続き の続き。
調査は一区切りついたのでテックブログを執筆することにした。今日はほぼ丸一日記事を書いていた。本当はマネージャーの私が1-2週間も技術調査して、テックブログを一生懸命書くみたいなことをやるよりも、他に大事なプロジェクトの遊撃やマネジメントに時間を割くべきではある。一方でメンバーに課題に取り組むにあたり、設計をどうするのか？設計をするためには調査が必要であること、調査した内容をアウトプットする重要性などの模範を示したいという意図で書いた。そして、メンバーにも開発の隙間にテックブログを書くことを業務として指示しようと考えている。
なんのためにテックブログを書くか？という目的は、業務においては明確で採用のために書く。プログラマーが採用において協力できることは限られる。その中でもテックブログというのは費用対効果が高く、会社のブランディングにもつながり、よい開発文化を醸成することにもつながる。プログラマーの採用がとても難しくなった昨今「全員採用」というキーワードもよく聞くようになった。一見プログラマーは採用において無関係だし、実際にそういった業務をやらなくても咎められることはない。しかし、自分のできることで採用に協力したいと考えたとき、できることの1つにテックブログを書くというのは悪くない選択肢だと私は考えている。少なくともテックブログを書けない (書かない) 人たちにとやかく言われたくない。</description><content>&lt;p>2時に寝て6時に起きて9時前に起きた。寝るのがどんどん遅くなってきて生活のリズムが乱れてきた。&lt;/p>
&lt;h2 id="sveltekit-に関するテックブログ執筆">sveltekit に関するテックブログ執筆&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1204/#kitvite-アプリケーションのデバッグ">先日の続き&lt;/a> の続き。&lt;/p>
&lt;p>調査は一区切りついたのでテックブログを執筆することにした。今日はほぼ丸一日記事を書いていた。本当はマネージャーの私が1-2週間も技術調査して、テックブログを一生懸命書くみたいなことをやるよりも、他に大事なプロジェクトの遊撃やマネジメントに時間を割くべきではある。一方でメンバーに課題に取り組むにあたり、設計をどうするのか？設計をするためには調査が必要であること、調査した内容をアウトプットする重要性などの模範を示したいという意図で書いた。そして、メンバーにも開発の隙間にテックブログを書くことを業務として指示しようと考えている。&lt;/p>
&lt;p>なんのためにテックブログを書くか？という目的は、業務においては明確で採用のために書く。プログラマーが採用において協力できることは限られる。その中でもテックブログというのは費用対効果が高く、会社のブランディングにもつながり、よい開発文化を醸成することにもつながる。プログラマーの採用がとても難しくなった昨今「全員採用」というキーワードもよく聞くようになった。一見プログラマーは採用において無関係だし、実際にそういった業務をやらなくても咎められることはない。しかし、自分のできることで採用に協力したいと考えたとき、できることの1つにテックブログを書くというのは悪くない選択肢だと私は考えている。少なくともテックブログを書けない (書かない) 人たちにとやかく言われたくない。&lt;/p></content></item><item><title>svelte コンポーネントの実装は簡単</title><link>/diary/posts/2023/1204/</link><pubDate>Mon, 04 Dec 2023 08:46:19 +0900</pubDate><guid>/diary/posts/2023/1204/</guid><description>1時に寝て何度か起きて7時に起きた。日曜日の夜に業務スーパーへ行ったら生鮮系は売り切れているのが多かった。日持ちするようなものを購入した。呪術廻戦ゲーム の初心者ミッションをクリアしたのでゲームの時間を減らしていく。
kit/vite アプリケーションのデバッグ 先日の続き の続き。
ある kit アプリケーションの svelte コンポーネントから外部の kit アプリのコンポーネントやモジュールを埋め込むことができるかどうかを調査した。ドキュメントの Loading data をみながらコンポーネントを書いてみる。フロントエンドの開発はすべてメンバーに委譲しているので私はほとんど開発していない。ドキュメントみないとまったくどう実装していよいかわからない。
svelte コンポーネントをレンダリングするときにサーバー側で動かすのは +page.server.ts に、クライアント側で動かすのは +page.ts に実装する。今回の場合、外部の node.js プロセスに起動したサーバーに対してリクエストして index.html に相当するものを取得するのでサーバー側で取得したレスポンスから html を取り出して、それをコンポーネント側でレンダリングする。+page.server.ts は次のように実装する。
import type { PageServerLoad } from &amp;#39;./$types&amp;#39;; import { apps } from &amp;#39;$lib/index&amp;#39;; export const load: PageServerLoad = async ({ params }) =&amp;gt; { const res = await fetch(apps[&amp;#39;kit-demo1&amp;#39;].entrypoint); const html = await res.text(); return { html }; }; この html をクライアント側の +page.</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。日曜日の夜に業務スーパーへ行ったら生鮮系は売り切れているのが多かった。日持ちするようなものを購入した。&lt;a href="/diary/diary/posts/2023/1123/">呪術廻戦ゲーム&lt;/a> の初心者ミッションをクリアしたのでゲームの時間を減らしていく。&lt;/p>
&lt;h2 id="kitvite-アプリケーションのデバッグ">kit/vite アプリケーションのデバッグ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1130/#kitvite-アプリケーションのデバッグ">先日の続き&lt;/a> の続き。&lt;/p>
&lt;p>ある kit アプリケーションの svelte コンポーネントから外部の kit アプリのコンポーネントやモジュールを埋め込むことができるかどうかを調査した。ドキュメントの &lt;a href="https://kit.svelte.dev/docs/load">Loading data&lt;/a> をみながらコンポーネントを書いてみる。フロントエンドの開発はすべてメンバーに委譲しているので私はほとんど開発していない。ドキュメントみないとまったくどう実装していよいかわからない。&lt;/p>
&lt;p>svelte コンポーネントをレンダリングするときにサーバー側で動かすのは +page.server.ts に、クライアント側で動かすのは +page.ts に実装する。今回の場合、外部の node.js プロセスに起動したサーバーに対してリクエストして index.html に相当するものを取得するのでサーバー側で取得したレスポンスから html を取り出して、それをコンポーネント側でレンダリングする。+page.server.ts は次のように実装する。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#66d9ef">type&lt;/span> { &lt;span style="color:#a6e22e">PageServerLoad&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./$types&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">apps&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;$lib/index&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">load&lt;/span>: &lt;span style="color:#66d9ef">PageServerLoad&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> ({ &lt;span style="color:#a6e22e">params&lt;/span> }) &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">apps&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;kit-demo1&amp;#39;&lt;/span>].&lt;span style="color:#a6e22e">entrypoint&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">text&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> { &lt;span style="color:#a6e22e">html&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>この html をクライアント側の +page.svelte から参照してレンダリングする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ts&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span> { &lt;span style="color:#a6e22e">PageData&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./$types&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">PageData&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span>&amp;gt;{@html data.html}&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これで一応は意図した kit アプリケーションを埋め込むことはできるが、実際にはスクリプトなどはなにかが競合して動かないようだ。これは node.js から取得するスクリプトやスタイルなどが複数の kit アプリケーションで競合してしまうからではないかと推測する。&lt;/p>
&lt;p>これが ssg ならば &lt;a href="https://kit.svelte.dev/docs/adapter-static">adapter-static&lt;/a> を使ってビルドして、その成果物を static ディレクトリ配下に置くだけでそのまま動く。これは特別ななにかではなく、kit アプリケーションとして意図した振る舞いにはなる。これが出来て嬉しいことはあまり思いつかないが、想像した通りに動くかどうかの検証のために確認した。&lt;/p>
&lt;p>次のリポジトリに調査した内容のサンプルコードを作った。ここまでの調査内容でまたテックブログを書いてみようと思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/sveltekit-apps-integration-sample">github.com/t2y/sveltekit-apps-integration-sample&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>日本ナレッジ・マネジメント学会にオンライン参加した</title><link>/diary/posts/2023/1203/</link><pubDate>Sun, 03 Dec 2023 12:37:53 +0900</pubDate><guid>/diary/posts/2023/1203/</guid><description>0時に寝て5時に起きてゲームして9時に起きてまたゲームしていた。午前中は家でだらだらしていてお昼からオフィスで作業していた。
ナレッジ・マネジメントの年次学会 夏ごろに 日本ナレッジ・マネジメント学会へ加入 していた。学会誌を読んだりする程度しか活動できていなかったものの、年次大会をオンラインで視聴していた。
日本ナレッジ・マネジメント学会：第26回年次大会 お昼からみたのでパネルディスカッションの後半と研究発表をいくつか視聴した。パネルディスカッションは ai についての議論をしていたが、私からみてとくに目新しい議論はなかったように思える。研究発表はいくつか関心のあるものがあって、自分たちの研究について話す前に先行研究としてこれやあれがあって、それらを踏まえて、自分たちはこういう研究をしていると聞ける。それまでの歴史や先行研究でわかっていることなども知ることができて、自分で一から調べるよりも調査時間を短縮できる。聞いていていくつかおもしろそうな論文もあった。また時間ができたときに調査するための issue として作っておいた。すでにそういった issue はたくさんあるのだけど。
おもしろかった発表内容の1つにリーダーシップ論は 野中郁次郎 先生ともう1人 (名前を聞き取れなかった) を除いたら、すべて米国からきたものだという。日本の地域性の高い問題においては米国由来のリーダーシップ論ではうまくいかないケースがあるといった話しをされていた。他にも実践知と叡智の違いとか、賢慮がどうこう、気付きの定義、技術と技能の定義といった用語の定義を明確にして議論をするといったところが学術研究とビジネスの大きな違いのように思えた。そして、学術研究においてもそれが定説としての認知度または実績がなければ、さまざまな仮説や研究があることから、自分たちはこの単語をこのように解釈して使っているとか、それぞれの派閥によって同じ言葉を別の意味で解釈していたりする。知識に関する用語が乱立して、結果的になにについて話しているのか、わかりにくくなってしまうといった雰囲気も感じることができた。野中先生の提唱する「フロネティック・リーダーシップ」には、実践知の起源として、アリストテレスが分類した3つの知識の一つ、フロネシスにあり「賢慮」とも訳されるらしい。実践知の要素には倫理が含まれていて正しいことを行うための判断も指摘されていた。来年ぐらいからうちの会社もこういった研究に時間を割いていきたい。また資料が公開されたふりかえりをしてみようと思う。</description><content>&lt;p>0時に寝て5時に起きてゲームして9時に起きてまたゲームしていた。午前中は家でだらだらしていてお昼からオフィスで作業していた。&lt;/p>
&lt;h2 id="ナレッジマネジメントの年次学会">ナレッジ・マネジメントの年次学会&lt;/h2>
&lt;p>夏ごろに &lt;a href="/diary/diary/posts/2023/0715/#日本ナレッジ・マネジメント学会に加入申請を出した">日本ナレッジ・マネジメント学会へ加入&lt;/a> していた。学会誌を読んだりする程度しか活動できていなかったものの、年次大会をオンラインで視聴していた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kmsj2023.peatix.com/">日本ナレッジ・マネジメント学会：第26回年次大会&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>お昼からみたのでパネルディスカッションの後半と研究発表をいくつか視聴した。パネルディスカッションは ai についての議論をしていたが、私からみてとくに目新しい議論はなかったように思える。研究発表はいくつか関心のあるものがあって、自分たちの研究について話す前に先行研究としてこれやあれがあって、それらを踏まえて、自分たちはこういう研究をしていると聞ける。それまでの歴史や先行研究でわかっていることなども知ることができて、自分で一から調べるよりも調査時間を短縮できる。聞いていていくつかおもしろそうな論文もあった。また時間ができたときに調査するための issue として作っておいた。すでにそういった issue はたくさんあるのだけど。&lt;/p>
&lt;p>おもしろかった発表内容の1つにリーダーシップ論は &lt;a href="https://ja.wikipedia.org/wiki/%E9%87%8E%E4%B8%AD%E9%83%81%E6%AC%A1%E9%83%8E">野中郁次郎&lt;/a> 先生ともう1人 (名前を聞き取れなかった) を除いたら、すべて米国からきたものだという。日本の地域性の高い問題においては米国由来のリーダーシップ論ではうまくいかないケースがあるといった話しをされていた。他にも実践知と叡智の違いとか、賢慮がどうこう、気付きの定義、技術と技能の定義といった用語の定義を明確にして議論をするといったところが学術研究とビジネスの大きな違いのように思えた。そして、学術研究においてもそれが定説としての認知度または実績がなければ、さまざまな仮説や研究があることから、自分たちはこの単語をこのように解釈して使っているとか、それぞれの派閥によって同じ言葉を別の意味で解釈していたりする。知識に関する用語が乱立して、結果的になにについて話しているのか、わかりにくくなってしまうといった雰囲気も感じることができた。野中先生の提唱する「フロネティック・リーダーシップ」には、実践知の起源として、アリストテレスが分類した3つの知識の一つ、フロネシスにあり「賢慮」とも訳されるらしい。実践知の要素には倫理が含まれていて正しいことを行うための判断も指摘されていた。来年ぐらいからうちの会社もこういった研究に時間を割いていきたい。また資料が公開されたふりかえりをしてみようと思う。&lt;/p></content></item><item><title>ミニカンファレンスみながら作業してた</title><link>/diary/posts/2023/1202/</link><pubDate>Sat, 02 Dec 2023 16:17:17 +0900</pubDate><guid>/diary/posts/2023/1202/</guid><description>1時に寝て7時に起きて朝からゲームしてた。お酒飲んだせいで眠りが浅かったような気がする。
ストレッチ 先週は前日に車であちこち移動して、長時間運転していたのもあり腰に負担がかかっていた。今週は東京出張だったものの、すねの外側の筋やふくらはぎの張りをやや感じた程度でとくに悪いところのない状態に戻ったようにみえる。寒くなってきたのもあり、上半身の肩周りの動きが堅くなっているとトレーナーさんは話していた。今日の開脚幅は開始前153cmで、ストレッチ後158cmだった。
ミニカンファレンスのオンライン参加 オンラインのミニカンファレンスを視聴しながらいつも通りの作業をしていた。あまりちゃんと聞いていたわけではないけど、要所要所でおもしろい発表もあった。
Go Conference mini 2023 Winter IN KYOTO tinygo の中の人が自作キーボードに関する発表をしていて、その人は明石市に住んでいるので、明石市から三ノ宮にかけてイベントをやりたいと話されていた。go について話す相手がいると私も嬉しい。またなにかの機会でご一緒できればと思う。</description><content>&lt;p>1時に寝て7時に起きて朝からゲームしてた。お酒飲んだせいで眠りが浅かったような気がする。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>先週は前日に車であちこち移動して、長時間運転していたのもあり腰に負担がかかっていた。今週は東京出張だったものの、すねの外側の筋やふくらはぎの張りをやや感じた程度でとくに悪いところのない状態に戻ったようにみえる。寒くなってきたのもあり、上半身の肩周りの動きが堅くなっているとトレーナーさんは話していた。今日の開脚幅は開始前153cmで、ストレッチ後158cmだった。&lt;/p>
&lt;h2 id="ミニカンファレンスのオンライン参加">ミニカンファレンスのオンライン参加&lt;/h2>
&lt;p>オンラインのミニカンファレンスを視聴しながらいつも通りの作業をしていた。あまりちゃんと聞いていたわけではないけど、要所要所でおもしろい発表もあった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kyotogo.connpass.com/event/285351/">Go Conference mini 2023 Winter IN KYOTO&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>tinygo の中の人が自作キーボードに関する発表をしていて、その人は明石市に住んでいるので、明石市から三ノ宮にかけてイベントをやりたいと話されていた。go について話す相手がいると私も嬉しい。またなにかの機会でご一緒できればと思う。&lt;/p></content></item><item><title>SakeBash と LT 発表</title><link>/diary/posts/2023/1201/</link><pubDate>Fri, 01 Dec 2023 10:14:28 +0900</pubDate><guid>/diary/posts/2023/1201/</guid><description>2時に寝て4時に起きて5時に起きて7時に起きた。呪術廻戦ゲーム の初心者ミッションだけクリアしたらやめようと思って、なかなかミッションのレベルが高くて届かない。あともうちょっと。
SakeBash 神戸に acall (アコール) さんという会社があって、コロナ禍が始まる前に SakeBash イベントを開催されていた。2019-2020年にかけてのとき。それ以来ずっと開催されていなかったイベントを復活させたみたい。コロナ禍が acall さんの転機になったようで、オフィスのオートメーションに関するプロダクトを開発していて会社が大きくなっているらしい。
Kobe Engineer SakeBash #2 ~神戸のエンジニアコミュニティを盛り上げよう acall さんは go でプロダクト開発をしていると知っていたので神戸で go の話しができると思って次の LT 発表をした。発表したら向こうから声をかけてくれて go の話しができるかな？と期待したのだけど、あまりそういう雰囲気でもなかった。私はコミュ障なので知らない人に話すのが苦手。
acall さんの社員でしやさんという方が宮崎県から来られて、始めて LT 発表するということで応援しながら聞いた。
そろそろどうなん？Flutter 私の周りでも flutter を採用している人たちがいるので気にはなっていた。最近は flutter web というのも出ていて、flutter でフロントエンドとスマホアプリの両方に対応できそうにも思えた。次にスマホアプリ対応が必要になったら flutter を採用してみてもいいなと思えた。acall さんの制度をみていてユニークだなと感じたものに「いまあい旅費」がある。リモートワーク前提の会社だからこそ、こういった制度の価値が出てきたとも言える。一昔前は出張するのが当たり前だったのでこんな制度に意味はなかったが、リモートワークにより出張しないことが当たり前になったのでこういう制度設計になったんだと思えた。
いま、あいにいきます旅費
リモート勤務でオフラインで集うことが難しいメンバーと「会うこと」の価値を再認識し、オフィスで自社プロダクトのプラクティスを行うことで、製品のアップデートに貢献することを目的とした制度です。自宅から100km以上離れた神戸または東京オフィスに行くための旅費を支給します。（1往復分の交通費と宿泊費／ケ月）
イベントに acall の社員さんが10人ぐらい参加していた。勢いのある会社は会社イベントに参加する人も多くてよい雰囲気にみえた。宮崎県から来られていたしやさんの他にも埼玉県から来られていたとしさんという方もいた。他にも遠方から来ていた方もいたのかもしれない。
2次会 いまひとつ飲み足りなかったので三ノ宮.dev の仲のよい人たちと飲みに行った。RailRoad no.57 というバーでよい雰囲気のお店だった。またなにかの機会で使いたいと思う。葉っぱ (ハーブ？) がたくさん入っているはちみつカクテルがおいしかった。
そこで以前コミュニティで起業相談にのった方の経営について話題になった。創業してから1年弱かけて少し前にある web サービスをリリースした。その web サービスはコモディティで、すでに競合も数社ある。あまり新規のベンチャー企業にとって勝ち目のある分野だと私からはみえない。どうやってこの web サービスを黒字化するのだろう？と私は疑問に思っていた。創業者の相談に乗った方も今後の戦略について尋ねても明確な答えは返ってこなかったようでとても不安になったと話されていた。融資を受けたという話しを聞いていたのでしばらく会社を存続できるのかもしれないけど、作った web サービスを収益化しないと次の融資を受けられることはないだろうから先行きは厳しいのではないかと推測する。外部からみえる範囲内では今後の先行きは危ぶまれる。創業して1年もたつのに、若い開発者にすら心配されるような戦略しかもっていない経営者というのはちょっと想像できない。融資を受けることが出来たぐらいだから、起業や経営について相談にのってくれる人は周りにいるんじゃないかと思うんだけど、経営目線で厳しいことを言ってくれる人はいないのかもしれない。</description><content>&lt;p>2時に寝て4時に起きて5時に起きて7時に起きた。&lt;a href="/diary/diary/posts/2023/1123/">呪術廻戦ゲーム&lt;/a> の初心者ミッションだけクリアしたらやめようと思って、なかなかミッションのレベルが高くて届かない。あともうちょっと。&lt;/p>
&lt;h2 id="sakebash">SakeBash&lt;/h2>
&lt;p>神戸に &lt;a href="https://www.acall.inc/">acall (アコール)&lt;/a> さんという会社があって、コロナ禍が始まる前に SakeBash イベントを開催されていた。2019-2020年にかけてのとき。それ以来ずっと開催されていなかったイベントを復活させたみたい。コロナ禍が acall さんの転機になったようで、オフィスのオートメーションに関するプロダクトを開発していて会社が大きくなっているらしい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://acall.connpass.com/event/302038/">Kobe Engineer SakeBash #2 ~神戸のエンジニアコミュニティを盛り上げよう&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>acall さんは go でプロダクト開発をしていると知っていたので神戸で go の話しができると思って次の LT 発表をした。発表したら向こうから声をかけてくれて go の話しができるかな？と期待したのだけど、あまりそういう雰囲気でもなかった。私はコミュ障なので知らない人に話すのが苦手。&lt;/p>
&lt;iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/18d191169877476193d56bbd535a32a3" title="go-ldap Contribution" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 600px; height: auto; aspect-ratio: 560 / 315;" data-ratio="1.7777777777777777">&lt;/iframe>
&lt;p>acall さんの社員でしやさんという方が宮崎県から来られて、始めて LT 発表するということで応援しながら聞いた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1R16dnV6ewhZWqe5mBKKIGf6jmZdNoNWDoE7tbX6APp8/edit#slide=id.gc6f73a04f_0_0">そろそろどうなん？Flutter&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>私の周りでも flutter を採用している人たちがいるので気にはなっていた。最近は flutter web というのも出ていて、flutter でフロントエンドとスマホアプリの両方に対応できそうにも思えた。次にスマホアプリ対応が必要になったら flutter を採用してみてもいいなと思えた。acall さんの制度をみていてユニークだなと感じたものに「いまあい旅費」がある。リモートワーク前提の会社だからこそ、こういった制度の価値が出てきたとも言える。一昔前は出張するのが当たり前だったのでこんな制度に意味はなかったが、リモートワークにより出張しないことが当たり前になったのでこういう制度設計になったんだと思えた。&lt;/p>
&lt;blockquote>
&lt;p>いま、あいにいきます旅費&lt;/p>
&lt;p>リモート勤務でオフラインで集うことが難しいメンバーと「会うこと」の価値を再認識し、オフィスで自社プロダクトのプラクティスを行うことで、製品のアップデートに貢献することを目的とした制度です。自宅から100km以上離れた神戸または東京オフィスに行くための旅費を支給します。（1往復分の交通費と宿泊費／ケ月）&lt;/p>
&lt;/blockquote>
&lt;p>イベントに acall の社員さんが10人ぐらい参加していた。勢いのある会社は会社イベントに参加する人も多くてよい雰囲気にみえた。宮崎県から来られていたしやさんの他にも埼玉県から来られていたとしさんという方もいた。他にも遠方から来ていた方もいたのかもしれない。&lt;/p>
&lt;h2 id="2次会">2次会&lt;/h2>
&lt;p>いまひとつ飲み足りなかったので三ノ宮.dev の仲のよい人たちと飲みに行った。&lt;a href="https://tabelog.com/hyogo/A2801/A280101/28037644/">RailRoad no.57&lt;/a> というバーでよい雰囲気のお店だった。またなにかの機会で使いたいと思う。葉っぱ (ハーブ？) がたくさん入っているはちみつカクテルがおいしかった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1201_drink.jpg"/>
&lt;/figure>
&lt;p>そこで以前コミュニティで起業相談にのった方の経営について話題になった。創業してから1年弱かけて少し前にある web サービスをリリースした。その web サービスはコモディティで、すでに競合も数社ある。あまり新規のベンチャー企業にとって勝ち目のある分野だと私からはみえない。どうやってこの web サービスを黒字化するのだろう？と私は疑問に思っていた。創業者の相談に乗った方も今後の戦略について尋ねても明確な答えは返ってこなかったようでとても不安になったと話されていた。融資を受けたという話しを聞いていたのでしばらく会社を存続できるのかもしれないけど、作った web サービスを収益化しないと次の融資を受けられることはないだろうから先行きは厳しいのではないかと推測する。外部からみえる範囲内では今後の先行きは危ぶまれる。創業して1年もたつのに、若い開発者にすら心配されるような戦略しかもっていない経営者というのはちょっと想像できない。融資を受けることが出来たぐらいだから、起業や経営について相談にのってくれる人は周りにいるんじゃないかと思うんだけど、経営目線で厳しいことを言ってくれる人はいないのかもしれない。&lt;/p></content></item></channel></rss>