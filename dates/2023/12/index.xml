<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/12 on forest nook</title><link>/diary/dates/2023/12/</link><description>Recent content in 2023/12 on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/dates/2023/12/index.xml" rel="self" type="application/rss+xml"/><item><title>だらだらした大晦日</title><link>/diary/posts/2023/1231/</link><pubDate>Sun, 31 Dec 2023 01:13:20 +0900</pubDate><guid>/diary/posts/2023/1231/</guid><description>夜に アンダーニンジャ を読み始めて、途中で寝たりしながら気付いたら7時に起きた。それから起きないといけなかったんだけど、なんとなくのんびりしてお昼ぐらいまで過ごし、その後も軽く食べてから3時頃までだらだらしていた。
帰島 夕方ぐらいから車で実家に帰る。雨がぱらぱらしていたり、大晦日でもそこそこ交通量が多かった。途中の淡路 SA でお土産をいくつか買って1時間半ぐらいで実家に着いた。
WBC2023 ザ・ファイナル を見始めたら最後までみてしまった。私はニュースでしか知らなかったので当時のダイジェスト映像で試合を振り返ることもできてよかったと思う。とくにダルビッシュ選手の振る舞いや役割に共感できた。自分が選手として活躍するよりも、若い人たちがチームに馴染みやすいようチームビルディングに献身している姿勢がよかった。番組内のダルビッシュ選手の若い頃のエピソードを聞いているとそういう社交的な選手ではなかったようだ。それは2009年のWBCのイチロー氏の影響もあったのだと思える。私もいまマネージャーをやっていて、自分がその業務をできないわけではないが、若い人たちになにをどう教えたらよいかを考え込むことが多い。
テレビを見終えてから離れで机に向かって日記を書いている。私は家と作業場所を完全に分けるのが気持ちの切り替えにうまくいく。モチベーションや集中力を制御するために場を変えるというのを、昔はそれほど自覚的に行っておらず、いまほどうまく活用できていなかった気もする。いまはもっとうまく場を活用できるんじゃないかと思う。</description><content>&lt;p>夜に &lt;a href="https://yanmaga.jp/comics/%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B8%E3%83%A3">アンダーニンジャ&lt;/a> を読み始めて、途中で寝たりしながら気付いたら7時に起きた。それから起きないといけなかったんだけど、なんとなくのんびりしてお昼ぐらいまで過ごし、その後も軽く食べてから3時頃までだらだらしていた。&lt;/p>
&lt;h2 id="帰島">帰島&lt;/h2>
&lt;p>夕方ぐらいから車で実家に帰る。雨がぱらぱらしていたり、大晦日でもそこそこ交通量が多かった。途中の淡路 SA でお土産をいくつか買って1時間半ぐらいで実家に着いた。&lt;/p>
&lt;p>&lt;a href="https://www.tbs.co.jp/program/wbc2023sp_20231231/">WBC2023 ザ・ファイナル&lt;/a> を見始めたら最後までみてしまった。私はニュースでしか知らなかったので当時のダイジェスト映像で試合を振り返ることもできてよかったと思う。とくにダルビッシュ選手の振る舞いや役割に共感できた。自分が選手として活躍するよりも、若い人たちがチームに馴染みやすいようチームビルディングに献身している姿勢がよかった。番組内のダルビッシュ選手の若い頃のエピソードを聞いているとそういう社交的な選手ではなかったようだ。それは2009年のWBCのイチロー氏の影響もあったのだと思える。私もいまマネージャーをやっていて、自分がその業務をできないわけではないが、若い人たちになにをどう教えたらよいかを考え込むことが多い。&lt;/p>
&lt;p>テレビを見終えてから離れで机に向かって日記を書いている。私は家と作業場所を完全に分けるのが気持ちの切り替えにうまくいく。モチベーションや集中力を制御するために場を変えるというのを、昔はそれほど自覚的に行っておらず、いまほどうまく活用できていなかった気もする。いまはもっとうまく場を活用できるんじゃないかと思う。&lt;/p></content></item><item><title>年末の読書</title><link>/diary/posts/2023/1230/</link><pubDate>Sat, 30 Dec 2023 12:32:42 +0900</pubDate><guid>/diary/posts/2023/1230/</guid><description>1時には寝ようとしていたが、飲み過ぎで気分が悪くてあまり眠れなかった。気付いたら7時ぐらいになっていて、今日はもうしんどいと思ってそのまま寝ていたら9時45分にストレッチに出掛けるアラームで起きた。アラーム設定していなかったらドタキャンしていた。危ない。
ストレッチ 急いで準備して行ったわりにはなんとか間に合って普通にストレッチを受けてきた。今週はほぼ休みに入っていてあまりお仕事していないこともあってとくに負荷がかかっているわけでもないように考えていたが、座って作業していることに変わりはないことから太ももの後ろの筋だけはいつも通りに張りがあった。今日の開脚幅は開始前152cmで、ストレッチ後156cmだった。
トレーナーさんが年明けに全社集会のようなイベントがあって、全国からそれぞれの店舗の社員さんが東京に集まるという。そこまでは普通だとして、そのときに社員同士の懇親のための催しでけん玉とルービックキューブとクイズ大会をやるという。それを聞いて「私だったら会社辞めるわ」とか冗談を言いながら、やるとしてもいまどきのゲームとか、フットサルとか、もっと若い人が身近に楽しめるものにしたらいいのにと返した。トレーナーさんも誰がどういう背景でこんな企画をしているのか、まったく分からないと言う。過去に働いていた会社でも似たようなことがあったなと私も過去を思い出しながら聞いていた。
「絶対無理」なんて「絶対」ない！ たまたま知った 南原竜樹さん のその後に影響を受けて著書を買っていた。最近の amazon の配送日時はまったく当てにならず、年明けに届く予定が2日後に郵便ポストに入っていたりする。受け取りが必要ないものは早い分には困らない。たまたま手に取ったので読み始めた。本書は2012年2月に出版されている。すでに10年以上が経過している。そんな本を買って役に立つのかと訝しむ人も多いと思う。
私自身、自分で経営をやってきて、これまで身近に聞いてきた経営者の言葉でよくわかるようになったことがある。経営とは基本的な作法や論理を整えたらあとはその経営者の価値観でしかないのだ。その価値観が時代にあう・あわない、ビジネスモデルとして表現できるかどうか、世の中の役に立つかどうかは多くのケースでやってみないとわからない。他者の経営を学ぶことは、自身の価値観に近いものがあれば参考にしたり取り入れたりすればよいし、そうじゃなければ、自分の価値観とは違うがそういう考え方もあるのかと見識を広めるために使えばよいのだと思う。経営者がどういう価値観をもって経営するかがその会社の独自性や差別化につながる。したがって南原さんの価値観を学ぶには古い本でもよいだろうと考えた。
その冒頭で出版業界が斜陽なのであえて出版社を作るということに挑戦している。ATパブリケーション という会社になる。本書もこの会社から出版されている。ググると当時の記事もみつかる。
なぜこのタイミングで出版社を立ち上げたのか――南原竜樹さんの考え方 どうやら企業サイトがリンク切れしているのでもう存在していないのかもしれない。PR TIMES も2015年を最後にプレスリリースが途絶えている。
https://prtimes.jp/main/html/searchrlp/company_id/9711 この会社のビジネスはうまくいかなかったのかもしれない。しかし、それは結果であって、経営の価値観とはあまり関係がない。年末に読み進めてみようと思う。</description><content>&lt;p>1時には寝ようとしていたが、飲み過ぎで気分が悪くてあまり眠れなかった。気付いたら7時ぐらいになっていて、今日はもうしんどいと思ってそのまま寝ていたら9時45分にストレッチに出掛けるアラームで起きた。アラーム設定していなかったらドタキャンしていた。危ない。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>急いで準備して行ったわりにはなんとか間に合って普通にストレッチを受けてきた。今週はほぼ休みに入っていてあまりお仕事していないこともあってとくに負荷がかかっているわけでもないように考えていたが、座って作業していることに変わりはないことから太ももの後ろの筋だけはいつも通りに張りがあった。今日の開脚幅は開始前152cmで、ストレッチ後156cmだった。&lt;/p>
&lt;p>トレーナーさんが年明けに全社集会のようなイベントがあって、全国からそれぞれの店舗の社員さんが東京に集まるという。そこまでは普通だとして、そのときに社員同士の懇親のための催しでけん玉とルービックキューブとクイズ大会をやるという。それを聞いて「私だったら会社辞めるわ」とか冗談を言いながら、やるとしてもいまどきのゲームとか、フットサルとか、もっと若い人が身近に楽しめるものにしたらいいのにと返した。トレーナーさんも誰がどういう背景でこんな企画をしているのか、まったく分からないと言う。過去に働いていた会社でも似たようなことがあったなと私も過去を思い出しながら聞いていた。&lt;/p>
&lt;h2 id="絶対無理なんて絶対ない">「絶対無理」なんて「絶対」ない！&lt;/h2>
&lt;p>たまたま知った &lt;a href="/diary/diary/posts/2023/1228/#マネーの虎たちのその後">南原竜樹さん&lt;/a> のその後に影響を受けて著書を買っていた。最近の amazon の配送日時はまったく当てにならず、年明けに届く予定が2日後に郵便ポストに入っていたりする。受け取りが必要ないものは早い分には困らない。たまたま手に取ったので読み始めた。本書は2012年2月に出版されている。すでに10年以上が経過している。そんな本を買って役に立つのかと訝しむ人も多いと思う。&lt;/p>
&lt;p>私自身、自分で経営をやってきて、これまで身近に聞いてきた経営者の言葉でよくわかるようになったことがある。経営とは基本的な作法や論理を整えたらあとはその経営者の価値観でしかないのだ。その価値観が時代にあう・あわない、ビジネスモデルとして表現できるかどうか、世の中の役に立つかどうかは多くのケースでやってみないとわからない。他者の経営を学ぶことは、自身の価値観に近いものがあれば参考にしたり取り入れたりすればよいし、そうじゃなければ、自分の価値観とは違うがそういう考え方もあるのかと見識を広めるために使えばよいのだと思う。経営者がどういう価値観をもって経営するかがその会社の独自性や差別化につながる。したがって南原さんの価値観を学ぶには古い本でもよいだろうと考えた。&lt;/p>
&lt;p>その冒頭で出版業界が斜陽なのであえて出版社を作るということに挑戦している。&lt;a href="https://ja.wikipedia.org/wiki/AT%E3%83%91%E3%83%96%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3">ATパブリケーション&lt;/a> という会社になる。本書もこの会社から出版されている。ググると当時の記事もみつかる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.itmedia.co.jp/makoto/articles/1203/21/news078.html">なぜこのタイミングで出版社を立ち上げたのか――南原竜樹さんの考え方&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>どうやら企業サイトがリンク切れしているのでもう存在していないのかもしれない。PR TIMES も2015年を最後にプレスリリースが途絶えている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://prtimes.jp/main/html/searchrlp/company_id/9711">https://prtimes.jp/main/html/searchrlp/company_id/9711&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この会社のビジネスはうまくいかなかったのかもしれない。しかし、それは結果であって、経営の価値観とはあまり関係がない。年末に読み進めてみようと思う。&lt;/p></content></item><item><title>2回目の仕事納め</title><link>/diary/posts/2023/1229/</link><pubDate>Fri, 29 Dec 2023 11:22:51 +0900</pubDate><guid>/diary/posts/2023/1229/</guid><description>2時に寝て何度か起きて7時過ぎに起きてゲームして10時ぐらいからオフィスに出掛けた。
年末の事務手続き 年末調整と給与支払報告書の作成を行った。年末は平時の月末と異なるからわちゃわちゃしてたら25日の給与の支払いも忘れていた。いや、忘れていたというよりは年末調整を12月分の給与で調整したいから年末調整を完了しないと給与確定できないと放置していた。今日は金曜日で平日だからシステムは稼働しているだろうと安易に考えていたら eltax も e-tax も稼働日を次のように書いてあった。
土・日・祝日、年末年始12/29～1/3は除く
eltax のアプリケーションで書類データは作成できたけれど、作成したデータを送信することはできなかった。年明けの4日まで持ち越し。こういう失敗が最近増えてきた。がっかりして嫌になる。あと eltax や e-tax の運用停止時間に遭遇することが私はとても多い。月に1回も使わないようなシステムなのに年間で2-3回ほどは使えない時間に遭遇する。それは当たり前で、私が余裕のある時間は早朝・深夜と休日になるため、メンテナンスの日程と重なることが多い。システムは基本的に24時間365日動いていないとダメだということがわかる。なにかトラブルがあったときの運用対応は年明けでも構わないが、定型的なデータ処理は24時間365日できるはずだと思う。
その後に自社の請求書を作成したり、他社の請求書の対応や会計の明細登録などをしていた。キャッシュフローも眺めていて 今季はもともと赤字想定で予算策定 していたが、受託開発のお仕事が長引いて黒字決算で着地する予定。あと3ヶ月しかないのでブレることもないだろうと思う。本当は今季に事業の体制変更もやらないといけなかったことが来季へずれ込む。計画通りに進捗していないという面からは、いろいろあって事業も経営もあまりうまくいっていない。
カフーツさんの忘年会 初めての参加。昨年も参加する予定が 父の訃報 があってドタキャンしたのでリトライ。手土産に 一心堂 のフルーツ大福をもっていくことにした。神戸の阪急百貨店にお店があったのでてっきり神戸発祥のお店かと思ったら大阪発祥だった。種別によって値段は異なるが、だいたい1個410-640円 (税抜き) ぐらい。9個入の詰め合わせにしてもらった。
他に持ち寄りであった食べものに 三宮一貫樓 のちび豚まんと焼売を撮った。神戸に住み始めて商店街の一角にあるのは知っていたのだけど、神戸の名物の1つだと知ったのは住み始めて2-3年経ってからだった。勉強会の食べものの定番はピザだけど、神戸なら一貫楼の 中華パーティーセット (送料/消費税込みで10,750円) などを頼むのもよいのかもしれない。
コミュニティとコワーキングの違い いとうさんと話していて、以前よりコミュニティとコワーキングの違いが明確になった。私の中では似て非なるものという考えはあったものの、あまり違いを明文化できていなかった。
コミュニティマネージャーと コワーキングマネージャー では求められるスキルセットが大きく異なる。キャリアとしてもコワーキングマネージャーの方がずっと難易度の高いものであるように話されていた。集合で言えば、コワーキングマネージャーはコミュニティマネージャーのスキルセットを含む。コミュニティマネージャーは私も身近なものだし、コミュニティマネージャー (会社によっては DevRel と呼ばれたりもする) を社員として雇用する会社も増えてきた。会社に雇われるコミュニティマネージャーというキャリアは、その会社のサービスやプロダクトのコミュニティを盛り上げたり宣伝したりといったマーケティング活動の一環とみなされることが多い。一方でコワーキングマネージャーというのは、会社に雇われるというよりもコワーキングスペースや地域のようなコミュニティに根付くものかもしれない。
コミュニティというのは、それ自体を1つの意思をもった人のように扱い、そこに集まる人たちがコミュニティの思想にあうよう1つにまとまって活動する、協調するといった趣きが強い。そのため、コミュニティマネージャーはコミュニティの理念にあうようメンバーをまとめたり、逆にあわない人たちを排除することもある。一方、コワーキングというのは、個々がそれぞれの背景をもち、得意・不得意があり、性格や思想も様々で多様な価値観をもつ人たちが集まり、それぞれの特性を活かした上で協調するといった趣きがある。そして、コワーキングマネージャーは個々人にあわせたホスピタリティを提供するという。これは主従において大きな違いの1つでもあると理解できた。コミュニティはそれ自体が主でその理念にメンバーが従う。コワーキングは個々が主でその人たちが協調するかどうかはそれぞれのコワーカーの判断に委ねられる。そして、コワーカー同士が協調しやすいように縁の下で支えるのがコワーキングマネージャーだという。コワーキングマネージャーは、訪れたコワーカーとコミュニケーションを取る中で、一緒に考え、相談にのり、そして答えや結論を出さなくてもよいという。コワーカーと一緒に考えてあげるだけでよいというのだ。どこかに落とし所に着地させたり、全体をまとめたりしないという点がコミュニティマネージャーと大きく異なる。
そこで素朴な疑問。コワーキングマネージャーが個々人に向き合うとしたら、そこには ダンバー数 (100-150人？) のように人間の認知能力の限界が出てくる。数千人や数万人が所属するコミュニティも存在するが、コミュニティといった枠組みで集団を抽象化して管理できなければ認知能力に限界がある。次の問いを投げかけてみた。
コワーキングマネージャーが個々人にホスピタリティを提供するとしたら、小さい規模や小集団でしか機能しないのではないか？スケールしないのではないか？
いとうさんが言うには、この弱点を補うのがツールの力だという。コワーキングマネージャーのチームを作り、コワーカーそれぞれと話した内容やその人の背景や特性、いまやっていることなどを記録し、その記録をチーム内で共有する。これなら個人の認知能力を拡張できるし、コンテキストを引き継いだ上で初めて会うコワーキングマネージャーとコワーカー間におけるホスピタリティも担保できるかもしれない。
ここまで聞いて、これはまさに私が開発の現場でやっている課題管理そのものだということに気付いた。日々の開発のアクティビティを課題管理システムにコメントとして記録し、そのタイムラインをメンバー全員で共有しながら、リアルタイムに必要なコミュニケーションをもって相互に情報共有または協調するといったことを、まさに私のチームでは実践している。これをコワーキングスペースにいるコワーキングマネージャー間で行う、もっと言えば、複数のコワーキングスペース間で共有できれば、それはさらに大きなホスピタリティになるのかもしれない。別のコワーキングスペースへ行っても、自分の背景が共有されていて、よりよいホスピタリティを受けることができるのかもしれない。
初めてカフーツさんに訪問したのが2022年6月 だった。当時いとうさんと話してみて、課題管理に通じるところがあると直感的に感じて、その後、やり取りを継続してきて、1年半経った。ようやくコワーキングと課題管理がつながった。いとうさんからみれば、課題管理とはコワーキングマネージャーが備えるべきホスピタリティの延長上にあるチームで協調するための概念なのだと思う。そして、私からみれば、コワーキングとは課題管理そのものなんだと理解できた。
課題管理システムの利用状況を表すメトリクスの1つに カレンダーチャート がある。これがいま課題管理を知らないチームでその実践を指導する上で想定外に役に立つことがわかった。この他にも課題管理特有のメトリクスを増やしていきたいと私は考えていた。そのアイディアの1つに「コワーキングチャート」というものを作ろうと思う。おそらく世の中にはないし、課題管理とコワーキングの両方を研究している人にしか、この発想は出てこないと思う。来年、他社のお手伝いを終えた後のアイディアの1つに寝かしておこうと思う。</description><content>&lt;p>2時に寝て何度か起きて7時過ぎに起きてゲームして10時ぐらいからオフィスに出掛けた。&lt;/p>
&lt;h2 id="年末の事務手続き">年末の事務手続き&lt;/h2>
&lt;p>年末調整と給与支払報告書の作成を行った。年末は平時の月末と異なるからわちゃわちゃしてたら25日の給与の支払いも忘れていた。いや、忘れていたというよりは年末調整を12月分の給与で調整したいから年末調整を完了しないと給与確定できないと放置していた。今日は金曜日で平日だからシステムは稼働しているだろうと安易に考えていたら eltax も e-tax も稼働日を次のように書いてあった。&lt;/p>
&lt;blockquote>
&lt;p>土・日・祝日、年末年始12/29～1/3は除く&lt;/p>
&lt;/blockquote>
&lt;p>eltax のアプリケーションで書類データは作成できたけれど、作成したデータを送信することはできなかった。年明けの4日まで持ち越し。こういう失敗が最近増えてきた。がっかりして嫌になる。あと eltax や e-tax の運用停止時間に遭遇することが私はとても多い。月に1回も使わないようなシステムなのに年間で2-3回ほどは使えない時間に遭遇する。それは当たり前で、私が余裕のある時間は早朝・深夜と休日になるため、メンテナンスの日程と重なることが多い。システムは基本的に24時間365日動いていないとダメだということがわかる。なにかトラブルがあったときの運用対応は年明けでも構わないが、定型的なデータ処理は24時間365日できるはずだと思う。&lt;/p>
&lt;p>その後に自社の請求書を作成したり、他社の請求書の対応や会計の明細登録などをしていた。キャッシュフローも眺めていて &lt;a href="/diary/diary/posts/2023/0331/">今季はもともと赤字想定で予算策定&lt;/a> していたが、受託開発のお仕事が長引いて黒字決算で着地する予定。あと3ヶ月しかないのでブレることもないだろうと思う。本当は今季に事業の体制変更もやらないといけなかったことが来季へずれ込む。計画通りに進捗していないという面からは、いろいろあって事業も経営もあまりうまくいっていない。&lt;/p>
&lt;h2 id="カフーツさんの忘年会">カフーツさんの忘年会&lt;/h2>
&lt;p>初めての参加。昨年も参加する予定が &lt;a href="/diary/diary/posts/2022/1226/">父の訃報&lt;/a> があってドタキャンしたのでリトライ。手土産に &lt;a href="https://issindo-osaka.com/">一心堂&lt;/a> のフルーツ大福をもっていくことにした。神戸の阪急百貨店にお店があったのでてっきり神戸発祥のお店かと思ったら大阪発祥だった。種別によって値段は異なるが、だいたい1個410-640円 (税抜き) ぐらい。9個入の詰め合わせにしてもらった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1229_daihuku.jpeg"/>
&lt;/figure>
&lt;p>他に持ち寄りであった食べものに &lt;a href="https://www.ikkanrou.jp/">三宮一貫樓&lt;/a> のちび豚まんと焼売を撮った。神戸に住み始めて商店街の一角にあるのは知っていたのだけど、神戸の名物の1つだと知ったのは住み始めて2-3年経ってからだった。勉強会の食べものの定番はピザだけど、神戸なら一貫楼の &lt;a href="https://www.ikkanrou.jp/items/394">中華パーティーセット&lt;/a> (送料/消費税込みで10,750円) などを頼むのもよいのかもしれない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1229_ikkanrou.jpg"/>
&lt;/figure>
&lt;h2 id="コミュニティとコワーキングの違い">コミュニティとコワーキングの違い&lt;/h2>
&lt;p>いとうさんと話していて、以前よりコミュニティとコワーキングの違いが明確になった。私の中では似て非なるものという考えはあったものの、あまり違いを明文化できていなかった。&lt;/p>
&lt;p>コミュニティマネージャーと &lt;a href="https://www.coworkingmgr.com/">コワーキングマネージャー&lt;/a> では求められるスキルセットが大きく異なる。キャリアとしてもコワーキングマネージャーの方がずっと難易度の高いものであるように話されていた。集合で言えば、コワーキングマネージャーはコミュニティマネージャーのスキルセットを含む。コミュニティマネージャーは私も身近なものだし、コミュニティマネージャー (会社によっては DevRel と呼ばれたりもする) を社員として雇用する会社も増えてきた。会社に雇われるコミュニティマネージャーというキャリアは、その会社のサービスやプロダクトのコミュニティを盛り上げたり宣伝したりといったマーケティング活動の一環とみなされることが多い。一方でコワーキングマネージャーというのは、会社に雇われるというよりもコワーキングスペースや地域のようなコミュニティに根付くものかもしれない。&lt;/p>
&lt;p>コミュニティというのは、それ自体を1つの意思をもった人のように扱い、そこに集まる人たちがコミュニティの思想にあうよう1つにまとまって活動する、協調するといった趣きが強い。そのため、コミュニティマネージャーはコミュニティの理念にあうようメンバーをまとめたり、逆にあわない人たちを排除することもある。一方、コワーキングというのは、個々がそれぞれの背景をもち、得意・不得意があり、性格や思想も様々で多様な価値観をもつ人たちが集まり、それぞれの特性を活かした上で協調するといった趣きがある。そして、コワーキングマネージャーは個々人にあわせたホスピタリティを提供するという。これは主従において大きな違いの1つでもあると理解できた。コミュニティはそれ自体が主でその理念にメンバーが従う。コワーキングは個々が主でその人たちが協調するかどうかはそれぞれのコワーカーの判断に委ねられる。そして、コワーカー同士が協調しやすいように縁の下で支えるのがコワーキングマネージャーだという。コワーキングマネージャーは、訪れたコワーカーとコミュニケーションを取る中で、一緒に考え、相談にのり、そして答えや結論を出さなくてもよいという。コワーカーと一緒に考えてあげるだけでよいというのだ。どこかに落とし所に着地させたり、全体をまとめたりしないという点がコミュニティマネージャーと大きく異なる。&lt;/p>
&lt;p>そこで素朴な疑問。コワーキングマネージャーが個々人に向き合うとしたら、そこには &lt;a href="https://ja.wikipedia.org/wiki/%E3%83%80%E3%83%B3%E3%83%90%E3%83%BC%E6%95%B0">ダンバー数&lt;/a> (100-150人？) のように人間の認知能力の限界が出てくる。数千人や数万人が所属するコミュニティも存在するが、コミュニティといった枠組みで集団を抽象化して管理できなければ認知能力に限界がある。次の問いを投げかけてみた。&lt;/p>
&lt;blockquote>
&lt;p>コワーキングマネージャーが個々人にホスピタリティを提供するとしたら、小さい規模や小集団でしか機能しないのではないか？スケールしないのではないか？&lt;/p>
&lt;/blockquote>
&lt;p>いとうさんが言うには、この弱点を補うのがツールの力だという。コワーキングマネージャーのチームを作り、コワーカーそれぞれと話した内容やその人の背景や特性、いまやっていることなどを記録し、その記録をチーム内で共有する。これなら個人の認知能力を拡張できるし、コンテキストを引き継いだ上で初めて会うコワーキングマネージャーとコワーカー間におけるホスピタリティも担保できるかもしれない。&lt;/p>
&lt;p>ここまで聞いて、これはまさに私が開発の現場でやっている課題管理そのものだということに気付いた。日々の開発のアクティビティを課題管理システムにコメントとして記録し、そのタイムラインをメンバー全員で共有しながら、リアルタイムに必要なコミュニケーションをもって相互に情報共有または協調するといったことを、まさに私のチームでは実践している。これをコワーキングスペースにいるコワーキングマネージャー間で行う、もっと言えば、複数のコワーキングスペース間で共有できれば、それはさらに大きなホスピタリティになるのかもしれない。別のコワーキングスペースへ行っても、自分の背景が共有されていて、よりよいホスピタリティを受けることができるのかもしれない。&lt;/p>
&lt;p>&lt;a href="/diary/diary/posts/2022/0618/">初めてカフーツさんに訪問したのが2022年6月&lt;/a> だった。当時いとうさんと話してみて、課題管理に通じるところがあると直感的に感じて、その後、やり取りを継続してきて、1年半経った。ようやくコワーキングと課題管理がつながった。いとうさんからみれば、課題管理とはコワーキングマネージャーが備えるべきホスピタリティの延長上にあるチームで協調するための概念なのだと思う。そして、私からみれば、コワーキングとは課題管理そのものなんだと理解できた。&lt;/p>
&lt;p>課題管理システムの利用状況を表すメトリクスの1つに &lt;a href="https://developers.google.com/chart/interactive/docs/gallery/calendar?hl=ja">カレンダーチャート&lt;/a> がある。これがいま課題管理を知らないチームでその実践を指導する上で想定外に役に立つことがわかった。この他にも課題管理特有のメトリクスを増やしていきたいと私は考えていた。そのアイディアの1つに「コワーキングチャート」というものを作ろうと思う。おそらく世の中にはないし、課題管理とコワーキングの両方を研究している人にしか、この発想は出てこないと思う。来年、他社のお手伝いを終えた後のアイディアの1つに寝かしておこうと思う。&lt;/p></content></item><item><title>年末のデスクワーク</title><link>/diary/posts/2023/1228/</link><pubDate>Thu, 28 Dec 2023 12:02:17 +0900</pubDate><guid>/diary/posts/2023/1228/</guid><description>0時に寝て何度か起きて気分が悪くて吐きそうになりながら7時過ぎに起きた。昨日は飲み過ぎた。やはり年末でだらけているのでオフィスへ出勤したのが9時44分だった。
slack コネクト 昨日の 税理士さんとの打ち合わせ内容 の1つに chatwork のフリープランの メッセージの閲覧制限 への対応がある。以前は制限がなかったらしいが、どこかのタイミングで40日制限に変更されたという。slack もフリープランは3ヶ月に制限しているので世の中の流れとしては仕方ないのかもしれない。それはともかく、chatwork に (先方の負担で) 課金するか、slack コネクト へ移行するかの相談をしたら slack でも構わないという。先方も slack を有料プランで事務所内では使っているという話しだった。問題提起してヒアリングしてみたらなんのコストもなく移行できることがわかった。
早速、今日、調べて税理士さんを招待した。その際に社外の個人アカウントを使って slack コネクトの振る舞いも検証した。slack コネクトのよいところは次になる。
通常のメンバー同様、slack コネクトで招待したメンバーはチャンネル、プライベートチャンネル、ダイレクトメッセージを使える 自分のワークスペースに他組織のワークスペースのチャンネルを追加できる (参加するワークスペースが増えない) チャンネル名、トピック、説明はそれぞれのワークスペース管理となる とくにチャンネル名を自組織のワークスペースの都合で名前を付けられるのがよいと思う 無料ワークスペースに設定されている使用制限 によると、フリープランは slack コネクトを利用できない。invitation を送るとフリープランでも接続できるが、それは pro のトライアルになるため、3ヶ月だけ使えるみたい。
開発合宿の打ち合わせ 先日 作成した旅のしおり を使って開発合宿の打ち合わせをした。打ち合わせをする前に見直していると、いくつも不備や誤りに気付いて1時間前ぐらいから修正したりしていた。私の作る資料は手直ししないと小さい誤りがいくつもある。参加者は現時点で7名で、いまのところ、これ以上増える見込みはない。昨年は4名だったのでおよそ2倍に増える。きのいえは9名まで宿泊できるようにみえる。神戸組4人に対して関東組は3人参加してもらえる。関東からわざわざ来てもらえるのは本当にありがたい。このぐらいの規模で数年継続できるような仕組みや体制を作るのが当初の目標でよい気がする。昨年は初めてだったので手探りだったが、今年は2回目なのでもう少し段取りやノウハウを使ってうまく運営できればと思う。
みんな時間通りに打ち合わせに集まってくれて、自己紹介して、主旨を説明して、大雑把なタイムスケジュールを紹介して、質疑応答をした。私の知人に声をかけているので神戸組と新規参加の関東組とはまったく面識がない。そういった人たちを少しでも話しやすいよう話題を設けたり、きっかけを作ったりすることがコミュニティマネージャーとしては求められる。別に私がコミュニティマネージャーを目指しているわけでもないが、コワーキングやコミュニティの価値の実践的なものを理解していく上で避けられないと考えている。私自身コミュ障で他人と話したくない人間なので、役割としてやらないといけないというポジションに追い込むことでその機会を得ていると言える。あと2ヶ月、詳細の詰めをしていく段階に入ってきた。
マネーの虎たちのその後 たまたまみたらおもしろかった。昔リアルタイムでみていた。いまの感覚でみればハラスメントやら人格否定しまくりの時代背景の史料の1つも思える。そのときボロクソに言っていた社長たちもその後破産している社長は多いみたい。そして、すごいのが数十億といった負債を抱えて破産してもまたやり直して復活している社長もいるということ。その再起のきっかけにセミナーや講演をしてマネーの虎を宣伝文句として使っているところが本当にダサいとは思うけど、そういったなりふり構わず売上を上げるためなら何でもやるといった姿勢が復活するためのバイタリティになっているのかもしれない。昭和世代のハングリー精神のようなものを感じる。
その中でも南原竜樹さんがすごい。年商100億の会社が取引会社の突然の倒産から資金繰りが悪化して破産して、2年かけてすべての負債 (20億円) を返済して、ホームレスになってからまた再起してまた年商100億まで復活したらしい。経営能力がある人はゼロから成功できるというのがよく分かるモデルケースにみえる。失敗して門前払いする人がいる一方、助けてくれる人もいたみたい。
元『￥マネーの虎』南原竜樹さん 年商100億円社長が45歳でホームレスに転落、どん底からの復活劇 一方で、手を差し伸べてくれる人もいた。中でもありがたかったのは、旧知の社長が会社の空きスペースの提供を申し出てくれたことだ。すべてを失った南原さんは、間借りしたオフィスで「過去の成功にとらわれず、心を入れ替えて再出発する」ことを心に誓った。
「僕は、“老害化”した経営者をたくさん見てきました。高齢になった経営者がいきなり頓珍漢なことを言い出して、周囲を困惑させるケースも少なくない。だからちょっと早めに準備して、いろんな方に事業を引き継いでもらいました。(&amp;hellip;中略&amp;hellip;) 頭も体もしっかりしているうちに、自ら退くのが一番なんです」
手持ちの資金はゼロだったので昼夜を問わず働いた。
「資金を得るためにオートバックスで8時間、吉野家で8時間、モービル石油で8時間バイトして、吉野家ではお客さんがいない時に立ったまま寝ていました（笑）。</description><content>&lt;p>0時に寝て何度か起きて気分が悪くて吐きそうになりながら7時過ぎに起きた。昨日は飲み過ぎた。やはり年末でだらけているのでオフィスへ出勤したのが9時44分だった。&lt;/p>
&lt;h2 id="slack-コネクト">slack コネクト&lt;/h2>
&lt;p>昨日の &lt;a href="/diary/diary/posts/2023/1227/">税理士さんとの打ち合わせ内容&lt;/a> の1つに chatwork のフリープランの &lt;a href="https://help.chatwork.com/hc/ja/articles/900001118283#1">メッセージの閲覧制限&lt;/a> への対応がある。以前は制限がなかったらしいが、どこかのタイミングで40日制限に変更されたという。slack もフリープランは3ヶ月に制限しているので世の中の流れとしては仕方ないのかもしれない。それはともかく、chatwork に (先方の負担で) 課金するか、&lt;a href="https://slack.com/intl/ja-jp/connect">slack コネクト&lt;/a> へ移行するかの相談をしたら slack でも構わないという。先方も slack を有料プランで事務所内では使っているという話しだった。問題提起してヒアリングしてみたらなんのコストもなく移行できることがわかった。&lt;/p>
&lt;p>早速、今日、調べて税理士さんを招待した。その際に社外の個人アカウントを使って slack コネクトの振る舞いも検証した。slack コネクトのよいところは次になる。&lt;/p>
&lt;ul>
&lt;li>通常のメンバー同様、slack コネクトで招待したメンバーはチャンネル、プライベートチャンネル、ダイレクトメッセージを使える&lt;/li>
&lt;li>自分のワークスペースに他組織のワークスペースのチャンネルを追加できる (&lt;strong>参加するワークスペースが増えない&lt;/strong>)&lt;/li>
&lt;li>チャンネル名、トピック、説明はそれぞれのワークスペース管理となる
&lt;ul>
&lt;li>とくにチャンネル名を自組織のワークスペースの都合で名前を付けられるのがよいと思う&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://slack.com/intl/ja-jp/help/articles/115002422943-%E7%84%A1%E6%96%99%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AB%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E4%BD%BF%E7%94%A8%E5%88%B6%E9%99%90">無料ワークスペースに設定されている使用制限&lt;/a> によると、フリープランは slack コネクトを利用できない。invitation を送るとフリープランでも接続できるが、それは pro のトライアルになるため、3ヶ月だけ使えるみたい。&lt;/p>
&lt;h2 id="開発合宿の打ち合わせ">開発合宿の打ち合わせ&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/1224/">作成した旅のしおり&lt;/a> を使って開発合宿の打ち合わせをした。打ち合わせをする前に見直していると、いくつも不備や誤りに気付いて1時間前ぐらいから修正したりしていた。私の作る資料は手直ししないと小さい誤りがいくつもある。参加者は現時点で7名で、いまのところ、これ以上増える見込みはない。昨年は4名だったのでおよそ2倍に増える。きのいえは9名まで宿泊できるようにみえる。神戸組4人に対して関東組は3人参加してもらえる。関東からわざわざ来てもらえるのは本当にありがたい。このぐらいの規模で数年継続できるような仕組みや体制を作るのが当初の目標でよい気がする。昨年は初めてだったので手探りだったが、今年は2回目なのでもう少し段取りやノウハウを使ってうまく運営できればと思う。&lt;/p>
&lt;p>みんな時間通りに打ち合わせに集まってくれて、自己紹介して、主旨を説明して、大雑把なタイムスケジュールを紹介して、質疑応答をした。私の知人に声をかけているので神戸組と新規参加の関東組とはまったく面識がない。そういった人たちを少しでも話しやすいよう話題を設けたり、きっかけを作ったりすることがコミュニティマネージャーとしては求められる。別に私がコミュニティマネージャーを目指しているわけでもないが、コワーキングやコミュニティの価値の実践的なものを理解していく上で避けられないと考えている。私自身コミュ障で他人と話したくない人間なので、役割としてやらないといけないというポジションに追い込むことでその機会を得ていると言える。あと2ヶ月、詳細の詰めをしていく段階に入ってきた。&lt;/p>
&lt;h2 id="マネーの虎たちのその後">マネーの虎たちのその後&lt;/h2>
&lt;p>たまたまみたらおもしろかった。昔リアルタイムでみていた。いまの感覚でみればハラスメントやら人格否定しまくりの時代背景の史料の1つも思える。そのときボロクソに言っていた社長たちもその後破産している社長は多いみたい。そして、すごいのが数十億といった負債を抱えて破産してもまたやり直して復活している社長もいるということ。その再起のきっかけにセミナーや講演をしてマネーの虎を宣伝文句として使っているところが本当にダサいとは思うけど、そういったなりふり構わず売上を上げるためなら何でもやるといった姿勢が復活するためのバイタリティになっているのかもしれない。昭和世代のハングリー精神のようなものを感じる。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/VOTyYGjUm4M" allowfullscreen title="【ゆっくり解説】マネーの虎で出場者をボロクソに批判した社長達の末路６選">&lt;/iframe>
&lt;/div>
&lt;p>その中でも南原竜樹さんがすごい。年商100億の会社が取引会社の突然の倒産から資金繰りが悪化して破産して、2年かけてすべての負債 (20億円) を返済して、ホームレスになってからまた再起してまた年商100億まで復活したらしい。経営能力がある人はゼロから成功できるというのがよく分かるモデルケースにみえる。失敗して門前払いする人がいる一方、助けてくれる人もいたみたい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.moneypost.jp/966227">元『￥マネーの虎』南原竜樹さん 年商100億円社長が45歳でホームレスに転落、どん底からの復活劇&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>一方で、手を差し伸べてくれる人もいた。中でもありがたかったのは、旧知の社長が会社の空きスペースの提供を申し出てくれたことだ。すべてを失った南原さんは、間借りしたオフィスで「過去の成功にとらわれず、心を入れ替えて再出発する」ことを心に誓った。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>「僕は、“老害化”した経営者をたくさん見てきました。高齢になった経営者がいきなり頓珍漢なことを言い出して、周囲を困惑させるケースも少なくない。だからちょっと早めに準備して、いろんな方に事業を引き継いでもらいました。(&amp;hellip;中略&amp;hellip;) 頭も体もしっかりしているうちに、自ら退くのが一番なんです」&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>手持ちの資金はゼロだったので昼夜を問わず働いた。&lt;br />
「資金を得るためにオートバックスで8時間、吉野家で8時間、モービル石油で8時間バイトして、吉野家ではお客さんがいない時に立ったまま寝ていました（笑）。&lt;/p>
&lt;/blockquote></content></item><item><title>一周まわって飲み会も大事</title><link>/diary/posts/2023/1227/</link><pubDate>Wed, 27 Dec 2023 12:02:05 +0900</pubDate><guid>/diary/posts/2023/1227/</guid><description>0時に寝て何度か起きて7時過ぎに起きた。9時までにはオフィスへ行くつもりが、気が緩んで9時はまわっていたと思う。年末でだらけている。
税理士さんとの打ち合わせ この3ヶ月ほど 税理士さんとやり取り してきた懸念事項の共有または改善も含め、電子帳簿保存法 への対応の打ち合わせをしてきた。打ち合わせのため、姫路市にある税理士さんの事務所を訪問してきた。オンラインでできないわけではなかったが、1度も直接会ったことがなかったので、こちらの言い分や相手の言い分も気兼ねなく出し合う機会にしようと思って出掛けた。打ち合わせ後に一緒に晩ご飯を食べに行って、その後も2件飲み屋さんをはしごして、結果的には親睦を深めてお互いの考え方や人間性などを理解する機会になってよかったと思う。17時から22時まで飲み歩いてた。古い時代の人間関係では当たり前だったことが、いまどきの付き合いでは珍しいことかもしれない。
晩ご飯は プロ酒場 というお店を紹介してもらった。路地裏の隠れた場所にあって地元の人が行くお店って感じだった。「プロ」はプロフェッショナルではなく、労働者を指す プロレタリアート に由来するという。
あまり先方からはどういった運用をしたいという考えや既存のワークフローはないようで、ほぼこちらの言い分は通って改善へ向けての最初の切り口として収穫は大きかった。実際にそういった運用ができるかどうかはこれから徐々に実践して取り組んでいく。当社としてもこちらの要望だけを主張するつもりはなく、先方の状況や考えも聞いた上でお互いに合意できるところを探っていきましょうと伝えた。業務をうまくまわすために協調しましょうということは理解してもらえたのではないかと思う。
姫路駅の雰囲気 姫路駅の北側には姫路城がそびえている。駅を降りるとすぐに姫路城が目に入るようになっている。そして観光客向けのお店とアーケード街のお店も並んでいて、それほど人がいるわけではないけど活気がある。20分ほど駅から北側へ歩くと姫路城に辿り着く。
駅の南側はうってかわってオフィス街となっている。ビルが立ち並びお店などはあまりない。駅の南北で役割分担をしているような、おそらく都市計画でそういった整備が行われているのだと推測する。税理士さんの事務所まで、姫路駅から徒歩20分ぐらい歩いた。あらかじめ調べた上で歩いたわけだけど、それでもやや遠かった。体力が落ちていて駅から徒歩20分とか、普通には歩けないようになりつつあるのかもしれない。帰りはタクシーを使ったら運賃が1300円だった。三ノ宮から姫路まで JR で990円なのにこの距離で1300円なのかとか、いろいろ思うことがあるな。</description><content>&lt;p>0時に寝て何度か起きて7時過ぎに起きた。9時までにはオフィスへ行くつもりが、気が緩んで9時はまわっていたと思う。年末でだらけている。&lt;/p>
&lt;h2 id="税理士さんとの打ち合わせ">税理士さんとの打ち合わせ&lt;/h2>
&lt;p>この3ヶ月ほど &lt;a href="/diary/diary/posts/2023/1208/#隔週の雑談">税理士さんとやり取り&lt;/a> してきた懸念事項の共有または改善も含め、&lt;a href="https://www.nta.go.jp/law/joho-zeikaishaku/sonota/jirei/tokusetsu/index.htm">電子帳簿保存法&lt;/a> への対応の打ち合わせをしてきた。打ち合わせのため、姫路市にある税理士さんの事務所を訪問してきた。オンラインでできないわけではなかったが、1度も直接会ったことがなかったので、こちらの言い分や相手の言い分も気兼ねなく出し合う機会にしようと思って出掛けた。打ち合わせ後に一緒に晩ご飯を食べに行って、その後も2件飲み屋さんをはしごして、結果的には親睦を深めてお互いの考え方や人間性などを理解する機会になってよかったと思う。17時から22時まで飲み歩いてた。古い時代の人間関係では当たり前だったことが、いまどきの付き合いでは珍しいことかもしれない。&lt;/p>
&lt;p>晩ご飯は &lt;a href="https://tabelog.com/hyogo/A2805/A280501/28013652/">プロ酒場&lt;/a> というお店を紹介してもらった。路地裏の隠れた場所にあって地元の人が行くお店って感じだった。「プロ」はプロフェッショナルではなく、労働者を指す &lt;a href="https://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AD%E3%83%AC%E3%82%BF%E3%83%AA%E3%82%A2%E3%83%BC%E3%83%88">プロレタリアート&lt;/a> に由来するという。&lt;/p>
&lt;p>あまり先方からはどういった運用をしたいという考えや既存のワークフローはないようで、ほぼこちらの言い分は通って改善へ向けての最初の切り口として収穫は大きかった。実際にそういった運用ができるかどうかはこれから徐々に実践して取り組んでいく。当社としてもこちらの要望だけを主張するつもりはなく、先方の状況や考えも聞いた上でお互いに合意できるところを探っていきましょうと伝えた。業務をうまくまわすために協調しましょうということは理解してもらえたのではないかと思う。&lt;/p>
&lt;h2 id="姫路駅の雰囲気">姫路駅の雰囲気&lt;/h2>
&lt;p>姫路駅の北側には姫路城がそびえている。駅を降りるとすぐに姫路城が目に入るようになっている。そして観光客向けのお店とアーケード街のお店も並んでいて、それほど人がいるわけではないけど活気がある。20分ほど駅から北側へ歩くと姫路城に辿り着く。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1227_himeji-castle1.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2023/1227_himeji-castle2.jpg"/>
&lt;/figure>
&lt;p>駅の南側はうってかわってオフィス街となっている。ビルが立ち並びお店などはあまりない。駅の南北で役割分担をしているような、おそらく都市計画でそういった整備が行われているのだと推測する。税理士さんの事務所まで、姫路駅から徒歩20分ぐらい歩いた。あらかじめ調べた上で歩いたわけだけど、それでもやや遠かった。体力が落ちていて駅から徒歩20分とか、普通には歩けないようになりつつあるのかもしれない。帰りはタクシーを使ったら運賃が1300円だった。三ノ宮から姫路まで JR で990円なのにこの距離で1300円なのかとか、いろいろ思うことがあるな。&lt;/p></content></item><item><title>1回目の仕事納め</title><link>/diary/posts/2023/1226/</link><pubDate>Tue, 26 Dec 2023 15:05:18 +0900</pubDate><guid>/diary/posts/2023/1226/</guid><description>1時に寝て何度か起きて7時過ぎに起きた。寒くてなにもできない。
定例会議 年末という追い込みもあってか、このマイルストーンで対応した issue 数も多くて、ふりかえりの内容や議論する内容がいつもの定例よりも多かった。1時間の会議時間を20分ほどオーバーしながら定例会議を終えた。
テックブログを読む会 の調査報告をして年明けぐらいから社内でもやってみようかという話しをしていて、メンバーから開発が忙しいから勉強時間が取れないといった意見が出た。これは課題管理の文脈で取り組むよい問いに思えた。一番勉強しないといけないメンバーから出た意見でもあった。私の過去の経験則でもこの類の発言はスキルの高い開発者からは出ない。それは勉強することの価値を理解しているからだと推測する。
いまテスト駆動開発はどちらかと言うと文化に近いと言われる。その所以はテストを書かないから開発が遅くなるということをヒューリスティックもしくは経験則として理解している開発者が多いからだと私は考えている。現実のシステム開発でテストを書かないと開発と、テストを書く開発を定量的に評価したり比較することは相当に難しい。事実上そんなことはできない。なぜならば、業務はそのどちらか一方しか選択できないからだ。だから、これは開発者の感覚としてテストを書いて当たり前だという文化をもって、その実益もあると信じて業務に組み込むしかない。だから文化と言われる。それと同じで開発や技術の勉強をせずに、目の前の開発だけやっていてもスキルアップできないのは経験を積んだ開発者からみたら自明だが、それをどう伝えていくか、もしくはその気付きを課題管理の文脈で与える仕組みはないかな？と考えていたりした。
納会 今日はお手伝い先の仕事納めになる。私もそれにあわせて15時半にはお仕事を終えて退勤した。1人だけ働いていてもテンションが上がらないかなと思ってそうした。その後、お手伝い先の納会途中の写真がアップされていてスマブラやりながらのほほんしていたみたい。
納会：何かの出来事や物事が終わった時に締めくくりとして催す会
昔から会社の納会ってなんの意味があるのだろう？と思っている。だいたいお疲れ様でしたって感じで軽食とお酒があって、それを飲み食いしたらすぐ帰る人もいれば、そのまま残って雑談してから帰る人もいる。いつ帰ってもよい流れ解散となる。会社によってもやり方は異なるのだと思うけど、どうせイベントをやるならもうちょっとちゃんとやったらいいんじゃないかと思わないでもない。だらだらしたイベントが納会ってイメージすらある。
本当は夕方から明日の打ち合わせの議題を整理しようと思っていたものの、夕方から急にお腹が痛くなって、帰ってお腹を下して寝ていた。お昼に食べたもののせいかもしれない。寝ていたら直ったのでそんな大したことはないみたい。うちの会社の業務としてはいつも通りで29日までは働く予定。ちょうどカフーツさんの忘年会が29日17時からあるのでそれを２回目の仕事納めにするのがよさそう。</description><content>&lt;p>1時に寝て何度か起きて7時過ぎに起きた。寒くてなにもできない。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>年末という追い込みもあってか、このマイルストーンで対応した issue 数も多くて、ふりかえりの内容や議論する内容がいつもの定例よりも多かった。1時間の会議時間を20分ほどオーバーしながら定例会議を終えた。&lt;/p>
&lt;p>&lt;a href="/diary/diary/posts/2023/1211/#テックブログを読む会">テックブログを読む会&lt;/a> の調査報告をして年明けぐらいから社内でもやってみようかという話しをしていて、メンバーから開発が忙しいから勉強時間が取れないといった意見が出た。これは課題管理の文脈で取り組むよい問いに思えた。一番勉強しないといけないメンバーから出た意見でもあった。私の過去の経験則でもこの類の発言はスキルの高い開発者からは出ない。それは勉強することの価値を理解しているからだと推測する。&lt;/p>
&lt;p>いまテスト駆動開発はどちらかと言うと文化に近いと言われる。その所以はテストを書かないから開発が遅くなるということをヒューリスティックもしくは経験則として理解している開発者が多いからだと私は考えている。現実のシステム開発でテストを書かないと開発と、テストを書く開発を定量的に評価したり比較することは相当に難しい。事実上そんなことはできない。なぜならば、業務はそのどちらか一方しか選択できないからだ。だから、これは開発者の感覚としてテストを書いて当たり前だという文化をもって、その実益もあると信じて業務に組み込むしかない。だから文化と言われる。それと同じで開発や技術の勉強をせずに、目の前の開発だけやっていてもスキルアップできないのは経験を積んだ開発者からみたら自明だが、それをどう伝えていくか、もしくはその気付きを課題管理の文脈で与える仕組みはないかな？と考えていたりした。&lt;/p>
&lt;h2 id="納会">納会&lt;/h2>
&lt;p>今日はお手伝い先の仕事納めになる。私もそれにあわせて15時半にはお仕事を終えて退勤した。1人だけ働いていてもテンションが上がらないかなと思ってそうした。その後、お手伝い先の納会途中の写真がアップされていてスマブラやりながらのほほんしていたみたい。&lt;/p>
&lt;blockquote>
&lt;p>納会：何かの出来事や物事が終わった時に締めくくりとして催す会&lt;/p>
&lt;/blockquote>
&lt;p>昔から会社の納会ってなんの意味があるのだろう？と思っている。だいたいお疲れ様でしたって感じで軽食とお酒があって、それを飲み食いしたらすぐ帰る人もいれば、そのまま残って雑談してから帰る人もいる。いつ帰ってもよい流れ解散となる。会社によってもやり方は異なるのだと思うけど、どうせイベントをやるならもうちょっとちゃんとやったらいいんじゃないかと思わないでもない。だらだらしたイベントが納会ってイメージすらある。&lt;/p>
&lt;p>本当は夕方から明日の打ち合わせの議題を整理しようと思っていたものの、夕方から急にお腹が痛くなって、帰ってお腹を下して寝ていた。お昼に食べたもののせいかもしれない。寝ていたら直ったのでそんな大したことはないみたい。うちの会社の業務としてはいつも通りで29日までは働く予定。ちょうどカフーツさんの忘年会が29日17時からあるのでそれを２回目の仕事納めにするのがよさそう。&lt;/p></content></item><item><title>RemoteAddr はほとんど役に立たない</title><link>/diary/posts/2023/1225/</link><pubDate>Mon, 25 Dec 2023 12:36:50 +0900</pubDate><guid>/diary/posts/2023/1225/</guid><description>0時に寝て何度か起きて7時に起きた。寒くて朝起きれなくなってきた。
ローカルネットワークからのリクエストのみを受け付けるミドルウェア Request 構造体の中にある RemoteAddr を参照すればすぐできるだろ思って、すぐにできた。すぐにできたんだけど、これは実際の運用で使えるものではない。
type LocalNetworkConfig struct { Skipper middleware.Skipper } func localNetworkWithConfig(cfg LocalNetworkConfig) echo.MiddlewareFunc { return func(next echo.HandlerFunc) echo.HandlerFunc { return func(c echo.Context) error { if cfg.Skipper(c) { return next(c) } req := c.Request() addr, _, err := net.SplitHostPort(req.RemoteAddr) if err != nil { slog.Error(&amp;#34;failed to get remote address&amp;#34;, &amp;#34;err&amp;#34;, err, &amp;#34;addr&amp;#34;, addr) return echo.ErrForbidden } ip := net.ParseIP(addr) if ip.IsPrivate() || ip.IsLoopback() { return next(c) } slog.</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。寒くて朝起きれなくなってきた。&lt;/p>
&lt;h2 id="ローカルネットワークからのリクエストのみを受け付けるミドルウェア">ローカルネットワークからのリクエストのみを受け付けるミドルウェア&lt;/h2>
&lt;p>&lt;a href="https://pkg.go.dev/net/http#Request">Request&lt;/a> 構造体の中にある &lt;code>RemoteAddr&lt;/code> を参照すればすぐできるだろ思って、すぐにできた。すぐにできたんだけど、これは実際の運用で使えるものではない。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">LocalNetworkConfig&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Skipper&lt;/span> &lt;span style="color:#a6e22e">middleware&lt;/span>.&lt;span style="color:#a6e22e">Skipper&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">localNetworkWithConfig&lt;/span>(&lt;span style="color:#a6e22e">cfg&lt;/span> &lt;span style="color:#a6e22e">LocalNetworkConfig&lt;/span>) &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">MiddlewareFunc&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">HandlerFunc&lt;/span>) &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">HandlerFunc&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">cfg&lt;/span>.&lt;span style="color:#a6e22e">Skipper&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">next&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">req&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">addr&lt;/span>, &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">net&lt;/span>.&lt;span style="color:#a6e22e">SplitHostPort&lt;/span>(&lt;span style="color:#a6e22e">req&lt;/span>.&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">slog&lt;/span>.&lt;span style="color:#a6e22e">Error&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to get remote address&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;err&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;addr&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">addr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">ErrForbidden&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ip&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">net&lt;/span>.&lt;span style="color:#a6e22e">ParseIP&lt;/span>(&lt;span style="color:#a6e22e">addr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ip&lt;/span>.&lt;span style="color:#a6e22e">IsPrivate&lt;/span>() &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">ip&lt;/span>.&lt;span style="color:#a6e22e">IsLoopback&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">next&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">slog&lt;/span>.&lt;span style="color:#a6e22e">Error&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;requested from an external network&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;ip&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ip&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">ErrForbidden&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">NewLocalNetwork&lt;/span>() &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">MiddlewareFunc&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">localNetworkWithConfig&lt;/span>(&lt;span style="color:#a6e22e">LocalNetworkConfig&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Skipper&lt;/span>: &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>) &lt;span style="color:#66d9ef">bool&lt;/span> { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>過去にも同じようなことをやらかしたような既視感がある。&lt;/p>
&lt;blockquote>
&lt;p>golangのnet.Request構造体内にはRemoteAddr属性があり、当然のことながら要求元のリモートアドレスが含まれています。これで仕事は終わりですね？しかし、リバースプロキシやロードバランサーをアプリケーションに使っている場合はそうではありません。これはgoサーバには常に、すべてのリクエストがロードバランサから来ているかのように見えます。これは、これを何らかのスロットリングの指標として使いたいのであれば、最悪なことです。ですから、何らかの形のリバースプロキシの後ろでなく、goサーバーが1つだけ動いているのでない限り、私たちの目的には役に立たないとして、すぐにこれを捨てることができます。&lt;/p>
&lt;p>&lt;a href="https://husobee.github.io/golang/ip-address/2015/12/17/remote-ip-go.html">https://husobee.github.io/golang/ip-address/2015/12/17/remote-ip-go.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>途中のロードバランサーやアプリケーションゲートウェイ、リバースプロキシなど、中継するサーバーの ip アドレスに置き換わってしまうため、ネットワークのインフラを管理していないとどこからリクエストされたかを追跡することはできない。&lt;code>X-Real-IP&lt;/code> や &lt;code>X-Forwarded-For&lt;/code> という http ヘッダーに中継したサーバーの ip アドレスを記録するという慣習があるようだけど、これはクライアント側で書き換えできるのでこれ単体でアクセス制御のようなものに使うことはできない。&lt;/p>
&lt;p>次に同じ失敗をしないようにここに書いておく。&lt;/p></content></item><item><title>無駄なものはそうそうない</title><link>/diary/posts/2023/1224/</link><pubDate>Sun, 24 Dec 2023 12:05:44 +0900</pubDate><guid>/diary/posts/2023/1224/</guid><description>0時に寝て4時に起きてアニメをみて5時半に寝て9時に起きた。午前中はだらだらしていた。
旅のしおりのたたき台作り 3月に予定している 開発合宿 イベントの打ち合わせを次の木曜日に行う。そのための資料作りをした。昨年の記録があるのでその内容を見返したり、写真を貼り付けたりしながら、昨年作った資料よりも詳細な「旅のしおり」を作ることができた。
1日目 2日目 3日目 しばらくは冬の城崎温泉の開発合宿を、うちの会社の年中行事として継続していきたい。
コワーキングの価値の考察 独りで活動する個人事業主やマイクロ法人の役員にとってコワーキングがもたらす価値は大きいのではないかと私は考えている。以前 リモートワークと相談相手 という記事を書いた。そのふりかえりや考察の中から 日記を書き続ける ことに決めた。それは思考の外在化を強制的に行わないと、私はすぐに劣化するということを身をもって理解した。ひとえに人間が弱いのだと思う。思考の外在化とは次になる。
書くこと 話すこと これらの活動が減ることで思考が鈍化したり脳が退化したりする。書くことは日記で補えたが、話すことは相手がいないと成り立たない。顧問のはらさんに隔週で相談しているのもそうだし、カフーツさんのオンラインイベントに参加しているのもそうだし、開発合宿に社外の人たちを呼ぶのもその一環になる。そして、このことは会社員時代にあまり感じたことはなかった。それは会社員時代にはこれらの活動を伴うイベント、つまり会議だったり、報告だったり、同僚との雑談などが自然に日々の生活の中に含まれていたからだ。
無駄じゃなかったんやと思ったら次のシーンを思い出した。
初めて、成功したよ。800年か……全く、無駄な魔法だと恨んでさえいたが。ああ、意味はあったんだな。
意味のない無駄なことだと思いながらも長く続けていたことが、その意図をもって実施したかの如何に関わらず、なにかの役に立つことはあるし、なにごとも継続するに無駄なことはないという気付きでもある。古代の中国においても 鶏鳴狗盗 という故事がある。人それぞれに長く継続できていることがあるならそのことを大事にしたらよいと私は思う。それは継続した先にしかわからないこともある。
やや非科学的な仮説ではあるが、小林正観 という人物が「ありがとう」を唱えると幸せになるという仮説を提唱している。「ありがとう」を一万回となえると幸せになり、二万五千回となえると涙があふれだし、五万回となえると奇跡がおきる、もしくは年齢×一万回となえると第一段階の奇跡が起きるという。仮にこういった現象が本当に起きるのであれば、他者への感謝を述べる言葉から脳が影響を受けて、感謝の行動や考え方が身に付いて、現実の生活にも影響が出てくるのだろうと推測する。</description><content>&lt;p>0時に寝て4時に起きてアニメをみて5時半に寝て9時に起きた。午前中はだらだらしていた。&lt;/p>
&lt;h2 id="旅のしおりのたたき台作り">旅のしおりのたたき台作り&lt;/h2>
&lt;p>3月に予定している &lt;a href="/diary/diary/posts/2023/1027/#隔週の雑談">開発合宿&lt;/a> イベントの打ち合わせを次の木曜日に行う。そのための資料作りをした。昨年の記録があるのでその内容を見返したり、写真を貼り付けたりしながら、昨年作った資料よりも詳細な「旅のしおり」を作ることができた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2022/0603/">1日目&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2022/0604/">2日目&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2022/0605/">3日目&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>しばらくは冬の城崎温泉の開発合宿を、うちの会社の年中行事として継続していきたい。&lt;/p>
&lt;h2 id="コワーキングの価値の考察">コワーキングの価値の考察&lt;/h2>
&lt;p>独りで活動する個人事業主やマイクロ法人の役員にとってコワーキングがもたらす価値は大きいのではないかと私は考えている。以前 &lt;a href="https://note.com/t2y1979/n/n84deed5fd934">リモートワークと相談相手&lt;/a> という記事を書いた。そのふりかえりや考察の中から &lt;a href="/diary/diary/posts/2022/0927/">日記を書き続ける&lt;/a> ことに決めた。それは思考の外在化を強制的に行わないと、私はすぐに劣化するということを身をもって理解した。ひとえに人間が弱いのだと思う。思考の外在化とは次になる。&lt;/p>
&lt;ul>
&lt;li>書くこと&lt;/li>
&lt;li>話すこと&lt;/li>
&lt;/ul>
&lt;p>これらの活動が減ることで思考が鈍化したり脳が退化したりする。書くことは日記で補えたが、話すことは相手がいないと成り立たない。顧問のはらさんに隔週で相談しているのもそうだし、カフーツさんのオンラインイベントに参加しているのもそうだし、開発合宿に社外の人たちを呼ぶのもその一環になる。そして、このことは会社員時代にあまり感じたことはなかった。それは会社員時代にはこれらの活動を伴うイベント、つまり会議だったり、報告だったり、同僚との雑談などが自然に日々の生活の中に含まれていたからだ。&lt;/p>
&lt;p>無駄じゃなかったんやと思ったら次のシーンを思い出した。&lt;/p>
&lt;blockquote>
&lt;p>初めて、成功したよ。800年か……全く、無駄な魔法だと恨んでさえいたが。ああ、意味はあったんだな。&lt;/p>
&lt;/blockquote>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/eZ13oxXpbH4" allowfullscreen title="フェルズの気付き">&lt;/iframe>
&lt;/div>
&lt;p>意味のない無駄なことだと思いながらも長く続けていたことが、その意図をもって実施したかの如何に関わらず、なにかの役に立つことはあるし、なにごとも継続するに無駄なことはないという気付きでもある。古代の中国においても &lt;a href="https://ja.wikipedia.org/wiki/%E5%AD%9F%E5%98%97%E5%90%9B#%E9%B6%8F%E9%B3%B4%E7%8B%97%E7%9B%97">鶏鳴狗盗&lt;/a> という故事がある。人それぞれに長く継続できていることがあるならそのことを大事にしたらよいと私は思う。それは継続した先にしかわからないこともある。&lt;/p>
&lt;p>やや非科学的な仮説ではあるが、&lt;a href="https://ja.wikipedia.org/wiki/%E5%B0%8F%E6%9E%97%E6%AD%A3%E8%A6%B3">小林正観&lt;/a> という人物が「ありがとう」を唱えると幸せになるという仮説を提唱している。「ありがとう」を一万回となえると幸せになり、二万五千回となえると涙があふれだし、五万回となえると奇跡がおきる、もしくは年齢×一万回となえると第一段階の奇跡が起きるという。仮にこういった現象が本当に起きるのであれば、他者への感謝を述べる言葉から脳が影響を受けて、感謝の行動や考え方が身に付いて、現実の生活にも影響が出てくるのだろうと推測する。&lt;/p></content></item><item><title>アクセシビリティを考える機会</title><link>/diary/posts/2023/1223/</link><pubDate>Sat, 23 Dec 2023 12:56:17 +0900</pubDate><guid>/diary/posts/2023/1223/</guid><description>0時に寝て3時半に起きて5時半に起きて8時に起きた。
ストレッチ 先週は実家に帰っていて通常とは異なる日程だったのでアラームを解除していた。ストレッチの時間のアラームを聞いてから出掛けていたので危うく遅刻するところだった。
今日はとくにどこも悪くなくて、可もなく不可もなくといった感じだった。 トレーナーさんによると、冬は寒くて丸くなってしまうせいか背中が硬くなりやすいという。背中のツボをあちこち押されて痛かった。たまたまトレーナーさんと物価の話しをしていて、いま物の値段がピークアウトしてサービスの値段が上がってきていて、よいインフレの傾向になっているといった記事の共有をした。
日本の値上げに構造変化 ストレッチもサービス業だから値上げしてトレーナーさんの給料も上がるとよいですねと。トレーナーさんによると、定期昇給といったものはなく、歩合給はあるもののそれほど大きくなく、給料をあげようと思ったら店長になるといった役職をつけないといけないらしい。あとトレーナーさんのスキルレベルによってお客さんが支払う金額も違う。昇給していくことが見込めないと、若い人しかトレーナーさんはできないのかな？という印象も受けた。スキルの高いプログラマは単価が上がっていくことが社会的に認識されているから将来に不安はないけれど、新しい職業や業態のキャリアモデルを作るのは難しいと思えた。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。
アクセシビリティの話し 以前からはらさんが登壇されるという話しは聞いていた。ちょうど法事で実家に帰っていた日にイベントがあったようだ。
XR やクローラーについて話した次世代 Web カンファレンス A11y セッションが無事終了しました 1:31:00 ぐらいから A11y (Accessibility) のセッションが始まる。はらさんが登壇されているので一通りみた。アクセシビリティわからない人がみてもおもしろかった。
20代、30代、40代の登壇者がいてバランスがよいようにみえた。また全盲の登壇者が A11y について話しているのはかなりの説得力をもっている。多くの人にとってアクセシビリティはあまり関心がない分野であり、プログラマーだけが注意すればよい問題でもないという。プログラマー、デザイナー、組織、エンドユーザーといった、プロダクトに関係するすべての人の認識や意識を調整してアクセシビリティは成り立つ。そして、障害当事者と出会う機会があるということそのものがアクセシビリティを考えることについてのプラスになるのではないかと話していて共感できた。登壇者にとっては、目の不自由な方がスマホをどう使うのかの動画が sns でバズっているのをみて、一般の人たちは (その登壇者にとって当たり前のことを) こんなに驚くのかと驚いたという。
私はフロントエンドの画面の開発に関して、たまに手伝う程度なのでアクセシビリティを意識して作ることはあまりない。しかし、使いにくいものは使いにくいとはっきり言うので、仕様や規格に準拠しているからとか、こういったデザインが流行りだとか、そういった物差しに関係なく意見は言う。登壇者の中にも自分の頭で使いやすい・使いにくいといったことを考えてほしいというメッセージを発していた。
差し入れ 私は出掛けていたので参加する予定はなかったが、ブログJelly Vol.137 に三ノ宮.dev のメンバーが参加しているというのをみかけて差し入れしてきた。若い人はいろいろな経験を積んでどんどん挑戦してほしい。たまたま出先から帰ってきたのが19時前で デパ地下のお寿司 を買いに行った。割引になるのを待っていたら19時を過ぎると20%引きのラベルを付け始めた。それをみて、サーモン詰め合わせ、マグロ鉄火巻、握り盛り合わせの3折箱を購入した。3-4人でつまむ程度の量。20%割引で3395円だったから定価だと4244円となる。これまでは720ml (四合瓶) のお酒をもっていくことが多かった。お土産用の、ちょっとよいお酒だとだいたい3000円前後かな。お寿司の方がやや値がはる。物価も上がっているのにあわせて手土産に使う金額も3000円程度という基準から5000円ぐらいまでは引き上げてもよいかもしれない。
いとうさんのコメント</description><content>&lt;p>0時に寝て3時半に起きて5時半に起きて8時に起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>先週は実家に帰っていて通常とは異なる日程だったのでアラームを解除していた。ストレッチの時間のアラームを聞いてから出掛けていたので危うく遅刻するところだった。&lt;/p>
&lt;p>今日はとくにどこも悪くなくて、可もなく不可もなくといった感じだった。
トレーナーさんによると、冬は寒くて丸くなってしまうせいか背中が硬くなりやすいという。背中のツボをあちこち押されて痛かった。たまたまトレーナーさんと物価の話しをしていて、いま物の値段がピークアウトしてサービスの値段が上がってきていて、よいインフレの傾向になっているといった記事の共有をした。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://note.com/goto_finance/n/nd2587229a2a3">日本の値上げに構造変化&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ストレッチもサービス業だから値上げしてトレーナーさんの給料も上がるとよいですねと。トレーナーさんによると、定期昇給といったものはなく、歩合給はあるもののそれほど大きくなく、給料をあげようと思ったら店長になるといった役職をつけないといけないらしい。あとトレーナーさんのスキルレベルによってお客さんが支払う金額も違う。昇給していくことが見込めないと、若い人しかトレーナーさんはできないのかな？という印象も受けた。スキルの高いプログラマは単価が上がっていくことが社会的に認識されているから将来に不安はないけれど、新しい職業や業態のキャリアモデルを作るのは難しいと思えた。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。&lt;/p>
&lt;h2 id="アクセシビリティの話し">アクセシビリティの話し&lt;/h2>
&lt;p>以前からはらさんが登壇されるという話しは聞いていた。ちょうど法事で実家に帰っていた日にイベントがあったようだ。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kansock.industries/ja/articles/20231222_01/">XR やクローラーについて話した次世代 Web カンファレンス A11y セッションが無事終了しました&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>1:31:00 ぐらいから A11y (Accessibility) のセッションが始まる。はらさんが登壇されているので一通りみた。アクセシビリティわからない人がみてもおもしろかった。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/JSxwRcfJoYU" allowfullscreen title="次世代 Web カンファレンス 2023">&lt;/iframe>
&lt;/div>
&lt;p>20代、30代、40代の登壇者がいてバランスがよいようにみえた。また全盲の登壇者が A11y について話しているのはかなりの説得力をもっている。多くの人にとってアクセシビリティはあまり関心がない分野であり、プログラマーだけが注意すればよい問題でもないという。プログラマー、デザイナー、組織、エンドユーザーといった、プロダクトに関係するすべての人の認識や意識を調整してアクセシビリティは成り立つ。そして、障害当事者と出会う機会があるということそのものがアクセシビリティを考えることについてのプラスになるのではないかと話していて共感できた。登壇者にとっては、目の不自由な方がスマホをどう使うのかの動画が sns でバズっているのをみて、一般の人たちは (その登壇者にとって当たり前のことを) こんなに驚くのかと驚いたという。&lt;/p>
&lt;p>私はフロントエンドの画面の開発に関して、たまに手伝う程度なのでアクセシビリティを意識して作ることはあまりない。しかし、使いにくいものは使いにくいとはっきり言うので、仕様や規格に準拠しているからとか、こういったデザインが流行りだとか、そういった物差しに関係なく意見は言う。登壇者の中にも自分の頭で使いやすい・使いにくいといったことを考えてほしいというメッセージを発していた。&lt;/p>
&lt;h2 id="差し入れ">差し入れ&lt;/h2>
&lt;p>私は出掛けていたので参加する予定はなかったが、&lt;a href="https://www.facebook.com/events/1415020322425147">ブログJelly Vol.137&lt;/a> に三ノ宮.dev のメンバーが参加しているというのをみかけて差し入れしてきた。若い人はいろいろな経験を積んでどんどん挑戦してほしい。たまたま出先から帰ってきたのが19時前で &lt;a href="/diary/diary/posts/2023/0727/#神戸阪急百貨店のデパ地下">デパ地下のお寿司&lt;/a> を買いに行った。割引になるのを待っていたら19時を過ぎると20%引きのラベルを付け始めた。それをみて、サーモン詰め合わせ、マグロ鉄火巻、握り盛り合わせの3折箱を購入した。3-4人でつまむ程度の量。20%割引で3395円だったから定価だと4244円となる。これまでは720ml (四合瓶) のお酒をもっていくことが多かった。お土産用の、ちょっとよいお酒だとだいたい3000円前後かな。お寿司の方がやや値がはる。物価も上がっているのにあわせて手土産に使う金額も3000円程度という基準から5000円ぐらいまでは引き上げてもよいかもしれない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.facebook.com/kanzan10to9/posts/pfbid0SM2VrVpLcFkLDxwsayFVmQStUv2FrCzTxT3wJfB4m8JSxeLq1WouZv5AxpB9TxUgl">いとうさんのコメント&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>マネジメントは変わっていく、変わり続けるもの</title><link>/diary/posts/2023/1222/</link><pubDate>Fri, 22 Dec 2023 08:27:14 +0900</pubDate><guid>/diary/posts/2023/1222/</guid><description>晩ご飯食べて21時頃から横になっていた。なんか寒くてなにもやる気がしない。1時に寝て何度か起きて7時に起きた。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日は議題を準備するのを忘れていて、ふりかえりをしながらフリートークのような雑談をした。
2023年ふりかえり 昨日の 組織論の動画 なども共有しながら課題管理の文脈でマネジメントやリーダーシップの原則として思うことを言語化していた。次のような価値観をメンバーにもってほしい。
常に人間は学ぶ どのポジションの人も、どんな役割でも、人それぞれのペースで学ぶのは当たり前である 組織に学ばない人がいると足を引っ張るようになってしまう 人間は時間とともに成長して変わっていく 同じことを何年もずっとやり続ければよいという時代ではない 成長することでやり方もやることも責任も変わっていく プロジェクトは一期一会 人は学び成長することから同じプロジェクトを再現することは本当の意味でできない そのときそのメンバーで、その知識や習熟度で取り組むプロジェクトはその人の人生において1度しかない 本当の意味でプロジェクトマネジメントに再現性などないし、そのときの状況で最適解を考えて実践しないといけない 知の創造研究部会第63回 知の創造研究部会第63回 に参加した。内容は悪くなかったが、私が関心のあるテーマではなかった。
最初の30分ほど、会そのものの紹介やイベントの宣伝、登壇者の自己紹介が延々と続いて、ちょっと長過ぎてうんざりした。自分たちのことをちゃんと知ってもらった方が内容がわかりやすくなるというのはやや前時代的な考えだと私からは思えた。私がイベントに登壇するとき、ほとんど自己紹介を省いて本題へ入るようにしている。それはおっさんの経歴を多くの聴衆は関心がないというのもあるが、本題を聞きたいのに関係ない話しをされるのを私自身もしんどく思うようになったのがある。映画館で映画をみるとき開始前に他の映画の宣伝が10分ぐらいあるのをうんざりする気持ちと同じ。
知の創造部会 というクローズドな facebook グループがあると聞いたので参加申請した。翌日には承認されていた。今後はイベント情報などをここでチェックすればよいのかもしれない。</description><content>&lt;p>晩ご飯食べて21時頃から横になっていた。なんか寒くてなにもやる気がしない。1時に寝て何度か起きて7時に起きた。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日は議題を準備するのを忘れていて、ふりかえりをしながらフリートークのような雑談をした。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2023/1210/">2023年ふりかえり&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>昨日の &lt;a href="/diary/diary/posts/2023/1221/">組織論の動画&lt;/a> なども共有しながら課題管理の文脈でマネジメントやリーダーシップの原則として思うことを言語化していた。次のような価値観をメンバーにもってほしい。&lt;/p>
&lt;ul>
&lt;li>常に人間は学ぶ
&lt;ul>
&lt;li>どのポジションの人も、どんな役割でも、人それぞれのペースで学ぶのは当たり前である&lt;/li>
&lt;li>組織に学ばない人がいると足を引っ張るようになってしまう&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>人間は時間とともに成長して変わっていく
&lt;ul>
&lt;li>同じことを何年もずっとやり続ければよいという時代ではない&lt;/li>
&lt;li>成長することでやり方もやることも責任も変わっていく&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プロジェクトは一期一会
&lt;ul>
&lt;li>人は学び成長することから同じプロジェクトを再現することは本当の意味でできない&lt;/li>
&lt;li>そのときそのメンバーで、その知識や習熟度で取り組むプロジェクトはその人の人生において1度しかない&lt;/li>
&lt;li>本当の意味でプロジェクトマネジメントに再現性などないし、そのときの状況で最適解を考えて実践しないといけない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="知の創造研究部会第63回">知の創造研究部会第63回&lt;/h2>
&lt;p>&lt;a href="https://kmsj20231222.peatix.com/">知の創造研究部会第63回&lt;/a> に参加した。内容は悪くなかったが、私が関心のあるテーマではなかった。&lt;/p>
&lt;p>最初の30分ほど、会そのものの紹介やイベントの宣伝、登壇者の自己紹介が延々と続いて、ちょっと長過ぎてうんざりした。自分たちのことをちゃんと知ってもらった方が内容がわかりやすくなるというのはやや前時代的な考えだと私からは思えた。私がイベントに登壇するとき、ほとんど自己紹介を省いて本題へ入るようにしている。それはおっさんの経歴を多くの聴衆は関心がないというのもあるが、本題を聞きたいのに関係ない話しをされるのを私自身もしんどく思うようになったのがある。映画館で映画をみるとき開始前に他の映画の宣伝が10分ぐらいあるのをうんざりする気持ちと同じ。&lt;/p>
&lt;p>&lt;a href="https://www.facebook.com/groups/204376119725736">知の創造部会&lt;/a> というクローズドな facebook グループがあると聞いたので参加申請した。翌日には承認されていた。今後はイベント情報などをここでチェックすればよいのかもしれない。&lt;/p></content></item><item><title>うまくいかなくなった組織を立て直す難しさ</title><link>/diary/posts/2023/1221/</link><pubDate>Thu, 21 Dec 2023 09:18:36 +0900</pubDate><guid>/diary/posts/2023/1221/</guid><description>2時に寝て4時半に起きて7時半に起きた。昨日のオンラインイベントの後に課題管理についての質問を受けたらいろいろ調べ始めてしまって帰るのが遅くなった。
組織論のあれこれと元凶 たまたま教えてもらってみたらおもしろかった。私もこの歳までに10社以上の組織をみてきたことから、組織の問題、あるいは組織であるがゆえに避けられない問題があることは理解できるし、自分の経験則でもダメな組織の特徴などいくつも思いつく。だいたい知っている内容ではあったけれども、若いのに書籍や論文を研究して、そういう現象にこういった名前がついているというのを言語化してくれていることは知識を共有する上で大事なことでもある。そこまでは知らなかったのでとても参考になる。
私が思う解決策の1つに役職や地位が固定化されないような組織設計というのがある。「権力は腐敗する」 という言葉がある。権力を維持したまま、いまの人間社会でこれを避ける方法はないと私は考えている。どんな優秀な人であっても。上司も役員も社長でさえも、定期的に入れ替わる。どんなに成果をあげても優秀であっても一定期間以上とどまれない。そういう新陳代謝がいいんじゃないかと思う。実際にティール組織やホラクラシーといった組織形態はこの解決策を実現している。
動画の中で、心理的安全性の誤った解釈の文脈で組織がなぁなぁになっている世の中の流れがあって、私もずっと思っていたことの1つに自己肯定感を高めるのがよいというのは本当か？という問い。たしかに過去の行き過ぎたハラスメントは意味がないものではあったのは理解するが、できない人を然るべき内容で叱らないのもどうかという思いは私の中にもあった。坂井さんによると、自己肯定感が本当によいのかどうかという成果も怪しいという。
成果が出ていない人に対して自尊心を高めると、逆に成果が悪くなったり、他者へ横柄になったりする。
直感的に当たり前の話しだと思う。できない人を特別扱いする必要はない。そして、坂井さんは流行りのキーワードにとらわれず、自分たちの組織では本当にそうなのか？具体的で地に足の着いた制度や施策を見極めるべきだ、ちゃんと自分たちで考えましょうといったメッセージを発信していた。これは課題管理の文脈でも私もメンバーに常々言っている。自分たちのやり方にあうかどうかを考えるのが大事だ。
一方でうまくいっていない組織を立て直すのはとても難しい。それは組織のマネジメントというのは、上位の意思決定者、役員であったり部課長であったり、幹部社員の影響力がとても大きいため、うまくいっていないことを認めることそのものが役員や幹部社員へのダメ出しとなる。私もお手伝いをしていて、本質を追究すると経営陣への批判になってしまうため、お茶を濁すときもある。もちろん重要なことで言うべきところは言うが、それほど重要ではないところはお茶を濁してしまう。それは人間関係もあるし、取引関係もあるし、誰だって嫌な人になりたくないし、厳しいことも言いたくない。外部の人間ですら怯むところがあるのに、同じ会社の上下関係や人間関係ではもっと言いにくいことはあるだろうというのは容易に察することができる。優秀な若手が会社を去るのは至って自然だし、もっと言うと年配の人たちも若い人にポジションを譲って会社を去らないといけない。1つの会社で5-10年働くのはとても難しい時代にきているのだと私は思う。</description><content>&lt;p>2時に寝て4時半に起きて7時半に起きた。昨日のオンラインイベントの後に課題管理についての質問を受けたらいろいろ調べ始めてしまって帰るのが遅くなった。&lt;/p>
&lt;h2 id="組織論のあれこれと元凶">組織論のあれこれと元凶&lt;/h2>
&lt;p>たまたま教えてもらってみたらおもしろかった。私もこの歳までに10社以上の組織をみてきたことから、組織の問題、あるいは組織であるがゆえに避けられない問題があることは理解できるし、自分の経験則でもダメな組織の特徴などいくつも思いつく。だいたい知っている内容ではあったけれども、若いのに書籍や論文を研究して、そういう現象にこういった名前がついているというのを言語化してくれていることは知識を共有する上で大事なことでもある。そこまでは知らなかったのでとても参考になる。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/W_b2vp19nWA" allowfullscreen title="【組織崩壊のメカニズム】元DeNA人材育成責任者が日本のマネジメントに警鐘／大企業・メガベンチャーに共通する凡庸化すごろく／優秀なリーダーはこうして潰される【MANAGEMENT SKILL SET】">&lt;/iframe>
&lt;/div>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/1DKaP396Ybg" allowfullscreen title="【最も危険な上司はこの2種類】“かっこつけシャドーボクサー”と“承認欲求サンドバッグ”に気をつけろ／リクルートの「お前はどうしたい？」にまつわる誤解【MANAGEMENT SKILL SET】">&lt;/iframe>
&lt;/div>
&lt;p>私が思う解決策の1つに役職や地位が固定化されないような組織設計というのがある。&lt;strong>「権力は腐敗する」&lt;/strong> という言葉がある。権力を維持したまま、いまの人間社会でこれを避ける方法はないと私は考えている。どんな優秀な人であっても。上司も役員も社長でさえも、定期的に入れ替わる。どんなに成果をあげても優秀であっても一定期間以上とどまれない。そういう新陳代謝がいいんじゃないかと思う。実際にティール組織やホラクラシーといった組織形態はこの解決策を実現している。&lt;/p>
&lt;p>動画の中で、心理的安全性の誤った解釈の文脈で組織がなぁなぁになっている世の中の流れがあって、私もずっと思っていたことの1つに自己肯定感を高めるのがよいというのは本当か？という問い。たしかに過去の行き過ぎたハラスメントは意味がないものではあったのは理解するが、できない人を然るべき内容で叱らないのもどうかという思いは私の中にもあった。坂井さんによると、自己肯定感が本当によいのかどうかという成果も怪しいという。&lt;/p>
&lt;blockquote>
&lt;p>成果が出ていない人に対して自尊心を高めると、逆に成果が悪くなったり、他者へ横柄になったりする。&lt;/p>
&lt;/blockquote>
&lt;p>直感的に当たり前の話しだと思う。できない人を特別扱いする必要はない。そして、坂井さんは流行りのキーワードにとらわれず、自分たちの組織では本当にそうなのか？具体的で地に足の着いた制度や施策を見極めるべきだ、ちゃんと自分たちで考えましょうといったメッセージを発信していた。これは課題管理の文脈でも私もメンバーに常々言っている。自分たちのやり方にあうかどうかを考えるのが大事だ。&lt;/p>
&lt;p>一方でうまくいっていない組織を立て直すのはとても難しい。それは組織のマネジメントというのは、上位の意思決定者、役員であったり部課長であったり、幹部社員の影響力がとても大きいため、うまくいっていないことを認めることそのものが役員や幹部社員へのダメ出しとなる。私もお手伝いをしていて、本質を追究すると経営陣への批判になってしまうため、お茶を濁すときもある。もちろん重要なことで言うべきところは言うが、それほど重要ではないところはお茶を濁してしまう。それは人間関係もあるし、取引関係もあるし、誰だって嫌な人になりたくないし、厳しいことも言いたくない。外部の人間ですら怯むところがあるのに、同じ会社の上下関係や人間関係ではもっと言いにくいことはあるだろうというのは容易に察することができる。優秀な若手が会社を去るのは至って自然だし、もっと言うと年配の人たちも若い人にポジションを譲って会社を去らないといけない。1つの会社で5-10年働くのはとても難しい時代にきているのだと私は思う。&lt;/p></content></item><item><title>リリースの延期</title><link>/diary/posts/2023/1220/</link><pubDate>Wed, 20 Dec 2023 09:32:58 +0900</pubDate><guid>/diary/posts/2023/1220/</guid><description>なんか疲れていて帰ってきて晩ご飯食べたらすぐに横になってた。0時に寝て5時半に起きて7時に起きた。
プロジェクトのスケジュール調整 先週からお手伝い先の経営陣には一報を入れてあったのだけど、お昼にメンバーと 1on1 してスケジュール的に厳しそうという再確認をして正式にいまの開発スケジュールに対して1マイルストーン (2週間) を延期することに決めた。先週の時点で残タスクの状況と進捗をみていて厳しそうだとは私の視点からもみえていて、ある意味の予定調和ではある。いまの開発は昔のように残業したり休出したりしないため、遅れていることがわかった時点でできることは機能を減らすか、期日を延期するかの2択しかない。今回は内容的に機能を減らすことはやりにくいため、延期するという施策しか私には打ち手がなかった。
原因としてもっとも大きいことの1つは 新規メンバーが3ヶ月間なにもしなかった ことであり、新規メンバー向けに用意した開発機能を既存メンバーで吸収しきれなかったことになる。既存メンバーに責任があるわけではなく、私がもう少し速く決断できなかったことの影響がこの遅延につながったというものではある。これはまた開発の大きなふりかえりの中でチームで議論したいと思う。
コワーキングのオンラインイベント 月例のカフーツさんのオンラインイベントに参加した。前回の所感はここ 。今回は「今年よかったこと、来年やりたいこと」をそれぞれに発表する会になった。私は先日作成した 2023年ふりかえりスライド を参加者に共有して説明した。
よかったこと: 課題管理の PoC を実務の開発で実践して成果が出ている 来年やりたいこと: 実家の離れにコワーキングスペースを作る 参加者みんなが農業に関心をもっていて、IT x 農業という取り組みで新しい挑戦をすることに関心を示す人は多い。これは三ノ宮.dev においても同様で農業に関心をもっている人は多い。農業をビジネスにするのはとても難しいし、大変なことだと私は認識しているが、別にビジネスにならなくてもコミュニティ活動の一環やライフワークの1つとして、仲間たちと価値観を共有するための触媒もしくは土壌としてよさそうに考えている。いまのお手伝いのお仕事を終了したら、来年はいとうさんと一緒にコワーキング + 農業でうまく運営している先行事例を視察に行って、それらを研究して、なにかしら新しいことに取り組んでいきたいと思う。</description><content>&lt;p>なんか疲れていて帰ってきて晩ご飯食べたらすぐに横になってた。0時に寝て5時半に起きて7時に起きた。&lt;/p>
&lt;h2 id="プロジェクトのスケジュール調整">プロジェクトのスケジュール調整&lt;/h2>
&lt;p>先週からお手伝い先の経営陣には一報を入れてあったのだけど、お昼にメンバーと 1on1 してスケジュール的に厳しそうという再確認をして正式にいまの開発スケジュールに対して1マイルストーン (2週間) を延期することに決めた。先週の時点で残タスクの状況と進捗をみていて厳しそうだとは私の視点からもみえていて、ある意味の予定調和ではある。いまの開発は昔のように残業したり休出したりしないため、遅れていることがわかった時点でできることは機能を減らすか、期日を延期するかの2択しかない。今回は内容的に機能を減らすことはやりにくいため、延期するという施策しか私には打ち手がなかった。&lt;/p>
&lt;p>原因としてもっとも大きいことの1つは &lt;a href="/diary/diary/posts/2023/1128/#マイルストーン定例">新規メンバーが3ヶ月間なにもしなかった&lt;/a> ことであり、新規メンバー向けに用意した開発機能を既存メンバーで吸収しきれなかったことになる。既存メンバーに責任があるわけではなく、私がもう少し速く決断できなかったことの影響がこの遅延につながったというものではある。これはまた開発の大きなふりかえりの中でチームで議論したいと思う。&lt;/p>
&lt;h2 id="コワーキングのオンラインイベント">コワーキングのオンラインイベント&lt;/h2>
&lt;p>月例のカフーツさんのオンラインイベントに参加した。&lt;a href="/diary/diary/posts/2023/1115/#コワーキングのオンラインイベント">前回の所感はここ&lt;/a> 。今回は「今年よかったこと、来年やりたいこと」をそれぞれに発表する会になった。私は先日作成した &lt;a href="/diary/diary/posts/2023/1210/">2023年ふりかえりスライド&lt;/a> を参加者に共有して説明した。&lt;/p>
&lt;ul>
&lt;li>よかったこと: 課題管理の PoC を実務の開発で実践して成果が出ている&lt;/li>
&lt;li>来年やりたいこと: 実家の離れにコワーキングスペースを作る&lt;/li>
&lt;/ul>
&lt;p>参加者みんなが農業に関心をもっていて、IT x 農業という取り組みで新しい挑戦をすることに関心を示す人は多い。これは三ノ宮.dev においても同様で農業に関心をもっている人は多い。農業をビジネスにするのはとても難しいし、大変なことだと私は認識しているが、別にビジネスにならなくてもコミュニティ活動の一環やライフワークの1つとして、仲間たちと価値観を共有するための触媒もしくは土壌としてよさそうに考えている。いまのお手伝いのお仕事を終了したら、来年はいとうさんと一緒にコワーキング + 農業でうまく運営している先行事例を視察に行って、それらを研究して、なにかしら新しいことに取り組んでいきたいと思う。&lt;/p></content></item><item><title>結合テストのデバッグ</title><link>/diary/posts/2023/1219/</link><pubDate>Tue, 19 Dec 2023 08:56:57 +0900</pubDate><guid>/diary/posts/2023/1219/</guid><description>1時に寝て5時半に起きて7時半に起きた。なんか週の前半からバテている。
gitlab ci/cd の dind で mongodb のレプリカセット接続ができない 先日対応した mongodb のレプリカセット対応 で残った最後の課題。ローカルで実行すれば結合テストは動くが、gitlab ci/cd 環境では動作しないという問題が残っていた。gitlab-runner をローカルで実行できる ようにして、設定やパラメーターを変えたり、デバッグコードを埋め込んだり、コンテナに attach して振る舞いを確認したり、いろいろデバッグして原因はレプリカセット接続におけるホスト名の解決がコンテナ間でできていなかったことがわかった。
mongodb の結合テストは dockertest を使って実装している。これを gitlab ci/cd で動かすには dind を有効にする必要がある。dind 環境では2つのコンテナを使って結合テストが実行されるわけだが、テストが実行されるコンテナと mongodb コンテナが起動するコンテナの2つが生成される。このときにテストが実行されるコンテナから実際に mongodb が起動するコンテナのホスト名の解決と、mongodb が起動するコンテナ上での自分のホスト名の解決の2つが成立していないとレプリカセット接続ができない。要は1台のローカルホスト上で結合テストを実行するのと、2つのコンテナ上で実行されるのでは設定を変更する必要があるということに気付いた。
具体的には dockertest の次のパラメーターを、実行環境から解決するホスト名を考慮して設定すればよいと気付いた。
pool.RunWithOptions(&amp;amp;dockertest.RunOptions{ ... Hostname: executor, Env: []string{ ... fmt.Sprintf(&amp;#34;MONGODB_ADVERTISED_HOSTNAME=%s&amp;#34;, executor), ... } }) たったこれだけの修正だし、現状の動作の振る舞いが分かればすぐに直せるものではあるけれど、このデバッグにはまた2-3時間を費やした。mongodb のレプリカセット接続はなかなか大変。</description><content>&lt;p>1時に寝て5時半に起きて7時半に起きた。なんか週の前半からバテている。&lt;/p>
&lt;h2 id="gitlab-cicd-の-dind-で-mongodb-のレプリカセット接続ができない">gitlab ci/cd の dind で mongodb のレプリカセット接続ができない&lt;/h2>
&lt;p>先日対応した &lt;a href="/diary/diary/posts/2023/1214/">mongodb のレプリカセット対応&lt;/a> で残った最後の課題。ローカルで実行すれば結合テストは動くが、gitlab ci/cd 環境では動作しないという問題が残っていた。&lt;a href="/diary/diary/posts/2023/1218/">gitlab-runner をローカルで実行できる&lt;/a> ようにして、設定やパラメーターを変えたり、デバッグコードを埋め込んだり、コンテナに attach して振る舞いを確認したり、いろいろデバッグして原因はレプリカセット接続におけるホスト名の解決がコンテナ間でできていなかったことがわかった。&lt;/p>
&lt;p>mongodb の結合テストは &lt;a href="https://github.com/ory/dockertest">dockertest&lt;/a> を使って実装している。これを gitlab ci/cd で動かすには dind を有効にする必要がある。dind 環境では2つのコンテナを使って結合テストが実行されるわけだが、テストが実行されるコンテナと mongodb コンテナが起動するコンテナの2つが生成される。このときにテストが実行されるコンテナから実際に mongodb が起動するコンテナのホスト名の解決と、mongodb が起動するコンテナ上での自分のホスト名の解決の2つが成立していないとレプリカセット接続ができない。要は1台のローカルホスト上で結合テストを実行するのと、2つのコンテナ上で実行されるのでは設定を変更する必要があるということに気付いた。&lt;/p>
&lt;p>具体的には dockertest の次のパラメーターを、実行環境から解決するホスト名を考慮して設定すればよいと気付いた。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">pool&lt;/span>.&lt;span style="color:#a6e22e">RunWithOptions&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">dockertest&lt;/span>.&lt;span style="color:#a6e22e">RunOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Hostname&lt;/span>: &lt;span style="color:#a6e22e">executor&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Env&lt;/span>: []&lt;span style="color:#66d9ef">string&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Sprintf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MONGODB_ADVERTISED_HOSTNAME=%s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">executor&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>たったこれだけの修正だし、現状の動作の振る舞いが分かればすぐに直せるものではあるけれど、このデバッグにはまた2-3時間を費やした。mongodb のレプリカセット接続はなかなか大変。&lt;/p></content></item><item><title>gitlab ci/cd のローカルデバッグ</title><link>/diary/posts/2023/1218/</link><pubDate>Mon, 18 Dec 2023 19:14:44 +0900</pubDate><guid>/diary/posts/2023/1218/</guid><description>23時頃から寝始めて3時に起きて5時半に起きて8時過ぎに起きた。久しぶりに寝坊した。
gitlab-runner のデバッグ mongodb のレプリカセット対応して、ローカルでは結合テストが動くものの、gitlab ci/cd 環境では動かなくなった。gitlab ci/cd は GitLab Runner によって提供されている。そのデバッグのため、ローカルに gitlab-runner をインストールして調査した。
GitLab Runner のインストール ドキュメントにそれぞれの OS 向けのドキュメントがある。Debian/Ubuntu/Mint 向けのインストール手順を行う。
$ curl -L &amp;#34;https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh&amp;#34; | sudo bash $ sudo apt-get install gitlab-runner $ gitlab-runner --version Version: 16.6.1 Git revision: f5da3c5a Git branch: 16-6-stable GO version: go1.20.10 Built: 2023-11-24T21:11:36+0000 OS/Arch: linux/amd64 .gitlab-ci.yml があるディレクトリへ移動して、ジョブを指定して実行する。ローカルでの変更内容を検証するときはブランチにコミットしないといけない。コミットしていないと次のワーニングが表示される。
WARNING: You most probably have uncommitted changes. WARNING: These changes will not be tested. dind なジョブを実行するときは --docker-privileged で特権を付けて実行する。環境変数は --env KEY=VALUE で渡せるが、CI_JOB_TOKEN のような組み込みの環境変数は上書きできない。</description><content>&lt;p>23時頃から寝始めて3時に起きて5時半に起きて8時過ぎに起きた。久しぶりに寝坊した。&lt;/p>
&lt;h2 id="gitlab-runner-のデバッグ">gitlab-runner のデバッグ&lt;/h2>
&lt;p>mongodb のレプリカセット対応して、ローカルでは結合テストが動くものの、gitlab ci/cd 環境では動かなくなった。gitlab ci/cd は &lt;a href="https://docs.gitlab.com/runner/">GitLab Runner&lt;/a> によって提供されている。そのデバッグのため、ローカルに gitlab-runner をインストールして調査した。&lt;/p>
&lt;p>&lt;a href="https://docs.gitlab.com/runner/install/">GitLab Runner のインストール&lt;/a> ドキュメントにそれぞれの OS 向けのドキュメントがある。Debian/Ubuntu/Mint 向けのインストール手順を行う。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -L &lt;span style="color:#e6db74">&amp;#34;https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh&amp;#34;&lt;/span> | sudo bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt-get install gitlab-runner
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gitlab-runner --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Version: 16.6.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Git revision: f5da3c5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Git branch: 16-6-stable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GO version: go1.20.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Built: 2023-11-24T21:11:36+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OS/Arch: linux/amd64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>.gitlab-ci.yml があるディレクトリへ移動して、ジョブを指定して実行する。ローカルでの変更内容を検証するときはブランチにコミットしないといけない。コミットしていないと次のワーニングが表示される。&lt;/p>
&lt;pre tabindex="0">&lt;code>WARNING: You most probably have uncommitted changes.
WARNING: These changes will not be tested.
&lt;/code>&lt;/pre>&lt;p>dind なジョブを実行するときは &lt;code>--docker-privileged&lt;/code> で特権を付けて実行する。環境変数は &lt;code>--env KEY=VALUE&lt;/code> で渡せるが、&lt;code>CI_JOB_TOKEN&lt;/code> のような組み込みの環境変数は上書きできない。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cd path/to/repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ gitlab-runner exec docker --docker-privileged &lt;span style="color:#e6db74">${&lt;/span>ジョブ名&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>田んぼ休暇</title><link>/diary/posts/2023/1217/</link><pubDate>Sun, 17 Dec 2023 20:14:37 +0900</pubDate><guid>/diary/posts/2023/1217/</guid><description>1時に寝て5時半に起きてだらだらしてゲームをちょっとやって7時半に起きた。なぜか分からないけど、実家で寝ると普段3時間ぐらいしか睡眠できないのが4-5時間に伸びる。気圧？空気？土地の守りみたいなもん？夕方には神戸に戻ってきていたが、寒さで凍えたのもあってそれから作業する元気がなかった。
田んぼ 8時からトラクターで田んぼを耕す。昨日は暖かったのに一晩寝たら急に冷え込んだ。うちのトラクターは旧式なのでエアコンはついてなく、風を遮るものもないので風の強い気温の低い日はめっちゃ寒い。3時間ほど耕して畝を作った。写真は撮り忘れた。今回耕したところの畑は高低差ができてしまってよく耕せるところとそうじゃないところができて、あまりうまく耕せなかった。いずれ平坦にならさないといけない。
田んぼを終えてから近所の観光客向けの食堂でぶり丼を食べた。これで1,250円とやや割高ではあるけれど、ぶりの刺身は新鮮で質のよく、久しぶりにおいしいお刺身を食べた。若い子にとっては量が物足りないかも？だが、中年にとってはこのぐらいの量でちょうどよい。
スマートキーの電池交換 車のメーターパネルにスマートキーの電池残量低下という案内が出るようになった。調べてみると、スマートキーは常に電波を放出しているので短くて1年、長くても2年で電池が切れるという。ちょうどいま1年近く乗ったところなのでうちのスマートキーは1年程度で電池が切れるようだ。電池が切れたら車に乗れないのかな？と調べてみたらそうでもなくて、スマートキーに内蔵キーと呼ばれる物理キーも用意されていてそれでドアの施錠の開閉ができて、さらにエンジンのスタートも電池が切れていてもできる仕組みになっているそうな。そりゃそうか。電池切れる度に車に乗れなくなっていたら世の中もっと混沌としている。
Hondaスマートキー Hondaスマートキーの取り扱いと電池交換 ストレッチ 土日は実家に帰っていたので日曜日の夜にストレッチを受ける。土日に車で実家との往復をすると腰に負荷がかかる。さらに田んぼを耕すためにトラクターに数時間座って操作しているのでさらに追加で負荷がかかる。その目論見の通り、トレーナーさんの言葉からも、自他ともに今日は腰がもっとも疲弊していた。今日の開脚幅は開始前152cmで、ストレッチ後156cmだった。ストレッチ後に晩ご飯食べてからオフィスで作業するつもりが、外が寒くて出掛けるの億劫になってそのまま家でだらだらしていた。</description><content>&lt;p>1時に寝て5時半に起きてだらだらしてゲームをちょっとやって7時半に起きた。なぜか分からないけど、実家で寝ると普段3時間ぐらいしか睡眠できないのが4-5時間に伸びる。気圧？空気？土地の守りみたいなもん？夕方には神戸に戻ってきていたが、寒さで凍えたのもあってそれから作業する元気がなかった。&lt;/p>
&lt;h2 id="田んぼ">田んぼ&lt;/h2>
&lt;p>8時からトラクターで田んぼを耕す。昨日は暖かったのに一晩寝たら急に冷え込んだ。うちのトラクターは旧式なのでエアコンはついてなく、風を遮るものもないので風の強い気温の低い日はめっちゃ寒い。3時間ほど耕して畝を作った。写真は撮り忘れた。今回耕したところの畑は高低差ができてしまってよく耕せるところとそうじゃないところができて、あまりうまく耕せなかった。いずれ平坦にならさないといけない。&lt;/p>
&lt;p>田んぼを終えてから近所の観光客向けの食堂でぶり丼を食べた。これで1,250円とやや割高ではあるけれど、ぶりの刺身は新鮮で質のよく、久しぶりにおいしいお刺身を食べた。若い子にとっては量が物足りないかも？だが、中年にとってはこのぐらいの量でちょうどよい。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1217_buri-don.jpeg"/>
&lt;/figure>
&lt;h2 id="スマートキーの電池交換">スマートキーの電池交換&lt;/h2>
&lt;p>車のメーターパネルにスマートキーの電池残量低下という案内が出るようになった。調べてみると、スマートキーは常に電波を放出しているので短くて1年、長くても2年で電池が切れるという。ちょうどいま1年近く乗ったところなのでうちのスマートキーは1年程度で電池が切れるようだ。電池が切れたら車に乗れないのかな？と調べてみたらそうでもなくて、スマートキーに内蔵キーと呼ばれる物理キーも用意されていてそれでドアの施錠の開閉ができて、さらにエンジンのスタートも電池が切れていてもできる仕組みになっているそうな。そりゃそうか。電池切れる度に車に乗れなくなっていたら世の中もっと混沌としている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.honda.co.jp/ownersmanual/webom/jpn/fit/2020/details/136179090-4423.html">Hondaスマートキー&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.honda.co.jp/ownersmanual/webom/jpn/fit/2020/details/136179090-14211.html">Hondaスマートキーの取り扱いと電池交換&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>土日は実家に帰っていたので日曜日の夜にストレッチを受ける。土日に車で実家との往復をすると腰に負荷がかかる。さらに田んぼを耕すためにトラクターに数時間座って操作しているのでさらに追加で負荷がかかる。その目論見の通り、トレーナーさんの言葉からも、自他ともに今日は腰がもっとも疲弊していた。今日の開脚幅は開始前152cmで、ストレッチ後156cmだった。ストレッチ後に晩ご飯食べてからオフィスで作業するつもりが、外が寒くて出掛けるの億劫になってそのまま家でだらだらしていた。&lt;/p></content></item><item><title>一回忌</title><link>/diary/posts/2023/1216/</link><pubDate>Sat, 16 Dec 2023 18:10:31 +0900</pubDate><guid>/diary/posts/2023/1216/</guid><description>1時に寝て3時過ぎに起きた。あまり眠れないことのメリットとして普通に寝ても2-3時間で目が覚めるのだから朝早くに出掛けるときの寝坊リスクが減る。起きてから準備をして5時半過ぎには神戸を出て7時前には実家に着いた。6時半ぐらいまでは外は暗く、朝なのに暗い道を帰ることになった。
夜は寝て朝に出掛ける 車があるのでいつでも帰れるのだが、最近は夜に帰るよりも朝に帰ることの方が多い。平日の夜はあまり時間がない。18-19時にお手伝い先のお仕事を終え、晩ご飯を食べ、次に自社のお仕事をしたり日記を書いたりしていると21-23時ぐらいになる。それから準備して帰るのは疲れていてやる気がしない。その日たくさん働いたーと思って帰ってきたらもう何もやる気はなくて、漫画読んだりアニメみたりゲームしてそのまま寝るというのが日常。翌日の出発準備すらやらない。
寝て起きたらまた新しい1日が始まるのですべてがリセットされる。この日常の生活のリズムを大きく崩さないという意図でも、朝起きてから行動するのが性にあう。
一回忌 この前は 初盆 だった。
10時から住職に来ていただいてお経をあげていただく。今日は住職の斜め後ろに座ったので住職の様子を観察していた。お経をあげているときに折本をめくりながらお経を唱えている。あまり折本をみているようにはみえないが、進捗にあわせて折本をめくっていることに気付いた。いつも通り、住職にお経をあげてもらい、その後、出席者も真言の折本をみながら一緒に唱える。折本は裏表あるので、表面が終わったときにもう終わりかな？と油断していると、裏面のお経が始まるので初心者はちょっと驚くかもしれない。今日もってこられた真言の折本はいつもと違うものだった。
終わってから住職の法話を聞く。1年過ぎるのが早いといった趣旨でお話をされた。実は住職の父親の命日と父の命日は1日違いになる。住職にとっても近いうちに一回忌があるらしい。その想いも含めて話されていたのだろう。この人はこういう人だと型にはめて決めつけで話すことは多いが、人の本性のようなものを1つの側面から語ることは難しくて、さまざまな側面があることに、亡くなっていなくなってから気付くことも多いという。亡くなって1年たって、こんな人だったという輪郭もぼやけてきて、いろんな側面をもった人だという解釈でいいのではないかといった話だったような気がする。そして、1年経って、この場に来られた出席者の縁、来られなかった人たちの縁、いろんな縁があると話されていた。12月に会う人はみんな口癖のように1年が早かったと私の周りではいう。私もまたまったく同じ感覚で、この1年はなにをしていたか思い出せないぐらいに1年が足早に過ぎていく。幸い、いまは日記を書いているので過去の書いたものを読み返せばこんなことをやっていたなと思い出すきっかけにはなる。そうやってコンテンツを積み重ねることがいつかなにかの役に立つことも知っている。
11時から近所の和食料理屋さんに移動して法要の食事とする。だいたいいつも2時間ぐらいで早めに始めると13時に終わって、休日を潰すといったこともなくてよいと思う。
前日に出席者の1人が来られ、腰を痛められて法事に参加できそうにないということだった。直前にキャンセルになってしまったので料理屋さんに電話して、お代は支払うが持ち帰れるお膳を作ってもらえないかと相談したら、立派な法要箱膳をこしらえてくれた。普通のお弁当のようなものを想定していたらその4倍ぐらいあるような箱膳にしてくれて、よい意味で期待を上回るものだった。お食事を解散してからその足で親戚の家に訪問して手渡ししてきた。</description><content>&lt;p>1時に寝て3時過ぎに起きた。あまり眠れないことのメリットとして普通に寝ても2-3時間で目が覚めるのだから朝早くに出掛けるときの寝坊リスクが減る。起きてから準備をして5時半過ぎには神戸を出て7時前には実家に着いた。6時半ぐらいまでは外は暗く、朝なのに暗い道を帰ることになった。&lt;/p>
&lt;h2 id="夜は寝て朝に出掛ける">夜は寝て朝に出掛ける&lt;/h2>
&lt;p>車があるのでいつでも帰れるのだが、最近は夜に帰るよりも朝に帰ることの方が多い。平日の夜はあまり時間がない。18-19時にお手伝い先のお仕事を終え、晩ご飯を食べ、次に自社のお仕事をしたり日記を書いたりしていると21-23時ぐらいになる。それから準備して帰るのは疲れていてやる気がしない。その日たくさん働いたーと思って帰ってきたらもう何もやる気はなくて、漫画読んだりアニメみたりゲームしてそのまま寝るというのが日常。翌日の出発準備すらやらない。&lt;/p>
&lt;p>寝て起きたらまた新しい1日が始まるのですべてがリセットされる。この日常の生活のリズムを大きく崩さないという意図でも、朝起きてから行動するのが性にあう。&lt;/p>
&lt;h2 id="一回忌">一回忌&lt;/h2>
&lt;p>この前は &lt;a href="/diary/diary/posts/2023/0730/">初盆&lt;/a> だった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1216_hoyo1.jpg"/>
&lt;/figure>
&lt;p>10時から住職に来ていただいてお経をあげていただく。今日は住職の斜め後ろに座ったので住職の様子を観察していた。お経をあげているときに折本をめくりながらお経を唱えている。あまり折本をみているようにはみえないが、進捗にあわせて折本をめくっていることに気付いた。いつも通り、住職にお経をあげてもらい、その後、出席者も真言の折本をみながら一緒に唱える。折本は裏表あるので、表面が終わったときにもう終わりかな？と油断していると、裏面のお経が始まるので初心者はちょっと驚くかもしれない。今日もってこられた真言の折本はいつもと違うものだった。&lt;/p>
&lt;p>終わってから住職の法話を聞く。1年過ぎるのが早いといった趣旨でお話をされた。実は住職の父親の命日と父の命日は1日違いになる。住職にとっても近いうちに一回忌があるらしい。その想いも含めて話されていたのだろう。この人はこういう人だと型にはめて決めつけで話すことは多いが、人の本性のようなものを1つの側面から語ることは難しくて、さまざまな側面があることに、亡くなっていなくなってから気付くことも多いという。亡くなって1年たって、こんな人だったという輪郭もぼやけてきて、いろんな側面をもった人だという解釈でいいのではないかといった話だったような気がする。そして、1年経って、この場に来られた出席者の縁、来られなかった人たちの縁、いろんな縁があると話されていた。12月に会う人はみんな口癖のように1年が早かったと私の周りではいう。私もまたまったく同じ感覚で、この1年はなにをしていたか思い出せないぐらいに1年が足早に過ぎていく。幸い、いまは日記を書いているので過去の書いたものを読み返せばこんなことをやっていたなと思い出すきっかけにはなる。そうやってコンテンツを積み重ねることがいつかなにかの役に立つことも知っている。&lt;/p>
&lt;p>11時から近所の和食料理屋さんに移動して法要の食事とする。だいたいいつも2時間ぐらいで早めに始めると13時に終わって、休日を潰すといったこともなくてよいと思う。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1216_hoyo2.jpg"/>
&lt;/figure>
&lt;p>前日に出席者の1人が来られ、腰を痛められて法事に参加できそうにないということだった。直前にキャンセルになってしまったので料理屋さんに電話して、お代は支払うが持ち帰れるお膳を作ってもらえないかと相談したら、立派な法要箱膳をこしらえてくれた。普通のお弁当のようなものを想定していたらその4倍ぐらいあるような箱膳にしてくれて、よい意味で期待を上回るものだった。お食事を解散してからその足で親戚の家に訪問して手渡ししてきた。&lt;/p></content></item><item><title>おいしい 🦀 を食べに行く</title><link>/diary/posts/2023/1215/</link><pubDate>Fri, 15 Dec 2023 08:34:04 +0900</pubDate><guid>/diary/posts/2023/1215/</guid><description>22時頃に寝てしまって1時に起きて5時に起きて6時過ぎに起きた。とくになにもしていないのにバテている気がする。今週はずっと mongodb のレプリカセットの調査やインフラの移行作業などをやっていたせいか、普段よりもエネルギーを消費しているのかもしれない。朝から疲労困憊でオフィスへ向かった。
docker のコンテナネットワークの調査 docker のコンテナネットワークから解決できる名前がなになのか、よくわかってなくて、その調査のためにサンプルの compose サービスを作った。
https://github.com/t2y/docker-compose-sample myimage から nginx のコンテナの名前解決がどうなるかを試してみる。
c67a5ca94a77:/app# dig +short 00c719491558 192.168.240.3 c67a5ca94a77:/app# dig +short mynginx 192.168.240.3 c67a5ca94a77:/app# dig +short nginx 192.168.240.3 c67a5ca94a77:/app# dig +short yournginx 192.168.240.3 基本的にはサービス名、コンテナ名 (container_name)、コンテナー ID、ホスト名 (hostname) はすべて名前解決できる。hostname があるときはそのコンテナの /etc/hosts にその名前が追加され、ないときはコンテナ ID が追加されていた。
yourcontainer:/app# cat /etc/hosts 127.0.0.1 localhost ... 172.18.0.3 yourcontainer 冬の開発合宿の準備 日程を決めたのが5月末 で、うちの会社のワークスペースに slack のチャンネルを開設したのが10月。現時点で7人の参加者がいる。もうこのメンバーでいいかなと考えている。今回はコミュニティのワーケーションイベントというより、自社の開発合宿という体をとっている。スポンサーとしていくらか会社からお金も出す。その理由の1つは slack チャンネルにログを残したいという意図がある。コミュニティの slack だとフリープランになるので3ヶ月以上過去のログがみえなくなってしまう。それを解消するには自社の有料プランの slack チャンネルに置いておくのがもっともログを制御できて嬉しい。
城崎温泉では11月から 🦀 が解禁となって、今年は冬に行くので 🦀 を食べるというのも目的の1つ。チャンネルで盛り上げようと、たまに城崎温泉の記事を貼り付けたりしていた。そろそろ、メンバーと顔合わせの情報共有の打ち合わせをしようと思って調整さんを作った。他の人たちは、わざわざうちの slack のワークスペースにゲスト参加しているから、あまり無理強いをせずに情報共有できるようにしておきたい。たった1つの、ほとんどやり取りしないチャンネルのために slack のワークスペースをオープンしておかないといけないという用途はなかなか面倒だ。私が逆の立場でもそう思う。どうにか普段使っているワークスペースから、必要なときだけ連携できるような仕組みがないだろうか？</description><content>&lt;p>22時頃に寝てしまって1時に起きて5時に起きて6時過ぎに起きた。とくになにもしていないのにバテている気がする。今週はずっと mongodb のレプリカセットの調査やインフラの移行作業などをやっていたせいか、普段よりもエネルギーを消費しているのかもしれない。朝から疲労困憊でオフィスへ向かった。&lt;/p>
&lt;h2 id="docker-のコンテナネットワークの調査">docker のコンテナネットワークの調査&lt;/h2>
&lt;p>docker のコンテナネットワークから解決できる名前がなになのか、よくわかってなくて、その調査のためにサンプルの compose サービスを作った。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/docker-compose-sample">https://github.com/t2y/docker-compose-sample&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>myimage から nginx のコンテナの名前解決がどうなるかを試してみる。&lt;/p>
&lt;pre tabindex="0">&lt;code>c67a5ca94a77:/app# dig +short 00c719491558
192.168.240.3
c67a5ca94a77:/app# dig +short mynginx
192.168.240.3
c67a5ca94a77:/app# dig +short nginx
192.168.240.3
c67a5ca94a77:/app# dig +short yournginx
192.168.240.3
&lt;/code>&lt;/pre>&lt;p>基本的にはサービス名、コンテナ名 (container_name)、コンテナー ID、ホスト名 (hostname) はすべて名前解決できる。hostname があるときはそのコンテナの /etc/hosts にその名前が追加され、ないときはコンテナ ID が追加されていた。&lt;/p>
&lt;pre tabindex="0">&lt;code>yourcontainer:/app# cat /etc/hosts
127.0.0.1 localhost
...
172.18.0.3 yourcontainer
&lt;/code>&lt;/pre>&lt;h2 id="冬の開発合宿の準備">冬の開発合宿の準備&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0526/#開発合宿の日程確定">日程を決めたのが5月末&lt;/a> で、うちの会社のワークスペースに slack のチャンネルを開設したのが10月。現時点で7人の参加者がいる。もうこのメンバーでいいかなと考えている。今回はコミュニティのワーケーションイベントというより、自社の開発合宿という体をとっている。スポンサーとしていくらか会社からお金も出す。その理由の1つは slack チャンネルにログを残したいという意図がある。コミュニティの slack だとフリープランになるので3ヶ月以上過去のログがみえなくなってしまう。それを解消するには自社の有料プランの slack チャンネルに置いておくのがもっともログを制御できて嬉しい。&lt;/p>
&lt;p>城崎温泉では11月から 🦀 が解禁となって、今年は冬に行くので 🦀 を食べるというのも目的の1つ。チャンネルで盛り上げようと、たまに城崎温泉の記事を貼り付けたりしていた。そろそろ、メンバーと顔合わせの情報共有の打ち合わせをしようと思って調整さんを作った。他の人たちは、わざわざうちの slack のワークスペースにゲスト参加しているから、あまり無理強いをせずに情報共有できるようにしておきたい。たった1つの、ほとんどやり取りしないチャンネルのために slack のワークスペースをオープンしておかないといけないという用途はなかなか面倒だ。私が逆の立場でもそう思う。どうにか普段使っているワークスペースから、必要なときだけ連携できるような仕組みがないだろうか？&lt;/p>
&lt;p>年末・年始の情報共有の打ち合わせへ向けて旅のしおりも準備していく。日々の業務に忙殺されて後回しにしがちなので自分を追い込むためにも予定を入れた。&lt;/p></content></item><item><title>コンテナイメージの移行</title><link>/diary/posts/2023/1214/</link><pubDate>Thu, 14 Dec 2023 08:32:58 +0900</pubDate><guid>/diary/posts/2023/1214/</guid><description>1時に寝て3時に起きて6時半に起きた。スマホで呪術廻戦のゲームを開いたまま寝てた。
サードパーティの mongodb コンテナへの移行 昨日の mongodb のサードパーティのコンテナイメージ調査 の続き。
レプリカセットの削除 基本的に一度作ったレプリカセットを削除することはないせいか、レプリカセットを削除するユーティリティは提供されていない。なんらかの理由でレプリカセットを再作成したいときは、レプリカセットの設定が保存されている local database を削除する。
またレプリカセットの稼働中に local database を削除することはできないため、mongod サーバーを --replSet を指定していない状態で起動させ、そのときに次のようにして local database を削除できる。
test&amp;gt; use admin admin&amp;gt; db.grantRolesToUser(&amp;#34;root&amp;#34;, [&amp;#34;__system&amp;#34;]); { ok: 1 } admin&amp;gt; use local switched to db local local&amp;gt; db.dropDatabase() { ok: 1, dropped: &amp;#39;local&amp;#39; } local&amp;gt; use admin switched to db admin admin&amp;gt; db.revokeRolesFromUser(&amp;#34;root&amp;#34;, [&amp;#34;__system&amp;#34;]); { ok: 1 } コンテナを使ったレプリカセットの初期設定 bitnami/mongodb を使うと、ローカルのシングルノードでレプリカセットを使うには次のような設定になる。
mongo: image: docker.io/bitnami/mongodb:7.0.1 user: root # デフォルトは非 root ユーザーで起動するのでローカルの開発環境なら root で実行した方が手間がない volumes: - .</description><content>&lt;p>1時に寝て3時に起きて6時半に起きた。スマホで呪術廻戦のゲームを開いたまま寝てた。&lt;/p>
&lt;h2 id="サードパーティの-mongodb-コンテナへの移行">サードパーティの mongodb コンテナへの移行&lt;/h2>
&lt;p>昨日の &lt;a href="/diary/diary/posts/2023/1211/">mongodb のサードパーティのコンテナイメージ調査&lt;/a> の続き。&lt;/p>
&lt;h3 id="レプリカセットの削除">レプリカセットの削除&lt;/h3>
&lt;p>基本的に一度作ったレプリカセットを削除することはないせいか、レプリカセットを削除するユーティリティは提供されていない。なんらかの理由でレプリカセットを再作成したいときは、レプリカセットの設定が保存されている local database を削除する。&lt;/p>
&lt;p>またレプリカセットの稼働中に local database を削除することはできないため、mongod サーバーを &lt;code>--replSet&lt;/code> を指定していない状態で起動させ、そのときに次のようにして local database を削除できる。&lt;/p>
&lt;pre tabindex="0">&lt;code>test&amp;gt; use admin
admin&amp;gt; db.grantRolesToUser(&amp;#34;root&amp;#34;, [&amp;#34;__system&amp;#34;]);
{ ok: 1 }
admin&amp;gt; use local
switched to db local
local&amp;gt; db.dropDatabase()
{ ok: 1, dropped: &amp;#39;local&amp;#39; }
local&amp;gt; use admin
switched to db admin
admin&amp;gt; db.revokeRolesFromUser(&amp;#34;root&amp;#34;, [&amp;#34;__system&amp;#34;]);
{ ok: 1 }
&lt;/code>&lt;/pre>&lt;h3 id="コンテナを使ったレプリカセットの初期設定">コンテナを使ったレプリカセットの初期設定&lt;/h3>
&lt;p>&lt;a href="https://hub.docker.com/r/bitnami/mongodb">bitnami/mongodb&lt;/a> を使うと、ローカルのシングルノードでレプリカセットを使うには次のような設定になる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mongo&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">docker.io/bitnami/mongodb:7.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">user&lt;/span>: &lt;span style="color:#ae81ff">root &lt;/span> &lt;span style="color:#75715e"># デフォルトは非 root ユーザーで起動するのでローカルの開発環境なら root で実行した方が手間がない&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./volumes/mongodb:/bitnami/mongodb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_ROOT_USER&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${MONGO_USER}&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 認証ユーザー&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_ROOT_PASSWORD&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${MONGO_PASSWORD}&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 認証ユーザーのパスワード&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_ADVERTISED_HOSTNAME&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;mongo-primary&amp;#34;&lt;/span> &lt;span style="color:#75715e"># レプリカセットのノードを ip アドレスではなくホスト名で指定する&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_REPLICA_SET_NAME&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;myrs&amp;#34;&lt;/span> &lt;span style="color:#75715e"># レプリカセットの名前&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_REPLICA_SET_MODE&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;primary&amp;#34;&lt;/span> &lt;span style="color:#75715e"># プライマリノードとして設定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_REPLICA_SET_KEY&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;my/replication/common/key123&amp;#34;&lt;/span> &lt;span style="color:#75715e"># キーファイルのコンテンツ (base64 でデコードできる値)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MONGODB_SYSTEM_LOG_VERBOSITY&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e"># ログレベル&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostname&lt;/span>: &lt;span style="color:#ae81ff">mongo-primary &lt;/span> &lt;span style="color:#75715e"># コンテナの内外から解決できるホスト名を指定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">mongo &lt;/span> &lt;span style="color:#75715e"># コンテナ名 (docker container ls で表示される名前)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">27017&lt;/span>:&lt;span style="color:#ae81ff">27017&lt;/span> &lt;span style="color:#75715e"># レプリカセットを運用する場合はポート番号のマッピングを一致させる必要がある&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;always&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>この設定でレプリカセットを初期した場合、レプリカセットの initialize 処理は、次のような config/member をもつ。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">members&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [{ &lt;span style="color:#a6e22e">_id&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">host&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;mongo-primary:27017&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">priority&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> }]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>コンテナの内部からは mongo-primary というホスト名に対して、コンテナネットワーク内のローカル ip アドレスが解決される。&lt;/p>
&lt;pre tabindex="0">&lt;code>c67a5ca94a77:/app# dig +short mongo-primary
192.168.240.3
&lt;/code>&lt;/pre>&lt;p>ここで host os 上のアプリケーションから mongo コンテナに対してレプリカセット接続をする場合 &lt;code>replicaSet=${レプリカセットの名前}&lt;/code> のパラメーターを追加する。&lt;/p>
&lt;pre tabindex="0">&lt;code>mongodb://root:password@localhost:27017/?authMechanism=DEFAULT&amp;amp;replicaSet=myrs
&lt;/code>&lt;/pre>&lt;p>これは localhost:27017 にレプリカセットの接続を試行し、接続できるとレプリカセットのメンバーが返される。&lt;/p>
&lt;p>レプリカセットのメンバーには &lt;code>mongo-primary:27017&lt;/code> という設定が行われているため、mongo-primary というホスト名に対して host os 上で名前解決できる必要がある。そのために /etc/hosts に次の設定を行う。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo vi /etc/hosts
...
127.0.0.1 mongo-primary
&lt;/code>&lt;/pre>&lt;p>&lt;a href="https://www.mongodb.com/products/tools/compass">compass&lt;/a> で接続した場合、レプリカセット接続であれば、レプリカセットの名前が接続情報として表示される。&lt;/p>
&lt;h2 id="ダイニングテーブル引き取り">ダイニングテーブル引き取り&lt;/h2>
&lt;p>実は火曜日にも長机を引き取りに行ってきて、今日はダイニングテーブルを引き取りに行ってきた。この3日間で2つもテーブルが手に入った。いつも目ぼしいと思ったものは、すぐに他の人と取り引きが成立してしまうのに、たまたま続けて私と取り引きが成立した。車で20分ぐらいの距離のマンションまで引き取りに行った。20時の予定を、19時10分には着いてしまって、先方も快く対応してくれた。私よりも見た目すこし年配の方で人当たりのよい感じの方だった。ジモティのやり取りはその人の性格が出るもので、受け渡しだけささっとやって余計な話しはしないパターンもあれば、愛想よく話しながら受け渡しをするパターンもある。先方によると、大事に使っていたテーブルのようにみえるので私も離れのオフィススペースで大事に使おうと思う。&lt;/p></content></item><item><title>mongodb のサードパーティのコンテナイメージ</title><link>/diary/posts/2023/1213/</link><pubDate>Wed, 13 Dec 2023 20:35:00 +0900</pubDate><guid>/diary/posts/2023/1213/</guid><description>23時に寝て3時に起きて寝たかどうか覚えていないうちに6時半になっていて7時半に起きた。
json を介した go の bool 値のバリエーション go-playground/validator のバリデータには required というバリデーションオプションがある。しかし、このオプションは go のゼロ値でないことをチェックするという仕様になっている。bool のゼロ値は false となるため、リクエストした JSON データに false を設定していたのか、未設定だったのかの違いを検出できない。これはバリデータの問題ではなく、go の json ライブラリの制約のようなもので使い勝手のよい仕様とは言えない。私もこの振る舞いに起因する不具合に遭遇したこともあるし、こういうときにどうしたらよいかも過去に3回ぐらいは調べている気がする。
How to validate bool #142 現時点での私の最適化は次のコードになる。データ構造として *bool 型にすれば、ポインタ型のゼロ値は nil となるため、true, false, nil の3値でバリデーションできる。しかし、私はこのデータ構造を好ましく思わない。というのは、内部的には true/false の2値でしか管理しないメンバーを、json のバリデーションのためだけに nil も許容する3値にすることがよい設計だと私は思えない。そこでバリデータによるバリデーションは諦めて、json の Unmarshal 処理をフックしてバリデーション相当の処理を自分で実装する。このやり方のデメリットはメンバーが追加されたときに自分で UnmarshalJSON() メソッドを保守する必要がある点になる。しかし、メリットとして内部のデータ構造の型は bool 型で扱える。一概にどちらがよいとは言いにくいかもしれないし、設計上の好みかもしれない。
type reqMyData struct { Name string `json:&amp;#34;name&amp;#34;` View *bool `json:&amp;#34;view&amp;#34;` } type MyData struct { Name string `json:&amp;#34;name&amp;#34;` View bool `json:&amp;#34;view&amp;#34;` } func (d *MyData) UnmarshalJSON(data []byte) error { var tmp reqMyData if err := json.</description><content>&lt;p>23時に寝て3時に起きて寝たかどうか覚えていないうちに6時半になっていて7時半に起きた。&lt;/p>
&lt;h2 id="json-を介した-go-の-bool-値のバリエーション">json を介した go の bool 値のバリエーション&lt;/h2>
&lt;p>&lt;a href="https://github.com/go-playground/validator">go-playground/validator&lt;/a> のバリデータには &lt;a href="https://pkg.go.dev/github.com/go-playground/validator/v10#hdr-Required">required&lt;/a> というバリデーションオプションがある。しかし、このオプションは go のゼロ値でないことをチェックするという仕様になっている。bool のゼロ値は false となるため、リクエストした JSON データに false を設定していたのか、未設定だったのかの違いを検出できない。これはバリデータの問題ではなく、go の json ライブラリの制約のようなもので使い勝手のよい仕様とは言えない。私もこの振る舞いに起因する不具合に遭遇したこともあるし、こういうときにどうしたらよいかも過去に3回ぐらいは調べている気がする。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-playground/validator/issues/142">How to validate bool #142&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>現時点での私の最適化は次のコードになる。データ構造として &lt;code>*bool&lt;/code> 型にすれば、ポインタ型のゼロ値は nil となるため、true, false, nil の3値でバリデーションできる。しかし、私はこのデータ構造を好ましく思わない。というのは、内部的には true/false の2値でしか管理しないメンバーを、json のバリデーションのためだけに nil も許容する3値にすることがよい設計だと私は思えない。そこでバリデータによるバリデーションは諦めて、json の Unmarshal 処理をフックしてバリデーション相当の処理を自分で実装する。このやり方のデメリットはメンバーが追加されたときに自分で UnmarshalJSON() メソッドを保守する必要がある点になる。しかし、メリットとして内部のデータ構造の型は &lt;code>bool&lt;/code> 型で扱える。一概にどちらがよいとは言いにくいかもしれないし、設計上の好みかもしれない。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">reqMyData&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#e6db74">`json:&amp;#34;name&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">View&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">bool&lt;/span> &lt;span style="color:#e6db74">`json:&amp;#34;view&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">MyData&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#e6db74">`json:&amp;#34;name&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">View&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> &lt;span style="color:#e6db74">`json:&amp;#34;view&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">MyData&lt;/span>) &lt;span style="color:#a6e22e">UnmarshalJSON&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span> []&lt;span style="color:#66d9ef">byte&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">tmp&lt;/span> &lt;span style="color:#a6e22e">reqMyData&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">json&lt;/span>.&lt;span style="color:#a6e22e">Unmarshal&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">tmp&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to unmarshal as reqMyData&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tmp&lt;/span>.&lt;span style="color:#a6e22e">View&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;required view field&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">d&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span> = &lt;span style="color:#a6e22e">tmp&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">d&lt;/span>.&lt;span style="color:#a6e22e">View&lt;/span> = &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">tmp&lt;/span>.&lt;span style="color:#a6e22e">View&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="サードパーティの-mongodb-コンテナイメージ">サードパーティの mongodb コンテナイメージ&lt;/h2>
&lt;p>先日の &lt;a href="/diary/diary/posts/2023/1211/">mongodb のレプリカセット調査&lt;/a> の続き。コードレビューをしていて &lt;a href="https://hub.docker.com/r/bitnami/mongodb">bitnami/mongodb&lt;/a> というサードパーティのコンテナイメージを使った方がよいのではないか？というコメントがあったのでその調査をしてみた。VMware 社が提供しているサードパーティのコンテナイメージらしい。&lt;/p>
&lt;blockquote>
&lt;p>MongoDB(R) is run and maintained by MongoDB, which is a completely separate project from Bitnami.&lt;/p>
&lt;/blockquote>
&lt;p>まず MongoDB プロジェクトとはまったく別管理であることが書いてある。&lt;/p>
&lt;blockquote>
&lt;p>Bitnami イメージを使用する理由&lt;/p>
&lt;ul>
&lt;li>Bitnamiはアップストリームソースの変更を綿密に追跡し、自動化されたシステムを使用してこのイメージの新しいバージョンを迅速に公開します。&lt;/li>
&lt;li>Bitnami イメージでは、最新のバグ修正と機能をできるだけ早く利用できます。&lt;/li>
&lt;li>Bitnamiのコンテナ、仮想マシン、クラウドイメージは、同じコンポーネントと構成アプローチを使用しているため、プロジェクトのニーズに応じて形式を簡単に切り替えることができます。&lt;/li>
&lt;li>Bitnamiのイメージはすべて、minideb（最小限のDebianベースのコンテナイメージ）またはscratch（明示的に空のイメージ）をベースにしています。&lt;/li>
&lt;li>Docker Hubで利用可能なすべてのBitnamiイメージは、Docker Content Trust（DCT）で署名されています。DOCKER_CONTENT_TRUST=1 を使用して、イメージの完全性を確認できます。&lt;/li>
&lt;li>Bitnamiコンテナイメージは定期的にリリースされ、最新のディストリビューションパッケージが利用可能です。&lt;/li>
&lt;/ul>
&lt;p>MongoDB®を本番環境で使用したいですか？Bitnami Application Catalogのエンタープライズ版であるVMware Tanzu Application Catalogをお試しください。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://hub.docker.com/_/mongo">mongo&lt;/a> の公式イメージは ubuntu をベースイメージにしている。ubuntu よりは minideb の方が軽いのかな？そしてちゃんと upstream にも追随しているみたい。このベースイメージの違いによるものかは定かではないが、結合テストのイメージも移行してみたところ、10-20秒ほど結合テストの実行時間が速くなった。割合にすると10%程度かな。&lt;/p>
&lt;blockquote>
&lt;p>KubernetesにMongoDB®をデプロイするには？&lt;/p>
&lt;p>Bitnami アプリケーションを Helm Chart としてデプロイすることは、Kubernetes 上で当社のアプリケーションを使い始める最も簡単な方法です。インストールの詳細については、Bitnami MongoDB® Chart GitHub リポジトリを参照してください。&lt;/p>
&lt;p>Bitnami コンテナは、クラスタへの Helm Charts のデプロイと管理に Kubeapps と一緒に使用できます。&lt;/p>
&lt;/blockquote>
&lt;p>helm chart も提供しているようで、いずれクラウド版を作るときに MongoDB も k8s 上にデプロイする上でこのことは都合がよいように思える。&lt;/p>
&lt;p>レプリケーションを前提とした初期設定があり、entrypoint スクリプトもいくつか読んでみた感じだと、きれいに管理されていて保守もちゃんとやってくれそうにみえる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/bitnami/containers/tree/main/bitnami/mongodb">https://github.com/bitnami/containers/tree/main/bitnami/mongodb&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>昨日、導入したばかりの公式イメージ + 自作スクリプトによるレプリケーション設定を廃止して、Bitnami のコンテナイメージを使うことに決めた。&lt;/p></content></item><item><title>モチベーションを揺らすもの</title><link>/diary/posts/2023/1212/</link><pubDate>Tue, 12 Dec 2023 08:39:22 +0900</pubDate><guid>/diary/posts/2023/1212/</guid><description>0時に寝て2時に起きて6時に起きて7時に起きた。まぁまぁ普通に眠れた。
定例会議 いよいよこのマイルストーンを終えると、あと1つで機能開発の終わりとなる。いくつかの要因があって開発の進捗は遅れ気味になっている。メンバーがどうこうというわけではなく、私がうまく段取りを組めていなかったり、自身がマネジメントの業務をちゃんとまわせていないところが開発スケジュールの遅延につながっている。いまの状況は私が失敗したあのときのあれや、このときのこれから全体の進捗へ影響を与えているなとわかるぐらいにはマネジメントの動きが読めるようになってきた気がしている。読めるんだったら対応しろよというのはわかっているものの、モチベーションが足りなくて成り行きに任せていて成るようになっていないなといったところ。私のモチベーションが足らないところも含め、今フェーズの開発にはマネジメントの反省材料がいくつかある。
真面目にやった人を不当に咎める 昔から私はわりとワーカホリックだったので興が乗るとずっとお仕事をしていることが多かった。若い頃はやったらやった分だけ成果が出て評価されて、それはそれで楽しかったものの、30代になるとできて当たり前、成果のレベルがよほど飛び抜けていない限りは評価されることはなくなった。仮に10段階で例えると、若い頃は3しかできないと思っていた人が8ぐらいやると評価されやすいし、30代では8やって当たり前だと思われているから10やっても12やっても大差ないとみなされる。もはやお金のためにお仕事をしているのではないため、評価されなくても気にはならないし、いまは自分で契約の判断ができるので嫌なら契約を終了して別のお仕事を探せばよいだけという割り切りもある。
そんな中、昔からずっと思っていることが1つあって、真面目にやっている人たちを適切に評価しない上司が多い。要はなにも言わなくてもちゃんとやってくれているから放置するといった傾向がある。そして、さぼっている人たちや成果を出せていない人たちをかばう傾向がある。それはパフォーマンスが低い人たちを悪く言うと、さらにモチベーションを下げて、もっと悪くなるから励ますという意図があるのだと思う。しかし、その対応が度を過ぎると、真面目にちゃんとやった人たちのモチベーションを吹き飛ばしてしまう。その典型的な言葉が「みんながんばった」になる。実際は数人のコアメンバーが業務の大半をやっているのに上司は個々人の差異をなくしたがる。チームの一体感とか、空気を悪くしたくないとか、ハレーションを防ぐとか、いろいろあるのだろう。私は一緒に働いている人なら誰でも気付けるレベルの、みんながんばってないのに、そういった問題を指摘することもなく、なぁなぁで済ませるのをいくつもみてきて、これは日本の会社や組織で共通する傾向があると思う。なにを危惧しているのかわからないが、問題の本質に触れようとしないことが度々起こる。気付いたら対応しないといけないから気付いてないことにしたいと言い換えてもよいかもしれない。そういう状況をみると「またか」と思って私のモチベーションが落ちる。誰だって働きたくない。
私はよくやってくれている個人を、何度でも、よくやってくれていると明言して評する。がんばっていない人たちを咎めたりはしないが、がんばっていないのにがんばったとは絶対に言わない。状況によってはもっとがんばってほしいと言う。個人差があることを曖昧にしたりはしない。</description><content>&lt;p>0時に寝て2時に起きて6時に起きて7時に起きた。まぁまぁ普通に眠れた。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>いよいよこのマイルストーンを終えると、あと1つで機能開発の終わりとなる。いくつかの要因があって開発の進捗は遅れ気味になっている。メンバーがどうこうというわけではなく、私がうまく段取りを組めていなかったり、自身がマネジメントの業務をちゃんとまわせていないところが開発スケジュールの遅延につながっている。いまの状況は私が失敗したあのときのあれや、このときのこれから全体の進捗へ影響を与えているなとわかるぐらいにはマネジメントの動きが読めるようになってきた気がしている。読めるんだったら対応しろよというのはわかっているものの、モチベーションが足りなくて成り行きに任せていて成るようになっていないなといったところ。私のモチベーションが足らないところも含め、今フェーズの開発にはマネジメントの反省材料がいくつかある。&lt;/p>
&lt;h2 id="真面目にやった人を不当に咎める">真面目にやった人を不当に咎める&lt;/h2>
&lt;p>昔から私はわりとワーカホリックだったので興が乗るとずっとお仕事をしていることが多かった。若い頃はやったらやった分だけ成果が出て評価されて、それはそれで楽しかったものの、30代になるとできて当たり前、成果のレベルがよほど飛び抜けていない限りは評価されることはなくなった。仮に10段階で例えると、若い頃は3しかできないと思っていた人が8ぐらいやると評価されやすいし、30代では8やって当たり前だと思われているから10やっても12やっても大差ないとみなされる。もはやお金のためにお仕事をしているのではないため、評価されなくても気にはならないし、いまは自分で契約の判断ができるので嫌なら契約を終了して別のお仕事を探せばよいだけという割り切りもある。&lt;/p>
&lt;p>そんな中、昔からずっと思っていることが1つあって、真面目にやっている人たちを適切に評価しない上司が多い。要はなにも言わなくてもちゃんとやってくれているから放置するといった傾向がある。そして、さぼっている人たちや成果を出せていない人たちをかばう傾向がある。それはパフォーマンスが低い人たちを悪く言うと、さらにモチベーションを下げて、もっと悪くなるから励ますという意図があるのだと思う。しかし、その対応が度を過ぎると、真面目にちゃんとやった人たちのモチベーションを吹き飛ばしてしまう。その典型的な言葉が「みんながんばった」になる。実際は数人のコアメンバーが業務の大半をやっているのに上司は個々人の差異をなくしたがる。チームの一体感とか、空気を悪くしたくないとか、ハレーションを防ぐとか、いろいろあるのだろう。私は一緒に働いている人なら誰でも気付けるレベルの、みんながんばってないのに、そういった問題を指摘することもなく、なぁなぁで済ませるのをいくつもみてきて、これは日本の会社や組織で共通する傾向があると思う。なにを危惧しているのかわからないが、問題の本質に触れようとしないことが度々起こる。気付いたら対応しないといけないから気付いてないことにしたいと言い換えてもよいかもしれない。そういう状況をみると「またか」と思って私のモチベーションが落ちる。誰だって働きたくない。&lt;/p>
&lt;p>私はよくやってくれている個人を、何度でも、よくやってくれていると明言して評する。がんばっていない人たちを咎めたりはしないが、がんばっていないのにがんばったとは絶対に言わない。状況によってはもっとがんばってほしいと言う。個人差があることを曖昧にしたりはしない。&lt;/p></content></item><item><title>owner/permission の違うファイルとリポジトリ管理</title><link>/diary/posts/2023/1211/</link><pubDate>Mon, 11 Dec 2023 09:37:23 +0900</pubDate><guid>/diary/posts/2023/1211/</guid><description>23時に寝て2時に起きて6時に起きて7時過ぎに起きた。なんか微妙な寝方をした。
先日の mongodb のレプリカセットの調査 の整理をしてマージリクエストを作成した。共通鍵の keyFile をどう扱えばいいのか、わからなくて、一旦コンテナ内の tmp 領域にコピーして、それを entrypoint スクリプトでコピーしてから owner/permission を変更するというやり方で、リポジトリ管理で共有しやすいようにしてみた。entrypoint スクリプトは root 権限で実行されることも理解した。
volumes: - ./mongo/keyfile:/var/tmp/keyfile.orig command: - mongod - --keyFile - /data/keyfile - --replSet - &amp;#34;myrs&amp;#34; entrypoint: - bash - -c - | if [[ ! -f /data/keyfile ]]; then cp /var/tmp/keyfile.orig /data/keyfile chmod 400 /data/keyfile chown mongodb:mongodb /data/keyfile fi exec docker-entrypoint.sh $$@ テックブログを読む会 昨日、西原さんに教えてもらった テックブログを読むイベント を探したら毎週月曜日に行われているようだった。早速 テックブログ一気読み選手権20231211杯 に参加した。HackMD で読んだメモを管理している。記事を選択して、読んで、所感をまとめて、他の人たちと共有する。ただそれだけのイベント。ちょうど30分で終わって、自分の勉強にもなったし、他の人の話しも聞いて参考になった。たった30分でも、なにもやらないよりずっとよい。1ヶ月ほど参加してやり方を学んだらチームにも展開してみようかと考えている。</description><content>&lt;p>23時に寝て2時に起きて6時に起きて7時過ぎに起きた。なんか微妙な寝方をした。&lt;/p>
&lt;p>先日の &lt;a href="/diary/diary/posts/2023/1207/">mongodb のレプリカセットの調査&lt;/a> の整理をしてマージリクエストを作成した。共通鍵の keyFile をどう扱えばいいのか、わからなくて、一旦コンテナ内の tmp 領域にコピーして、それを entrypoint スクリプトでコピーしてから owner/permission を変更するというやり方で、リポジトリ管理で共有しやすいようにしてみた。entrypoint スクリプトは root 権限で実行されることも理解した。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./mongo/keyfile:/var/tmp/keyfile.orig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">mongod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --&lt;span style="color:#ae81ff">keyFile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/data/keyfile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --&lt;span style="color:#ae81ff">replSet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;myrs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">entrypoint&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -&lt;span style="color:#ae81ff">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> if [[ ! -f /data/keyfile ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> cp /var/tmp/keyfile.orig /data/keyfile
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> chmod 400 /data/keyfile
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> chown mongodb:mongodb /data/keyfile
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> fi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> exec docker-entrypoint.sh $$@&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="テックブログを読む会">テックブログを読む会&lt;/h2>
&lt;p>昨日、西原さんに教えてもらった &lt;a href="/diary/diary/posts/2023/1210/">テックブログを読むイベント&lt;/a> を探したら毎週月曜日に行われているようだった。早速 &lt;a href="https://blogreading.connpass.com/event/304979/">テックブログ一気読み選手権20231211杯&lt;/a> に参加した。HackMD で読んだメモを管理している。記事を選択して、読んで、所感をまとめて、他の人たちと共有する。ただそれだけのイベント。ちょうど30分で終わって、自分の勉強にもなったし、他の人の話しも聞いて参考になった。たった30分でも、なにもやらないよりずっとよい。1ヶ月ほど参加してやり方を学んだらチームにも展開してみようかと考えている。&lt;/p></content></item><item><title>2023年のふりかえりとコミュニティの価値</title><link>/diary/posts/2023/1210/</link><pubDate>Sun, 10 Dec 2023 12:24:33 +0900</pubDate><guid>/diary/posts/2023/1210/</guid><description>23時に寝て2時に起きて4時半に起きて6時までゲームやって8時に起きた。朝からオフィスで発表資料を作ってた。
2023年ふりかえり 今年を振り返ろう！LT大会 に参加した。
昨日の夜に LT 資料を作ろうと思っていたものの、晩ご飯食べたら面倒になってそのまま家で休んでいた。朝からオフィスで作り始めたら徐々に興が乗ってきて想定した以上にちゃんと作ってしまった。やぎさんにレビューしてもらっていくつか気付きを得た。ちょうど レビューサービス あったら依頼したいなと思ったところだったのでレビューしてくれる人の存在に感謝した。この資料はまたなにか他の機会のイベントでも再利用しようと思う。カフーツさんの忘年会で発表してもよいかもしれない。
2023年ふりかえり 北海道から 西原さん という方が参加されていた。全国あちこちのコミュニティに参加して、そこに集う人たちの支援や盛り上げ、ひいては日本の IT コミュニティを活性化させて、世の中をよくしようといった取り組みをされている。これは私も共感するところで大半の人はコミュニティ活動に関心がない。それ自体は個人の好みで構わないのだけど、プログラミングを学びたいと考えているのに行動できない人たちというのが一定数いて、そういう人たちの受け皿として IT コミュニティで始めるのはよいことだと思う。西原さんはまさにそういう活動をされている。とても尊いことだと思う。
短時間にも関わらず、いろいろな話しをして私自身収穫もあったし、西原さんから学ぶことも多かった。企業のテックブログを読む会を毎週30分、社内外でやっていると話されていた。これは素晴らしいなと思ってすぐに反応した。歳のせいか、私は自分で勉強しなくなっていて、本も仕事も課題も積みまくりで、毎日どうしよう？と途方に暮れながら帰っておいしい晩ご飯を食べてゲームしている。そんな自分で勉強しない人向けにこういったコストなく、無理なく、続けられるイベントはありがたい。やり方を学ぶためにオンラインで参加してみようと思う。
ブログを見つけて読んで感想書いてそれを肴に交流する会を30分でやりきっています コミュニティ活動の価値というのは、多くの企業もコミュニティを盛り上げようとやっていることから明らかに大きな価値があるにも関わらず、その価値を十分に明文化できていない。私自身、コミュニティからたくさんのモノや影響を受けているにも関わらず、うまく明文化できていないところがある。課題管理の研究の延長上でコミュニティの価値にも追究していきたいと考えている。</description><content>&lt;p>23時に寝て2時に起きて4時半に起きて6時までゲームやって8時に起きた。朝からオフィスで発表資料を作ってた。&lt;/p>
&lt;h2 id="2023年ふりかえり">2023年ふりかえり&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/302551/">今年を振り返ろう！LT大会&lt;/a> に参加した。&lt;/p>
&lt;p>昨日の夜に LT 資料を作ろうと思っていたものの、晩ご飯食べたら面倒になってそのまま家で休んでいた。朝からオフィスで作り始めたら徐々に興が乗ってきて想定した以上にちゃんと作ってしまった。やぎさんにレビューしてもらっていくつか気付きを得た。ちょうど &lt;a href="/diary/diary/posts/2023/1206/">レビューサービス&lt;/a> あったら依頼したいなと思ったところだったのでレビューしてくれる人の存在に感謝した。この資料はまたなにか他の機会のイベントでも再利用しようと思う。カフーツさんの忘年会で発表してもよいかもしれない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1LVYOqR7ynsRJlsAjsG1nZTV-0tnhfhxE_g-pUe3koQc/edit?usp=sharing">2023年ふりかえり&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>北海道から &lt;a href="https://www.docswell.com/user/tomio2480">西原さん&lt;/a> という方が参加されていた。全国あちこちのコミュニティに参加して、そこに集う人たちの支援や盛り上げ、ひいては日本の IT コミュニティを活性化させて、世の中をよくしようといった取り組みをされている。これは私も共感するところで大半の人はコミュニティ活動に関心がない。それ自体は個人の好みで構わないのだけど、プログラミングを学びたいと考えているのに行動できない人たちというのが一定数いて、そういう人たちの受け皿として IT コミュニティで始めるのはよいことだと思う。西原さんはまさにそういう活動をされている。とても尊いことだと思う。&lt;/p>
&lt;p>短時間にも関わらず、いろいろな話しをして私自身収穫もあったし、西原さんから学ぶことも多かった。企業のテックブログを読む会を毎週30分、社内外でやっていると話されていた。これは素晴らしいなと思ってすぐに反応した。歳のせいか、私は自分で勉強しなくなっていて、本も仕事も課題も積みまくりで、毎日どうしよう？と途方に暮れながら帰っておいしい晩ご飯を食べてゲームしている。そんな自分で勉強しない人向けにこういったコストなく、無理なく、続けられるイベントはありがたい。やり方を学ぶためにオンラインで参加してみようと思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://note.com/tomio2480/n/nf909bb77b4b7">ブログを見つけて読んで感想書いてそれを肴に交流する会を30分でやりきっています&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>コミュニティ活動の価値というのは、多くの企業もコミュニティを盛り上げようとやっていることから明らかに大きな価値があるにも関わらず、その価値を十分に明文化できていない。私自身、コミュニティからたくさんのモノや影響を受けているにも関わらず、うまく明文化できていないところがある。課題管理の研究の延長上でコミュニティの価値にも追究していきたいと考えている。&lt;/p></content></item><item><title>4年目の創立記念日</title><link>/diary/posts/2023/1209/</link><pubDate>Sat, 09 Dec 2023 14:36:13 +0900</pubDate><guid>/diary/posts/2023/1209/</guid><description>23時に寝て2時に起きて5時に起きて8時に起きた。税理士さんの件がもやもやしていてあまりよく眠れない。
ストレッチ 今週もとくに負荷のかかることがあったわけではないため、とくにどこも悪くなく、張りや疲労を感じることはなかった。トレーナーさんもどこも悪くないという前提の上で上半身の肩が前屈みになってしまっているために肩甲骨周りが硬くなりがちであるとアドバイスしてくれた。寒くなると上半身の硬さが目立つようになるのかな。いつも通りの体調管理の一環としてストレッチを受けた。今日の開脚幅は開始前155cmで、ストレッチ後158cmだった。
創立記念日 今日が会社の創立記念日。無事に4周年を迎えた。過去20年、3年以上1つの会社で働いたことがない私が自分の会社では4年を迎えられたことも少し感慨深い。今日は土曜日なので創立記念日が休日ではあるけれど、やはりオフィスでいろいろ作業をしている。
2年目に経営的に大きな失敗をやらかして、その反省もあるせいか、3年目は財務が安定してきた。この3月で 経営セーフティ共済 の掛金上限の800万円の積み立てを完了する。事例紹介 にも毎年1社新しい顧客が増えている。達人プログラマーではないが、毎年新しい顧客と取り引きをするというのもよいかもしれない。とはいえ、いまの取引先とのお仕事の契約が終了したら課題管理の研究や自社プロダクトの開発に取り組む。目安としては3年間を考えている。役員報酬をカットすれば財務的には5年はいける。意味もなく起業した私にとってはうちの会社は社会になにを還元するのかを問う期間として3-5年ぐらいを想定している。法人としてモラトリアムのようなものかもしれない。個人としても40代になって3年といった時間を自由に使えるというのはとても貴重な時間になるのではないかと考えている。自分で会社をやると年単位で時間を自由にできる。これだけでも起業する価値はあるのではないかと思う。
いまのお仕事でも課題管理の POC の1つとして実践している。想定通りと言えるほどの成果には至っていないが、時代背景や世の中の変化にも追随しながら私の頭の中にあるイメージと現実とのギャップを補正していく必要があるのかもしれない。
完璧ではないが、最善は尽くしている。うぬぼれるな、矢口
と赤坂先生に叱責されたい。
過去の創立記念日 3年目 2年目</description><content>&lt;p>23時に寝て2時に起きて5時に起きて8時に起きた。税理士さんの件がもやもやしていてあまりよく眠れない。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週もとくに負荷のかかることがあったわけではないため、とくにどこも悪くなく、張りや疲労を感じることはなかった。トレーナーさんもどこも悪くないという前提の上で上半身の肩が前屈みになってしまっているために肩甲骨周りが硬くなりがちであるとアドバイスしてくれた。寒くなると上半身の硬さが目立つようになるのかな。いつも通りの体調管理の一環としてストレッチを受けた。今日の開脚幅は開始前155cmで、ストレッチ後158cmだった。&lt;/p>
&lt;h2 id="創立記念日">創立記念日&lt;/h2>
&lt;p>今日が会社の創立記念日。無事に4周年を迎えた。過去20年、3年以上1つの会社で働いたことがない私が自分の会社では4年を迎えられたことも少し感慨深い。今日は土曜日なので創立記念日が休日ではあるけれど、やはりオフィスでいろいろ作業をしている。&lt;/p>
&lt;p>2年目に経営的に大きな失敗をやらかして、その反省もあるせいか、3年目は財務が安定してきた。この3月で &lt;a href="https://www.smrj.go.jp/kyosai/tkyosai/index.html">経営セーフティ共済&lt;/a> の掛金上限の800万円の積み立てを完了する。&lt;a href="https://kazamori.jp/cases/">事例紹介&lt;/a> にも毎年1社新しい顧客が増えている。達人プログラマーではないが、毎年新しい顧客と取り引きをするというのもよいかもしれない。とはいえ、いまの取引先とのお仕事の契約が終了したら課題管理の研究や自社プロダクトの開発に取り組む。目安としては3年間を考えている。役員報酬をカットすれば財務的には5年はいける。意味もなく起業した私にとってはうちの会社は社会になにを還元するのかを問う期間として3-5年ぐらいを想定している。法人としてモラトリアムのようなものかもしれない。個人としても40代になって3年といった時間を自由に使えるというのはとても貴重な時間になるのではないかと考えている。自分で会社をやると年単位で時間を自由にできる。これだけでも起業する価値はあるのではないかと思う。&lt;/p>
&lt;p>いまのお仕事でも課題管理の POC の1つとして実践している。想定通りと言えるほどの成果には至っていないが、時代背景や世の中の変化にも追随しながら私の頭の中にあるイメージと現実とのギャップを補正していく必要があるのかもしれない。&lt;/p>
&lt;blockquote>
&lt;p>完璧ではないが、最善は尽くしている。うぬぼれるな、矢口&lt;/p>
&lt;/blockquote>
&lt;p>と赤坂先生に叱責されたい。&lt;/p>
&lt;h3 id="過去の創立記念日">過去の創立記念日&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2022/1209/">3年目&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2021/1209/">2年目&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>税務相談のストレス</title><link>/diary/posts/2023/1208/</link><pubDate>Fri, 08 Dec 2023 08:30:02 +0900</pubDate><guid>/diary/posts/2023/1208/</guid><description>23時に寝て2時に起きて6時に起きた。晩ご飯食べてから作業するつもりが、疲れて寝てしまった。今日は権限管理のバグ修正したり、昨日の mongodb の調査を継続していた。
テックブログ公開 先日 テックブログレビュー を終えていた記事を公開した。
SvelteKit アプリケーションの組み込みへの考察 隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
テックブログ (↑) のふりかえり 日本ナレッジ・マネジメント学会の年次大会の所感 税理士さんと契約 して3ヶ月間やり取りした所感 1ヶ月に1-2件ほど折りにふれて税務相談をする機会があったりする。税理士さんとは chatwork でやり取りしている。これがストレスになってきたのではらさんに相談にのってもらった。はらさん曰く、税理士さんの普通と it 業界のうちらとは業務の取り組み方への姿勢がまったく異なるため、最初の1年はストレスや不満がたまるのはあるという。士業という資格によって独占的に保護された業務のせいか、顧客に寄り添った対応をしてくれるわけではなく、質問の背景や意図を汲んでくれなくて質問に回答を返して終わりといった、チャットなのにメールのような一問一答のようなやり取りになっている。さらに回答が意図した内容ではなくて、追加で質問や背景の説明をしても、すぐにレスポンスが返ってくることはなく、数時間たってから回答が1つ届き、それも期待したものじゃないとさらに質問して、さらに数時間といったやり取りで5-6往復するのに数日かかるのがざらにある。はらさんがいうには税理士さんの回答を得るのに1週間ぐらいかかったり、問い合わせを数日放置されるのも普通とのことらしい。
先方も複数の顧客を相手にサポートしていて、やり取りに時間がかかることそのものは理解できるが、チャットのやり取りがコンテキストを理解しているようにみえなくてコミュニケーションが成立していない。例えば、当社への税理士報酬の支払いの対応について問い合わせたら次のような回答が戻ってくるだけ。
報酬の額と消費税等の額が明確に区分されている場合には、その報酬の額のみを源泉徴収の対象とします。
こんなことはググればすぐに分かるし、私も顧問報酬は原則として源泉徴収することを知っている。その上で税理士さん事務所の、当社への顧問報酬の明細について尋ねているのにこういった回答が返ってくるだけ。
インボイス制度開始後の報酬・料金等に対する源泉徴収 インボイス対応もあるため、請求書に明細を書いて pdf で送ってくださいと依頼して2日間返信なく放置されている。税理士さん事務所の顧問報酬の明細や請求書について尋ねても即日に返信がこないような状況になる。はらさんが言うには税理士さんの対応とはそんなもんらしい。チャットでやり取りしている意味がないし、こんなググればわかるレベルのやり取りしかできないなら解約も検討している。もう1つ懸念に思っているのは本人がチャットで回答していないのではないか？と考えている。チャットなのに1問1答でしか返信がこないし、コンテキストが伝わっていないと感じることも多々ある。とてもベテランの税理士さんが答えているとは思えないコミュニケーションの齟齬がある。
ちょっと調べてみると、税理士は日本税理士会連合会に登録する必要があり、税理士試験に合格しても登録していない場合は税理士としての独占業務を行うことができないらしい。また税理士事務所で働いている人の中には無資格職員もいて税務補助をしている可能性もあるという。必ずしも税理士資格がなければダメだというわけでもない。無資格職員でも経験を積んで税務に詳しい人もいると思う。一方でチャットでベテランの税理士のふりをして職員が回答しているのであれば、それはそれで信頼関係や偽証などの問題がある。そこら辺も聞いてみようと思う。次の記事では無資格職員が税務相談をしている事務所もあると書いてある。
税理士へ依頼したつもりが税理士でなかった</description><content>&lt;p>23時に寝て2時に起きて6時に起きた。晩ご飯食べてから作業するつもりが、疲れて寝てしまった。今日は権限管理のバグ修正したり、昨日の mongodb の調査を継続していた。&lt;/p>
&lt;h2 id="テックブログ公開">テックブログ公開&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/1206/">テックブログレビュー&lt;/a> を終えていた記事を公開した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.osstech.co.jp/posts/2023/12/sveltekit-apps-integration/">SvelteKit アプリケーションの組み込みへの考察&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;ul>
&lt;li>テックブログ (↑) のふりかえり&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2023/1203/">日本ナレッジ・マネジメント学会の年次大会の所感&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2023/1016/">税理士さんと契約&lt;/a> して3ヶ月間やり取りした所感&lt;/li>
&lt;/ul>
&lt;p>1ヶ月に1-2件ほど折りにふれて税務相談をする機会があったりする。税理士さんとは chatwork でやり取りしている。これがストレスになってきたのではらさんに相談にのってもらった。はらさん曰く、税理士さんの普通と it 業界のうちらとは業務の取り組み方への姿勢がまったく異なるため、最初の1年はストレスや不満がたまるのはあるという。士業という資格によって独占的に保護された業務のせいか、顧客に寄り添った対応をしてくれるわけではなく、質問の背景や意図を汲んでくれなくて質問に回答を返して終わりといった、チャットなのにメールのような一問一答のようなやり取りになっている。さらに回答が意図した内容ではなくて、追加で質問や背景の説明をしても、すぐにレスポンスが返ってくることはなく、数時間たってから回答が1つ届き、それも期待したものじゃないとさらに質問して、さらに数時間といったやり取りで5-6往復するのに数日かかるのがざらにある。はらさんがいうには税理士さんの回答を得るのに1週間ぐらいかかったり、問い合わせを数日放置されるのも普通とのことらしい。&lt;/p>
&lt;p>先方も複数の顧客を相手にサポートしていて、やり取りに時間がかかることそのものは理解できるが、チャットのやり取りがコンテキストを理解しているようにみえなくてコミュニケーションが成立していない。例えば、当社への税理士報酬の支払いの対応について問い合わせたら次のような回答が戻ってくるだけ。&lt;/p>
&lt;blockquote>
&lt;p>報酬の額と消費税等の額が明確に区分されている場合には、その報酬の額のみを源泉徴収の対象とします。&lt;/p>
&lt;/blockquote>
&lt;p>こんなことはググればすぐに分かるし、私も顧問報酬は原則として源泉徴収することを知っている。その上で税理士さん事務所の、当社への顧問報酬の明細について尋ねているのにこういった回答が返ってくるだけ。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.nta.go.jp/law/tsutatsu/kobetsu/shotoku/gensen/111209/01.htm">インボイス制度開始後の報酬・料金等に対する源泉徴収&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>インボイス対応もあるため、請求書に明細を書いて pdf で送ってくださいと依頼して2日間返信なく放置されている。税理士さん事務所の顧問報酬の明細や請求書について尋ねても即日に返信がこないような状況になる。はらさんが言うには税理士さんの対応とはそんなもんらしい。チャットでやり取りしている意味がないし、こんなググればわかるレベルのやり取りしかできないなら解約も検討している。もう1つ懸念に思っているのは本人がチャットで回答していないのではないか？と考えている。チャットなのに1問1答でしか返信がこないし、コンテキストが伝わっていないと感じることも多々ある。とてもベテランの税理士さんが答えているとは思えないコミュニケーションの齟齬がある。&lt;/p>
&lt;p>ちょっと調べてみると、税理士は日本税理士会連合会に登録する必要があり、税理士試験に合格しても登録していない場合は税理士としての独占業務を行うことができないらしい。また税理士事務所で働いている人の中には無資格職員もいて税務補助をしている可能性もあるという。必ずしも税理士資格がなければダメだというわけでもない。無資格職員でも経験を積んで税務に詳しい人もいると思う。一方でチャットでベテランの税理士のふりをして職員が回答しているのであれば、それはそれで信頼関係や偽証などの問題がある。そこら辺も聞いてみようと思う。次の記事では無資格職員が税務相談をしている事務所もあると書いてある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://soei-tax.jp/15326648136918">税理士へ依頼したつもりが税理士でなかった&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>mongodb のレプリカセットのデプロイ調査</title><link>/diary/posts/2023/1207/</link><pubDate>Thu, 07 Dec 2023 09:26:50 +0900</pubDate><guid>/diary/posts/2023/1207/</guid><description>4時前に寝て6時半に起きた。1時過ぎまで作業して、帰って少しゲームして、うまく眠れなくてだらだらしていた。
mongodb のレプリカセットの調査 以前 mongodb でトランザクションを使うときにレプリカセットが必要 なことがわかった。他機能の開発途中だったので一旦後回しにしていたものを回収している。状況によってはメンバーに委譲してもよかったんだけど、私が遊撃で出張ってみることにした。実際に調べてみてコンテナの運用も考慮するとけっこう難しいことがわかってきた。
mongosh からは Replication Methods を使ってレプリカセットの操作ができる。これはユーティリティのようなもので mongodb としての低レベルのコマンド操作は Replication Commands になる。mongo-go-driver はレプリカセット向けのユーティリティを提供していないため、Replication Commands を RunCommand() の低レベル API を使って自分で実装しないといけない。
例えば、レプリカセットの初期化をするときは次のように replSetInitiate というコマンドを適切なパラメーターで呼び出す。あまりドキュメントで丁寧に説明されていないので試行錯誤でエラーメッセージをみながら実装することになる。とくにはまるのが mongod のサーバーは --replSet myrs のようにレプリカセットを指定して起動させるものの、初期化コマンドを実行するときはまだレプリカセットを設定していないため、レプリカセットを指定せず、且つ direct パラメーターをセットしないと mongod サーバーに接続できない。この微妙な設定を把握するのにはまった。これが正しい手順かどうかもわからないが、ググったりしているとフォーラムでそういったコメントが散見されたりする。おそらく mongosh の Replication Methods を使うと、クライアントからサーバー接続は裏方でよしなにやってくれるのでそっちの方が簡単ではある。
func (r *ReplicaSet) Initiate(ctx context.Context, config bson.M) error { client, err := r.connectDirect(ctx) if err != nil { return fmt.Errorf(&amp;#34;failed to connect with direct: %w&amp;#34;, err) } defer client.Disconnect(ctx) var result bson.</description><content>&lt;p>4時前に寝て6時半に起きた。1時過ぎまで作業して、帰って少しゲームして、うまく眠れなくてだらだらしていた。&lt;/p>
&lt;h2 id="mongodb-のレプリカセットの調査">mongodb のレプリカセットの調査&lt;/h2>
&lt;p>以前 &lt;a href="/diary/diary/posts/2023/1101/#mongo-とトランザクションとレプリカセット">mongodb でトランザクションを使うときにレプリカセットが必要&lt;/a> なことがわかった。他機能の開発途中だったので一旦後回しにしていたものを回収している。状況によってはメンバーに委譲してもよかったんだけど、私が遊撃で出張ってみることにした。実際に調べてみてコンテナの運用も考慮するとけっこう難しいことがわかってきた。&lt;/p>
&lt;p>&lt;a href="https://www.mongodb.com/docs/mongodb-shell/">mongosh&lt;/a> からは &lt;a href="https://www.mongodb.com/docs/v7.0/reference/method/js-replication/">Replication Methods&lt;/a> を使ってレプリカセットの操作ができる。これはユーティリティのようなもので mongodb としての低レベルのコマンド操作は &lt;a href="https://www.mongodb.com/docs/manual/reference/command/nav-replication/">Replication Commands&lt;/a> になる。&lt;a href="https://github.com/mongodb/mongo-go-driver">mongo-go-driver&lt;/a> はレプリカセット向けのユーティリティを提供していないため、Replication Commands を RunCommand() の低レベル API を使って自分で実装しないといけない。&lt;/p>
&lt;p>例えば、レプリカセットの初期化をするときは次のように &lt;code>replSetInitiate&lt;/code> というコマンドを適切なパラメーターで呼び出す。あまりドキュメントで丁寧に説明されていないので試行錯誤でエラーメッセージをみながら実装することになる。とくにはまるのが mongod のサーバーは &lt;code>--replSet myrs&lt;/code> のようにレプリカセットを指定して起動させるものの、初期化コマンドを実行するときはまだレプリカセットを設定していないため、レプリカセットを指定せず、且つ &lt;code>direct&lt;/code> パラメーターをセットしないと mongod サーバーに接続できない。この微妙な設定を把握するのにはまった。これが正しい手順かどうかもわからないが、ググったりしているとフォーラムでそういったコメントが散見されたりする。おそらく mongosh の Replication Methods を使うと、クライアントからサーバー接続は裏方でよしなにやってくれるのでそっちの方が簡単ではある。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>) &lt;span style="color:#a6e22e">Initiate&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#a6e22e">config&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">client&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">connectDirect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to connect with direct: %w&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Disconnect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">result&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cmd&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">D&lt;/span>{{&lt;span style="color:#a6e22e">Key&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;replSetInitiate&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Value&lt;/span>: &lt;span style="color:#a6e22e">config&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Database&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">db&lt;/span>).&lt;span style="color:#a6e22e">RunCommand&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">cmd&lt;/span>).&lt;span style="color:#a6e22e">Decode&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">result&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to run replSetInitiate(): %w&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">PrettyPrint&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;completed to initiate&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">result&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>) &lt;span style="color:#a6e22e">connectDirect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">mongo&lt;/span>.&lt;span style="color:#a6e22e">Client&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">opts&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">options&lt;/span>.&lt;span style="color:#a6e22e">Client&lt;/span>().
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetAuth&lt;/span>(&lt;span style="color:#a6e22e">options&lt;/span>.&lt;span style="color:#a6e22e">Credential&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Username&lt;/span>: &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">User&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Password&lt;/span>: &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Passwd&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetHosts&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Hosts&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetDirect&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>) &lt;span style="color:#75715e">// must be true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">mongo&lt;/span>.&lt;span style="color:#a6e22e">Connect&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">opts&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">InitSingleReplicaSet&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#a6e22e">cfg&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">MongoDB&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rs&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">NewReplicaSet&lt;/span>(&lt;span style="color:#a6e22e">cfg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">initConfig&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#a6e22e">cfg&lt;/span>.&lt;span style="color:#a6e22e">ReplicaSet&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;members&amp;#34;&lt;/span>: []&lt;span style="color:#a6e22e">bson&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;localhost:27017&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">rs&lt;/span>.&lt;span style="color:#a6e22e">Initiate&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">initConfig&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>さらに mongod サーバーを起動するときに &lt;code>--replSet&lt;/code> と &lt;code>--keyFile&lt;/code> (認証が必要な場合のみ？) という2つのパラメーターを指定する必要がある。&lt;code>--replSet&lt;/code> はレプリカセットの識別子を指定する。そして &lt;code>--keyFile&lt;/code> は共通鍵を指定する。この共通鍵を生成するには次のようにする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ openssl rand -base64 &lt;span style="color:#ae81ff">756&lt;/span> &amp;gt; my-mongo-keyfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ chown mongodb:mongodb my-mongo-keyfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ chmod &lt;span style="color:#ae81ff">400&lt;/span> my-mongo-keyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>普通のサーバーインスタンスならすぐできることだが、コンテナの運用において面倒なのが owner とパーミッションを設定しないといけないところ。mongo のコンテナは mongodb ユーザーで起動するため、root でマウントされたファイルシステムには書き込みできなかったりして keyFile の配置をどう扱えばよいのかが難しい。docker hub の mongo の issues でもどうやって設定したらいいの？って議論が発散している。mongo 本体が公式のスクリプトや仕組みを提供していれば済む話しだけど、どうもそうではないみたい。だから泥臭い方法で自分でなんとかしないといけないようにみえる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/docker-library/mongo/issues/246">Creating a mongo image set with &amp;ndash;replSet #246&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/docker-library/mongo/issues/339">Cannot configure replica sets with entrypoint-initdb #339&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>dockertest でもレプリカセットの設定について次の issue として登録されている。mongo のコンテナを使ったテストの場合、dockertest のレイヤーが挟まるのでさらにわかりにくくなっている。テストを動かすためにどういった設定が必要かは把握できたのでなにかよい方法を考えてコントリビュートしたい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ory/dockertest/issues/480">Create an example for starting mongodb as a replica set #480&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>記事のレビューをしてもらえるサービス</title><link>/diary/posts/2023/1206/</link><pubDate>Wed, 06 Dec 2023 21:56:08 +0900</pubDate><guid>/diary/posts/2023/1206/</guid><description>疲れて18時過ぎにはお仕事を終えて、帰ってきて晩ご飯も食べずにそのまま寝てた。22時頃に起きてそれから晩ご飯を作って食べて、また夜に寝て6時に起きた。
テックブログレビュー 顧問のはらさんに昨日書いたテックブログのレビューをお願いした。一通り、調査した内容の範囲内で書いてはいるが、私はフロントエンドについて明るくないため、大きな勘違いや誤りを含んだ文章を書いてしまう可能性がある。本来テックブログは会社のブランディングにつながるものだが、誤った記事を書いてしまうと逆効果になってしまう。自社なら私の責任で済むが、他社のテックブログでブランドイメージを毀損するのは申し訳ない。
私が書いた記事をレビューしてもらえる有識者を、報酬をつけて広く募るみたいなサービスがあってもいいなと思えた。うちの会社がもう少し財務的に余裕ができたら、いくつかの分野の有識者と顧問契約して、技術に限定せず、いろんな分野で私の書いた記事のレビューをお願いできるような体制にしたい。余談だが、レビュー依頼して誰もレビューしてくれないというのも書いていて寂しい。よい開発文化をもつチームならそんなこと起きない。私を書いた記事をメンバーが率先してレビューしないという時点でまだまだうちのチームには改善の余地がある。
円形テーブル受け取り ジモティーで「籐 ラタン 木製丸テーブル」を500円で購入した。使わないときは折り畳みできる。省スペースでよさそうにみえた。現物を受け取ってみて、使用感はあるが傷んではいない。まだ実家の離れで使うか、自分の部屋で使うかは決めていない。しばらく部屋で使ってみてその用途や感触で決めようと思う。問い合わせしてから2日後に近所のローソン前で待ち合わせをして受け取りできた。近所だと、引き取りの調整もしやすいし、軽いものだったので自転車の荷台に乗せて運んできた。これまでジモティーで6件の取引を行ったが、いまのところ、トラブルはない。</description><content>&lt;p>疲れて18時過ぎにはお仕事を終えて、帰ってきて晩ご飯も食べずにそのまま寝てた。22時頃に起きてそれから晩ご飯を作って食べて、また夜に寝て6時に起きた。&lt;/p>
&lt;h2 id="テックブログレビュー">テックブログレビュー&lt;/h2>
&lt;p>顧問のはらさんに昨日書いたテックブログのレビューをお願いした。一通り、調査した内容の範囲内で書いてはいるが、私はフロントエンドについて明るくないため、大きな勘違いや誤りを含んだ文章を書いてしまう可能性がある。本来テックブログは会社のブランディングにつながるものだが、誤った記事を書いてしまうと逆効果になってしまう。自社なら私の責任で済むが、他社のテックブログでブランドイメージを毀損するのは申し訳ない。&lt;/p>
&lt;p>私が書いた記事をレビューしてもらえる有識者を、報酬をつけて広く募るみたいなサービスがあってもいいなと思えた。うちの会社がもう少し財務的に余裕ができたら、いくつかの分野の有識者と顧問契約して、技術に限定せず、いろんな分野で私の書いた記事のレビューをお願いできるような体制にしたい。余談だが、レビュー依頼して誰もレビューしてくれないというのも書いていて寂しい。よい開発文化をもつチームならそんなこと起きない。私を書いた記事をメンバーが率先してレビューしないという時点でまだまだうちのチームには改善の余地がある。&lt;/p>
&lt;h2 id="円形テーブル受け取り">円形テーブル受け取り&lt;/h2>
&lt;p>ジモティーで「籐 ラタン 木製丸テーブル」を500円で購入した。使わないときは折り畳みできる。省スペースでよさそうにみえた。現物を受け取ってみて、使用感はあるが傷んではいない。まだ実家の離れで使うか、自分の部屋で使うかは決めていない。しばらく部屋で使ってみてその用途や感触で決めようと思う。問い合わせしてから2日後に近所のローソン前で待ち合わせをして受け取りできた。近所だと、引き取りの調整もしやすいし、軽いものだったので自転車の荷台に乗せて運んできた。これまでジモティーで6件の取引を行ったが、いまのところ、トラブルはない。&lt;/p></content></item><item><title>全員採用のためのテックブログ</title><link>/diary/posts/2023/1205/</link><pubDate>Tue, 05 Dec 2023 09:48:16 +0900</pubDate><guid>/diary/posts/2023/1205/</guid><description>2時に寝て6時に起きて9時前に起きた。寝るのがどんどん遅くなってきて生活のリズムが乱れてきた。
sveltekit に関するテックブログ執筆 先日の続き の続き。
調査は一区切りついたのでテックブログを執筆することにした。今日はほぼ丸一日記事を書いていた。本当はマネージャーの私が1-2週間も技術調査して、テックブログを一生懸命書くみたいなことをやるよりも、他に大事なプロジェクトの遊撃やマネジメントに時間を割くべきではある。一方でメンバーに課題に取り組むにあたり、設計をどうするのか？設計をするためには調査が必要であること、調査した内容をアウトプットする重要性などの模範を示したいという意図で書いた。そして、メンバーにも開発の隙間にテックブログを書くことを業務として指示しようと考えている。
なんのためにテックブログを書くか？という目的は、業務においては明確で採用のために書く。プログラマーが採用において協力できることは限られる。その中でもテックブログというのは費用対効果が高く、会社のブランディングにもつながり、よい開発文化を醸成することにもつながる。プログラマーの採用がとても難しくなった昨今「全員採用」というキーワードもよく聞くようになった。一見プログラマーは採用において無関係だし、実際にそういった業務をやらなくても咎められることはない。しかし、自分のできることで採用に協力したいと考えたとき、できることの1つにテックブログを書くというのは悪くない選択肢だと私は考えている。少なくともテックブログを書けない (書かない) 人たちにとやかく言われたくない。</description><content>&lt;p>2時に寝て6時に起きて9時前に起きた。寝るのがどんどん遅くなってきて生活のリズムが乱れてきた。&lt;/p>
&lt;h2 id="sveltekit-に関するテックブログ執筆">sveltekit に関するテックブログ執筆&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1204/#kitvite-アプリケーションのデバッグ">先日の続き&lt;/a> の続き。&lt;/p>
&lt;p>調査は一区切りついたのでテックブログを執筆することにした。今日はほぼ丸一日記事を書いていた。本当はマネージャーの私が1-2週間も技術調査して、テックブログを一生懸命書くみたいなことをやるよりも、他に大事なプロジェクトの遊撃やマネジメントに時間を割くべきではある。一方でメンバーに課題に取り組むにあたり、設計をどうするのか？設計をするためには調査が必要であること、調査した内容をアウトプットする重要性などの模範を示したいという意図で書いた。そして、メンバーにも開発の隙間にテックブログを書くことを業務として指示しようと考えている。&lt;/p>
&lt;p>なんのためにテックブログを書くか？という目的は、業務においては明確で採用のために書く。プログラマーが採用において協力できることは限られる。その中でもテックブログというのは費用対効果が高く、会社のブランディングにもつながり、よい開発文化を醸成することにもつながる。プログラマーの採用がとても難しくなった昨今「全員採用」というキーワードもよく聞くようになった。一見プログラマーは採用において無関係だし、実際にそういった業務をやらなくても咎められることはない。しかし、自分のできることで採用に協力したいと考えたとき、できることの1つにテックブログを書くというのは悪くない選択肢だと私は考えている。少なくともテックブログを書けない (書かない) 人たちにとやかく言われたくない。&lt;/p></content></item><item><title>svelte コンポーネントの実装は簡単</title><link>/diary/posts/2023/1204/</link><pubDate>Mon, 04 Dec 2023 08:46:19 +0900</pubDate><guid>/diary/posts/2023/1204/</guid><description>1時に寝て何度か起きて7時に起きた。日曜日の夜に業務スーパーへ行ったら生鮮系は売り切れているのが多かった。日持ちするようなものを購入した。呪術廻戦ゲーム の初心者ミッションをクリアしたのでゲームの時間を減らしていく。
kit/vite アプリケーションのデバッグ 先日の続き の続き。
ある kit アプリケーションの svelte コンポーネントから外部の kit アプリのコンポーネントやモジュールを埋め込むことができるかどうかを調査した。ドキュメントの Loading data をみながらコンポーネントを書いてみる。フロントエンドの開発はすべてメンバーに委譲しているので私はほとんど開発していない。ドキュメントみないとまったくどう実装していよいかわからない。
svelte コンポーネントをレンダリングするときにサーバー側で動かすのは +page.server.ts に、クライアント側で動かすのは +page.ts に実装する。今回の場合、外部の node.js プロセスに起動したサーバーに対してリクエストして index.html に相当するものを取得するのでサーバー側で取得したレスポンスから html を取り出して、それをコンポーネント側でレンダリングする。+page.server.ts は次のように実装する。
import type { PageServerLoad } from &amp;#39;./$types&amp;#39;; import { apps } from &amp;#39;$lib/index&amp;#39;; export const load: PageServerLoad = async ({ params }) =&amp;gt; { const res = await fetch(apps[&amp;#39;kit-demo1&amp;#39;].entrypoint); const html = await res.text(); return { html }; }; この html をクライアント側の +page.</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。日曜日の夜に業務スーパーへ行ったら生鮮系は売り切れているのが多かった。日持ちするようなものを購入した。&lt;a href="/diary/diary/posts/2023/1123/">呪術廻戦ゲーム&lt;/a> の初心者ミッションをクリアしたのでゲームの時間を減らしていく。&lt;/p>
&lt;h2 id="kitvite-アプリケーションのデバッグ">kit/vite アプリケーションのデバッグ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1130/#kitvite-アプリケーションのデバッグ">先日の続き&lt;/a> の続き。&lt;/p>
&lt;p>ある kit アプリケーションの svelte コンポーネントから外部の kit アプリのコンポーネントやモジュールを埋め込むことができるかどうかを調査した。ドキュメントの &lt;a href="https://kit.svelte.dev/docs/load">Loading data&lt;/a> をみながらコンポーネントを書いてみる。フロントエンドの開発はすべてメンバーに委譲しているので私はほとんど開発していない。ドキュメントみないとまったくどう実装していよいかわからない。&lt;/p>
&lt;p>svelte コンポーネントをレンダリングするときにサーバー側で動かすのは +page.server.ts に、クライアント側で動かすのは +page.ts に実装する。今回の場合、外部の node.js プロセスに起動したサーバーに対してリクエストして index.html に相当するものを取得するのでサーバー側で取得したレスポンスから html を取り出して、それをコンポーネント側でレンダリングする。+page.server.ts は次のように実装する。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#66d9ef">type&lt;/span> { &lt;span style="color:#a6e22e">PageServerLoad&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./$types&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">apps&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;$lib/index&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">load&lt;/span>: &lt;span style="color:#66d9ef">PageServerLoad&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> ({ &lt;span style="color:#a6e22e">params&lt;/span> }) &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">apps&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;kit-demo1&amp;#39;&lt;/span>].&lt;span style="color:#a6e22e">entrypoint&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">text&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> { &lt;span style="color:#a6e22e">html&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>この html をクライアント側の +page.svelte から参照してレンダリングする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ts&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span> { &lt;span style="color:#a6e22e">PageData&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./$types&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">PageData&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span>&amp;gt;{@html data.html}&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これで一応は意図した kit アプリケーションを埋め込むことはできるが、実際にはスクリプトなどはなにかが競合して動かないようだ。これは node.js から取得するスクリプトやスタイルなどが複数の kit アプリケーションで競合してしまうからではないかと推測する。&lt;/p>
&lt;p>これが ssg ならば &lt;a href="https://kit.svelte.dev/docs/adapter-static">adapter-static&lt;/a> を使ってビルドして、その成果物を static ディレクトリ配下に置くだけでそのまま動く。これは特別ななにかではなく、kit アプリケーションとして意図した振る舞いにはなる。これが出来て嬉しいことはあまり思いつかないが、想像した通りに動くかどうかの検証のために確認した。&lt;/p>
&lt;p>次のリポジトリに調査した内容のサンプルコードを作った。ここまでの調査内容でまたテックブログを書いてみようと思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/sveltekit-apps-integration-sample">github.com/t2y/sveltekit-apps-integration-sample&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>日本ナレッジ・マネジメント学会にオンライン参加した</title><link>/diary/posts/2023/1203/</link><pubDate>Sun, 03 Dec 2023 12:37:53 +0900</pubDate><guid>/diary/posts/2023/1203/</guid><description>0時に寝て5時に起きてゲームして9時に起きてまたゲームしていた。午前中は家でだらだらしていてお昼からオフィスで作業していた。
ナレッジ・マネジメントの年次学会 夏ごろに 日本ナレッジ・マネジメント学会へ加入 していた。学会誌を読んだりする程度しか活動できていなかったものの、年次大会をオンラインで視聴していた。
日本ナレッジ・マネジメント学会：第26回年次大会 お昼からみたのでパネルディスカッションの後半と研究発表をいくつか視聴した。パネルディスカッションは ai についての議論をしていたが、私からみてとくに目新しい議論はなかったように思える。研究発表はいくつか関心のあるものがあって、自分たちの研究について話す前に先行研究としてこれやあれがあって、それらを踏まえて、自分たちはこういう研究をしていると聞ける。それまでの歴史や先行研究でわかっていることなども知ることができて、自分で一から調べるよりも調査時間を短縮できる。聞いていていくつかおもしろそうな論文もあった。また時間ができたときに調査するための issue として作っておいた。すでにそういった issue はたくさんあるのだけど。
おもしろかった発表内容の1つにリーダーシップ論は 野中郁次郎 先生ともう1人 (名前を聞き取れなかった) を除いたら、すべて米国からきたものだという。日本の地域性の高い問題においては米国由来のリーダーシップ論ではうまくいかないケースがあるといった話しをされていた。他にも実践知と叡智の違いとか、賢慮がどうこう、気付きの定義、技術と技能の定義といった用語の定義を明確にして議論をするといったところが学術研究とビジネスの大きな違いのように思えた。そして、学術研究においてもそれが定説としての認知度または実績がなければ、さまざまな仮説や研究があることから、自分たちはこの単語をこのように解釈して使っているとか、それぞれの派閥によって同じ言葉を別の意味で解釈していたりする。知識に関する用語が乱立して、結果的になにについて話しているのか、わかりにくくなってしまうといった雰囲気も感じることができた。野中先生の提唱する「フロネティック・リーダーシップ」には、実践知の起源として、アリストテレスが分類した3つの知識の一つ、フロネシスにあり「賢慮」とも訳されるらしい。実践知の要素には倫理が含まれていて正しいことを行うための判断も指摘されていた。来年ぐらいからうちの会社もこういった研究に時間を割いていきたい。また資料が公開されたふりかえりをしてみようと思う。</description><content>&lt;p>0時に寝て5時に起きてゲームして9時に起きてまたゲームしていた。午前中は家でだらだらしていてお昼からオフィスで作業していた。&lt;/p>
&lt;h2 id="ナレッジマネジメントの年次学会">ナレッジ・マネジメントの年次学会&lt;/h2>
&lt;p>夏ごろに &lt;a href="/diary/diary/posts/2023/0715/#日本ナレッジ・マネジメント学会に加入申請を出した">日本ナレッジ・マネジメント学会へ加入&lt;/a> していた。学会誌を読んだりする程度しか活動できていなかったものの、年次大会をオンラインで視聴していた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kmsj2023.peatix.com/">日本ナレッジ・マネジメント学会：第26回年次大会&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>お昼からみたのでパネルディスカッションの後半と研究発表をいくつか視聴した。パネルディスカッションは ai についての議論をしていたが、私からみてとくに目新しい議論はなかったように思える。研究発表はいくつか関心のあるものがあって、自分たちの研究について話す前に先行研究としてこれやあれがあって、それらを踏まえて、自分たちはこういう研究をしていると聞ける。それまでの歴史や先行研究でわかっていることなども知ることができて、自分で一から調べるよりも調査時間を短縮できる。聞いていていくつかおもしろそうな論文もあった。また時間ができたときに調査するための issue として作っておいた。すでにそういった issue はたくさんあるのだけど。&lt;/p>
&lt;p>おもしろかった発表内容の1つにリーダーシップ論は &lt;a href="https://ja.wikipedia.org/wiki/%E9%87%8E%E4%B8%AD%E9%83%81%E6%AC%A1%E9%83%8E">野中郁次郎&lt;/a> 先生ともう1人 (名前を聞き取れなかった) を除いたら、すべて米国からきたものだという。日本の地域性の高い問題においては米国由来のリーダーシップ論ではうまくいかないケースがあるといった話しをされていた。他にも実践知と叡智の違いとか、賢慮がどうこう、気付きの定義、技術と技能の定義といった用語の定義を明確にして議論をするといったところが学術研究とビジネスの大きな違いのように思えた。そして、学術研究においてもそれが定説としての認知度または実績がなければ、さまざまな仮説や研究があることから、自分たちはこの単語をこのように解釈して使っているとか、それぞれの派閥によって同じ言葉を別の意味で解釈していたりする。知識に関する用語が乱立して、結果的になにについて話しているのか、わかりにくくなってしまうといった雰囲気も感じることができた。野中先生の提唱する「フロネティック・リーダーシップ」には、実践知の起源として、アリストテレスが分類した3つの知識の一つ、フロネシスにあり「賢慮」とも訳されるらしい。実践知の要素には倫理が含まれていて正しいことを行うための判断も指摘されていた。来年ぐらいからうちの会社もこういった研究に時間を割いていきたい。また資料が公開されたふりかえりをしてみようと思う。&lt;/p></content></item><item><title>ミニカンファレンスみながら作業してた</title><link>/diary/posts/2023/1202/</link><pubDate>Sat, 02 Dec 2023 16:17:17 +0900</pubDate><guid>/diary/posts/2023/1202/</guid><description>1時に寝て7時に起きて朝からゲームしてた。お酒飲んだせいで眠りが浅かったような気がする。
ストレッチ 先週は前日に車であちこち移動して、長時間運転していたのもあり腰に負担がかかっていた。今週は東京出張だったものの、すねの外側の筋やふくらはぎの張りをやや感じた程度でとくに悪いところのない状態に戻ったようにみえる。寒くなってきたのもあり、上半身の肩周りの動きが堅くなっているとトレーナーさんは話していた。今日の開脚幅は開始前153cmで、ストレッチ後158cmだった。
ミニカンファレンスのオンライン参加 オンラインのミニカンファレンスを視聴しながらいつも通りの作業をしていた。あまりちゃんと聞いていたわけではないけど、要所要所でおもしろい発表もあった。
Go Conference mini 2023 Winter IN KYOTO tinygo の中の人が自作キーボードに関する発表をしていて、その人は明石市に住んでいるので、明石市から三ノ宮にかけてイベントをやりたいと話されていた。go について話す相手がいると私も嬉しい。またなにかの機会でご一緒できればと思う。</description><content>&lt;p>1時に寝て7時に起きて朝からゲームしてた。お酒飲んだせいで眠りが浅かったような気がする。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>先週は前日に車であちこち移動して、長時間運転していたのもあり腰に負担がかかっていた。今週は東京出張だったものの、すねの外側の筋やふくらはぎの張りをやや感じた程度でとくに悪いところのない状態に戻ったようにみえる。寒くなってきたのもあり、上半身の肩周りの動きが堅くなっているとトレーナーさんは話していた。今日の開脚幅は開始前153cmで、ストレッチ後158cmだった。&lt;/p>
&lt;h2 id="ミニカンファレンスのオンライン参加">ミニカンファレンスのオンライン参加&lt;/h2>
&lt;p>オンラインのミニカンファレンスを視聴しながらいつも通りの作業をしていた。あまりちゃんと聞いていたわけではないけど、要所要所でおもしろい発表もあった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kyotogo.connpass.com/event/285351/">Go Conference mini 2023 Winter IN KYOTO&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>tinygo の中の人が自作キーボードに関する発表をしていて、その人は明石市に住んでいるので、明石市から三ノ宮にかけてイベントをやりたいと話されていた。go について話す相手がいると私も嬉しい。またなにかの機会でご一緒できればと思う。&lt;/p></content></item><item><title>SakeBash と LT 発表</title><link>/diary/posts/2023/1201/</link><pubDate>Fri, 01 Dec 2023 10:14:28 +0900</pubDate><guid>/diary/posts/2023/1201/</guid><description>2時に寝て4時に起きて5時に起きて7時に起きた。呪術廻戦ゲーム の初心者ミッションだけクリアしたらやめようと思って、なかなかミッションのレベルが高くて届かない。あともうちょっと。
SakeBash 神戸に acall (アコール) さんという会社があって、コロナ禍が始まる前に SakeBash イベントを開催されていた。2019-2020年にかけてのとき。それ以来ずっと開催されていなかったイベントを復活させたみたい。コロナ禍が acall さんの転機になったようで、オフィスのオートメーションに関するプロダクトを開発していて会社が大きくなっているらしい。
Kobe Engineer SakeBash #2 ~神戸のエンジニアコミュニティを盛り上げよう acall さんは go でプロダクト開発をしていると知っていたので神戸で go の話しができると思って次の LT 発表をした。発表したら向こうから声をかけてくれて go の話しができるかな？と期待したのだけど、あまりそういう雰囲気でもなかった。私はコミュ障なので知らない人に話すのが苦手。
acall さんの社員でしやさんという方が宮崎県から来られて、始めて LT 発表するということで応援しながら聞いた。
そろそろどうなん？Flutter 私の周りでも flutter を採用している人たちがいるので気にはなっていた。最近は flutter web というのも出ていて、flutter でフロントエンドとスマホアプリの両方に対応できそうにも思えた。次にスマホアプリ対応が必要になったら flutter を採用してみてもいいなと思えた。acall さんの制度をみていてユニークだなと感じたものに「いまあい旅費」がある。リモートワーク前提の会社だからこそ、こういった制度の価値が出てきたとも言える。一昔前は出張するのが当たり前だったのでこんな制度に意味はなかったが、リモートワークにより出張しないことが当たり前になったのでこういう制度設計になったんだと思えた。
いま、あいにいきます旅費
リモート勤務でオフラインで集うことが難しいメンバーと「会うこと」の価値を再認識し、オフィスで自社プロダクトのプラクティスを行うことで、製品のアップデートに貢献することを目的とした制度です。自宅から100km以上離れた神戸または東京オフィスに行くための旅費を支給します。（1往復分の交通費と宿泊費／ケ月）
イベントに acall の社員さんが10人ぐらい参加していた。勢いのある会社は会社イベントに参加する人も多くてよい雰囲気にみえた。宮崎県から来られていたしやさんの他にも埼玉県から来られていたとしさんという方もいた。他にも遠方から来ていた方もいたのかもしれない。
2次会 いまひとつ飲み足りなかったので三ノ宮.dev の仲のよい人たちと飲みに行った。RailRoad no.57 というバーでよい雰囲気のお店だった。またなにかの機会で使いたいと思う。葉っぱ (ハーブ？) がたくさん入っているはちみつカクテルがおいしかった。
そこで以前コミュニティで起業相談にのった方の経営について話題になった。創業してから1年弱かけて少し前にある web サービスをリリースした。その web サービスはコモディティで、すでに競合も数社ある。あまり新規のベンチャー企業にとって勝ち目のある分野だと私からはみえない。どうやってこの web サービスを黒字化するのだろう？と私は疑問に思っていた。創業者の相談に乗った方も今後の戦略について尋ねても明確な答えは返ってこなかったようでとても不安になったと話されていた。融資を受けたという話しを聞いていたのでしばらく会社を存続できるのかもしれないけど、作った web サービスを収益化しないと次の融資を受けられることはないだろうから先行きは厳しいのではないかと推測する。外部からみえる範囲内では今後の先行きは危ぶまれる。創業して1年もたつのに、若い開発者にすら心配されるような戦略しかもっていない経営者というのはちょっと想像できない。融資を受けることが出来たぐらいだから、起業や経営について相談にのってくれる人は周りにいるんじゃないかと思うんだけど、経営目線で厳しいことを言ってくれる人はいないのかもしれない。</description><content>&lt;p>2時に寝て4時に起きて5時に起きて7時に起きた。&lt;a href="/diary/diary/posts/2023/1123/">呪術廻戦ゲーム&lt;/a> の初心者ミッションだけクリアしたらやめようと思って、なかなかミッションのレベルが高くて届かない。あともうちょっと。&lt;/p>
&lt;h2 id="sakebash">SakeBash&lt;/h2>
&lt;p>神戸に &lt;a href="https://www.acall.inc/">acall (アコール)&lt;/a> さんという会社があって、コロナ禍が始まる前に SakeBash イベントを開催されていた。2019-2020年にかけてのとき。それ以来ずっと開催されていなかったイベントを復活させたみたい。コロナ禍が acall さんの転機になったようで、オフィスのオートメーションに関するプロダクトを開発していて会社が大きくなっているらしい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://acall.connpass.com/event/302038/">Kobe Engineer SakeBash #2 ~神戸のエンジニアコミュニティを盛り上げよう&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>acall さんは go でプロダクト開発をしていると知っていたので神戸で go の話しができると思って次の LT 発表をした。発表したら向こうから声をかけてくれて go の話しができるかな？と期待したのだけど、あまりそういう雰囲気でもなかった。私はコミュ障なので知らない人に話すのが苦手。&lt;/p>
&lt;iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/18d191169877476193d56bbd535a32a3" title="go-ldap Contribution" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 600px; height: auto; aspect-ratio: 560 / 315;" data-ratio="1.7777777777777777">&lt;/iframe>
&lt;p>acall さんの社員でしやさんという方が宮崎県から来られて、始めて LT 発表するということで応援しながら聞いた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1R16dnV6ewhZWqe5mBKKIGf6jmZdNoNWDoE7tbX6APp8/edit#slide=id.gc6f73a04f_0_0">そろそろどうなん？Flutter&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>私の周りでも flutter を採用している人たちがいるので気にはなっていた。最近は flutter web というのも出ていて、flutter でフロントエンドとスマホアプリの両方に対応できそうにも思えた。次にスマホアプリ対応が必要になったら flutter を採用してみてもいいなと思えた。acall さんの制度をみていてユニークだなと感じたものに「いまあい旅費」がある。リモートワーク前提の会社だからこそ、こういった制度の価値が出てきたとも言える。一昔前は出張するのが当たり前だったのでこんな制度に意味はなかったが、リモートワークにより出張しないことが当たり前になったのでこういう制度設計になったんだと思えた。&lt;/p>
&lt;blockquote>
&lt;p>いま、あいにいきます旅費&lt;/p>
&lt;p>リモート勤務でオフラインで集うことが難しいメンバーと「会うこと」の価値を再認識し、オフィスで自社プロダクトのプラクティスを行うことで、製品のアップデートに貢献することを目的とした制度です。自宅から100km以上離れた神戸または東京オフィスに行くための旅費を支給します。（1往復分の交通費と宿泊費／ケ月）&lt;/p>
&lt;/blockquote>
&lt;p>イベントに acall の社員さんが10人ぐらい参加していた。勢いのある会社は会社イベントに参加する人も多くてよい雰囲気にみえた。宮崎県から来られていたしやさんの他にも埼玉県から来られていたとしさんという方もいた。他にも遠方から来ていた方もいたのかもしれない。&lt;/p>
&lt;h2 id="2次会">2次会&lt;/h2>
&lt;p>いまひとつ飲み足りなかったので三ノ宮.dev の仲のよい人たちと飲みに行った。&lt;a href="https://tabelog.com/hyogo/A2801/A280101/28037644/">RailRoad no.57&lt;/a> というバーでよい雰囲気のお店だった。またなにかの機会で使いたいと思う。葉っぱ (ハーブ？) がたくさん入っているはちみつカクテルがおいしかった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1201_drink.jpg"/>
&lt;/figure>
&lt;p>そこで以前コミュニティで起業相談にのった方の経営について話題になった。創業してから1年弱かけて少し前にある web サービスをリリースした。その web サービスはコモディティで、すでに競合も数社ある。あまり新規のベンチャー企業にとって勝ち目のある分野だと私からはみえない。どうやってこの web サービスを黒字化するのだろう？と私は疑問に思っていた。創業者の相談に乗った方も今後の戦略について尋ねても明確な答えは返ってこなかったようでとても不安になったと話されていた。融資を受けたという話しを聞いていたのでしばらく会社を存続できるのかもしれないけど、作った web サービスを収益化しないと次の融資を受けられることはないだろうから先行きは厳しいのではないかと推測する。外部からみえる範囲内では今後の先行きは危ぶまれる。創業して1年もたつのに、若い開発者にすら心配されるような戦略しかもっていない経営者というのはちょっと想像できない。融資を受けることが出来たぐらいだから、起業や経営について相談にのってくれる人は周りにいるんじゃないかと思うんだけど、経営目線で厳しいことを言ってくれる人はいないのかもしれない。&lt;/p></content></item></channel></rss>