<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/07 on forest nook</title><link>/diary/dates/2023/07/</link><description>Recent content in 2023/07 on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/dates/2023/07/index.xml" rel="self" type="application/rss+xml"/><item><title>休み明けの開発</title><link>/diary/posts/2023/0731/</link><pubDate>Mon, 31 Jul 2023 08:07:38 +0900</pubDate><guid>/diary/posts/2023/0731/</guid><description>23時に寝て何度か起きて7時に起きた。本当は実家でリモートワークするつもりがなんか面倒になって神戸に戻ってきてのんびりしていた。おかげでよく休めた。
先週から差分比較の開発とメンバーの設計レビューの続き。進捗はしているのだけど、まだまだ先が長くてやってもやってもなかなか進まない感じ。開発に集中していると時間が経つのが早い。</description><content>&lt;p>23時に寝て何度か起きて7時に起きた。本当は実家でリモートワークするつもりがなんか面倒になって神戸に戻ってきてのんびりしていた。おかげでよく休めた。&lt;/p>
&lt;p>先週から差分比較の開発とメンバーの設計レビューの続き。進捗はしているのだけど、まだまだ先が長くてやってもやってもなかなか進まない感じ。開発に集中していると時間が経つのが早い。&lt;/p></content></item><item><title>初盆法要</title><link>/diary/posts/2023/0730/</link><pubDate>Sun, 30 Jul 2023 21:47:28 +0900</pubDate><guid>/diary/posts/2023/0730/</guid><description>23時から寝始めてあまり眠れなくてちゃんと寝たかどうかわからないながらに6時に起きた。実家にいると親が4-5時ぐらいから起きてきて作業し始めるから朝は早くなる。7時から畑に水やりして汗かいたのでシャワーを浴びて8時ぐらいにはやることがなくなっていた。
初盆 (火灯し) 故人が帰ってくるときに迷わないように火を灯すというところから、初盆のことを「火灯し (ひとぼし)」とも呼ぶ。もしかしたらこの呼び方は淡路島の独特の呼び方かもしれない。家の外には2-3mほどの木の灯籠をつくる。昔はこの先にも灯籠や提灯で火を灯したのだろうけれど、いまは電球をつけてその代わりとする。この電球は法要の前日から付けておく。
これとは別に家の中にも盆提灯 (ぼんちょうちん) と呼ばれる提灯を取り付けて灯す (写真を撮り忘れた) 。もしかしたら外の大きな木は家によってはやらないかもしれない。おそらく提灯は必須で大きな木はオプションだと思う。
次に帰ってきた故人をお迎えするために盆棚（精霊棚）がある。先祖を迎い入れる準備をする棚になるらしい。
祭壇には精霊馬を飾る。これはキュウリやナスに割り箸を付けて馬と牛に見立てる。帰ってくるときは馬に乗って早く帰ってきてほしい。戻るときは牛に乗ってゆっくり戻ってくださいという願掛けになっているらしい。
初盆は法要を始めるまでにこれらの小道具？の準備をしておかないといけない。
法要は11時開始。参加者のうち早い人は10時15分には来られた。私は10時10分ぐらいからエアコンをつければいいかと考えてアラームをセットしていたが、親が早くつけろというので10時前には渋々つけた。しかし、これは親の判断の方が適切だった。1時間ぐらい早く来る人のことも考慮してエアコンを制御すべきだと学んだ。参加者の大半は年配の方々なので8月の暑い時期に来ていただくのに十分な準備が必要になる。10時半過ぎには大半の参加者がみえて軽く雑談をしていて、そういう雰囲気が法要によかったと思う。
11時に住職が来られて、いつも通りお経をあげていただいて、その後に迎え火を炊いた。住職によると、初盆は故人に早く帰ってきてゆっくり家で過ごしてくださいという意図があるからお盆 (8月13日) よりも早い時期に行うのが望ましいとのこと。アルミ缶に松の割り木を入れて火を放ち、参加者は松の割り木をくべながら精霊棚にお水を運ぶといった手順だった。親戚によると、お墓へ行って迎え火を炊くというやり方もあるらしい。精霊棚を玄関に置いて、狭いところと足場の悪さで火をくべながらお水を運ぶという手順を効率よくまわせなくてややもたついて時間がかかってしまった。
その後は12時から近所の旅館へ移動して法要の会食を行った。前日に組み立てておいた挨拶でお礼を述べてお昼ご飯になる。この旅館は父の頃から法事やイベントのときによく使っていた旅館で、食事の料金を確認すると6,500円 (税抜) だった。スタッフによると、20年ほど前の頃から料金が同じだと話していて、いまインフレなのになぜ同じ料金なんだろう？と不思議に思いつつ、もう少し払うつもりだったのに先方がそれでいいと言う。実際に食事を食べてみてわかった。料理によっては量が20年前の半分から2/3程度に減っていることに気付いた。この旅館で出てくる食事は当時からお腹いっぱいで食べられないというものだったのだが、親戚の寄り合いとはそういうものだと私は考えていた。いまとなっては高齢の参加者も多いし、私もそんなに食べられないので今回の量でまったく問題はないのだけれども、昔の旅館の食事の量を知っている身からすると、なんかしょぼくなったなと落胆を感じざるを得なかった。
14時前にはお開きにして、家に戻ってきて1-2時間昼寝して、本当は泊まって翌日もリモートワークするつもりだったが、実家にいるとだらだらするなと思って、やっぱりそれから神戸に帰ることにした。</description><content>&lt;p>23時から寝始めてあまり眠れなくてちゃんと寝たかどうかわからないながらに6時に起きた。実家にいると親が4-5時ぐらいから起きてきて作業し始めるから朝は早くなる。7時から畑に水やりして汗かいたのでシャワーを浴びて8時ぐらいにはやることがなくなっていた。&lt;/p>
&lt;h2 id="初盆-火灯し">初盆 (火灯し)&lt;/h2>
&lt;p>故人が帰ってくるときに迷わないように火を灯すというところから、初盆のことを「火灯し (ひとぼし)」とも呼ぶ。もしかしたらこの呼び方は淡路島の独特の呼び方かもしれない。家の外には2-3mほどの木の灯籠をつくる。昔はこの先にも灯籠や提灯で火を灯したのだろうけれど、いまは電球をつけてその代わりとする。この電球は法要の前日から付けておく。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0730_obon1.jpg"/>
&lt;/figure>
&lt;p>これとは別に家の中にも盆提灯 (ぼんちょうちん) と呼ばれる提灯を取り付けて灯す (写真を撮り忘れた) 。もしかしたら外の大きな木は家によってはやらないかもしれない。おそらく提灯は必須で大きな木はオプションだと思う。&lt;/p>
&lt;p>次に帰ってきた故人をお迎えするために盆棚（精霊棚）がある。先祖を迎い入れる準備をする棚になるらしい。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0730_obon2.jpg"/>
&lt;/figure>
&lt;p>祭壇には精霊馬を飾る。これはキュウリやナスに割り箸を付けて馬と牛に見立てる。帰ってくるときは馬に乗って早く帰ってきてほしい。戻るときは牛に乗ってゆっくり戻ってくださいという願掛けになっているらしい。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0730_obon3.jpg"/>
&lt;/figure>
&lt;p>初盆は法要を始めるまでにこれらの小道具？の準備をしておかないといけない。&lt;/p>
&lt;p>法要は11時開始。参加者のうち早い人は10時15分には来られた。私は10時10分ぐらいからエアコンをつければいいかと考えてアラームをセットしていたが、親が早くつけろというので10時前には渋々つけた。しかし、これは親の判断の方が適切だった。1時間ぐらい早く来る人のことも考慮してエアコンを制御すべきだと学んだ。参加者の大半は年配の方々なので8月の暑い時期に来ていただくのに十分な準備が必要になる。10時半過ぎには大半の参加者がみえて軽く雑談をしていて、そういう雰囲気が法要によかったと思う。&lt;/p>
&lt;p>11時に住職が来られて、いつも通りお経をあげていただいて、その後に迎え火を炊いた。住職によると、初盆は故人に早く帰ってきてゆっくり家で過ごしてくださいという意図があるからお盆 (8月13日) よりも早い時期に行うのが望ましいとのこと。アルミ缶に松の割り木を入れて火を放ち、参加者は松の割り木をくべながら精霊棚にお水を運ぶといった手順だった。親戚によると、お墓へ行って迎え火を炊くというやり方もあるらしい。精霊棚を玄関に置いて、狭いところと足場の悪さで火をくべながらお水を運ぶという手順を効率よくまわせなくてややもたついて時間がかかってしまった。&lt;/p>
&lt;p>その後は12時から近所の旅館へ移動して法要の会食を行った。前日に組み立てておいた挨拶でお礼を述べてお昼ご飯になる。この旅館は父の頃から法事やイベントのときによく使っていた旅館で、食事の料金を確認すると6,500円 (税抜) だった。スタッフによると、20年ほど前の頃から料金が同じだと話していて、いまインフレなのになぜ同じ料金なんだろう？と不思議に思いつつ、もう少し払うつもりだったのに先方がそれでいいと言う。実際に食事を食べてみてわかった。料理によっては量が20年前の半分から2/3程度に減っていることに気付いた。この旅館で出てくる食事は当時からお腹いっぱいで食べられないというものだったのだが、親戚の寄り合いとはそういうものだと私は考えていた。いまとなっては高齢の参加者も多いし、私もそんなに食べられないので今回の量でまったく問題はないのだけれども、昔の旅館の食事の量を知っている身からすると、なんかしょぼくなったなと落胆を感じざるを得なかった。&lt;/p>
&lt;p>14時前にはお開きにして、家に戻ってきて1-2時間昼寝して、本当は泊まって翌日もリモートワークするつもりだったが、実家にいるとだらだらするなと思って、やっぱりそれから神戸に帰ることにした。&lt;/p></content></item><item><title>実家へ帰って法要準備</title><link>/diary/posts/2023/0729/</link><pubDate>Sat, 29 Jul 2023 13:24:57 +0900</pubDate><guid>/diary/posts/2023/0729/</guid><description>0時に寝て3時に起きて7時に起きて9時頃までだらだらしていた。
帰島 午前中少しオフィスで作業をしてから14時過ぎから明日の初盆法要のために実家へ帰る。車があるので自分の都合のよいタイミングで帰れることで生活がすごく楽になった。これまでは高速バスが1時間に1本だったので、それにあわせて予定を調整する必要があったし、バスは遅いしバス停に着いてから親の迎えも必要だった。調整時間も移動時間も自分で車を運転する方が圧倒的に速い。
帰ってから膳先のものの袋詰めをして、お墓参りをして、家の祭壇の確認をして、準備はほとんどできていたので大した作業はなかった。親が早く帰って来させるために準備がたくさんあるとよく言うのだけど、大したことがない場合が多い。今回なら夜に帰っても十分問題なかった。晩ご飯を食べてから会食時の挨拶を調べて文章を組み立てて軽くリハーサルしたりしていた。
草刈り機探し 農業を真面目にやるわけではなくても田んぼを維持する上で草刈りという厄介な作業がある。雑草はいつでも常に生えてくるので常に除草したり刈り取りしたりしないといけない。
雑草の丈が低いときはトラクターで耕してしまうことはできるが、放っておいて伸びてしまうとトラクターのロータリーに巻きついてしまう。過去に普通の草刈り機 (肩にかけて丸い刃が回転するもの) で 伸び切った雑草の草刈り を行った。親と2人で丸1日かかっていて、さらに草刈り機の振動で体への負担も大きかった。筋肉痛になったり腕が痺れてしばらく取れないといった状況だったと思う。
もっと楽に草刈りする方法はないかと調べてみた。一番強力なのはトラクターのアタッチメントを草刈り仕様に交換して刈り取るという方法。これはよさそうではあるが、調べてみるとアタッチメントの交換そのものが大変なようにみえる。アタッチメントは100-200kgほどあるので、外すのは簡単とあったけど、取り付けるのはアタッチメントの位置を調整して付ける必要があるのでかなりの重労働だという。慣れた人でも1-2時間かかるように書いてあったのでそうじゃない私がやると3時間ぐらいかかる作業にみえる。なによりも重労働は怪我をするリスクが高い。
よい方法はないかと検索していて OREC (オーレック) 社の BULL MOWER という草刈り機がよさそうにみえた。次の動画をみるとわかりやすい。車輪がクローラータイプのものには立ち乗りのステップをつけられる。立ち乗りしながら草刈りできる。これは発明と言ってよいと思う。田んぼのような凸凹した地面で歩くのはわりとしんどくて疲弊する。
同じ動画主の別の動画で、一反 (約1000平方メートル) の休耕地の草刈りをするのに動画を撮りながらで1時間ほどだという。過去に私が普通の草刈り機で同じ広さの田んぼを8時間ぐらい作業していたと思う。さらに刈ってから干して燃やさないといけない。おそらく BULL MOWER は細かく砕いているようにみえるのでこの後にトラクター耕せばそれで終わるようにもみえる。BULL MOWER の値段を調べると、機種にもよるが実売価格だと60-90万円ぐらいらしい。農業機械は20-30年使うのでどうせ買うならいま最新の製品にするとよさそうだと思う。そうすると、90万円になって、たかだか草を刈るのにこれだけの初期投資が必要になる。農業は大変。</description><content>&lt;p>0時に寝て3時に起きて7時に起きて9時頃までだらだらしていた。&lt;/p>
&lt;h2 id="帰島">帰島&lt;/h2>
&lt;p>午前中少しオフィスで作業をしてから14時過ぎから明日の初盆法要のために実家へ帰る。車があるので自分の都合のよいタイミングで帰れることで生活がすごく楽になった。これまでは高速バスが1時間に1本だったので、それにあわせて予定を調整する必要があったし、バスは遅いしバス停に着いてから親の迎えも必要だった。調整時間も移動時間も自分で車を運転する方が圧倒的に速い。&lt;/p>
&lt;p>帰ってから膳先のものの袋詰めをして、お墓参りをして、家の祭壇の確認をして、準備はほとんどできていたので大した作業はなかった。親が早く帰って来させるために準備がたくさんあるとよく言うのだけど、大したことがない場合が多い。今回なら夜に帰っても十分問題なかった。晩ご飯を食べてから会食時の挨拶を調べて文章を組み立てて軽くリハーサルしたりしていた。&lt;/p>
&lt;h2 id="草刈り機探し">草刈り機探し&lt;/h2>
&lt;p>農業を真面目にやるわけではなくても田んぼを維持する上で草刈りという厄介な作業がある。雑草はいつでも常に生えてくるので常に除草したり刈り取りしたりしないといけない。&lt;/p>
&lt;p>雑草の丈が低いときはトラクターで耕してしまうことはできるが、放っておいて伸びてしまうとトラクターのロータリーに巻きついてしまう。過去に普通の草刈り機 (肩にかけて丸い刃が回転するもの) で &lt;a href="/diary/diary/posts/2022/0717/">伸び切った雑草の草刈り&lt;/a> を行った。親と2人で丸1日かかっていて、さらに草刈り機の振動で体への負担も大きかった。筋肉痛になったり腕が痺れてしばらく取れないといった状況だったと思う。&lt;/p>
&lt;p>もっと楽に草刈りする方法はないかと調べてみた。一番強力なのはトラクターのアタッチメントを草刈り仕様に交換して刈り取るという方法。これはよさそうではあるが、調べてみるとアタッチメントの交換そのものが大変なようにみえる。アタッチメントは100-200kgほどあるので、外すのは簡単とあったけど、取り付けるのはアタッチメントの位置を調整して付ける必要があるのでかなりの重労働だという。慣れた人でも1-2時間かかるように書いてあったのでそうじゃない私がやると3時間ぐらいかかる作業にみえる。なによりも重労働は怪我をするリスクが高い。&lt;/p>
&lt;p>よい方法はないかと検索していて OREC (オーレック) 社の &lt;a href="https://www.orec-jp.com/product/mower/bull/">BULL MOWER&lt;/a> という草刈り機がよさそうにみえた。次の動画をみるとわかりやすい。車輪がクローラータイプのものには立ち乗りのステップをつけられる。立ち乗りしながら草刈りできる。これは発明と言ってよいと思う。田んぼのような凸凹した地面で歩くのはわりとしんどくて疲弊する。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/o1BokICIg_s" allowfullscreen title="ハンマーナイフモア【OREC HRC664】爆走草刈り！草だらけの1反半の田んぼ(休耕地)がスッキリ。">&lt;/iframe>
&lt;/div>
&lt;p>同じ動画主の別の動画で、一反 (約1000平方メートル) の休耕地の草刈りをするのに動画を撮りながらで1時間ほどだという。過去に私が普通の草刈り機で同じ広さの田んぼを8時間ぐらい作業していたと思う。さらに刈ってから干して燃やさないといけない。おそらく BULL MOWER は細かく砕いているようにみえるのでこの後にトラクター耕せばそれで終わるようにもみえる。BULL MOWER の値段を調べると、機種にもよるが実売価格だと60-90万円ぐらいらしい。農業機械は20-30年使うのでどうせ買うならいま最新の製品にするとよさそうだと思う。そうすると、90万円になって、たかだか草を刈るのにこれだけの初期投資が必要になる。農業は大変。&lt;/p></content></item><item><title>他山の転がる石</title><link>/diary/posts/2023/0728/</link><pubDate>Fri, 28 Jul 2023 13:41:15 +0900</pubDate><guid>/diary/posts/2023/0728/</guid><description>23時に寝て3時に起きて5時に起きて7時に起きた。昨日は早く帰ってきてまたオフィスに戻るつもりが、そのままゆっくり過ごしていたので休憩してた。
プレスリリース前のドキュメントチェック いよいよ来週に私が9ヶ月に渡って開発をマネジメントしてきたプロダクトのプレスリリースがあるらしい。4月末の段階でプレスリリースできる状態にはあったものの、足りない機能もあったし、展示会に出展して反応をみたり、営業さんとの調整もあったりで3ヶ月ほど時間を要した感じだ。発表されたプレスリリースを引用してうちの会社の事例紹介も書くつもり。まだまだ開発の課題はあるし、気を抜ける状況ではないが、いろんな歯車が噛み合ってきて、期待した未来になるよう、その方向にモノゴトが収束しているようにみえる。私にとっては結果はもう既定路線になっていて、あとは自分がどれだけがんばれるかでその品質が変わるだけの状況になりつつある。
開発においても「ラストワンマイル」に入りつつあるし、私の体力があと半年ぐらいもてばそれでいいんじゃないかと思う。まだまだ先は長いのだけど、終わりがみえてきて、ラストスパートをがんばっていこうといった心境になっている。
ビッグモーター問題の考察 先日 ビッグモーターの記者会見 をみた。そのときに元幹部社員で youtube に動画をあげている方が副社長である息子について言及していた。その後の報道もみていてその真偽も明らかになりつつあるので動画も貼っておく。
たまたま次の記事をみて、その副社長の line のスクリーンショットが公開されていた。
公開！ワンマン経営の果てに…ビッグモーター「兼重前社長親子の大豪邸」と戦慄の「罵倒LINE」 これをみていて思ったことの1つは「権力は腐敗する」の典型例なのだろうと思う。社長の息子というだけで、苦労も実績もない中で経営者になってしまって、権力を振るううちに度が過ぎてしまったのではないかと思えた。言い方を変えると、この副社長も社長の息子として生まれて不幸だった側面があるようにも思えた。普通の人は社内の人間関係を築くのに葛藤や逡巡を積み重ねて経験を増やしていくところが、社長の息子として特別扱いされるうちに分からなくなってしまったのではないかと推測する。
以前 dmm の亀山さんがこんなことを言っていた。
権力のもっとも上手い使い方は「持ってても使わない」こと。
「権力者の横暴」についてどう思いますか――DMM亀山会長に聞いてみた
私も過去にメディア力のコントロールが難しいことに気付いたことがある。会社で大きな成果をあげると、途端に周りが忖度し始めて普通の発言が周りに大きな影響力を与えたり、意図しない結果をもたらすことに気付いた。そうなったらできることは「発言しない」か「辞める」かの2択になる。亀山さんが仰っていることは前者のやり方に近いものと推測するが、権力をもってしまった時点でとても扱いが難しいことを自覚するのが大事だと思えた。</description><content>&lt;p>23時に寝て3時に起きて5時に起きて7時に起きた。昨日は早く帰ってきてまたオフィスに戻るつもりが、そのままゆっくり過ごしていたので休憩してた。&lt;/p>
&lt;h2 id="プレスリリース前のドキュメントチェック">プレスリリース前のドキュメントチェック&lt;/h2>
&lt;p>いよいよ来週に私が9ヶ月に渡って開発をマネジメントしてきたプロダクトのプレスリリースがあるらしい。4月末の段階でプレスリリースできる状態にはあったものの、足りない機能もあったし、展示会に出展して反応をみたり、営業さんとの調整もあったりで3ヶ月ほど時間を要した感じだ。発表されたプレスリリースを引用してうちの会社の事例紹介も書くつもり。まだまだ開発の課題はあるし、気を抜ける状況ではないが、いろんな歯車が噛み合ってきて、期待した未来になるよう、その方向にモノゴトが収束しているようにみえる。私にとっては結果はもう既定路線になっていて、あとは自分がどれだけがんばれるかでその品質が変わるだけの状況になりつつある。&lt;/p>
&lt;p>開発においても「ラストワンマイル」に入りつつあるし、私の体力があと半年ぐらいもてばそれでいいんじゃないかと思う。まだまだ先は長いのだけど、終わりがみえてきて、ラストスパートをがんばっていこうといった心境になっている。&lt;/p>
&lt;h2 id="ビッグモーター問題の考察">ビッグモーター問題の考察&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0725/#ビッグモーターの記者会見">ビッグモーターの記者会見&lt;/a> をみた。そのときに元幹部社員で youtube に動画をあげている方が副社長である息子について言及していた。その後の報道もみていてその真偽も明らかになりつつあるので動画も貼っておく。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/W7CXsB5kmzo" allowfullscreen title="ビッグモーターの保険金不正請求問題がおきた本当の理由を元社員が解説します！">&lt;/iframe>
&lt;/div>
&lt;p>たまたま次の記事をみて、その副社長の line のスクリーンショットが公開されていた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://friday.kodansha.co.jp/article/324024">公開！ワンマン経営の果てに…ビッグモーター「兼重前社長親子の大豪邸」と戦慄の「罵倒LINE」&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これをみていて思ったことの1つは「権力は腐敗する」の典型例なのだろうと思う。社長の息子というだけで、苦労も実績もない中で経営者になってしまって、権力を振るううちに度が過ぎてしまったのではないかと思えた。言い方を変えると、この副社長も社長の息子として生まれて不幸だった側面があるようにも思えた。普通の人は社内の人間関係を築くのに葛藤や逡巡を積み重ねて経験を増やしていくところが、社長の息子として特別扱いされるうちに分からなくなってしまったのではないかと推測する。&lt;/p>
&lt;p>以前 dmm の亀山さんがこんなことを言っていた。&lt;/p>
&lt;blockquote>
&lt;p>権力のもっとも上手い使い方は「持ってても使わない」こと。&lt;/p>
&lt;p>&lt;a href="https://bunshun.jp/articles/-/6711">「権力者の横暴」についてどう思いますか――DMM亀山会長に聞いてみた&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>私も過去にメディア力のコントロールが難しいことに気付いたことがある。会社で大きな成果をあげると、途端に周りが忖度し始めて普通の発言が周りに大きな影響力を与えたり、意図しない結果をもたらすことに気付いた。そうなったらできることは「発言しない」か「辞める」かの2択になる。亀山さんが仰っていることは前者のやり方に近いものと推測するが、権力をもってしまった時点でとても扱いが難しいことを自覚するのが大事だと思えた。&lt;/p></content></item><item><title>開発とレビューで手いっぱい</title><link>/diary/posts/2023/0727/</link><pubDate>Thu, 27 Jul 2023 08:06:42 +0900</pubDate><guid>/diary/posts/2023/0727/</guid><description>2時に寝て3時半に起きて6時に起きて7時に起きた。最近は起き上がるまでに1時間ぐらいかかる。
開発の佳境に入ってきているので、メンバーの設計レビュー、コードレビューが増えてきている。メンバーも課題管理に慣れてきて開発のワークフローが洗練されてきている。私がボトルネックになりかける兆候がみえるようになってきてよい感じ。
差分比較の初期実装 昨日の続き 。一通り openldap 向けの実装で動くようになったのでマージリクエストに整理して送るところまでできた。
この変更によって id 連携のためのインターフェースを変更することになった。いま外部連携先として6種類あるので6つの実装を変更しないといけない。作業は機械的にできるのでなんら難しくないけれど、こういうインターフェースの変更作業が得意ではないというか、あまり好きではない。エディターや ide の機能で置換できないから、ソースコードを1つずつ確認しながら手で書き換えていく。まったく同じ作業をいくつものソースコードで行わないといけない。そういう作業がしんどいと思ってしまう。それでも静的型付けなら型チェックできるから修正漏れがなくて安心できるのがよい。
神戸阪急百貨店のデパ地下 三ノ宮駅にすぐ近くに阪急百貨店がある。もちろんあることは知っていたのだけど、このエリアには入ったことがなくてどういうゾーンになっているか知らなかった。もう5年ぐらい住んでいるのに行ったことのない場所だった。たまたまスーパーのお惣菜のお寿司の話題になって 阪急百貨店の地下 にもありますよと教えてもらった。せっかくなので試しに行ってみた。こんな場所あったんやと初めて入って驚いた。ここはデパ地下の一画なのでやや特別な買いものをする雰囲気がするエリアでお値段もそれ相応な感じだった。私は庶民がいくスーパーで普通に買いものをしているので普段行くような場所ではないけれど、たまにお客さんが来たときやイベントでケータリングするときなどにはよいかもしれない。知らない場所を知るよい機会になった。</description><content>&lt;p>2時に寝て3時半に起きて6時に起きて7時に起きた。最近は起き上がるまでに1時間ぐらいかかる。&lt;/p>
&lt;p>開発の佳境に入ってきているので、メンバーの設計レビュー、コードレビューが増えてきている。メンバーも課題管理に慣れてきて開発のワークフローが洗練されてきている。私がボトルネックになりかける兆候がみえるようになってきてよい感じ。&lt;/p>
&lt;h2 id="差分比較の初期実装">差分比較の初期実装&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0726/#差分比較の処理">昨日の続き&lt;/a> 。一通り openldap 向けの実装で動くようになったのでマージリクエストに整理して送るところまでできた。&lt;/p>
&lt;p>この変更によって id 連携のためのインターフェースを変更することになった。いま外部連携先として6種類あるので6つの実装を変更しないといけない。作業は機械的にできるのでなんら難しくないけれど、こういうインターフェースの変更作業が得意ではないというか、あまり好きではない。エディターや ide の機能で置換できないから、ソースコードを1つずつ確認しながら手で書き換えていく。まったく同じ作業をいくつものソースコードで行わないといけない。そういう作業がしんどいと思ってしまう。それでも静的型付けなら型チェックできるから修正漏れがなくて安心できるのがよい。&lt;/p>
&lt;h2 id="神戸阪急百貨店のデパ地下">神戸阪急百貨店のデパ地下&lt;/h2>
&lt;p>三ノ宮駅にすぐ近くに阪急百貨店がある。もちろんあることは知っていたのだけど、このエリアには入ったことがなくてどういうゾーンになっているか知らなかった。もう5年ぐらい住んでいるのに行ったことのない場所だった。たまたまスーパーのお惣菜のお寿司の話題になって &lt;a href="https://www.hankyu-dept.co.jp/kobe/floor/floorb1.html">阪急百貨店の地下&lt;/a> にもありますよと教えてもらった。せっかくなので試しに行ってみた。こんな場所あったんやと初めて入って驚いた。ここはデパ地下の一画なのでやや特別な買いものをする雰囲気がするエリアでお値段もそれ相応な感じだった。私は庶民がいくスーパーで普通に買いものをしているので普段行くような場所ではないけれど、たまにお客さんが来たときやイベントでケータリングするときなどにはよいかもしれない。知らない場所を知るよい機会になった。&lt;/p></content></item><item><title>ここから1ヶ月は開発に集中</title><link>/diary/posts/2023/0726/</link><pubDate>Wed, 26 Jul 2023 09:07:06 +0900</pubDate><guid>/diary/posts/2023/0726/</guid><description>1時半に寝て3時半に起きて6時に起きて7時に起きた。昨日はビッグモーターさんの記者会見をみて、ネット上の記事を読んだりしていて夜更しした。
差分比較の処理 非機能要件である 差分比較のための機能 の開発をこのマイルストーンでやってしまう。なるべくメンバーにはアプリケーションのメイン機能を開発してもらって、非機能要件のようなサブ機能を私が作ってサポートしていく。今日は既存のコードを読んで設計したり、調査のためのコードを書いて振る舞いを確認したりしていた。いくつか詳細は残っているけれど、概ねいけそうかなというところまでやって一区切りつけて一旦手を止めて、メンバーの issue やブランチを眺めたりしていた。
法要の調整 今週末に父の初盆がある。準備の状況を母と連絡してやり取りしていた。土・日・月と帰って、月曜日は実家でリモートワークしようと思う。ジモティー検索 してオフィスに使えそうなものがあれば持って帰ろうと考えていたが、そんなうまくはいかないようだ。出品されているものの中にはもう売り切れているのか？問い合わせても返信が返ってこないものや先着で売り切れてしまったものもある。ジモティーはたまにみて気長に探すのでちょうどよいと思う。</description><content>&lt;p>1時半に寝て3時半に起きて6時に起きて7時に起きた。昨日はビッグモーターさんの記者会見をみて、ネット上の記事を読んだりしていて夜更しした。&lt;/p>
&lt;h2 id="差分比較の処理">差分比較の処理&lt;/h2>
&lt;p>非機能要件である &lt;a href="/diary/diary/posts/2023/0720/#差分比較のための機能">差分比較のための機能&lt;/a> の開発をこのマイルストーンでやってしまう。なるべくメンバーにはアプリケーションのメイン機能を開発してもらって、非機能要件のようなサブ機能を私が作ってサポートしていく。今日は既存のコードを読んで設計したり、調査のためのコードを書いて振る舞いを確認したりしていた。いくつか詳細は残っているけれど、概ねいけそうかなというところまでやって一区切りつけて一旦手を止めて、メンバーの issue やブランチを眺めたりしていた。&lt;/p>
&lt;h2 id="法要の調整">法要の調整&lt;/h2>
&lt;p>今週末に父の初盆がある。準備の状況を母と連絡してやり取りしていた。土・日・月と帰って、月曜日は実家でリモートワークしようと思う。&lt;a href="/diary/diary/posts/2023/0723/#ジモティー検索">ジモティー検索&lt;/a> してオフィスに使えそうなものがあれば持って帰ろうと考えていたが、そんなうまくはいかないようだ。出品されているものの中にはもう売り切れているのか？問い合わせても返信が返ってこないものや先着で売り切れてしまったものもある。ジモティーはたまにみて気長に探すのでちょうどよいと思う。&lt;/p></content></item><item><title>小さい冷蔵庫が届いた</title><link>/diary/posts/2023/0725/</link><pubDate>Tue, 25 Jul 2023 08:26:38 +0900</pubDate><guid>/diary/posts/2023/0725/</guid><description>0時半に寝て1時半と4時に起きて7時に起きた。やや吐き気がして気分が悪くてうまく眠れなかった。
小さい冷蔵庫 先日の 暑さ対策委員会 の施策の1つ。冷たい飲みものを常備して暑さを紛らわす。
購入した冷蔵庫の容量は31Lながら敷居を取り外せるので用途にあわせて使いやすい。うちのオフィス向けには十分に大きい。1人でしか使わないならもう1まわり小さいサイズでもよかったかもしれない。
2lペットボトル: 5本 500mlペットボトル: 14本 350ml缶: 25本 冷凍もできるスペックなので冷蔵で使うなら十分過ぎる性能。直冷式なのでコンプレッサーの動作音がある。それでも静音 28db なのでうるさくはない。寝室に置くなら音は気になると思われるが、オフィスならパソコンやサーキュレーターの動作音、周りの雑音などもあるからほとんど気にならない程度だと思う。うちのオフィス向けには許容できる動作音だった。あとは冷却中に側面の放熱板はわりと熱くなる。これによって部屋温度が上がってしまう。もともと32℃あるのでちょっとぐらい暑くなっても焼け石に水といった感覚。
2lのお茶を冷蔵庫に保管しておいて、いつでも冷たいお茶が飲めるというのは想像以上に快適さをもたらしてくれた。これまでその時々においてコンビニに買い出しへ行ったり、ぬるくなったコーヒーやお茶を普通に飲んでいた。
ビッグモーターの記者会見 以前からストレッチのトレーナーさんにすごいことになっていますよとニュースを聞いていたけど、全然知らなくてよく分かってなかった。ちょうど晩ご飯食べた後に社長の記者会見があるというのでみた。2時間あって長かったけど、なんだかんだで最後までみてしまった。せっかくなので所感を書いてみる。
社長は71歳ということでこの年代の人は、その会社の企業風土や文化を普通だと思っていて、大きな不正が起こってしまったことに昔からそうやってきたのにどうして？といった気持ちなのではないかと思う。メディアでは (おそらく忖度して) 「保険金の不正請求」という言葉になっているが、内容からは保険金詐欺に近く、金額も大きいことから刑事罰なら大きな量刑になるという意見もある。にも関わらず「どうしてこんな不正をしてしまったのか？」と他人事にように話してしまうところから本心を垣間みえた気がした。もちろん当人も責任は自分にあると何度も回答していて、それ自体を否定しているわけではない。昔からのやり方でやってきて大きな不正に発展してしまった経緯や背景を、本当の意味で理解できないのだろうと伺えた。「厳しいノルマを課しても不正をしていない社員もいる」とも答えていたが、いま話していることは「なぜ不正が起きてしまったか」なのでそういう自己弁護になってしまうところが本音だったのだろうと思えた。世界的にも長期間務めた偉大なリーダーが懸念を抱く行動を取っているが、時代が変わったときに年寄りがトップにいるべきではないのだと言うのも感じた。
その後、youtube で2017年に退職した元幹部社員でこの事件についてコメントされていた動画もみた。その動画によると、社長の息子が副社長になって、実質的に経営の代替わりが始まったときに会社の制度やノルマなども大きく変化して、今日に至るような不正のきっかけになってしまったのではないか？と考察されていた。その真偽はわからないが、記者会見でも副社長はなぜ出席しないのか？といった質問も多く出ていた。社内で大きな影響力があったのは間違いないのだろう。その視点からは社長は息子の泥をかぶって非難を一斉に浴びて家族を守ったという見方もできた。</description><content>&lt;p>0時半に寝て1時半と4時に起きて7時に起きた。やや吐き気がして気分が悪くてうまく眠れなかった。&lt;/p>
&lt;h2 id="小さい冷蔵庫">小さい冷蔵庫&lt;/h2>
&lt;p>先日の &lt;a href="/diary/diary/posts/2023/0721/">暑さ対策委員会&lt;/a> の施策の1つ。冷たい飲みものを常備して暑さを紛らわす。&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/gp/product/B0BS651YSN?ie=UTF8&amp;th=1&amp;linkCode=li2&amp;tag=t2y-diary-22&amp;linkId=4e78831605139607a13592a2c64484d6&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B0BS651YSN&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=t2y-diary-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=t2y-diary-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B0BS651YSN" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;p>購入した冷蔵庫の容量は31Lながら敷居を取り外せるので用途にあわせて使いやすい。うちのオフィス向けには十分に大きい。1人でしか使わないならもう1まわり小さいサイズでもよかったかもしれない。&lt;/p>
&lt;ul>
&lt;li>2lペットボトル: 5本&lt;/li>
&lt;li>500mlペットボトル: 14本&lt;/li>
&lt;li>350ml缶: 25本&lt;/li>
&lt;/ul>
&lt;p>冷凍もできるスペックなので冷蔵で使うなら十分過ぎる性能。直冷式なのでコンプレッサーの動作音がある。それでも静音 28db なのでうるさくはない。寝室に置くなら音は気になると思われるが、オフィスならパソコンやサーキュレーターの動作音、周りの雑音などもあるからほとんど気にならない程度だと思う。うちのオフィス向けには許容できる動作音だった。あとは冷却中に側面の放熱板はわりと熱くなる。これによって部屋温度が上がってしまう。もともと32℃あるのでちょっとぐらい暑くなっても焼け石に水といった感覚。&lt;/p>
&lt;p>2lのお茶を冷蔵庫に保管しておいて、いつでも冷たいお茶が飲めるというのは想像以上に快適さをもたらしてくれた。これまでその時々においてコンビニに買い出しへ行ったり、ぬるくなったコーヒーやお茶を普通に飲んでいた。&lt;/p>
&lt;h2 id="ビッグモーターの記者会見">ビッグモーターの記者会見&lt;/h2>
&lt;p>以前からストレッチのトレーナーさんにすごいことになっていますよとニュースを聞いていたけど、全然知らなくてよく分かってなかった。ちょうど晩ご飯食べた後に社長の記者会見があるというのでみた。2時間あって長かったけど、なんだかんだで最後までみてしまった。せっかくなので所感を書いてみる。&lt;/p>
&lt;p>社長は71歳ということでこの年代の人は、その会社の企業風土や文化を普通だと思っていて、大きな不正が起こってしまったことに昔からそうやってきたのにどうして？といった気持ちなのではないかと思う。メディアでは (おそらく忖度して) 「保険金の不正請求」という言葉になっているが、内容からは保険金詐欺に近く、金額も大きいことから刑事罰なら大きな量刑になるという意見もある。にも関わらず「どうしてこんな不正をしてしまったのか？」と他人事にように話してしまうところから本心を垣間みえた気がした。もちろん当人も責任は自分にあると何度も回答していて、それ自体を否定しているわけではない。昔からのやり方でやってきて大きな不正に発展してしまった経緯や背景を、本当の意味で理解できないのだろうと伺えた。「厳しいノルマを課しても不正をしていない社員もいる」とも答えていたが、いま話していることは「なぜ不正が起きてしまったか」なのでそういう自己弁護になってしまうところが本音だったのだろうと思えた。世界的にも長期間務めた偉大なリーダーが懸念を抱く行動を取っているが、時代が変わったときに年寄りがトップにいるべきではないのだと言うのも感じた。&lt;/p>
&lt;p>その後、youtube で2017年に退職した元幹部社員でこの事件についてコメントされていた動画もみた。その動画によると、社長の息子が副社長になって、実質的に経営の代替わりが始まったときに会社の制度やノルマなども大きく変化して、今日に至るような不正のきっかけになってしまったのではないか？と考察されていた。その真偽はわからないが、記者会見でも副社長はなぜ出席しないのか？といった質問も多く出ていた。社内で大きな影響力があったのは間違いないのだろう。その視点からは社長は息子の泥をかぶって非難を一斉に浴びて家族を守ったという見方もできた。&lt;/p></content></item><item><title>マイルストーン終了直前の余裕</title><link>/diary/posts/2023/0724/</link><pubDate>Mon, 24 Jul 2023 17:11:52 +0900</pubDate><guid>/diary/posts/2023/0724/</guid><description>0時に寝て3時に起きて5時に起きて7時に起きた。足のしびれは治ったみたい。
マイルストーン終了直前の issue 整理 明日の火曜日がマイルストーン終了日でインフラ系や外部ライブラリの重たい issue は一通り完了したのでプロダクトの方に注力できるようになった。自分の issue よりもメンバーの issue や次マイルストーンの issue の整理などを主にしていた。自分の issue をやるよりも、メンバーやチームのサポート系の方に注力しようと思ってプロジェクトマネジメント的なところの作業をしていた。自分が開発や調査をやり始めると、どうしても注意力や認知を issue の方に取られてしまって全体を眺めたり管理したりといった側面が疎かになる気がする。会議を減らして自分の時間を増やしても、メンバーの都合でサポートする機会をみていないといけないのでこのバランスを取るのはなかなか難しいなと思う。少し時間的な余裕をもった方がよいかなといったことも思わないでもない。</description><content>&lt;p>0時に寝て3時に起きて5時に起きて7時に起きた。足のしびれは治ったみたい。&lt;/p>
&lt;h2 id="マイルストーン終了直前の-issue-整理">マイルストーン終了直前の issue 整理&lt;/h2>
&lt;p>明日の火曜日がマイルストーン終了日でインフラ系や外部ライブラリの重たい issue は一通り完了したのでプロダクトの方に注力できるようになった。自分の issue よりもメンバーの issue や次マイルストーンの issue の整理などを主にしていた。自分の issue をやるよりも、メンバーやチームのサポート系の方に注力しようと思ってプロジェクトマネジメント的なところの作業をしていた。自分が開発や調査をやり始めると、どうしても注意力や認知を issue の方に取られてしまって全体を眺めたり管理したりといった側面が疎かになる気がする。会議を減らして自分の時間を増やしても、メンバーの都合でサポートする機会をみていないといけないのでこのバランスを取るのはなかなか難しいなと思う。少し時間的な余裕をもった方がよいかなといったことも思わないでもない。&lt;/p></content></item><item><title>オフィスは夜の方が涼しい</title><link>/diary/posts/2023/0723/</link><pubDate>Sun, 23 Jul 2023 05:33:33 +0900</pubDate><guid>/diary/posts/2023/0723/</guid><description>22時からオフィスで作業していたのもあり、そのまま夜通しで作業して、6時に帰ってきて寝て9時に起きた。こんなことやっているから体調が悪くなりそうな気がする。宅急便を受け取る必要があったので午前中はのんびりしてた。なぜか宅配ボックスは毎日埋まっていてまったく使えない状態になっている。今後はコンビニ受け取りかオフィスに送るようにしよう。
ジモティー検索 以前 ジモティーで椅子を購入 してよかったので実家で使う家具でよさそうなもの、具体的にはダイニングテーブルを探している。
ジモティーとヤフオクの違いとして、ジモティーはオークションじゃないから持ち主が処分したい品物はゼロ円で譲りますと出品されていたりする。その代わり、送付はせず引き取りが必須となる。ダイニングテーブルのような大きいものだと粗大ゴミに出すにもお金がいるから持っていってくれるならそれでいいといった感覚だろうか。さらに地域に特化した引き取りを必須条件にするので誰もが応募できるわけでもない。常にみていなくてもタイミングがあえば格安で入手できる可能性がある。そこで社用車の荷室スペースのサイズを確認していた。後部座席を倒すことで荷室スペースを拡げられる。このサイズならたいていのダイニングテーブルは積載できそうに思える。
長さ: 680-1,480mm 幅: 1,000mm 高さ: 850mm 実家の離れオフィスのリモートワーク、さらには今後のコワーキングスペースとして使うときの家具をジモティーでのリサイクルも考慮しながら揃えていきたい。
scim 向けの urn パーサーの拡張 先日 チームのメンバーが実装した scim 連携のレビュー をした。そのときに scim の urn のパース処理を自前で実装していた。それ自体は悪くないが、urn のような標準化されたものなら専用ライブラリを使った方がよいのではないか？と思って調べてみた。予想通り作っている人はいたものの、それほど煩雑なものでもないのでライブラリを使うほどでもないのかもしれない。
github.com/leodido/go-urn 例えば、次のような scim 向けの urn がある。
urn:ietf:params:scim:schemas:core:2.0:User go-urn は汎用の urn パーサーなので scim に特化した属性などをパースしてくれない。それについて issue で質問してみたら、scim 向けのサブパーサー作ったらいいんじゃない？というコメントが返ってきた。そこで rfc-7643 の urn の仕様を眺めながら試しに実装してみた。この機能がマージされてもこの用途のためだけに依存ライブラリを増やすかどうかはまだ懐疑的なところ。とはいえ、せっかく調査して実装したから誰かの役に立つかもしれないと思って pr を送った。
Add scim (rfc 7643) specific struct #33</description><content>&lt;p>22時からオフィスで作業していたのもあり、そのまま夜通しで作業して、6時に帰ってきて寝て9時に起きた。こんなことやっているから体調が悪くなりそうな気がする。宅急便を受け取る必要があったので午前中はのんびりしてた。なぜか宅配ボックスは毎日埋まっていてまったく使えない状態になっている。今後はコンビニ受け取りかオフィスに送るようにしよう。&lt;/p>
&lt;h2 id="ジモティー検索">ジモティー検索&lt;/h2>
&lt;p>以前 &lt;a href="/diary/diary/posts/2023/0505/#ジモティーで椅子の受け取り">ジモティーで椅子を購入&lt;/a> してよかったので実家で使う家具でよさそうなもの、具体的にはダイニングテーブルを探している。&lt;/p>
&lt;p>ジモティーとヤフオクの違いとして、ジモティーはオークションじゃないから持ち主が処分したい品物はゼロ円で譲りますと出品されていたりする。その代わり、送付はせず引き取りが必須となる。ダイニングテーブルのような大きいものだと粗大ゴミに出すにもお金がいるから持っていってくれるならそれでいいといった感覚だろうか。さらに地域に特化した引き取りを必須条件にするので誰もが応募できるわけでもない。常にみていなくてもタイミングがあえば格安で入手できる可能性がある。そこで社用車の荷室スペースのサイズを確認していた。後部座席を倒すことで荷室スペースを拡げられる。このサイズならたいていのダイニングテーブルは積載できそうに思える。&lt;/p>
&lt;ul>
&lt;li>長さ: 680-1,480mm&lt;/li>
&lt;li>幅: 1,000mm&lt;/li>
&lt;li>高さ: 850mm&lt;/li>
&lt;/ul>
&lt;p>実家の離れオフィスのリモートワーク、さらには今後のコワーキングスペースとして使うときの家具をジモティーでのリサイクルも考慮しながら揃えていきたい。&lt;/p>
&lt;h2 id="scim-向けの-urn-パーサーの拡張">scim 向けの urn パーサーの拡張&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0706/#コードレビュー">チームのメンバーが実装した scim 連携のレビュー&lt;/a> をした。そのときに scim の urn のパース処理を自前で実装していた。それ自体は悪くないが、urn のような標準化されたものなら専用ライブラリを使った方がよいのではないか？と思って調べてみた。予想通り作っている人はいたものの、それほど煩雑なものでもないのでライブラリを使うほどでもないのかもしれない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/leodido/go-urn">github.com/leodido/go-urn&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>例えば、次のような scim 向けの urn がある。&lt;/p>
&lt;pre tabindex="0">&lt;code>urn:ietf:params:scim:schemas:core:2.0:User
&lt;/code>&lt;/pre>&lt;p>go-urn は汎用の urn パーサーなので scim に特化した属性などをパースしてくれない。それについて issue で質問してみたら、scim 向けのサブパーサー作ったらいいんじゃない？というコメントが返ってきた。そこで &lt;a href="https://datatracker.ietf.org/doc/html/rfc7643#section-10">rfc-7643&lt;/a> の urn の仕様を眺めながら試しに実装してみた。この機能がマージされてもこの用途のためだけに依存ライブラリを増やすかどうかはまだ懐疑的なところ。とはいえ、せっかく調査して実装したから誰かの役に立つかもしれないと思って pr を送った。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/leodido/go-urn/pull/33">Add scim (rfc 7643) specific struct #33&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>歩くと足がしびれるようになった</title><link>/diary/posts/2023/0722/</link><pubDate>Sat, 22 Jul 2023 12:46:36 +0900</pubDate><guid>/diary/posts/2023/0722/</guid><description>1時半に寝て3時頃に起きて5時に起きた。だらだらしているうちに寝落ちして7時に起きた。
ストレッチ 今週は月曜日を休んでしまった分、取り返そうと残りの平日をがんばって働いていたので座っている時間が長かった。だいたい毎日0時ぐらいまでオフィスで作業していたと思う。疲労の自覚症状はないものの、座っていた時間と身体の疲弊は比例するのでよからぬ予感がしていた。すると、ふくらはぎの張りがひどかった。とくに左のふくらはぎがパンパンでかなり苦しかった。あとおしりの後ろの筋肉などもいつもよりずっとよくなかった。下肢全体があまりよくなくて予想は的中した。あとオフィスが暑いから通常以上に体調に負荷をかけているのではないか？という懸念もある。今日の開脚幅は開始前154cmで、ストレッチ後157cmだった。調子の悪いときの数値という印象。
LT 会 こんなことやってみましたLT会 (テーマフリー) に参加した。オフライン・オンラインをあわせて10人ほど参加していた。5人発表して2時間ぐらいだったので LT と言いながら1人20-30分は話していた。
私は前に チーム勉強会で使ったスマートプラグと決済 の資料を再利用した。スマートプラグを tapo と amazon 社のものを間違えて持っていったのでデモできなかった。LT だから資料をかいつまんで話すのでもよいかなとは思っていたけど、ちゃんと準備せんとあかんかった。
おもしろかった発表に FileMaker を使ったモデラーズフリーというアプリケーションがある。作者はアニメをみながらガンプラを作るそうで、アニメみながらガンプラの製作過程を記録するためのツールだという。ガンプラ作るときに netflix や abema を即再生できますよと喧伝していたが、その時点で一般人は？？？がつくようなツールなのかなw
apple の子会社の claris 社が販売している FileMaker というパッケージがある。もともと カード型データベース というものだったが、いろいろあって、いまはローコードの開発プラットフォームになっているらしい。イメージとしては ms 社の visual basic と access が悪魔合体したようなツール。中小企業の業務システムなら大半のものを作れるらしい。ビジュアルプログラミングな仕組みも提供していて、その制御文は日本語で記述できて、海外のツールなのになんで日本語でプログラミングできるのだろう？と思ったら、そのインターフェイスは i18n 対応していて、フランス語でもロシア語でも変換できるという。プログラミング言語の予約語を i18n 対応しているのだと推測する。無駄にすごいなと感心した。プログラミングできない人が簡単にそれっぽいアプリケーションを作るための仕組みなのでプログラマーが使うツールではないが、40年近い歴史があるので独自のガラパゴス的な進化を遂げていて Feature creep を飛び越えてヤマタノオロチのようなプロダクトにみえた。
足のしびれ LT 会に出た後、なんかしんどかった。また歩いていて足がしびれることに気付く。体調悪そうと帰って18時頃から寝ていた。横になったり自転車に乗っているときはなんともない。軽くググってみると、歩いていて足がしびれるのは糖尿病、動脈硬化、その他の病気、熱中症の初期症状と様々な原因が考えられるらしい。どれもありそうな気がする。1週間ぐらい様子をみてみようと思う。22時頃に起きて、それからまたオフィスに戻って作業していた。足がしびれているのだから寝とけよっと思うところだが、やることもいっぱいあるので元気になったら動く。夜の方がオフィスが涼しいこともわかったのでその方が効率がよい。</description><content>&lt;p>1時半に寝て3時頃に起きて5時に起きた。だらだらしているうちに寝落ちして7時に起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週は月曜日を休んでしまった分、取り返そうと残りの平日をがんばって働いていたので座っている時間が長かった。だいたい毎日0時ぐらいまでオフィスで作業していたと思う。疲労の自覚症状はないものの、座っていた時間と身体の疲弊は比例するのでよからぬ予感がしていた。すると、ふくらはぎの張りがひどかった。とくに左のふくらはぎがパンパンでかなり苦しかった。あとおしりの後ろの筋肉などもいつもよりずっとよくなかった。下肢全体があまりよくなくて予想は的中した。あとオフィスが暑いから通常以上に体調に負荷をかけているのではないか？という懸念もある。今日の開脚幅は開始前154cmで、ストレッチ後157cmだった。調子の悪いときの数値という印象。&lt;/p>
&lt;h2 id="lt-会">LT 会&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/282356/">こんなことやってみましたLT会 (テーマフリー)&lt;/a> に参加した。オフライン・オンラインをあわせて10人ほど参加していた。5人発表して2時間ぐらいだったので LT と言いながら1人20-30分は話していた。&lt;/p>
&lt;p>私は前に &lt;a href="/diary/diary/posts/2023/0616/#チーム勉強会">チーム勉強会で使ったスマートプラグと決済&lt;/a> の資料を再利用した。スマートプラグを tapo と amazon 社のものを間違えて持っていったのでデモできなかった。LT だから資料をかいつまんで話すのでもよいかなとは思っていたけど、ちゃんと準備せんとあかんかった。&lt;/p>
&lt;p>おもしろかった発表に FileMaker を使ったモデラーズフリーというアプリケーションがある。作者はアニメをみながらガンプラを作るそうで、アニメみながらガンプラの製作過程を記録するためのツールだという。ガンプラ作るときに netflix や abema を即再生できますよと喧伝していたが、その時点で一般人は？？？がつくようなツールなのかなw&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/TYoERvgSKVc" allowfullscreen title="モデラーズフリー紹介">&lt;/iframe>
&lt;/div>
&lt;p>apple の子会社の claris 社が販売している &lt;a href="https://www.claris.com/filemaker/">FileMaker&lt;/a> というパッケージがある。もともと &lt;a href="https://ja.wikipedia.org/wiki/%E3%82%AB%E3%83%BC%E3%83%89%E5%9E%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9">カード型データベース&lt;/a> というものだったが、いろいろあって、いまはローコードの開発プラットフォームになっているらしい。イメージとしては ms 社の visual basic と access が悪魔合体したようなツール。中小企業の業務システムなら大半のものを作れるらしい。ビジュアルプログラミングな仕組みも提供していて、その制御文は日本語で記述できて、海外のツールなのになんで日本語でプログラミングできるのだろう？と思ったら、そのインターフェイスは i18n 対応していて、フランス語でもロシア語でも変換できるという。プログラミング言語の予約語を i18n 対応しているのだと推測する。無駄にすごいなと感心した。プログラミングできない人が簡単にそれっぽいアプリケーションを作るための仕組みなのでプログラマーが使うツールではないが、40年近い歴史があるので独自のガラパゴス的な進化を遂げていて &lt;a href="https://en.wikipedia.org/wiki/Feature_creep">Feature creep&lt;/a> を飛び越えてヤマタノオロチのようなプロダクトにみえた。&lt;/p>
&lt;h2 id="足のしびれ">足のしびれ&lt;/h2>
&lt;p>LT 会に出た後、なんかしんどかった。また歩いていて足がしびれることに気付く。体調悪そうと帰って18時頃から寝ていた。横になったり自転車に乗っているときはなんともない。軽くググってみると、歩いていて足がしびれるのは糖尿病、動脈硬化、その他の病気、熱中症の初期症状と様々な原因が考えられるらしい。どれもありそうな気がする。1週間ぐらい様子をみてみようと思う。22時頃に起きて、それからまたオフィスに戻って作業していた。足がしびれているのだから寝とけよっと思うところだが、やることもいっぱいあるので元気になったら動く。夜の方がオフィスが涼しいこともわかったのでその方が効率がよい。&lt;/p></content></item><item><title>なにもしないうちに一週間が過ぎた</title><link>/diary/posts/2023/0721/</link><pubDate>Fri, 21 Jul 2023 15:43:34 +0900</pubDate><guid>/diary/posts/2023/0721/</guid><description>2時に寝て何度か起きて6時に起きた。今週はゼロ時前後までオフィスで作業していることが多かったのであまり寝ていないが、月曜日にお休みをとった効果は抜群でほとんど疲労感はない。たまに休むことも大事なのかもしれない。
温湿度計 先日 暑さ対策委員会 を立ち上げて、まずは計測からだとエンペックスの温湿度計を購入したものが今日届いたので計測してみた。
11時頃は32℃、12時を超えると30℃過ぎぐらいに落ち着いた。夜になると28℃ぐらいまで下がった。ちなみにエアコンの温度設定は23℃となっている。午前中が一番暑いことに気付く。その理由は日当たりのよい部屋なので午前中は陽が窓から差し込むために窓付近があたためられるのだと推測する。幸いなのは湿度が40-50%と低いためにサーキュレーターで風を浴びているとなんとか暑さをしのげるところ。これで湿度が高い日はもうバテてお仕事とかできるんやろか？という気もする。
フロアの窓より遠いもっとも内側の区画は26℃になっている。エアコン設定の基本が25℃なので妥当な数値だし、普通に涼しい。私が感覚的に暑い、暑いと言っていたのが、私の感覚の問題ではなく、運営会社にクレームしても理解を得られるのではないかと思う。また週末か来週あたりに電話して相談してみようと思う。もしかしたらなにかしら対策を検討していてくれているかもしれない。
iijmio ギガプランの変更 先月の実家リモートワーク で普通にお仕事すると1GiB/日ぐらいは使うことに気付いた。2GiB プランだと全然足りないことに気付いたので 5GiB プランに変更した。これなら月に1週間ほど帰ってもお仕事できそう。
データeSIM ギガプラン 2ギガ 440円 5ギガ 660円</description><content>&lt;p>2時に寝て何度か起きて6時に起きた。今週はゼロ時前後までオフィスで作業していることが多かったのであまり寝ていないが、月曜日にお休みをとった効果は抜群でほとんど疲労感はない。たまに休むことも大事なのかもしれない。&lt;/p>
&lt;h2 id="温湿度計">温湿度計&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0716/">暑さ対策委員会&lt;/a> を立ち上げて、まずは計測からだとエンペックスの温湿度計を購入したものが今日届いたので計測してみた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0721_meter.jpg"/>
&lt;/figure>
&lt;p>11時頃は32℃、12時を超えると30℃過ぎぐらいに落ち着いた。夜になると28℃ぐらいまで下がった。ちなみにエアコンの温度設定は23℃となっている。午前中が一番暑いことに気付く。その理由は日当たりのよい部屋なので午前中は陽が窓から差し込むために窓付近があたためられるのだと推測する。幸いなのは湿度が40-50%と低いためにサーキュレーターで風を浴びているとなんとか暑さをしのげるところ。これで湿度が高い日はもうバテてお仕事とかできるんやろか？という気もする。&lt;/p>
&lt;p>フロアの窓より遠いもっとも内側の区画は26℃になっている。エアコン設定の基本が25℃なので妥当な数値だし、普通に涼しい。私が感覚的に暑い、暑いと言っていたのが、私の感覚の問題ではなく、運営会社にクレームしても理解を得られるのではないかと思う。また週末か来週あたりに電話して相談してみようと思う。もしかしたらなにかしら対策を検討していてくれているかもしれない。&lt;/p>
&lt;h2 id="iijmio-ギガプランの変更">iijmio ギガプランの変更&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0626/#実家の離れスペースで働いてみた">先月の実家リモートワーク&lt;/a> で普通にお仕事すると1GiB/日ぐらいは使うことに気付いた。2GiB プランだと全然足りないことに気付いたので 5GiB プランに変更した。これなら月に1週間ほど帰ってもお仕事できそう。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.iijmio.jp/gigaplan/">データeSIM ギガプラン&lt;/a>
&lt;ul>
&lt;li>2ギガ 440円&lt;/li>
&lt;li>5ギガ 660円&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>最後は人のチカラがモノを言う</title><link>/diary/posts/2023/0720/</link><pubDate>Thu, 20 Jul 2023 19:57:17 +0900</pubDate><guid>/diary/posts/2023/0720/</guid><description>2時半に寝て寝たのかどうかよく分からないながら5時頃に寝落ちして7時半に起きた。
差分比較のための機能 id 連携で運用のための非機能要件の1つとして更新された内容を確認できるようにしたい。非機能要件だから私が作るかと思ってあたためておいた issue に着手した。wikipedia によると差分という言葉には次の2つの用語があるのをみつけた。
Delta update Data differencing 数学やコンピューターの用語的には delta (ギリシャ語で変化を表す) という言葉を使う。os のパッケージングシステムで一部のパッケージをアップデートするようなことをデルタアップデートと呼ぶ。一方でコンピューターサイエンスにおいて2つのデータセット間の差分については diff という用語を使う。データの差分においては diff でよいのではないかと思う。そういった用語の定義から始めた。mongodb のコレクションのデータ定義をしたり、結合テストを書いて動かしてみたり、インフラのレイヤーから開発に着手した。
上司道 企業家として生き様と、人として求められること 第92回上司道 企業家として生き様と、人として求められること に参加した。なんとなくタイトルに惹かれた。上司道 に参加するのは3回目。
講師の牛島さんは昨日が誕生日だったらしく90歳だという。90歳になって zoom でオンライン勉強会の講師を務めるというのを、私はまったく想像できないけど、コンサルタントの第一線で活躍されてきた方の貫禄があった。もともとどういう主旨の勉強会だったのかよく分かっていないけれど、内容はビジネスの自己啓発セミナーに近いものになった。牛島さんが90年も生きてきて大事だと思える内容には普遍性や汎用性があるのだと思う。いくつか共感できる考え方もあった。
これからは頭の良い人 (IQ が高い) よりも心が豊かな人 (EQ が高い) の方が大事で組織に貢献する 一番大切なのは幸せであること 楽しく生きる (働く) 過去に働いた会社でも頭がよくて何でもよく理解しているのにプロジェクトにあまり貢献しない人がいることに気付いた。さぼっているわけでもない。その違いを「心が豊かな人 (EQ が高い) 人」という言葉でいくつか説明できるのではないかと思えた。新規プロジェクトのような、常に変化して、正解もわからないまま進める業務において、論理や頭のよさだけでうまくいくことはなくなってきつつあるのではないか。なんのためにそのプロジェクトをやるのか、自分はなぜここで働いているのか、といった問いに答えをもっている人は普通の社員とは行動が異なる。自身の価値観や展望と比較して、現状の課題や改善に気付くのでプロジェクトを前向きに進めていける。頭のよい人は「あれが問題」「これが問題」と問題を指摘してエスカレーションするだけで自らが課題をどう解決するかの答えをもっていない。そんなことを考えながらこの話しを聞いていた。
次の2つは最近の私の人生観や働き方と重なるところがある。私はもう無理してがんばったりしないし、自分が嫌なお仕事も一切しないように決めている。一般的にいう「働きたくない」という生き方を目指している。もちろん実際には働いているわけだけど、それはなるべく働く時間を、遊んでいる時間に置き換えられないかと模索している。その過程で辛いことやしんどいことも避けようと考えている。
なぜそれができるかというのも、20代30代と約20年働いてきて自身の価値観を育ててきたからだと捉えている。私はなにが楽しくて、なにが辛くて、なにをやりたくないか。これは人それぞれに違う。私には私にしかない価値観をもっている。それがわかってきたから、いま自分の会社を経営していて、毎日がとても楽しいし、自分の価値観にあわないことはすべて断るという判断基準も明確になっている。そんな勝手気ままでやっていけるの？という懸念を抱く人も多いと思う。ダメかもしれない。仮にやっていけなかったとしても、いまの自分は幸せで楽しいのだからそれでいいんじゃないかと思う。無理をしていまがしんどくても将来がよくなる保証なんてどこにもない。
牛島さんはマザーテレサとインドで実際に会って10日間ほど一緒に過ごしてその体験がその後の人生を大きく変えたように話されていた。マザーテレサに「社員を大事にしていますか？」と聞かれたときに「しています。」と答え、その後に「社員全員の名前を覚えていますか？」と聞かれたという。当時の牛島さんの会社の社員は300人以上いて全員は覚えていなかった。それで「愛情の反対は無関心なのですよ。」とマザーテレサに指摘されて大きな衝撃を受けたという。その後、帰国してから300人以上の社員全員の名前を覚え、日々の業務で社員の行動などに気を配ってすべての社員に声をかけたりするようになったという。このエピソードもなかなか私には効く話しで、私は他人にかなりのレベルで関心がない。もし自分の会社で社員を雇うことになったら待遇がどうとか以前に、その人そのものに関心をもつという姿勢を覚えておこうと思う。</description><content>&lt;p>2時半に寝て寝たのかどうかよく分からないながら5時頃に寝落ちして7時半に起きた。&lt;/p>
&lt;h2 id="差分比較のための機能">差分比較のための機能&lt;/h2>
&lt;p>id 連携で運用のための非機能要件の1つとして更新された内容を確認できるようにしたい。非機能要件だから私が作るかと思ってあたためておいた issue に着手した。wikipedia によると差分という言葉には次の2つの用語があるのをみつけた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Delta_update">Delta update&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Data_differencing">Data differencing&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>数学やコンピューターの用語的には delta (ギリシャ語で変化を表す) という言葉を使う。os のパッケージングシステムで一部のパッケージをアップデートするようなことをデルタアップデートと呼ぶ。一方でコンピューターサイエンスにおいて2つのデータセット間の差分については diff という用語を使う。データの差分においては diff でよいのではないかと思う。そういった用語の定義から始めた。mongodb のコレクションのデータ定義をしたり、結合テストを書いて動かしてみたり、インフラのレイヤーから開発に着手した。&lt;/p>
&lt;h2 id="上司道-企業家として生き様と人として求められること">上司道 企業家として生き様と、人として求められること&lt;/h2>
&lt;p>&lt;a href="https://www.facebook.com/events/1287346985493718?ref=newsfeed">第92回上司道 企業家として生き様と、人として求められること&lt;/a> に参加した。なんとなくタイトルに惹かれた。&lt;a href="/diary/diary/posts/2023/0228/#上司道-野村監督から学ぶリーダーの器のつくり方">上司道&lt;/a> に参加するのは3回目。&lt;/p>
&lt;p>講師の牛島さんは昨日が誕生日だったらしく90歳だという。90歳になって zoom でオンライン勉強会の講師を務めるというのを、私はまったく想像できないけど、コンサルタントの第一線で活躍されてきた方の貫禄があった。もともとどういう主旨の勉強会だったのかよく分かっていないけれど、内容はビジネスの自己啓発セミナーに近いものになった。牛島さんが90年も生きてきて大事だと思える内容には普遍性や汎用性があるのだと思う。いくつか共感できる考え方もあった。&lt;/p>
&lt;ul>
&lt;li>これからは頭の良い人 (IQ が高い) よりも心が豊かな人 (EQ が高い) の方が大事で組織に貢献する&lt;/li>
&lt;li>一番大切なのは幸せであること&lt;/li>
&lt;li>楽しく生きる (働く)&lt;/li>
&lt;/ul>
&lt;p>過去に働いた会社でも頭がよくて何でもよく理解しているのにプロジェクトにあまり貢献しない人がいることに気付いた。さぼっているわけでもない。その違いを「心が豊かな人 (EQ が高い) 人」という言葉でいくつか説明できるのではないかと思えた。新規プロジェクトのような、常に変化して、正解もわからないまま進める業務において、論理や頭のよさだけでうまくいくことはなくなってきつつあるのではないか。なんのためにそのプロジェクトをやるのか、自分はなぜここで働いているのか、といった問いに答えをもっている人は普通の社員とは行動が異なる。自身の価値観や展望と比較して、現状の課題や改善に気付くのでプロジェクトを前向きに進めていける。頭のよい人は「あれが問題」「これが問題」と問題を指摘してエスカレーションするだけで自らが課題をどう解決するかの答えをもっていない。そんなことを考えながらこの話しを聞いていた。&lt;/p>
&lt;p>次の2つは最近の私の人生観や働き方と重なるところがある。私はもう無理してがんばったりしないし、自分が嫌なお仕事も一切しないように決めている。一般的にいう「働きたくない」という生き方を目指している。もちろん実際には働いているわけだけど、それはなるべく働く時間を、遊んでいる時間に置き換えられないかと模索している。その過程で辛いことやしんどいことも避けようと考えている。&lt;/p>
&lt;p>なぜそれができるかというのも、20代30代と約20年働いてきて自身の価値観を育ててきたからだと捉えている。私はなにが楽しくて、なにが辛くて、なにをやりたくないか。これは人それぞれに違う。私には私にしかない価値観をもっている。それがわかってきたから、いま自分の会社を経営していて、毎日がとても楽しいし、自分の価値観にあわないことはすべて断るという判断基準も明確になっている。そんな勝手気ままでやっていけるの？という懸念を抱く人も多いと思う。ダメかもしれない。仮にやっていけなかったとしても、いまの自分は幸せで楽しいのだからそれでいいんじゃないかと思う。無理をしていまがしんどくても将来がよくなる保証なんてどこにもない。&lt;/p>
&lt;p>牛島さんはマザーテレサとインドで実際に会って10日間ほど一緒に過ごしてその体験がその後の人生を大きく変えたように話されていた。マザーテレサに「社員を大事にしていますか？」と聞かれたときに「しています。」と答え、その後に「社員全員の名前を覚えていますか？」と聞かれたという。当時の牛島さんの会社の社員は300人以上いて全員は覚えていなかった。それで「愛情の反対は無関心なのですよ。」とマザーテレサに指摘されて大きな衝撃を受けたという。その後、帰国してから300人以上の社員全員の名前を覚え、日々の業務で社員の行動などに気を配ってすべての社員に声をかけたりするようになったという。このエピソードもなかなか私には効く話しで、私は他人にかなりのレベルで関心がない。もし自分の会社で社員を雇うことになったら待遇がどうとか以前に、その人そのものに関心をもつという姿勢を覚えておこうと思う。&lt;/p></content></item><item><title>go-ldap の syncrepl 対応</title><link>/diary/posts/2023/0719/</link><pubDate>Wed, 19 Jul 2023 08:10:41 +0900</pubDate><guid>/diary/posts/2023/0719/</guid><description>2時に寝て2回ぐらい起きて6時半に起きた。お休みとったからいろいろ余裕がないけれど、体力だけはある。
syncrepl 機能の実装 go-ldap の非同期検索 の続き。persistent search という用語 も理解して、満を持して openldap の syncrepl 対応に臨んでいた。syncrepl を用いた persistent search というのは、簡単に言えばメッセージキューで言うところの pubsub のコンシューマーに相当する。その通信のテストやデバッグをしているときに非同期検索のバグもみつけた。余計なことをして返って複雑なバグを混入したなと反省しながら修正の pr を送った。
Fix a deadlock issue using search asynchronously #446 go-ldap の ldap 通信の処理や設計を理解するのに2日、rfc-4533 を読みながら Control に関するプロトコル実装に1日、テストやデバッグ、その他の調査や設計に2日ぐらい、次の pr を作るのに1週間 (平日5日) ほどは工数を割いた。
Add syncrepl (rfc-4533) consumer (persistent search) #447 ローカル環境で単体レベルの動作は問題ないと思う。あとは私が知らない ldap プロトコルの振る舞いや単体レベルで検証できていない通信、実際の運用レベルの syncrepl の状態やエラーなどに耐えられるかどうかといったところだと思う。おそらく rfc を読みながらプロトコルの一部を私が実装したのは初めてかもしれない。もうサーバーサイドやバックエンドの領域で (スキルの多寡はあれども) 私が作れないものはそうないだろうという自信をもっている。実際に rfc で提案されたプロトコルを実装して、テストして、ちゃんと動いて、そういう日々がすごく楽しくて嬉しかった。根拠のなかった自信を確認できた。またレビューに時間かかるかな？マージのためのやり取りや修正に2週間から1ヶ月ぐらいを見込む。</description><content>&lt;p>2時に寝て2回ぐらい起きて6時半に起きた。お休みとったからいろいろ余裕がないけれど、体力だけはある。&lt;/p>
&lt;h2 id="syncrepl-機能の実装">syncrepl 機能の実装&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0703/#非同期の-ldap-検索の-api">go-ldap の非同期検索&lt;/a> の続き。&lt;a href="/diary/diary/posts/2023/0704/">persistent search という用語&lt;/a> も理解して、満を持して openldap の &lt;a href="https://www.openldap.org/doc/admin25/replication.html">syncrepl&lt;/a> 対応に臨んでいた。syncrepl を用いた persistent search というのは、簡単に言えばメッセージキューで言うところの pubsub のコンシューマーに相当する。その通信のテストやデバッグをしているときに非同期検索のバグもみつけた。余計なことをして返って複雑なバグを混入したなと反省しながら修正の pr を送った。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/446">Fix a deadlock issue using search asynchronously #446&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>go-ldap の ldap 通信の処理や設計を理解するのに2日、&lt;a href="https://datatracker.ietf.org/doc/html/rfc4533">rfc-4533&lt;/a> を読みながら Control に関するプロトコル実装に1日、テストやデバッグ、その他の調査や設計に2日ぐらい、次の pr を作るのに1週間 (平日5日) ほどは工数を割いた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/447">Add syncrepl (rfc-4533) consumer (persistent search) #447&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ローカル環境で単体レベルの動作は問題ないと思う。あとは私が知らない ldap プロトコルの振る舞いや単体レベルで検証できていない通信、実際の運用レベルの syncrepl の状態やエラーなどに耐えられるかどうかといったところだと思う。おそらく rfc を読みながらプロトコルの一部を私が実装したのは初めてかもしれない。もうサーバーサイドやバックエンドの領域で (スキルの多寡はあれども) 私が作れないものはそうないだろうという自信をもっている。実際に rfc で提案されたプロトコルを実装して、テストして、ちゃんと動いて、そういう日々がすごく楽しくて嬉しかった。根拠のなかった自信を確認できた。またレビューに時間かかるかな？マージのためのやり取りや修正に2週間から1ヶ月ぐらいを見込む。&lt;/p></content></item><item><title>1行のミスによる1行の修正</title><link>/diary/posts/2023/0718/</link><pubDate>Tue, 18 Jul 2023 08:18:51 +0900</pubDate><guid>/diary/posts/2023/0718/</guid><description>0時に寝て何度か起きて6時半に起きた。朝から外はめっちゃ暑い。冷房をつけっぱなしのオフィスも朝からやっぱり暑い。根本的な空調の問題。
agent アプリケーションのメモリリーク正体 先週のメモリリーク調査 の続き。本当は週末にやればよかったんだけど、遊んでたりさぼってたりして放置してた。先週時点でリークしているのは go-zeromq/zmq4 側だというのはわかっていたが、何が原因でリークしているのかは分からなかった。一通りソースも読んでみたけど、いまひとつよく分からない。仕方ないから動的デバッグでソースコードに手を入れながら調査していて、すぐにみつけた。socket 構造体が保持しているコネクションの map がどんどん肥大化していく。なにも使っていない map にコネクションの値を保持して解放する処理がないことに気付いた。
sck.ids[uuid] = c 修正するかと思ってリポジトリの最新ブランチをみてもそのコードが見当たらない。すると次の pr で4月に修正されていた。まだリリースされていないからうちらのアプリケーションで使っているリビジョンにはその修正が含まれていなかった。
Deal with empty Identity for ROUTER socket #140 Additionally, remove sck.ids, which is unused and leaks *Conn.
メモリリークの調査を始めたときに github issues/pr を leak で検索して一通りチェックしているので、先週もこの pr をみかけているはずだが見逃してしまった。タイトルが全然違うし、ほんの1行の typo に近いミスなので修正内容をみて気付かなかったのだと思う。自分の観察力の無さに気付いた。leak で検索ヒットしているのだから、それが自分たちのアプリケーションで使っているコードに入っているのかどうか、その内容をもっと注意して調べるべきだった。そうすればこの調査時間を数時間は短縮できた。これは私のミスだと認めて Postmortem のラベルを付けた。次回の定例会議でふりかえりに使う。</description><content>&lt;p>0時に寝て何度か起きて6時半に起きた。朝から外はめっちゃ暑い。冷房をつけっぱなしのオフィスも朝からやっぱり暑い。根本的な空調の問題。&lt;/p>
&lt;h2 id="agent-アプリケーションのメモリリーク正体">agent アプリケーションのメモリリーク正体&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0714/#agent-アプリケーションのメモリリーク調査">先週のメモリリーク調査&lt;/a> の続き。本当は週末にやればよかったんだけど、遊んでたりさぼってたりして放置してた。先週時点でリークしているのは &lt;a href="https://github.com/go-zeromq/zmq4">go-zeromq/zmq4&lt;/a> 側だというのはわかっていたが、何が原因でリークしているのかは分からなかった。一通りソースも読んでみたけど、いまひとつよく分からない。仕方ないから動的デバッグでソースコードに手を入れながら調査していて、すぐにみつけた。socket 構造体が保持しているコネクションの map がどんどん肥大化していく。なにも使っていない map にコネクションの値を保持して解放する処理がないことに気付いた。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sck&lt;/span>.&lt;span style="color:#a6e22e">ids&lt;/span>[&lt;span style="color:#a6e22e">uuid&lt;/span>] = &lt;span style="color:#a6e22e">c&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修正するかと思ってリポジトリの最新ブランチをみてもそのコードが見当たらない。すると次の pr で4月に修正されていた。まだリリースされていないからうちらのアプリケーションで使っているリビジョンにはその修正が含まれていなかった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-zeromq/zmq4/pull/140">Deal with empty Identity for ROUTER socket #140&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Additionally, remove sck.ids, which is unused and leaks *Conn.&lt;/p>
&lt;/blockquote>
&lt;p>メモリリークの調査を始めたときに github issues/pr を leak で検索して一通りチェックしているので、先週もこの pr をみかけているはずだが見逃してしまった。タイトルが全然違うし、ほんの1行の typo に近いミスなので修正内容をみて気付かなかったのだと思う。自分の観察力の無さに気付いた。leak で検索ヒットしているのだから、それが自分たちのアプリケーションで使っているコードに入っているのかどうか、その内容をもっと注意して調べるべきだった。そうすればこの調査時間を数時間は短縮できた。これは私のミスだと認めて &lt;code>Postmortem&lt;/code> のラベルを付けた。次回の定例会議でふりかえりに使う。&lt;/p></content></item><item><title>夏休み</title><link>/diary/posts/2023/0717/</link><pubDate>Mon, 17 Jul 2023 08:18:47 +0900</pubDate><guid>/diary/posts/2023/0717/</guid><description>23時に寝て8時に起きた。オフィス行こうか迷ったけど、たまには休むかと思ってドラクエタクトしながら1日ゆっくり過ごしていた。</description><content>&lt;p>23時に寝て8時に起きた。オフィス行こうか迷ったけど、たまには休むかと思ってドラクエタクトしながら1日ゆっくり過ごしていた。&lt;/p></content></item><item><title>暑さ対策委員会の issue をあげる</title><link>/diary/posts/2023/0716/</link><pubDate>Sun, 16 Jul 2023 13:48:48 +0900</pubDate><guid>/diary/posts/2023/0716/</guid><description>23時に寝て何度か起きて7時に起きてから11時ぐらいまでだらだらしてた。近所の靴屋さんに紐なしスニーカーを探しに行ったが適当なものがみつからなくて結局オンラインで検索して購入した。
オフィスの部屋が暑い 普通に作業ができないぐらいには暑くてしんどい。明らかにビルの内側と窓側で温度差がある気がする。サーキュレーターは昔から使っているものの、扇風機は汗を蒸発させて気化熱で涼しいという仕組み上、暖かい空気を冷やせないので温度が高いと効果が半減する。他に冷房機器を増設できないかを調べてみた。エアコン以外で増設する方法が次の2種類がある。
スポットクーラー 冷風扇 しかし、どちらも私の要件や状況を改善するものにはならない気がする。
スポットクーラーはエアコンと同じ仕組みのミニエアコンのようなもの。エアコンの室内機と室外機が1つになったものと言える。これは冷風を送れるが、冷却した熱を外に排出しないといけないため、排気ダクトから外へ暖かい空気を排出できないと意味をなさない。うちのオフィスは窓を開けられない仕様なので排気ができない。ちなみにスポットクーラーを密室で使うと、冷却する機器の放熱と排気の暖かい空気の分だけ温度が上がってしまうらしい。あとエアコンの室外機とは異なり、熱をもつ機器が一体化している分だけ冷やす効率も悪化する。名前の通り、冷風を送るところだけ涼しければいいといった用途に使うものらしい。
冷風扇は水の気化熱を利用して冷やすという仕組みで排気を必要としない。原理的には打ち水したところに風を送ればちょっと涼しいといったもの。タンクに水と氷を入れたり、保冷剤を入れたりすることで涼しい効果を強化できるものの、最大のデメリットは水を蒸発させて涼しくするため、湿度をあげてしまうことになるらしい。湿度が高くなって不快指数があがれば元の木阿弥になってしまう。またフィルターで水を蒸発させる仕組み上、水を扱うところはカビや菌が繁殖しやすく、さらにそれを扇風機でばら撒いてしまうのでちゃんと掃除しないと衛生面でもよくないらしい。氷や保冷剤を準備するところまでは我慢できるが、掃除は面倒だなと思えて導入を諦めた。
エアコンってよく出来た仕組みなんだということが理解できた。レンタルオフィスのサポートに問い合わせたら夏場はエアコンを切らなくてよいのでつけっ放しにしておくと少し改善するのではないかというので今日から試してみることにした。これまで毎日朝エアコンを ON にして夜帰るときに OFF にしていた。基本的に私が一番早くオフィスに来て一番遅くに帰る。
対策はまだわからないけれど、この不快さを計測しておいて改善のための施策に役立てるために温度計と湿度計がセットになった計測器を購入した。エンペックス気象計 という会社の製品がよいとみかけたので次の2つを購入してみた。
EX-2841 TM-2464 近所のダイソーで同じような目安品というのも購入してみた。100円だと誤差があるそうでこれを厳密な値として信用するなと書いてある。パッケージに入ったものをいくつか比べても針の指す値にはブレがあるようにみえた。エンペックスの計測器が届いたらそれも比較してみようと思う。
能楽の勉強 能: 敦盛 を観に行ったときに解説を朝原さんが行っていて、その内容がとてもよかったので朝原さん主催の読書会 (？) のようなイベントに参加してきた。
一途な恋心を、扇にからめて描き出す《班女》 第35回能のことばを読んでみる会 芦屋能舞台 という、外からみたら普通の家のようにみえて入ったら能舞台が現れるといった構造になっていた。能舞台って家の中にあるからびっくりする。初めて行ったからピンポンするのに躊躇する感じ。地図をみたらこの家になっているけど、本当にここなの？って感じで、他の参加者も集まってきて、そのうち常連さんがやってきてここであっていますよと案内してくれて中に入れた。中に入ったら立派な舞台があった。
結論から行ってこの読書会はめちゃくちゃよかった。覚えていることをずらっと書き出してみる。
班女は世阿弥作の能とみなされている 世阿弥が謡を書いたものに「五音」がある 班女、ゲニヤ祈リツ、
そこにはこれだけしか記述されていない (失われてしまった？) 世阿弥の息子が世阿弥の芸談をまとめた「申楽談儀」に班女の謡い方についての記述があることからも世阿弥作だと考えてよいらしい 謡は シテ方五流 によっても異同がある 観世流 (かんぜりゅう) 宝生流 (ほうしょうりゅう) 今春流 (こんぱるりゅう) 金剛流 (こんごうりゅう) 喜多流 (きたりゅう) 能を完璧に理解しようとするのはすごく大変 演劇を完全に理解しようといった見方はしないように、能も演劇の一種とみてそのぐらいの感覚の方が楽しめる シテ方各流の謡本の異同を比べたり、併合したりしながらより正しい解釈に努める 大昔の能の謡の意味に正解などない、シテ方各流のそれぞれの解釈はある シテやワキの台詞や謡には歴史、和歌、漢詩、韻を踏むといった、さまざまな意図が含められている 教養がないとその意図に気付くことができない 漢詩は 和漢朗詠集 から引用されている 20人ぐらい参加していた。朝原さんによると、いつもは10人に満たないと話されていた。私のように敦盛の解説を聞いて行ってみようと思った参加者がたくさんいたのかもしれない。
読む会のやり方はいたってシンプルで、詞章のプリントが配られててそれを参加者が数行ずつ順番に音読していく。歴史的仮名遣いだから音読するのもちょっと難しいんやけど。参加者の音読を聞いていると、慣れた人から素人までいるようなので拙くてもそれほど迷惑をかけている感じはしないのでまぁいいんじゃないかと思う。音読した後に朝原さんがその数行の意味や背景や歴史やなんやらかんやらをわーっと解説する。その解説の精度がすごい。
例えば、次のような一節がある。
花巾上 (はなきんしょう) に散りぬれば、
昔の謡の本はカナで書かれていて「ハナキンショウ二 &amp;hellip;」と書いてあった。それを豊臣秀次も能が好きで謡抄に書き換えるときに漢字を当てようとしたが、キンという漢字が分からなかったか、なんらかの要因で一時的に「巾」という文字を割り当てた。豊臣秀次はいろいろあって切腹してしまうわけだけど、謡抄の編纂はその後も続いていてそのまま「巾」という文字で残ってしまった。他のシテ方の謡では「花琴上」とあり、意味的にも「琴」で正しいと思われる。音は「キン」で同じなので謡う上では何も違いはない。
秀吉をまねて秀次も能楽を自ら演じるようになったが、彼は公家・禅僧らに命じて最初の謡曲の注釈書である『謡抄』を編纂させ、後世の文芸に大きな影響を与えた。
豊臣秀次
ここには私は覚えていることをざっくり書いているが、もう少し詳細に説明されていた。謡の上でなんら重要でもないこんな歴史の話しを知っている人いるの？と思ってしまった。すごい。
もう1つ紹介すると、地謡の歌に次のような節が出てくる。
夏はつる。扇と秋の白露と。いずれか 先に 起臥 (おきふし) の床 (とこ) 。</description><content>&lt;p>23時に寝て何度か起きて7時に起きてから11時ぐらいまでだらだらしてた。近所の靴屋さんに紐なしスニーカーを探しに行ったが適当なものがみつからなくて結局オンラインで検索して購入した。&lt;/p>
&lt;h2 id="オフィスの部屋が暑い">オフィスの部屋が暑い&lt;/h2>
&lt;p>普通に作業ができないぐらいには暑くてしんどい。明らかにビルの内側と窓側で温度差がある気がする。サーキュレーターは昔から使っているものの、扇風機は汗を蒸発させて気化熱で涼しいという仕組み上、暖かい空気を冷やせないので温度が高いと効果が半減する。他に冷房機器を増設できないかを調べてみた。エアコン以外で増設する方法が次の2種類がある。&lt;/p>
&lt;ul>
&lt;li>スポットクーラー&lt;/li>
&lt;li>冷風扇&lt;/li>
&lt;/ul>
&lt;p>しかし、どちらも私の要件や状況を改善するものにはならない気がする。&lt;/p>
&lt;p>スポットクーラーはエアコンと同じ仕組みのミニエアコンのようなもの。エアコンの室内機と室外機が1つになったものと言える。これは冷風を送れるが、冷却した熱を外に排出しないといけないため、排気ダクトから外へ暖かい空気を排出できないと意味をなさない。うちのオフィスは窓を開けられない仕様なので排気ができない。ちなみにスポットクーラーを密室で使うと、冷却する機器の放熱と排気の暖かい空気の分だけ温度が上がってしまうらしい。あとエアコンの室外機とは異なり、熱をもつ機器が一体化している分だけ冷やす効率も悪化する。名前の通り、冷風を送るところだけ涼しければいいといった用途に使うものらしい。&lt;/p>
&lt;p>冷風扇は水の気化熱を利用して冷やすという仕組みで排気を必要としない。原理的には打ち水したところに風を送ればちょっと涼しいといったもの。タンクに水と氷を入れたり、保冷剤を入れたりすることで涼しい効果を強化できるものの、最大のデメリットは水を蒸発させて涼しくするため、湿度をあげてしまうことになるらしい。湿度が高くなって不快指数があがれば元の木阿弥になってしまう。またフィルターで水を蒸発させる仕組み上、水を扱うところはカビや菌が繁殖しやすく、さらにそれを扇風機でばら撒いてしまうのでちゃんと掃除しないと衛生面でもよくないらしい。氷や保冷剤を準備するところまでは我慢できるが、掃除は面倒だなと思えて導入を諦めた。&lt;/p>
&lt;p>エアコンってよく出来た仕組みなんだということが理解できた。レンタルオフィスのサポートに問い合わせたら夏場はエアコンを切らなくてよいのでつけっ放しにしておくと少し改善するのではないかというので今日から試してみることにした。これまで毎日朝エアコンを ON にして夜帰るときに OFF にしていた。基本的に私が一番早くオフィスに来て一番遅くに帰る。&lt;/p>
&lt;p>対策はまだわからないけれど、この不快さを計測しておいて改善のための施策に役立てるために温度計と湿度計がセットになった計測器を購入した。&lt;a href="https://empex.co.jp/">エンペックス気象計&lt;/a> という会社の製品がよいとみかけたので次の2つを購入してみた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.amazon.co.jp/-/en/EX-2841-Thermometer-Hygrometer-Precision-Universal/dp/B0002OWY6W">EX-2841&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://empex.co.jp/products/tm-2464/index.html">TM-2464&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>近所のダイソーで同じような目安品というのも購入してみた。100円だと誤差があるそうでこれを厳密な値として信用するなと書いてある。パッケージに入ったものをいくつか比べても針の指す値にはブレがあるようにみえた。エンペックスの計測器が届いたらそれも比較してみようと思う。&lt;/p>
&lt;h2 id="能楽の勉強">能楽の勉強&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0702/">能: 敦盛&lt;/a> を観に行ったときに解説を朝原さんが行っていて、その内容がとてもよかったので朝原さん主催の読書会 (？) のようなイベントに参加してきた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nohgaku-kyodo.com/repertoire/yondemiru-hanjo20230716">一途な恋心を、扇にからめて描き出す《班女》 第35回能のことばを読んでみる会&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://www.ashiya-nohbutai.com/">芦屋能舞台&lt;/a> という、外からみたら普通の家のようにみえて入ったら能舞台が現れるといった構造になっていた。能舞台って家の中にあるからびっくりする。初めて行ったからピンポンするのに躊躇する感じ。地図をみたらこの家になっているけど、本当にここなの？って感じで、他の参加者も集まってきて、そのうち常連さんがやってきてここであっていますよと案内してくれて中に入れた。中に入ったら立派な舞台があった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0716_noh-butai.jpg"/>
&lt;/figure>
&lt;p>結論から行ってこの読書会はめちゃくちゃよかった。覚えていることをずらっと書き出してみる。&lt;/p>
&lt;ul>
&lt;li>班女は世阿弥作の能とみなされている&lt;/li>
&lt;li>世阿弥が謡を書いたものに「五音」がある
&lt;ul>
&lt;li>
&lt;blockquote>
&lt;p>班女、ゲニヤ祈リツ、&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>そこにはこれだけしか記述されていない (失われてしまった？)&lt;/li>
&lt;li>世阿弥の息子が世阿弥の芸談をまとめた「申楽談儀」に班女の謡い方についての記述があることからも世阿弥作だと考えてよいらしい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>謡は &lt;a href="https://www.the-noh.com/jp/sekai/shite.html">シテ方五流&lt;/a> によっても異同がある
&lt;ul>
&lt;li>観世流 (かんぜりゅう)&lt;/li>
&lt;li>宝生流 (ほうしょうりゅう)&lt;/li>
&lt;li>今春流 (こんぱるりゅう)&lt;/li>
&lt;li>金剛流 (こんごうりゅう)&lt;/li>
&lt;li>喜多流 (きたりゅう)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>能を完璧に理解しようとするのはすごく大変
&lt;ul>
&lt;li>演劇を完全に理解しようといった見方はしないように、能も演劇の一種とみてそのぐらいの感覚の方が楽しめる&lt;/li>
&lt;li>シテ方各流の謡本の異同を比べたり、併合したりしながらより正しい解釈に努める&lt;/li>
&lt;li>大昔の能の謡の意味に正解などない、シテ方各流のそれぞれの解釈はある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>シテやワキの台詞や謡には歴史、和歌、漢詩、韻を踏むといった、さまざまな意図が含められている
&lt;ul>
&lt;li>教養がないとその意図に気付くことができない&lt;/li>
&lt;li>漢詩は &lt;a href="https://ja.wikipedia.org/wiki/%E5%92%8C%E6%BC%A2%E6%9C%97%E8%A9%A0%E9%9B%86">和漢朗詠集&lt;/a> から引用されている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>20人ぐらい参加していた。朝原さんによると、いつもは10人に満たないと話されていた。私のように敦盛の解説を聞いて行ってみようと思った参加者がたくさんいたのかもしれない。&lt;/p>
&lt;p>読む会のやり方はいたってシンプルで、詞章のプリントが配られててそれを参加者が数行ずつ順番に音読していく。歴史的仮名遣いだから音読するのもちょっと難しいんやけど。参加者の音読を聞いていると、慣れた人から素人までいるようなので拙くてもそれほど迷惑をかけている感じはしないのでまぁいいんじゃないかと思う。音読した後に朝原さんがその数行の意味や背景や歴史やなんやらかんやらをわーっと解説する。その解説の精度がすごい。&lt;/p>
&lt;p>例えば、次のような一節がある。&lt;/p>
&lt;blockquote>
&lt;p>花巾上 (はなきんしょう) に散りぬれば、&lt;/p>
&lt;/blockquote>
&lt;p>昔の謡の本はカナで書かれていて「ハナキンショウ二 &amp;hellip;」と書いてあった。それを豊臣秀次も能が好きで謡抄に書き換えるときに漢字を当てようとしたが、キンという漢字が分からなかったか、なんらかの要因で一時的に「巾」という文字を割り当てた。豊臣秀次はいろいろあって切腹してしまうわけだけど、謡抄の編纂はその後も続いていてそのまま「巾」という文字で残ってしまった。他のシテ方の謡では「花琴上」とあり、意味的にも「琴」で正しいと思われる。音は「キン」で同じなので謡う上では何も違いはない。&lt;/p>
&lt;blockquote>
&lt;p>秀吉をまねて秀次も能楽を自ら演じるようになったが、彼は公家・禅僧らに命じて最初の謡曲の注釈書である『謡抄』を編纂させ、後世の文芸に大きな影響を与えた。&lt;br />
&lt;a href="https://ja.wikipedia.org/wiki/%E8%B1%8A%E8%87%A3%E7%A7%80%E6%AC%A1">豊臣秀次&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>ここには私は覚えていることをざっくり書いているが、もう少し詳細に説明されていた。謡の上でなんら重要でもないこんな歴史の話しを知っている人いるの？と思ってしまった。すごい。&lt;/p>
&lt;p>もう1つ紹介すると、地謡の歌に次のような節が出てくる。&lt;/p>
&lt;blockquote>
&lt;p>夏はつる。扇と秋の白露と。いずれか 先に 起臥 (おきふし) の床 (とこ) 。&lt;/p>
&lt;/blockquote>
&lt;p>この一節は新古今集和歌集の次の和歌を引用している。&lt;/p>
&lt;blockquote>
&lt;p>夏はつる 扇と秋の白露と いづれかまづは 置かむとすらん 壬生忠岑&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="http://jiuxia.web.fc2.com/Nohpage/NohWakan/Wakan03.html#P169">http://jiuxia.web.fc2.com/Nohpage/NohWakan/Wakan03.html#P169&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>前に敦盛の詞章と一緒に観ていてなぜ単語の区切りがこのような感じになっているのか、まったく理解できなかった。それは私が和歌をまったく知らなかったからだと言える。謡や台詞の冒頭の一節は和歌を引用していることも多い。そのために和歌を知っていると謡をすんなりと聞き分けられるのだと思う。&lt;/p>
&lt;p>このようにほんの数行の詞章にもたくさんの意図や背景があることを知った。朝原さんは能楽の研究者なので、詞章を読みながらそれぞれの文節の背景や意図を調べていることが伺えた。プロってこのぐらいやらないといけないなと。私は課題管理の文脈なら何気ないワークフローや作業にいろんな意図や背景を見出だせないといけないという気付きや示唆を受けた。&lt;/p>
&lt;p>3ヶ月に1回のペースで開催している。次回は蝉丸という能を取り上げる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nohgaku-kyodo.com/repertoire/yondemiru-semimaru20231021">『百人一首』で知られる蝉丸と、その姉・逆髪が出会い、別れる能《蝉丸》 第36回能のことばを読んでみる会&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>その後に蝉丸の能を演じるイベントも開催されるらしい。次回は読む会で詞章を予習した上で能をみるようにしてみる。するとまた違った趣になるのではないかと思う。&lt;/p></content></item><item><title>雑談について雑談した</title><link>/diary/posts/2023/0715/</link><pubDate>Sat, 15 Jul 2023 17:38:29 +0900</pubDate><guid>/diary/posts/2023/0715/</guid><description>1時に寝て何度か起きて7時に起きた。昨日は遅くまで調べものをしていたわりには達成感がなくていまいちな金曜日になった。
ストレッチ 東京出張から戻ってきたときはあまり体調がよくないことが多い。今日は右足全般の張りが強かった。すねの外側、太ももの後ろ、股関節の関節部位、あちこち硬いなと思えた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。数値もよくはなかった。なんとなくだけど、あと何年かしたら右足が動かなくなるんじゃないかとすら思えるようになってきた。いまストレッチしているのはその寿命を伸ばす行為だと考えている。なにもしていないのに体調が悪くなるというのがこれからどんどん増えてくるのだと推測する。悪いことばかりでもなく、先週まで辛かった首の痛みは気付いたら治っていた。
日本ナレッジ・マネジメント学会に加入申請を出した 先日の課題管理の雑談 のときに 日本ナレッジ・マネジメント学会 という学会があることを教えていただいた。学術的なところでナレッジマネジメント (知識経営) についてどのようなことが研究されていて (あるいはされていなくて)、どういう知見が溜まっているのかを知りたかったのでちょうどうちの会社にとってよい機会だと思える。
さっそく web のフォームから加入申請を送って、法人会員になるのは申請書を郵送する必要があるとのことでその事務手続きも終えた。法人会員は10万円/年の費用がかかる。学会などの年会費は「諸会費」という勘定科目使い、不課税となる。まぁこのぐらいの金額ならよいだろうと即断即決で決めた。
雑談の雑談 毎月お手伝い先の会社に出張して経営陣とサポート部門トップを含めたトップ3に プロジェクトの進捗報告 をしている。
プロジェクトの初期の頃は情報共有を密にしたり親睦を深める意図から (言うても月1回だけれども) 毎月行くことには意味はあった。しかし、うちのチームはフルリモートで開発が進む体制になっており、私が物理的にオフィスに出向かなくてもプロジェクトの開発にはほとんど影響を与えない。ではなぜ出張しているのかの意義はプロジェクトの進捗報告をオフライン会議でやっていることの方が大きいのではないかと思うようになってきた。早いときは20分ほどで報告は終わるし、普通にやっても30分もあったら報告内容は終わる。そこから参加者でその時々の雑談が始まる。会議のうち報告と雑談の時間が半々ぐらいといったときもある。
この雑談の機会を作る大義名分として、私が出張して進捗報告の会議があるから「出しになっている」のではないか？という仮説を思いついた。その場では「プロジェクトには直接関係ないのだけど、、、」という話題もちょくちょく出る。会社の業務には誰の責任でも担当でもない宙ぶらりんになる業務も発生する。チームならそれはマネージャーがすべて巻き取るわけだが、部署単位になると浮いたままになることもある。そういう話題がこの会議の中ではちょくちょくあがってくる。
建前上の会議を「出しにして」話す機会のない人たちが雑談するという、別の価値を提供している会議もあるんじゃないかと、顧問のはらさんと雑談していたところ、次の記事を紹介された。
なぜ雑談が重要か 私も前日にざっと読んでこれはひどい記事だなと思ってスルーしていた。意外とこの記事の是非について盛り上がった。私がこの記事をひどいと思うのは次の点になる。
目的と手段をベン図 (集合を扱う表現) で表すという奇妙さ 会議では重要な情報を得られず雑談でこそ得られるという極端な物言い そういうケースがあることは同意するが、大半は会議で重要な情報を得られているはずだ 会議と雑談を別の空間や時間で行う対立軸のように書いているところ 会議の中で雑談して、会議内の雑談で発見があったのならそれは会議で得られたのと同じこと (上述した事例が正にそう) 雑談は会議を補うものであって会議を置き換えるものではない 会議で重要な情報を得られないなんてことは一般の業務においてあり得ない 試しにこの記事の著者が書いた本のファンである友だちにも意見を聞いてみたところ、次のようなコメントが返ってきた。
目的と手段を同じ座標の集合にするのは無理がある 手段を「目的の役に立つもの」と独自定義を置き換えることへの懸念と分かりにくさ 本とブログとのギャップに驚いている。どちらかが本人でどちらかがゴーストライターなのか、とさえ思ってしまう 前半の大事な前提が受け入れられないからその続きの内容も入ってこないといったコメントをその友だちからもらった。そんな話しをしていると、はらさんが javascript と java を混同して話す人はなにを話しても聞く気にならないと解釈すれば理解できると共感していた。それぐらい冒頭の目的と手段について書かれた内容はわかりにくいと言える。
著者が言いたいことは、本質的な課題は最初からわかりにくいもので顧客自身も気付いていないことが多い。いくつか調査したりヒアリングしたり、その結果を分析したりしながら徐々にわかってきたりすることがある。イシューからはじめよ ではそのことを「解くべき問題 = 課題を見極める」と表現している。私はそれを課題管理で解決しようとしているが、著者は雑談で解決しようというアプローチの違いについて書いてあるものだと意図は理解できる。しかし、記事の内容は分かりにくいので支持しないというのが私の立場である。</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。昨日は遅くまで調べものをしていたわりには達成感がなくていまいちな金曜日になった。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>東京出張から戻ってきたときはあまり体調がよくないことが多い。今日は右足全般の張りが強かった。すねの外側、太ももの後ろ、股関節の関節部位、あちこち硬いなと思えた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。数値もよくはなかった。なんとなくだけど、あと何年かしたら右足が動かなくなるんじゃないかとすら思えるようになってきた。いまストレッチしているのはその寿命を伸ばす行為だと考えている。なにもしていないのに体調が悪くなるというのがこれからどんどん増えてくるのだと推測する。悪いことばかりでもなく、先週まで辛かった首の痛みは気付いたら治っていた。&lt;/p>
&lt;h2 id="日本ナレッジマネジメント学会に加入申請を出した">日本ナレッジ・マネジメント学会に加入申請を出した&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0711/#コパイロツトさんと雑談">先日の課題管理の雑談&lt;/a> のときに &lt;a href="https://kmsj.org/">日本ナレッジ・マネジメント学会&lt;/a> という学会があることを教えていただいた。学術的なところでナレッジマネジメント (知識経営) についてどのようなことが研究されていて (あるいはされていなくて)、どういう知見が溜まっているのかを知りたかったのでちょうどうちの会社にとってよい機会だと思える。&lt;/p>
&lt;p>さっそく web のフォームから加入申請を送って、法人会員になるのは申請書を郵送する必要があるとのことでその事務手続きも終えた。法人会員は10万円/年の費用がかかる。学会などの年会費は「諸会費」という勘定科目使い、不課税となる。まぁこのぐらいの金額ならよいだろうと即断即決で決めた。&lt;/p>
&lt;h2 id="雑談の雑談">雑談の雑談&lt;/h2>
&lt;p>毎月お手伝い先の会社に出張して経営陣とサポート部門トップを含めたトップ3に &lt;a href="/diary/diary/posts/2023/0712/">プロジェクトの進捗報告&lt;/a> をしている。&lt;/p>
&lt;p>プロジェクトの初期の頃は情報共有を密にしたり親睦を深める意図から (言うても月1回だけれども) 毎月行くことには意味はあった。しかし、うちのチームはフルリモートで開発が進む体制になっており、私が物理的にオフィスに出向かなくてもプロジェクトの開発にはほとんど影響を与えない。ではなぜ出張しているのかの意義はプロジェクトの進捗報告をオフライン会議でやっていることの方が大きいのではないかと思うようになってきた。早いときは20分ほどで報告は終わるし、普通にやっても30分もあったら報告内容は終わる。そこから参加者でその時々の雑談が始まる。会議のうち報告と雑談の時間が半々ぐらいといったときもある。&lt;/p>
&lt;p>この雑談の機会を作る大義名分として、私が出張して進捗報告の会議があるから「出しになっている」のではないか？という仮説を思いついた。その場では「プロジェクトには直接関係ないのだけど、、、」という話題もちょくちょく出る。会社の業務には誰の責任でも担当でもない宙ぶらりんになる業務も発生する。チームならそれはマネージャーがすべて巻き取るわけだが、部署単位になると浮いたままになることもある。そういう話題がこの会議の中ではちょくちょくあがってくる。&lt;/p>
&lt;p>建前上の会議を「出しにして」話す機会のない人たちが雑談するという、別の価値を提供している会議もあるんじゃないかと、顧問のはらさんと雑談していたところ、次の記事を紹介された。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tech.stmn.co.jp/entry/2023/07/14/115639">なぜ雑談が重要か&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>私も前日にざっと読んでこれはひどい記事だなと思ってスルーしていた。意外とこの記事の是非について盛り上がった。私がこの記事をひどいと思うのは次の点になる。&lt;/p>
&lt;ul>
&lt;li>目的と手段をベン図 (集合を扱う表現) で表すという奇妙さ&lt;/li>
&lt;li>会議では重要な情報を得られず雑談でこそ得られるという極端な物言い
&lt;ul>
&lt;li>そういうケースがあることは同意するが、大半は会議で重要な情報を得られているはずだ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>会議と雑談を別の空間や時間で行う対立軸のように書いているところ
&lt;ul>
&lt;li>会議の中で雑談して、会議内の雑談で発見があったのならそれは会議で得られたのと同じこと (上述した事例が正にそう)&lt;/li>
&lt;li>雑談は会議を補うものであって会議を置き換えるものではない
&lt;ul>
&lt;li>会議で重要な情報を得られないなんてことは一般の業務においてあり得ない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>試しにこの記事の著者が書いた本のファンである友だちにも意見を聞いてみたところ、次のようなコメントが返ってきた。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>目的と手段を同じ座標の集合にするのは無理がある&lt;/li>
&lt;li>手段を「目的の役に立つもの」と独自定義を置き換えることへの懸念と分かりにくさ&lt;/li>
&lt;li>本とブログとのギャップに驚いている。どちらかが本人でどちらかがゴーストライターなのか、とさえ思ってしまう&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>前半の大事な前提が受け入れられないからその続きの内容も入ってこないといったコメントをその友だちからもらった。そんな話しをしていると、はらさんが javascript と java を混同して話す人はなにを話しても聞く気にならないと解釈すれば理解できると共感していた。それぐらい冒頭の目的と手段について書かれた内容はわかりにくいと言える。&lt;/p>
&lt;p>著者が言いたいことは、本質的な課題は最初からわかりにくいもので顧客自身も気付いていないことが多い。いくつか調査したりヒアリングしたり、その結果を分析したりしながら徐々にわかってきたりすることがある。&lt;a href="http://www.eijipress.co.jp/book/book.php?epcode=2085">イシューからはじめよ&lt;/a> ではそのことを「解くべき問題 = 課題を見極める」と表現している。私はそれを課題管理で解決しようとしているが、著者は雑談で解決しようというアプローチの違いについて書いてあるものだと意図は理解できる。しかし、記事の内容は分かりにくいので支持しないというのが私の立場である。&lt;/p></content></item><item><title>メモリリークに遭遇</title><link>/diary/posts/2023/0714/</link><pubDate>Fri, 14 Jul 2023 07:57:23 +0900</pubDate><guid>/diary/posts/2023/0714/</guid><description>23時に寝て何度か起きて5時に起きてからだらだらネットしながら記事を読んだりしていて7時に起き上がった。
agent アプリケーションのメモリリーク調査 qa テストの一環として先月からテスト環境で毎分 agent アプリケーションにリクエストを投げる長時間稼働テストを実行している。なんとなく気になるところがあったからやったわけではあるけれど、長時間稼働テストによってメモリリークを検出できてしまった。自分を過信せずちゃんと検証しないといけないなと思えた。top コマンドの実メモリー (RES) を1ヶ月前と比較して増えているからメモリリークだと気付いたところ。これからメモリプロファイリングをしながら原因を追求していく。私が書いた (レビューした) go のコードでメモリリークはないだろうと高をくくっていただけにちょっとショックではあった。
go は標準ライブラリに pprof というプロファイラがあるので簡単にデバッグできる。プロファイラで昨日から調査していたところ、go-zeromq/zmq4 の処理でメモリリークしていることはわかった。それがライブラリの使い方が誤っているのか、潜在的な不具合なのかはまだこれから調査するところ。
ライブラリ側の問題を調査するので厄介ではあるけど、私が書いた (レビューした) go のコードでメモリリークしているわけじゃないことがわかって少しほっとした。
go の generics 勉強会 先日準備した資料 を使って勉強会を開催した。
https://github.com/t2y/go-generics-study この勉強会はある意味、うちのチームのメンバーが理解しておくべき内容なので go のプログラミングをやっていないメンバーが聞いてもあまり関心をもてない内容となっている。そういうお断りもした上で最悪2-3人ぐらいの参加者になるかと思ったもののプログラミングに関心がある人たちは参加してくれて5-6人ぐらいの規模にはなった。一方で内容も難しいし、私の説明がどれだけわかりやすかったか、私自身にはわからないのでなんとも言えない。質問も一切なかったので喋りきって疲れたという疲労感と、伝わったのか伝わらなかったのか分からない消化不良感と、金曜日だから今日はもういいや感でどっと疲れたというのが率直な感想になる。
とはいえ、私もずっと generics の仕様をちゃんと追いかけたいと思いながら先送りしていたものではあるので私の中では自分が go の generics の理解度をあげて実際の開発の中で使い分けるだけの判断基準をもてたことが収穫だったと言える。</description><content>&lt;p>23時に寝て何度か起きて5時に起きてからだらだらネットしながら記事を読んだりしていて7時に起き上がった。&lt;/p>
&lt;h2 id="agent-アプリケーションのメモリリーク調査">agent アプリケーションのメモリリーク調査&lt;/h2>
&lt;p>qa テストの一環として先月からテスト環境で毎分 agent アプリケーションにリクエストを投げる長時間稼働テストを実行している。なんとなく気になるところがあったからやったわけではあるけれど、長時間稼働テストによってメモリリークを検出できてしまった。自分を過信せずちゃんと検証しないといけないなと思えた。top コマンドの実メモリー (RES) を1ヶ月前と比較して増えているからメモリリークだと気付いたところ。これからメモリプロファイリングをしながら原因を追求していく。私が書いた (レビューした) go のコードでメモリリークはないだろうと高をくくっていただけにちょっとショックではあった。&lt;/p>
&lt;p>go は標準ライブラリに pprof というプロファイラがあるので簡単にデバッグできる。プロファイラで昨日から調査していたところ、&lt;a href="https://github.com/go-zeromq/zmq4">go-zeromq/zmq4&lt;/a> の処理でメモリリークしていることはわかった。それがライブラリの使い方が誤っているのか、潜在的な不具合なのかはまだこれから調査するところ。&lt;/p>
&lt;p>ライブラリ側の問題を調査するので厄介ではあるけど、私が書いた (レビューした) go のコードでメモリリークしているわけじゃないことがわかって少しほっとした。&lt;/p>
&lt;h2 id="go-の-generics-勉強会">go の generics 勉強会&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0707/#go-の-generics 勉強会の準備">先日準備した資料&lt;/a> を使って勉強会を開催した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/go-generics-study">https://github.com/t2y/go-generics-study&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この勉強会はある意味、うちのチームのメンバーが理解しておくべき内容なので go のプログラミングをやっていないメンバーが聞いてもあまり関心をもてない内容となっている。そういうお断りもした上で最悪2-3人ぐらいの参加者になるかと思ったもののプログラミングに関心がある人たちは参加してくれて5-6人ぐらいの規模にはなった。一方で内容も難しいし、私の説明がどれだけわかりやすかったか、私自身にはわからないのでなんとも言えない。質問も一切なかったので喋りきって疲れたという疲労感と、伝わったのか伝わらなかったのか分からない消化不良感と、金曜日だから今日はもういいや感でどっと疲れたというのが率直な感想になる。&lt;/p>
&lt;p>とはいえ、私もずっと generics の仕様をちゃんと追いかけたいと思いながら先送りしていたものではあるので私の中では自分が go の generics の理解度をあげて実際の開発の中で使い分けるだけの判断基準をもてたことが収穫だったと言える。&lt;/p></content></item><item><title>縁の下のマネージャー</title><link>/diary/posts/2023/0713/</link><pubDate>Thu, 13 Jul 2023 13:39:15 +0900</pubDate><guid>/diary/posts/2023/0713/</guid><description>20時にホテルに戻ってきてのんびりしながら気付いたら22時ぐらいになって、少しテレビをみて0時に寝て4時ぐらいから起きてその後はあまり眠れなかった。それでも7時過ぎまでだらだらしていた。
7月後半に実装予定の新機能の設計 9月までに実装する新機能のうち、唯一、私の頭の中で設計の見通しをもっていなかった機能の設計を行うことにした。
ざっくりした機能概要から私がふわっと想定していたものはずっと複雑なものだったのだけど、プロダクトオーナーに要件をヒアリングしているうちにそんな高度なものは求められていないことに気付いた。逆にその高度な機能の仕組みを提供しても、実際に運用の現場で使うにあたって手間暇だけかかってそんなものを求めていないと言われそうな気がした。そこで私が作りたいなと思っていた設計のアイディアは封印することにした。既存の先行プロダクトがもっている機能とほぼ同様のものを、うちらの開発しているプロダクトで実現するだけでよさそうにみえた。そのシンプルな機能の設計を軽くやっておいた。詳細を詰めるのは次のマイルストーンで私ではないメンバーに実装してもらうことになるけれど、なんとなく当初の想定よりも早くできそうに思えた。
ログ出力のリファクタリング id 連携の処理で複雑なリソースを map 型で扱うときデバッグ用途でリソースを丸ごと dump したい。しかし、パスワードのような機密情報が含まれる場合はそれらはログに出力したくない。この処理をいまは連携種別ごとに実装していて、本質じゃないところで個別実装の手間があるのと機密情報の出力というセキュリティに関するところを毎回プログラマーが手で実装するのもどうかな？という気がして汎用のログユーティリティとしてロガーのライブラリ側で提供することにした。インフラやプラットフォーム的な機能に私は積極的に開発に介入している。
やり方の1つとしてオリジナルのリソースをコピーして機密情報だけ削除した一時的なリソースコピーを dump してログ出力する。go 1.21 で標準ライブラリに追加される maps パッケージを使うと map の操作が簡単にできる。コピー関数もある。しかし、この機能は shallow copy なので map の値にネストした map が含まれる場合はオリジナルの値を書き換えてしまう。ネストした map を調べてそれらもクローンしていく処理を実装した。excludeKeys に除外したい任意のキーを渡し、map の値を再帰的にチェックして取り除く。最終的には次のようなコピーユーティリティになった。
func copyWithoutExcludeKeys( fields map[string]any, excludeKeys []string, ) map[string]any { cloned := maps.Clone(fields) for k, v := range cloned { switch t := v.(type) { case map[string]string: strMapCloned := maps.Clone(t) for _, sk := range maps.Keys(strMapCloned) { if slices.Contains(excludeKeys, sk) { delete(strMapCloned, sk) } } cloned[k] = strMapCloned case map[string]any: cloned[k] = copyWithoutExcludeKeys(t, excludeKeys) case []map[string]any: for i, v := range t { t[i] = copyWithoutExcludeKeys(v, excludeKeys) } default: if slices.</description><content>&lt;p>20時にホテルに戻ってきてのんびりしながら気付いたら22時ぐらいになって、少しテレビをみて0時に寝て4時ぐらいから起きてその後はあまり眠れなかった。それでも7時過ぎまでだらだらしていた。&lt;/p>
&lt;h2 id="7月後半に実装予定の新機能の設計">7月後半に実装予定の新機能の設計&lt;/h2>
&lt;p>9月までに実装する新機能のうち、唯一、私の頭の中で設計の見通しをもっていなかった機能の設計を行うことにした。&lt;/p>
&lt;p>ざっくりした機能概要から私がふわっと想定していたものはずっと複雑なものだったのだけど、プロダクトオーナーに要件をヒアリングしているうちにそんな高度なものは求められていないことに気付いた。逆にその高度な機能の仕組みを提供しても、実際に運用の現場で使うにあたって手間暇だけかかってそんなものを求めていないと言われそうな気がした。そこで私が作りたいなと思っていた設計のアイディアは封印することにした。既存の先行プロダクトがもっている機能とほぼ同様のものを、うちらの開発しているプロダクトで実現するだけでよさそうにみえた。そのシンプルな機能の設計を軽くやっておいた。詳細を詰めるのは次のマイルストーンで私ではないメンバーに実装してもらうことになるけれど、なんとなく当初の想定よりも早くできそうに思えた。&lt;/p>
&lt;h2 id="ログ出力のリファクタリング">ログ出力のリファクタリング&lt;/h2>
&lt;p>id 連携の処理で複雑なリソースを map 型で扱うときデバッグ用途でリソースを丸ごと dump したい。しかし、パスワードのような機密情報が含まれる場合はそれらはログに出力したくない。この処理をいまは連携種別ごとに実装していて、本質じゃないところで個別実装の手間があるのと機密情報の出力というセキュリティに関するところを毎回プログラマーが手で実装するのもどうかな？という気がして汎用のログユーティリティとしてロガーのライブラリ側で提供することにした。インフラやプラットフォーム的な機能に私は積極的に開発に介入している。&lt;/p>
&lt;p>やり方の1つとしてオリジナルのリソースをコピーして機密情報だけ削除した一時的なリソースコピーを dump してログ出力する。go 1.21 で標準ライブラリに追加される &lt;a href="https://pkg.go.dev/golang.org/x/exp/maps">maps&lt;/a> パッケージを使うと map の操作が簡単にできる。コピー関数もある。しかし、この機能は shallow copy なので map の値にネストした map が含まれる場合はオリジナルの値を書き換えてしまう。ネストした map を調べてそれらもクローンしていく処理を実装した。excludeKeys に除外したい任意のキーを渡し、map の値を再帰的にチェックして取り除く。最終的には次のようなコピーユーティリティになった。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">copyWithoutExcludeKeys&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fields&lt;/span> &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>, &lt;span style="color:#a6e22e">excludeKeys&lt;/span> []&lt;span style="color:#66d9ef">string&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cloned&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">maps&lt;/span>.&lt;span style="color:#a6e22e">Clone&lt;/span>(&lt;span style="color:#a6e22e">fields&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">cloned&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">t&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.(&lt;span style="color:#66d9ef">type&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strMapCloned&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">maps&lt;/span>.&lt;span style="color:#a6e22e">Clone&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">sk&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">maps&lt;/span>.&lt;span style="color:#a6e22e">Keys&lt;/span>(&lt;span style="color:#a6e22e">strMapCloned&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">slices&lt;/span>.&lt;span style="color:#a6e22e">Contains&lt;/span>(&lt;span style="color:#a6e22e">excludeKeys&lt;/span>, &lt;span style="color:#a6e22e">sk&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete(&lt;span style="color:#a6e22e">strMapCloned&lt;/span>, &lt;span style="color:#a6e22e">sk&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cloned&lt;/span>[&lt;span style="color:#a6e22e">k&lt;/span>] = &lt;span style="color:#a6e22e">strMapCloned&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cloned&lt;/span>[&lt;span style="color:#a6e22e">k&lt;/span>] = &lt;span style="color:#a6e22e">copyWithoutExcludeKeys&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>, &lt;span style="color:#a6e22e">excludeKeys&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> []&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">t&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">t&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>] = &lt;span style="color:#a6e22e">copyWithoutExcludeKeys&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span>, &lt;span style="color:#a6e22e">excludeKeys&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">slices&lt;/span>.&lt;span style="color:#a6e22e">Contains&lt;/span>(&lt;span style="color:#a6e22e">excludeKeys&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete(&lt;span style="color:#a6e22e">cloned&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">cloned&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>会議の趨勢</title><link>/diary/posts/2023/0712/</link><pubDate>Wed, 12 Jul 2023 09:40:34 +0900</pubDate><guid>/diary/posts/2023/0712/</guid><description>前日に飲みに行ってきて1時に寝て何度か起きて7時過ぎに起きた。移動日であまり眠れていなかったのと夜遅くまで飲みに行っていたせいか、朝からどっと疲れた印象があった。
プロジェクトの進捗報告 出張したときの月例報告の8回目。前回の進捗報告はこちら 。
今回はあまり大きな話題がなかったのと、いま機能開発の真っ只中なので報告もシンプルなもので済む。前月に導入した新しい取り組みをおさらいしつつ、それらが1ヶ月を経てどのような状況になっているかを共有することにした。前月は新しい取り組みを始めたからいろいろツッコミが出るかな？と期待したらほとんど出なくてやや消化不良だった。今回は逆に前月と大きな取り組みの違いもなく、淡々とやってますよ、進捗はまぁまぁですよみたいな共有だったのに報告後の雑談は盛り上がった。会議の趨勢は未だに読めない。
いずれにせよ、開発はこれからの1ヶ月が正念場になる。私も積極的に開発に介入するし、私がやらないといけない issue もいくつかある。人に張りついて指導していると自分の作業がまったく進められない。なので、指導していない時間に自分の作業を進める取り組みをそろそろ始めていく必要もある。心技体は悪くないのでまぁ大丈夫だろうとみている。</description><content>&lt;p>前日に飲みに行ってきて1時に寝て何度か起きて7時過ぎに起きた。移動日であまり眠れていなかったのと夜遅くまで飲みに行っていたせいか、朝からどっと疲れた印象があった。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の8回目。&lt;a href="/diary/diary/posts/2023/0614/">前回の進捗報告はこちら&lt;/a> 。&lt;/p>
&lt;p>今回はあまり大きな話題がなかったのと、いま機能開発の真っ只中なので報告もシンプルなもので済む。前月に導入した新しい取り組みをおさらいしつつ、それらが1ヶ月を経てどのような状況になっているかを共有することにした。前月は新しい取り組みを始めたからいろいろツッコミが出るかな？と期待したらほとんど出なくてやや消化不良だった。今回は逆に前月と大きな取り組みの違いもなく、淡々とやってますよ、進捗はまぁまぁですよみたいな共有だったのに報告後の雑談は盛り上がった。会議の趨勢は未だに読めない。&lt;/p>
&lt;p>いずれにせよ、開発はこれからの1ヶ月が正念場になる。私も積極的に開発に介入するし、私がやらないといけない issue もいくつかある。人に張りついて指導していると自分の作業がまったく進められない。なので、指導していない時間に自分の作業を進める取り組みをそろそろ始めていく必要もある。心技体は悪くないのでまぁ大丈夫だろうとみている。&lt;/p></content></item><item><title>定例会議とそのプラクティス</title><link>/diary/posts/2023/0711/</link><pubDate>Tue, 11 Jul 2023 09:11:19 +0900</pubDate><guid>/diary/posts/2023/0711/</guid><description>22時に寝て1時半に起きて3時半に起きた。それからお風呂入って準備して始発の新幹線に乗った。いつもは夜通し起きているけど、今日は夜に雑談会があるので寝ておくことにした。
新しいやり方で1ヶ月が経過した定例会議 一ヶ月前の定例会議 は変更したばかりで手探りな状況ではあったが、今回は3つのマイルストーンをこなし、チームメンバーも新しいやり方に慣れてきたと言える。いまのところ、開発の情報共有でメンバーが困っているようにはみえない。しかし、タイムボックスの始めと終わりが生産性が上がるといったマイルストーンを短くした成果もあまりみえない。可もなく不可もなくといったところかな。悪いわけではない。
一方で6月末に私が休暇をとったり社員旅行があったりしてその分の業務時間が3日ほど少なかったことが最も大きく影響したと言うべきかもしれない。私は終わってみれば2週間で1つの issue しか fix していなくて、これまでは10以上 fix しているので、今回のマイルストーンの成果がいまいちにみえるのは私が最も働いていないといった方が正しい。いろいろ手掛けてはいるのだけど、調整のタイミングが悪くて fix しなかったという状況がある。それも含めて次の1ヶ月をピークにもっていく開発のメリハリではある。これまでの1ヶ月の進捗をみてメンバーにも3ヶ月でいま想定している機能開発を終わらせるよと共有した。
私が作業するなら余裕でこなせる作業量だけど、実際に作業するのは私じゃなくてメンバーが担当する。今後もメンバーの進捗を注視しながらサポートしていくことになる。他人の進捗をコミットするのはなかなか難しいという思いを抱きながらサポートしていく。
コパイロツトさんと雑談 準備を経て 19時半から南青山のオフィスで雑談してきた。いろいろ準備していったが、モニターが大き過ぎて画面共有しても文字がよくみえなかったり macbook の操作がやりにくかったりして資料はほとんど使わずに雑談してきた。コパイロツトさんはプロジェクトマネジメントそのものをやっているわけではなく、プロジェクトリーダーの意思決定を支援するための取り組みをしているというユニークな業務を提供している。スクラムで例えると、スクラムマスターよりも代理プロダクトオーナー (Proxy Product Owner) に近いという。
How to Succeed as a Proxy Product Owner 定例会議をうまくやればプロジェクトがうまくいくという信念のもと SuperGoodMeetings を提供している。ツールを正しく使ってもらえると意図した通りにうまくいくのだが、問題はツールをそもそも使ってくれないユーザーやチームをどう導くかというところで苦労されているように思えた。これは課題管理システムを使ってくれないという私の問題意識とも通じる。ツールを使いこなすには文章を書くことが重要で、文章を書けない人たちが一定数いるという事実を受け入れて、どのような取り組みをしていくか？これも課題管理と共通の問題であるように思える。課題管理の話しをして背景や意図が通じる人は少ないだけに、その価値観を共有できるというのは稀な機会であった。また 日本ナレッジ・マネジメント学会 という学会があることを教えていただいた。後日加入してみようと思う。
19時半から21時ぐらいまでオフィスで雑談して、その後23時半ぐらいまで飲みに行ってきた。楽しかった。</description><content>&lt;p>22時に寝て1時半に起きて3時半に起きた。それからお風呂入って準備して始発の新幹線に乗った。いつもは夜通し起きているけど、今日は夜に雑談会があるので寝ておくことにした。&lt;/p>
&lt;h2 id="新しいやり方で1ヶ月が経過した定例会議">新しいやり方で1ヶ月が経過した定例会議&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0613/#新しい定例会議の初日">一ヶ月前の定例会議&lt;/a> は変更したばかりで手探りな状況ではあったが、今回は3つのマイルストーンをこなし、チームメンバーも新しいやり方に慣れてきたと言える。いまのところ、開発の情報共有でメンバーが困っているようにはみえない。しかし、タイムボックスの始めと終わりが生産性が上がるといったマイルストーンを短くした成果もあまりみえない。可もなく不可もなくといったところかな。悪いわけではない。&lt;/p>
&lt;p>一方で6月末に私が休暇をとったり社員旅行があったりしてその分の業務時間が3日ほど少なかったことが最も大きく影響したと言うべきかもしれない。私は終わってみれば2週間で1つの issue しか fix していなくて、これまでは10以上 fix しているので、今回のマイルストーンの成果がいまいちにみえるのは私が最も働いていないといった方が正しい。いろいろ手掛けてはいるのだけど、調整のタイミングが悪くて fix しなかったという状況がある。それも含めて次の1ヶ月をピークにもっていく開発のメリハリではある。これまでの1ヶ月の進捗をみてメンバーにも3ヶ月でいま想定している機能開発を終わらせるよと共有した。&lt;/p>
&lt;p>私が作業するなら余裕でこなせる作業量だけど、実際に作業するのは私じゃなくてメンバーが担当する。今後もメンバーの進捗を注視しながらサポートしていくことになる。他人の進捗をコミットするのはなかなか難しいという思いを抱きながらサポートしていく。&lt;/p>
&lt;h2 id="コパイロツトさんと雑談">コパイロツトさんと雑談&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0709/#課題管理の雑談会へ向けての準備">準備を経て&lt;/a> 19時半から南青山のオフィスで雑談してきた。いろいろ準備していったが、モニターが大き過ぎて画面共有しても文字がよくみえなかったり macbook の操作がやりにくかったりして資料はほとんど使わずに雑談してきた。コパイロツトさんはプロジェクトマネジメントそのものをやっているわけではなく、プロジェクトリーダーの意思決定を支援するための取り組みをしているというユニークな業務を提供している。スクラムで例えると、スクラムマスターよりも代理プロダクトオーナー (Proxy Product Owner) に近いという。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/serious-scrum/how-to-succeed-as-a-proxy-product-owner-364c655d20b8">How to Succeed as a Proxy Product Owner&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>定例会議をうまくやればプロジェクトがうまくいくという信念のもと &lt;a href="https://supergoodmeetings.com/">SuperGoodMeetings&lt;/a> を提供している。ツールを正しく使ってもらえると意図した通りにうまくいくのだが、問題はツールをそもそも使ってくれないユーザーやチームをどう導くかというところで苦労されているように思えた。これは課題管理システムを使ってくれないという私の問題意識とも通じる。ツールを使いこなすには文章を書くことが重要で、文章を書けない人たちが一定数いるという事実を受け入れて、どのような取り組みをしていくか？これも課題管理と共通の問題であるように思える。課題管理の話しをして背景や意図が通じる人は少ないだけに、その価値観を共有できるというのは稀な機会であった。また &lt;a href="https://kmsj.org/">日本ナレッジ・マネジメント学会&lt;/a> という学会があることを教えていただいた。後日加入してみようと思う。&lt;/p>
&lt;p>19時半から21時ぐらいまでオフィスで雑談して、その後23時半ぐらいまで飲みに行ってきた。楽しかった。&lt;/p></content></item><item><title>情報共有とメンバー課金の過ち</title><link>/diary/posts/2023/0710/</link><pubDate>Mon, 10 Jul 2023 08:26:01 +0900</pubDate><guid>/diary/posts/2023/0710/</guid><description>1時に寝て4時に起きて5時に起きて7時に起きた。明け方からうまく眠れなくなった。
clang の互換性 openldap 2.5 向けに ldap の overlay モジュールのビルド環境を作っていた。これまでは 2.4 向けのモジュールのみを提供していた。2.5 もそろそろやろうということで先週末からビルド環境の構築に着手していた。rpm のパッケージングの作業をしていて、openldap 2.5 のサーバーのビルドをしていると次のエラーが発生した。
configure:21011: checking for pthread_detach with &amp;lt;pthread.h&amp;gt; configure:21033: clang -o conftest -O2 -g3 -fstack-protector -fPIE -D_REENTRANT -D_THREAD_SAFE -DOPENLDAP_FD_SETSIZE=16384 -DLDAP_CONNECTIONLESS -DSLAPD_META_CLIENT_PR -D_GNU_SOURCE -Wl,-z,relro -Wl,--as-needed -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 conftest.c &amp;gt;&amp;amp;5 clang-15: warning: argument unused during compilation: &amp;#39;-specs=/usr/lib/rpm/redhat/redhat-hardened-ld&amp;#39; [-Wunused-command-line-argument] clang-15: warning: argument unused during compilation: &amp;#39;-specs=/usr/lib/rpm/redhat/redhat-annobin-cc1&amp;#39; [-Wunused-command-line-argument] conftest.c:118:16: error: incompatible pointer to integer conversion passing &amp;#39;void *&amp;#39; to parameter of type &amp;#39;pthread_t&amp;#39; (aka &amp;#39;unsigned long&amp;#39;) [-Wint-conversion] pthread_detach(NULL); ^~~~ /usr/lib64/clang/15.</description><content>&lt;p>1時に寝て4時に起きて5時に起きて7時に起きた。明け方からうまく眠れなくなった。&lt;/p>
&lt;h2 id="clang-の互換性">clang の互換性&lt;/h2>
&lt;p>openldap 2.5 向けに ldap の overlay モジュールのビルド環境を作っていた。これまでは 2.4 向けのモジュールのみを提供していた。2.5 もそろそろやろうということで先週末からビルド環境の構築に着手していた。rpm のパッケージングの作業をしていて、openldap 2.5 のサーバーのビルドをしていると次のエラーが発生した。&lt;/p>
&lt;pre tabindex="0">&lt;code>configure:21011: checking for pthread_detach with &amp;lt;pthread.h&amp;gt;
configure:21033: clang -o conftest -O2 -g3 -fstack-protector -fPIE -D_REENTRANT -D_THREAD_SAFE -DOPENLDAP_FD_SETSIZE=16384 -DLDAP_CONNECTIONLESS -DSLAPD_META_CLIENT_PR -D_GNU_SOURCE -Wl,-z,relro -Wl,--as-needed -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 conftest.c &amp;gt;&amp;amp;5
clang-15: warning: argument unused during compilation: &amp;#39;-specs=/usr/lib/rpm/redhat/redhat-hardened-ld&amp;#39; [-Wunused-command-line-argument]
clang-15: warning: argument unused during compilation: &amp;#39;-specs=/usr/lib/rpm/redhat/redhat-annobin-cc1&amp;#39; [-Wunused-command-line-argument]
conftest.c:118:16: error: incompatible pointer to integer conversion passing &amp;#39;void *&amp;#39; to parameter of type &amp;#39;pthread_t&amp;#39; (aka &amp;#39;unsigned long&amp;#39;) [-Wint-conversion]
pthread_detach(NULL);
^~~~
/usr/lib64/clang/15.0.7/include/stddef.h:89:16: note: expanded from macro &amp;#39;NULL&amp;#39;
# define NULL ((void*)0)
^~~~~~~~~~
/usr/include/pthread.h:269:38: note: passing argument to parameter &amp;#39;__th&amp;#39; here
extern int pthread_detach (pthread_t __th) __THROW;
^
1 error generated.
&lt;/code>&lt;/pre>&lt;p>エラーメッセージを調べていると、どうやら clang 15 に pthread_detach がないといったものらしい。clang 14 のときはビルドできたという。他の oss でも clang のバージョン違いでビルドできないといったことは発生しているらしい。有識者によると、次の修正が clang15 対応らしい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://git.openldap.org/openldap/openldap/-/commit/4a9aaf7c2621c2800b163efe928512c20bd422e2">ITS#10011 build: fix compatibility with stricter C99 compilers&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>それ以外はとくに問題なく、ビルドできてモジュールそのものの動作も確認した。あとは rpm のパッケージングと gitlab ci/cd でビルドしたモジュールで動くかどうかの検証だけ。&lt;/p>
&lt;h2 id="メンバー課金による過ち">メンバー課金による過ち&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0709/">昨日 SuperGoodMeetings をさわってみた&lt;/a> ときにチーム管理の機能があって、任意のユーザーを招待するのは無制限で課金されないと書いてあった。「なるほどね。」とピンと来てコパイロツトの中の人に次のような所感を共有してみた。&lt;/p>
&lt;blockquote>
&lt;p>招待可能ユーザー数を無制限にしているのはよい視点だと私は思います。メンバー課金にすると、経費を削減するために共有アカウントを利用したり、あまり使わない人にはアカウントを作らないようになって情報共有の側面から望ましくない状態になる。一昔前のオンプレ時代は業務に使うシステムのアカウントは全社員がもっていて当たり前だったのが、クラウドサービスを使うようになってメンバー課金の経費削減から全社員がもたないようになりつつある (とくに中小企業) のは、情報共有の視点から過去よりも悪化しているという問題意識を私はもっています。&lt;/p>
&lt;/blockquote>
&lt;p>コパイロツトさんもまったく同じ課題意識をもっていてメンバー課金しない料金体系にしているとのこと。鶏と卵みたいな話しだけど、組織には情報共有のためにアカウントのお金をケチんなと言いたいし、クラウドサービスの会社も料金体系を1人ずつじゃなくて、30人、100人、1000人といったある程度の階段でいいんじゃない？とか思ったりする。メンバー課金じゃないクラウドサービスとして basecamp や backlog などがある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://basecamp.com/pricing">https://basecamp.com/pricing&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://backlog.com/ja/pricing/">https://backlog.com/ja/pricing/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>定例会議のプラクティスとプロダクト</title><link>/diary/posts/2023/0709/</link><pubDate>Sun, 09 Jul 2023 20:15:38 +0900</pubDate><guid>/diary/posts/2023/0709/</guid><description>昨日も1時過ぎまで飲んでいて3時に寝て8時に起きて午前中はだらだらしていてお昼からオフィスへ出掛けて行って調べものをしていた。
課題管理の雑談会へ向けての準備 先日の準備 の続き。
先日は私が関心をもっていることの資料を整理し直して先方に提示した。今日は コパイロツト さんのプロダクトの1つである SuperGoodMeetings にアカウント登録していろいろ触っていた。その過程で Project Sprint プラクティカルガイド を読んだりもしていた。
SuperGoodMeetings は Project Sprint という考え方で定例会議をうまくやるためのプロダクトにみえる。アプリケーションの完成度も高いしよく出来ていると思う。私からみたら課題管理システムのサブセットにみえる。会議のアジェンダが個々の issue に相当して詳細に管理できる。ui も最近の課題管理システムのそれに近い。一方でこのプロダクトは開発者向けのツールではないため、このツールだけでシステム開発を管理することは想定していないのではないか？と推測される。その辺りの話しも来週、出張したときに中の人に聞いてみようと思う。</description><content>&lt;p>昨日も1時過ぎまで飲んでいて3時に寝て8時に起きて午前中はだらだらしていてお昼からオフィスへ出掛けて行って調べものをしていた。&lt;/p>
&lt;h2 id="課題管理の雑談会へ向けての準備">課題管理の雑談会へ向けての準備&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0617/#課題管理の雑談会へ向けての準備">先日の準備&lt;/a> の続き。&lt;/p>
&lt;p>先日は私が関心をもっていることの資料を整理し直して先方に提示した。今日は &lt;a href="https://copilot.jp/">コパイロツト&lt;/a> さんのプロダクトの1つである &lt;a href="https://supergoodmeetings.com/">SuperGoodMeetings&lt;/a> にアカウント登録していろいろ触っていた。その過程で &lt;a href="https://miro.com/app/board/uXjVMX-zl6s=/">Project Sprint プラクティカルガイド&lt;/a> を読んだりもしていた。&lt;/p>
&lt;p>SuperGoodMeetings は Project Sprint という考え方で定例会議をうまくやるためのプロダクトにみえる。アプリケーションの完成度も高いしよく出来ていると思う。私からみたら課題管理システムのサブセットにみえる。会議のアジェンダが個々の issue に相当して詳細に管理できる。ui も最近の課題管理システムのそれに近い。一方でこのプロダクトは開発者向けのツールではないため、このツールだけでシステム開発を管理することは想定していないのではないか？と推測される。その辺りの話しも来週、出張したときに中の人に聞いてみようと思う。&lt;/p></content></item><item><title>アイディアは移動距離に比例する</title><link>/diary/posts/2023/0708/</link><pubDate>Sat, 08 Jul 2023 13:01:48 +0900</pubDate><guid>/diary/posts/2023/0708/</guid><description>23時に寝て2時に起きて5時に起きて7時に起きた。
ストレッチ 旅行へ行ってきてからなぜか首の筋を痛めている。寝違えたわけでもないのに気がついたら急にある筋が痛いなと思うようになった。今日の開脚幅は開始前157cmで、ストレッチ後160cmだった。今週もわりと忙しかったり暑かったりして負荷はまぁまぁ高かった。先週からの疲労を加味するとややバテた。すねの外側の筋、右のおしりの一点、腰の張り、肩から首にかけての張りなど、全身あちこち痛いところいっぱいみたいな状態だった。来週は東京出張でまたバタバタするが、帰ってきたら週末休んでもいいんじゃないかと思うぐらいにはしんどい感じ。
カフーツさん訪問 お昼はずっと作業をしていて、それが一段落した後に17時半ぐらいから ブログJelly Vol.133 に参加してきた。他の参加者はいとうさんとながいさんの2人だった。いとうさんはお仕事が忙しいということでずっとお仕事をされていた。私はながいさんとあーでもないこーでもないといった、いろんな話題の雑談をしてきた。
アイディアは移動距離に比例する
なにかのきっかけでこういう言葉があることを知った。家を持たず、デジタルノマドのように地域に縛られずに移動しながら働く人たちは優位性があるといった話題になった。quora でも同じような Q&amp;amp;A がある。
「アイデアは移動距離に比例する」というのは、どんな理由からでしょうか？ 今回は だいやめ を持っていった。いつも通り翌1時過ぎまで飲んで酔っ払ってしまった。飲み過ぎた。歳のせいか、お酒に弱くなっているので摂生も考慮してもうちょっと控えるようにした方がいいかもしれない。</description><content>&lt;p>23時に寝て2時に起きて5時に起きて7時に起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>旅行へ行ってきてからなぜか首の筋を痛めている。寝違えたわけでもないのに気がついたら急にある筋が痛いなと思うようになった。今日の開脚幅は開始前157cmで、ストレッチ後160cmだった。今週もわりと忙しかったり暑かったりして負荷はまぁまぁ高かった。先週からの疲労を加味するとややバテた。すねの外側の筋、右のおしりの一点、腰の張り、肩から首にかけての張りなど、全身あちこち痛いところいっぱいみたいな状態だった。来週は東京出張でまたバタバタするが、帰ってきたら週末休んでもいいんじゃないかと思うぐらいにはしんどい感じ。&lt;/p>
&lt;h2 id="カフーツさん訪問">カフーツさん訪問&lt;/h2>
&lt;p>お昼はずっと作業をしていて、それが一段落した後に17時半ぐらいから &lt;a href="https://www.facebook.com/events/287696183719718">ブログJelly Vol.133&lt;/a> に参加してきた。他の参加者はいとうさんとながいさんの2人だった。いとうさんはお仕事が忙しいということでずっとお仕事をされていた。私はながいさんとあーでもないこーでもないといった、いろんな話題の雑談をしてきた。&lt;/p>
&lt;blockquote>
&lt;p>アイディアは移動距離に比例する&lt;/p>
&lt;/blockquote>
&lt;p>なにかのきっかけでこういう言葉があることを知った。家を持たず、デジタルノマドのように地域に縛られずに移動しながら働く人たちは優位性があるといった話題になった。quora でも同じような Q&amp;amp;A がある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://jp.quora.com/%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A2%E3%81%AF%E7%A7%BB%E5%8B%95%E8%B7%9D%E9%9B%A2%E3%81%AB%E6%AF%94%E4%BE%8B%E3%81%99%E3%82%8B-%E3%81%A8%E3%81%84%E3%81%86%E3%81%AE%E3%81%AF-%E3%81%A9%E3%82%93%E3%81%AA%E7%90%86">「アイデアは移動距離に比例する」というのは、どんな理由からでしょうか？&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>今回は &lt;a href="/diary/diary/posts/2021/1109/#呑み">だいやめ&lt;/a> を持っていった。いつも通り翌1時過ぎまで飲んで酔っ払ってしまった。飲み過ぎた。歳のせいか、お酒に弱くなっているので摂生も考慮してもうちょっと控えるようにした方がいいかもしれない。&lt;/p></content></item><item><title>七夕と願い</title><link>/diary/posts/2023/0707/</link><pubDate>Fri, 07 Jul 2023 18:01:53 +0900</pubDate><guid>/diary/posts/2023/0707/</guid><description>23時に寝て2時に起きて6時に起きた。旅行から帰ってきてから最近はこのパターンになってきた。
google のロゴが Tanabata 2023 になっていて七夕だと気付いた。もう私にとって願いというのは健康を祈るぐらいしかない。残された寿命を使い切る前にいまやっていることをやり切りたい、もしくはその結果をみたいと思っていて、そのために必要なことは健康ぐらいかなと。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
ADLIV さんふりかえり 社員旅行の同行ふりかえり 他社の社員旅行へ同行してみての所感として学ぶことは多々あった。
強制参加にはしない (断ってもよい) 仕事だけではない人間関係の構築という価値観を大事にしている 上下関係がフラットなので参加者が自由に行動したり話したりできる 経営陣や上司に忖度しないメンバーがいることでフラットな関係性を共有できる チーム単位で行動できるので組織の全体行動を強制される感覚が緩和される 野中郁二郎先生は業務外での暗黙知を共有する「場」づくりが大事だと説いている。会社が危機のときやしんどいお仕事をこなすとき、最後は経営者やリーダーの人生観や価値観がモノを言うという考え方がある。そんなときにこういった価値観の共有は役に立つのかもしれない。「社員旅行」という単語自体が古い価値観をイメージしてネガティブに聞こえる。いまだったらワーケーションと呼ぶ方がよいかもしれない。
過去にスタートアップで働いていたとき、会社が M&amp;amp;A で売却して、私にとってはあまりメリットがなかったので即断で辞めると伝えた。即断できたのは経営者に理念がなかったからというのも大きな要因の1つだといまになって思える。時期の差はあれど、私以外の主要メンバーもその後に全員辞めた。要はそういうこと。
go の generics 勉強会の準備 水曜日から資料を作っている。昨日はほぼまる一日コードレビューをやっていた。午前中の半日を費やしてようやく完成した。この資料は一般の go 勉強会でも使えるなと思ったのでお手伝い先のプロダクト開発に関するところを取り除いた資料を別途公開した。資料の中でその内容を検証するサンプルコードも次のリポジトリで公開している。
https://github.com/t2y/go-generics-study</description><content>&lt;p>23時に寝て2時に起きて6時に起きた。旅行から帰ってきてから最近はこのパターンになってきた。&lt;/p>
&lt;p>google のロゴが &lt;a href="https://www.google.com/doodles/tanabata-2023">Tanabata 2023&lt;/a> になっていて七夕だと気付いた。もう私にとって願いというのは健康を祈るぐらいしかない。残された寿命を使い切る前にいまやっていることをやり切りたい、もしくはその結果をみたいと思っていて、そのために必要なことは健康ぐらいかなと。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2023/0628/">ADLIV さんふりかえり&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/tags/sightseeing/">社員旅行の同行ふりかえり&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>他社の社員旅行へ同行してみての所感として学ぶことは多々あった。&lt;/p>
&lt;ul>
&lt;li>強制参加にはしない (断ってもよい)&lt;/li>
&lt;li>仕事だけではない人間関係の構築という価値観を大事にしている&lt;/li>
&lt;li>上下関係がフラットなので参加者が自由に行動したり話したりできる&lt;/li>
&lt;li>経営陣や上司に忖度しないメンバーがいることでフラットな関係性を共有できる&lt;/li>
&lt;li>チーム単位で行動できるので組織の全体行動を強制される感覚が緩和される&lt;/li>
&lt;/ul>
&lt;p>野中郁二郎先生は業務外での暗黙知を共有する「場」づくりが大事だと説いている。会社が危機のときやしんどいお仕事をこなすとき、最後は経営者やリーダーの人生観や価値観がモノを言うという考え方がある。そんなときにこういった価値観の共有は役に立つのかもしれない。「社員旅行」という単語自体が古い価値観をイメージしてネガティブに聞こえる。いまだったらワーケーションと呼ぶ方がよいかもしれない。&lt;/p>
&lt;p>過去にスタートアップで働いていたとき、会社が M&amp;amp;A で売却して、私にとってはあまりメリットがなかったので即断で辞めると伝えた。即断できたのは経営者に理念がなかったからというのも大きな要因の1つだといまになって思える。時期の差はあれど、私以外の主要メンバーもその後に全員辞めた。要はそういうこと。&lt;/p>
&lt;h2 id="go-の-generics-勉強会の準備">go の generics 勉強会の準備&lt;/h2>
&lt;p>水曜日から資料を作っている。昨日はほぼまる一日コードレビューをやっていた。午前中の半日を費やしてようやく完成した。この資料は一般の go 勉強会でも使えるなと思ったのでお手伝い先のプロダクト開発に関するところを取り除いた資料を別途公開した。資料の中でその内容を検証するサンプルコードも次のリポジトリで公開している。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/go-generics-study">https://github.com/t2y/go-generics-study&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>コードレビューで1日が終わる日</title><link>/diary/posts/2023/0706/</link><pubDate>Thu, 06 Jul 2023 08:19:59 +0900</pubDate><guid>/diary/posts/2023/0706/</guid><description>0時に寝て2時に起きて6時半に起きた。旅行から帰ってきて睡眠の質が上がってきた気がする。
コードレビュー 週明けから毎日ずっとコードレビューをしているわけだけど、今日は scim の id 連携の実装ができたのでそのコードレビューを半日以上やっていた。変更内容は2000行弱ぐらい。以前にも scim の調査 について少し書いた。
担当者は前マイルストーンのときから調査していて、今マイルストーンで初期実装は入れてしまおうという話しを昨日の 1on1 でしていた。また qa レベルのテストは来月末ぐらいでやるので詳細を作り込むよりもまずは大きな機能として入れておきたい。いまマイルストーンの期間を2週間に設定している。調査も含めて実装まで2つのマイルストーンを費やそうとしている。理想的にはどんな機能であっても、メンバーには2週間で完了する粒度で issue を分割して作業できるようになってほしいという狙いがある。
それは過去にどんな新機能を作っていても2週間を超えることはなかったという私の経験則でもある。これは2週間でどんな機能でも完成するという意味ではなく、2週間でマージできないような区切りのつかない機能開発はないという意味だ。機能実装のような issue でマイルストーンをまたぐ開発をしていると、進捗が不透明になったり、開発がダレると私は考えている。ダレるというのは短い期間に集中して開発した方が効率も品質もよいものができるのではないか。記憶の仕組みからは理屈上そうだと言える。開発のメリハリをつけるという働き方に範を示していきたい。</description><content>&lt;p>0時に寝て2時に起きて6時半に起きた。旅行から帰ってきて睡眠の質が上がってきた気がする。&lt;/p>
&lt;h2 id="コードレビュー">コードレビュー&lt;/h2>
&lt;p>週明けから毎日ずっとコードレビューをしているわけだけど、今日は scim の id 連携の実装ができたのでそのコードレビューを半日以上やっていた。変更内容は2000行弱ぐらい。以前にも &lt;a href="/diary/diary/posts/2023/0627/#scim-調査">scim の調査&lt;/a> について少し書いた。&lt;/p>
&lt;p>担当者は前マイルストーンのときから調査していて、今マイルストーンで初期実装は入れてしまおうという話しを昨日の 1on1 でしていた。また qa レベルのテストは来月末ぐらいでやるので詳細を作り込むよりもまずは大きな機能として入れておきたい。いまマイルストーンの期間を2週間に設定している。調査も含めて実装まで2つのマイルストーンを費やそうとしている。理想的にはどんな機能であっても、メンバーには2週間で完了する粒度で issue を分割して作業できるようになってほしいという狙いがある。&lt;/p>
&lt;p>それは過去にどんな新機能を作っていても2週間を超えることはなかったという私の経験則でもある。これは2週間でどんな機能でも完成するという意味ではなく、2週間でマージできないような区切りのつかない機能開発はないという意味だ。機能実装のような issue でマイルストーンをまたぐ開発をしていると、進捗が不透明になったり、開発がダレると私は考えている。ダレるというのは短い期間に集中して開発した方が効率も品質もよいものができるのではないか。記憶の仕組みからは理屈上そうだと言える。開発のメリハリをつけるという働き方に範を示していきたい。&lt;/p></content></item><item><title>go の generics 勉強会へ向けての準備</title><link>/diary/posts/2023/0705/</link><pubDate>Wed, 05 Jul 2023 09:06:35 +0900</pubDate><guid>/diary/posts/2023/0705/</guid><description>0時に寝て6時に起きて7時に起きた。週明けから忙しくて余裕ない。それでもよく眠れていることが幸い。
go の generics 勉強会の準備 今週末の金曜日に勉強会をする想定で作り始めた。generics は難しいのでなかなか本腰を入れて取り組めていなかった。基本的には tenntenn さんの プログラミング言語Go完全入門 15章ジェネリクス（型パラメタ） の資料をベースに、自分で理解できるように調査したり、サンプルコードを書いたり、自分で理解した内容を補足したりして資料を作り始めた。go 1.18 のジェネリクスで導入された概念は次になる。これらのキーワードに関するところをそれぞれ調べることにした。
型パラメーター 型引数 インターフェースによる制約 (Type constraint) 型セット (Type sets)</description><content>&lt;p>0時に寝て6時に起きて7時に起きた。週明けから忙しくて余裕ない。それでもよく眠れていることが幸い。&lt;/p>
&lt;h2 id="go-の-generics-勉強会の準備">go の generics 勉強会の準備&lt;/h2>
&lt;p>今週末の金曜日に勉強会をする想定で作り始めた。generics は難しいのでなかなか本腰を入れて取り組めていなかった。基本的には tenntenn さんの &lt;a href="https://tenn.in/generics">プログラミング言語Go完全入門 15章ジェネリクス（型パラメタ）&lt;/a> の資料をベースに、自分で理解できるように調査したり、サンプルコードを書いたり、自分で理解した内容を補足したりして資料を作り始めた。go 1.18 のジェネリクスで導入された概念は次になる。これらのキーワードに関するところをそれぞれ調べることにした。&lt;/p>
&lt;ul>
&lt;li>型パラメーター&lt;/li>
&lt;li>型引数&lt;/li>
&lt;li>インターフェースによる制約 (Type constraint)&lt;/li>
&lt;li>型セット (Type sets)&lt;/li>
&lt;/ul></content></item><item><title>ldap プロトコルの persistent search</title><link>/diary/posts/2023/0704/</link><pubDate>Tue, 04 Jul 2023 08:11:43 +0900</pubDate><guid>/diary/posts/2023/0704/</guid><description>0時に寝て5時に起きて6時半に起きた。朝から大鼓方を調べたりしていた。
persistent search あれこれ ldap プロトコルの文脈でクライアントがサーバーに接続して、エントリーの更新を検出して更新があったエントリーのみを取得することを persistent search (永続検索) と呼ぶ。メッセージキューで言うところの pubsub の consumer に相当する機能。フィルター条件に合致したエントリーのみを取得するという側面では検索と言える。
ietf のワーキンググループに次のような仕様がある。
Persistent Search: A Simple LDAP Change Notification Mechanism go-ldap で過去に Add Persistent search control + PersistentSearch() #80 で実装を追加しようとしたのもあったので調べてみた。しかし、この機能に openldap は対応していないようだ。
以前から調べている openldap の syncrepl も persistent search を実現する機能の1つと言える。ldap に詳しくないと用語と機能と実装の切り分けができなくて困惑する。syncrepl はもともとレプリケーションのための仕組みではあるが、pubsub の consumer としても使える。そういうときに syncrepl を使って &amp;ldquo;persistent search&amp;rdquo; を行うと言ったりする。このときに先の ietf に提案されている persistent search とはまったく関係ない。だから混乱する。
lopenldap サーバー同士で syncrepl の provider の機能は次の overlay モジュールによって提供される。逆に syncrepl の consumer の機能は openldap の組み込みの機能で提供される。なんらかの歴史的経緯があるのだろう。</description><content>&lt;p>0時に寝て5時に起きて6時半に起きた。朝から大鼓方を調べたりしていた。&lt;/p>
&lt;h2 id="persistent-search-あれこれ">persistent search あれこれ&lt;/h2>
&lt;p>ldap プロトコルの文脈でクライアントがサーバーに接続して、エントリーの更新を検出して更新があったエントリーのみを取得することを persistent search (永続検索) と呼ぶ。メッセージキューで言うところの pubsub の consumer に相当する機能。フィルター条件に合致したエントリーのみを取得するという側面では検索と言える。&lt;/p>
&lt;p>ietf のワーキンググループに次のような仕様がある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.ietf.org/proceedings/50/I-D/ldapext-psearch-03.txt">Persistent Search: A Simple LDAP Change Notification Mechanism&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>go-ldap で過去に &lt;a href="https://github.com/go-ldap/ldap/pull/80">Add Persistent search control + PersistentSearch() #80&lt;/a> で実装を追加しようとしたのもあったので調べてみた。しかし、この機能に openldap は対応していないようだ。&lt;/p>
&lt;p>以前から調べている &lt;a href="/diary/diary/posts/2023/0317/">openldap の syncrepl&lt;/a> も persistent search を実現する機能の1つと言える。ldap に詳しくないと用語と機能と実装の切り分けができなくて困惑する。syncrepl はもともとレプリケーションのための仕組みではあるが、pubsub の consumer としても使える。そういうときに syncrepl を使って &lt;em>&amp;ldquo;persistent search&amp;rdquo;&lt;/em> を行うと言ったりする。このときに先の ietf に提案されている persistent search とはまったく関係ない。だから混乱する。&lt;/p>
&lt;p>lopenldap サーバー同士で syncrepl の provider の機能は次の overlay モジュールによって提供される。逆に syncrepl の consumer の機能は openldap の組み込みの機能で提供される。なんらかの歴史的経緯があるのだろう。&lt;/p>
&lt;pre tabindex="0">&lt;code>overlay syncprov
&lt;/code>&lt;/pre>&lt;p>ldapsearch コマンドで persistent search (syncrepl consumer) を実行するには次のようにする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ldapsearch -x -H &lt;span style="color:#e6db74">&amp;#34;ldap://localhost:389&amp;#34;&lt;/span> -b &lt;span style="color:#e6db74">&amp;#34;dc=example,dc=com&amp;#34;&lt;/span> -D &lt;span style="color:#e6db74">&amp;#34;cn=Manager,dc=example,dc=com&amp;#34;&lt;/span> -w &lt;span style="color:#e6db74">&amp;#34;secret&amp;#34;&lt;/span> -E &lt;span style="color:#e6db74">&amp;#39;!sync=rp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ldap プロトコルの文脈で persistent search を行うといった場合、クライアントから pubsub で言うところの consumer を用意するといった意味だけで、その実装や通信方法はいくつか実現方法があるということを学んだ。&lt;/p>
&lt;h2 id="サイトデザイン最終レビュー">サイトデザイン最終レビュー&lt;/h2>
&lt;p>19時からデザイナーさんとはらさんと打ち合わせ。少し前に用意してくれた &lt;a href="/diary/diary/posts/2023/0619/#サイトデザインのサンプルページ">サイトデザインのサンプルページ&lt;/a> の最終レビューを行った。全体としては気に入っているので概ね ok なのだけど、詳細の気になったところやデザインの機微のようなところをはらさんと一緒にデザイナーさんとやり取りして共有した。&lt;/p>
&lt;p>デザインだけをみてこちらで想定していたことも、デザイナーさんの意見や視点を伺ってみると発見があっておもしろかった。逆に言えば、デザインだけでデザイナーさんの意図を伝えるのはとても難しいということもわかった。背景の説明を受けると論理的だったり合理性があったりするものの、なにも情報がない状態でそのことに気付くのは難しい。これはコードリーディングにおいても同じで、作者に意図の説明を受けながらソースコードを読むと簡単に理解できたりする。そして、デザイナーさんもうちらの意見から考え方を見直すこともあった。ウェブデザインのようなものを1人で完全に気付きを得るのは難しそうだ。&lt;/p>
&lt;p>はらさんにレビューに入ってもらっていてとても助かる。私は ui/ux については素人なので、要件やレビューする視点の重要なところにツッコミを入れてくれるので気付くことも多い。私がコードレビューで設計やプログラミングについて指摘しているのも、別の人の視点からみるとこういうみえ方をするんだろうなと思いながら聞いていた。「餅は餅屋」とはよく言った言葉だ。自分がよくわからない分野のお仕事を依頼もしくは話すときは、自分たちの立場でそういった外部の専門家を雇うことの重要性も同時に理解できた。私は課題管理の専門家としてそういうポジションを作っていきたい。&lt;/p></content></item><item><title>リフレクションにはまった半日</title><link>/diary/posts/2023/0703/</link><pubDate>Mon, 03 Jul 2023 07:35:25 +0900</pubDate><guid>/diary/posts/2023/0703/</guid><description>23時に寝て5時に起きて6時半に起きた。ストレッチで伸ばしたせいか、いつもよりよく眠れた。先週は主に旅行へ行っていて非日常でリフレッシュした。今朝は朝ご飯に野菜サラダを作って食べて7時半には家を出れた。
非同期の ldap 検索の api 先日送った go-ldap の pr を完了した。送ったときはチャンネル用いた検索 api だったのだけど、それから設計を議論して非同期検索を主とした api として生まれ変わった。レビューに1ヶ月を要したものの2人のメンバーから approve をもらって無事にマージされた。
Add search asynchronously with context #440 この一歩は大きくてこの機能を突破口にうちらの要件に足りない機能を実装していく。プロトコル部分の修正が過去の draft 実装から参考にできるのであれば今週中にはまた pr を送りたい。
mongodb の unmarshal 実装 mongodb-driver での bson の marshal/unmarshal を実装する。mongo-driver/bson に unmarshal について2つの interface が紹介されている。
type Unmarshaler interface { UnmarshalBSON([]byte) error } type ValueUnmarshaler interface { UnmarshalBSONValue(bsontype.Type, []byte) error } bson の byte 列を unmarshal するにあたり、構造体そのものには UnmarshalBSON() を、構造体のメンバーには UnmarshalBSONValue() を使う。これでうまくいきそうに思えたのだけど、interface を介したデコード処理で意図した振る舞いにならないことに気付いた。mongodb-driver は decode/unmarshal 処理を reflect を使って実装している。要件の詳細は省く (interface を使いたい背景がある) が、再現コードが次になる。</description><content>&lt;p>23時に寝て5時に起きて6時半に起きた。ストレッチで伸ばしたせいか、いつもよりよく眠れた。先週は主に旅行へ行っていて非日常でリフレッシュした。今朝は朝ご飯に野菜サラダを作って食べて7時半には家を出れた。&lt;/p>
&lt;h2 id="非同期の-ldap-検索の-api">非同期の ldap 検索の api&lt;/h2>
&lt;p>先日送った &lt;a href="/diary/diary/posts/2023/0601/#チャンネルを用いた-ldap-検索の-api">go-ldap の pr&lt;/a> を完了した。送ったときはチャンネル用いた検索 api だったのだけど、それから設計を議論して非同期検索を主とした api として生まれ変わった。レビューに1ヶ月を要したものの2人のメンバーから approve をもらって無事にマージされた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/440">Add search asynchronously with context #440&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この一歩は大きくてこの機能を突破口にうちらの要件に足りない機能を実装していく。プロトコル部分の修正が過去の draft 実装から参考にできるのであれば今週中にはまた pr を送りたい。&lt;/p>
&lt;h2 id="mongodb-の-unmarshal-実装">mongodb の unmarshal 実装&lt;/h2>
&lt;p>mongodb-driver での bson の marshal/unmarshal を実装する。&lt;a href="https://pkg.go.dev/go.mongodb.org/mongo-driver/bson">mongo-driver/bson&lt;/a> に unmarshal について2つの interface が紹介されている。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Unmarshaler&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">UnmarshalBSON&lt;/span>([]&lt;span style="color:#66d9ef">byte&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">ValueUnmarshaler&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">UnmarshalBSONValue&lt;/span>(&lt;span style="color:#a6e22e">bsontype&lt;/span>.&lt;span style="color:#a6e22e">Type&lt;/span>, []&lt;span style="color:#66d9ef">byte&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>bson の byte 列を unmarshal するにあたり、構造体そのものには &lt;code>UnmarshalBSON()&lt;/code> を、構造体のメンバーには &lt;code>UnmarshalBSONValue()&lt;/code> を使う。これでうまくいきそうに思えたのだけど、interface を介したデコード処理で意図した振る舞いにならないことに気付いた。mongodb-driver は decode/unmarshal 処理を &lt;a href="https://pkg.go.dev/reflect">reflect&lt;/a> を使って実装している。要件の詳細は省く (interface を使いたい背景がある) が、再現コードが次になる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">MyInterface&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">MyFunc&lt;/span>() &lt;span style="color:#66d9ef">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">MyType&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">MyType&lt;/span>) &lt;span style="color:#a6e22e">MyFunc&lt;/span>() &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">tMyInterface&lt;/span> = &lt;span style="color:#a6e22e">reflect&lt;/span>.&lt;span style="color:#a6e22e">TypeOf&lt;/span>((&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">MyInterface&lt;/span>)(&lt;span style="color:#66d9ef">nil&lt;/span>)).&lt;span style="color:#a6e22e">Elem&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">some&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#a6e22e">reflect&lt;/span>.&lt;span style="color:#a6e22e">Value&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Convert&lt;/span>(&lt;span style="color:#a6e22e">tMyInterface&lt;/span>).&lt;span style="color:#a6e22e">MethodByName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MyFunc&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;got&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">f&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;=========&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">t1&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">MyType&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">some&lt;/span>(&lt;span style="color:#a6e22e">reflect&lt;/span>.&lt;span style="color:#a6e22e">ValueOf&lt;/span>(&lt;span style="color:#a6e22e">t1&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// the zero value of an interface is nil
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">t2&lt;/span> &lt;span style="color:#a6e22e">MyInterface&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">some&lt;/span>(&lt;span style="color:#a6e22e">reflect&lt;/span>.&lt;span style="color:#a6e22e">ValueOf&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">t2&lt;/span>).&lt;span style="color:#a6e22e">Elem&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>このコードを実行すると次のエラーになる。&lt;/p>
&lt;pre tabindex="0">&lt;code>panic: reflect: Method on nil interface value
&lt;/code>&lt;/pre>&lt;p>ドキュメントにも interface の nil の値を呼び出すと panic するよと書いてある。&lt;/p>
&lt;blockquote>
&lt;p>Method returns a function value corresponding to v&amp;rsquo;s i&amp;rsquo;th method. The arguments to a Call on the returned function should not include a receiver; the returned function will always use v as the receiver. Method panics if i is out of range or if v is a nil interface value.&lt;/p>
&lt;p>&lt;a href="https://pkg.go.dev/reflect#Value.Method">https://pkg.go.dev/reflect#Value.Method&lt;/a>&lt;/p>
&lt;/blockquote></content></item><item><title>敦盛を観てきた</title><link>/diary/posts/2023/0702/</link><pubDate>Sun, 02 Jul 2023 10:35:51 +0900</pubDate><guid>/diary/posts/2023/0702/</guid><description>18時半に寝て22時過ぎに起きて、もう今日は無理やと諦めてまた寝て、6時に起きて8時に起きた。車移動の旅の疲れか、いつもよりよく眠れた。
能: 敦盛 13時から 第四回《真花演能会》能『敦盛』 を カフーツのいとうさんとながいさん と一緒に観に行ってきた。結論から書くと、私にとってはとてもよかった。前に1度能を観た体験 があるのでその前回の体験との相対比較で観ることもできた。前回は能を2つ、狂言を1つ観たことで時間がかかった。今回は狂言と能を1つずつのセットで観た。初心者は観ていて疲れるのでこのぐらいの規模で十分に思えた。
一番よいSS席が8,000円と、前回よりも少し高い価格設定となっている。その価格差からサービスレベルの違いも伺えた。お客さんの入りは会場のキャパシティに対して7割程度といったところかな。
スマホとイヤホンで能の解説が聞けるアプリを提供 イヤホンをもっていなかったので聞いてないが、、、 朝原さんの解説が丁寧でわかりやすかった この解説もスマホから英語で聞けると話されていた 資料は英語併記で当日のアナウンスも日本語の後に英語で行っていた 詞章 (ししょう) という、能の台本が資料に添付されていた 謡曲 (ようきょく) とも呼ばれるみたい 詞章があることで演者が何を言っているのか把握しやすい。例えば、次のような台詞を能の独特の謡の表現で聞き分けるのは素人にはなかなか難しい。というのは現代語ではないという点と、明確な1文になっていなかったり、単語の区切りがよく分からなかったりするから。次の台詞から「に」「の」とかで終わっている文章があることがわかる。
ワキ: さては其夜の御遊びなりけり城のうちに。さも面白き笛の音の。よせ手の陣まで聞こえしは
シテ詞: それこそさしも敦盛が。最後まで持ちし笛竹の
ワキ: 音も一節を唄ひ遊ぶ
必ずしもこの台詞通りに謡をしているわけでもないことがわかった。少し飛ばしたり、書いていない内容を謳うこともあった。あくまでこれは参考程度のもののようだ。感覚的には8割ぐらい資料の沿って進んでいた気がする。
前回はちょくちょく寝落ちしてしまっていた。今回は詞章をみながら能を観ていたのでずっと集中して観ることができた。詞章ばかり目で追っていると演者の動きをみれないのでそのバランスも大事だと理解できた。本当はこの内容を暗記して観るのが正しいのだろう。寝落ちしたのは中盤の、詞章がなかった地元に住む男との会話の部分だけだった。
後半は囃子方の演奏とシテの演者の舞いが盛り上がっていって、最後の最後は場面が変わって少し落として終わったように思える。そこら辺はよくわからなかったけど、後半の盛り上がりにかけての、蓮生 (熊谷次郎直実) と敦盛との和解の雰囲気が表れていた。敦盛は2番目物の修羅能にカテゴライズされる。このカテゴリは修羅道に落ちた苦しみを描く作品が多い中、敦盛を討った蓮生が供養し、敦盛が成仏していく？ような終わり方になっていてよい結末のような話しになる。内容も後味がよいものだった。
狂言: 雷 能と狂言をセットにして 能楽 と呼ぶ。日記での紹介は前後しているが、現代では狂言を演じてから能をするという順番になるらしい。狂言は20-30分、能は1.5時間程度といった時間配分になる。現代に当てはめると、狂言はコメディ、能はシリアスなドラマといった演目になる。
雷 (神鳴) という狂言をみた。狂言は演劇に近いので詞章がなくてもだいたい雰囲気はわかるし、笑えるところもわかる。腰痛を治してもらった雷神が医者にお礼を求められ、持ち合わせがなかったことから「近日眷属を連れてそなたの住処に落ちて礼をする」と言うが、医者は「それは迷惑でござる。」と言い放った瞬間が一番受けていた気がする。一緒に行ったながいさんは狂言の方がわかりやすくてよいと話されていた。
大鼓方 太鼓 (たいこ) じゃなくて大鼓 (おおつづみ)、漢字が似ているのでたまに間違う。
前回に能を観に行ったときも 谷口正壽 さんが大鼓を演奏されていた。おそらく関西圏で活動されているのだと推測する。前回はパンフレットに囃子方の名前がなかったけれど、今回は囃子方の演者も記載されていたので名前を確認して調べてみた。観終わった後にいとうさんも谷口さんの演奏について言及しているのを聞いて、私も前回初めて聴いたのに囃子方すごいと印象に残ったのは谷口さんの技量の高さによるものだとわかった。素人が聴いていてもこの人は別格のように感じた。ホームページのプロフィールによると昭和54年 (当時10歳) から能楽石井流大鼓方に入門とあるので40年以上のキャリアになる。
谷口さんが大鼓で出演している能を探したら次がヒットした。前に菊慈童 の動画を見返したときも感じたが、臨場感が全然違う。動画だと谷口さんの凄さは霞んでしまう。生で聴いた大鼓と掛け声の聴こえ方とは異なる。
能楽と郷土を知る会 能楽を演じる前に30分ほど予備知識や背景などを解説する時間がある。今回は 朝原広基 さんという能楽研究家が演目の解説を行った。肩書きの通り、当時の時代背景や風習などをとても丁寧に解説してくれてわかりやすかった。
パンフレットに入っていたチラシをみて 能楽と郷土を知る会 というイベントを運営されているようだ。まさに私が関心のある内容なので今度遊びに行ってみようと思う。
ストレッチ 土曜日は旅行へ行っていたので日曜日の夜にストレッチへ。首が痛いとトレーナーさんに伝えたら、いつもはやらない首のストレッチもやってくれた。感謝。体調の悪いところを伝えるとそこもストレッチしてみてくれるのが助かる。車を運転する姿勢はどうしても前傾姿勢になるのと、運転は意識を集中しないとできないことからデスクワークよりも上位の負荷がかかるらしい。神戸から高知まで何時間もかけて運転しているし、移動の時間は車に乗せてもらうことも多かったので全身あちこちに張りがあって、とくに上半身が全般的に硬かった。今日の開脚幅は開始前151cmで、ストレッチ後154cmだった。いつもとは違う状況での計測なので数値は悪化した。</description><content>&lt;p>18時半に寝て22時過ぎに起きて、もう今日は無理やと諦めてまた寝て、6時に起きて8時に起きた。車移動の旅の疲れか、いつもよりよく眠れた。&lt;/p>
&lt;h2 id="能-敦盛">能: 敦盛&lt;/h2>
&lt;p>13時から &lt;a href="https://shin-flower.jp/events/2023/0419143830.html">第四回《真花演能会》能『敦盛』&lt;/a> を &lt;a href="/diary/diary/posts/2023/0603/#カフーツさん訪問">カフーツのいとうさんとながいさん&lt;/a> と一緒に観に行ってきた。結論から書くと、私にとってはとてもよかった。&lt;a href="/diary/diary/posts/2023/0603/">前に1度能を観た体験&lt;/a> があるのでその前回の体験との相対比較で観ることもできた。前回は能を2つ、狂言を1つ観たことで時間がかかった。今回は狂言と能を1つずつのセットで観た。初心者は観ていて疲れるのでこのぐらいの規模で十分に思えた。&lt;/p>
&lt;p>一番よいSS席が8,000円と、前回よりも少し高い価格設定となっている。その価格差からサービスレベルの違いも伺えた。お客さんの入りは会場のキャパシティに対して7割程度といったところかな。&lt;/p>
&lt;ul>
&lt;li>スマホとイヤホンで能の解説が聞けるアプリを提供
&lt;ul>
&lt;li>イヤホンをもっていなかったので聞いてないが、、、&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>朝原さんの解説が丁寧でわかりやすかった
&lt;ul>
&lt;li>この解説もスマホから英語で聞けると話されていた&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>資料は英語併記で当日のアナウンスも日本語の後に英語で行っていた&lt;/li>
&lt;li>詞章 (ししょう) という、能の台本が資料に添付されていた
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E8%AC%A1%E6%9B%B2">謡曲 (ようきょく)&lt;/a> とも呼ばれるみたい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>詞章があることで演者が何を言っているのか把握しやすい。例えば、次のような台詞を能の独特の謡の表現で聞き分けるのは素人にはなかなか難しい。というのは現代語ではないという点と、明確な1文になっていなかったり、単語の区切りがよく分からなかったりするから。次の台詞から「に」「の」とかで終わっている文章があることがわかる。&lt;/p>
&lt;blockquote>
&lt;p>ワキ: さては其夜の御遊びなりけり城のうちに。さも面白き笛の音の。よせ手の陣まで聞こえしは&lt;br />
シテ詞: それこそさしも敦盛が。最後まで持ちし笛竹の&lt;br />
ワキ: 音も一節を唄ひ遊ぶ&lt;br />&lt;/p>
&lt;/blockquote>
&lt;p>必ずしもこの台詞通りに謡をしているわけでもないことがわかった。少し飛ばしたり、書いていない内容を謳うこともあった。あくまでこれは参考程度のもののようだ。感覚的には8割ぐらい資料の沿って進んでいた気がする。&lt;/p>
&lt;p>前回はちょくちょく寝落ちしてしまっていた。今回は詞章をみながら能を観ていたのでずっと集中して観ることができた。詞章ばかり目で追っていると演者の動きをみれないのでそのバランスも大事だと理解できた。本当はこの内容を暗記して観るのが正しいのだろう。寝落ちしたのは中盤の、詞章がなかった地元に住む男との会話の部分だけだった。&lt;/p>
&lt;p>後半は囃子方の演奏とシテの演者の舞いが盛り上がっていって、最後の最後は場面が変わって少し落として終わったように思える。そこら辺はよくわからなかったけど、後半の盛り上がりにかけての、蓮生 (熊谷次郎直実) と敦盛との和解の雰囲気が表れていた。敦盛は2番目物の修羅能にカテゴライズされる。このカテゴリは修羅道に落ちた苦しみを描く作品が多い中、敦盛を討った蓮生が供養し、敦盛が成仏していく？ような終わり方になっていてよい結末のような話しになる。内容も後味がよいものだった。&lt;/p>
&lt;h3 id="狂言-雷">狂言: 雷&lt;/h3>
&lt;p>能と狂言をセットにして &lt;a href="https://ja.wikipedia.org/wiki/%E8%83%BD%E6%A5%BD">能楽&lt;/a> と呼ぶ。日記での紹介は前後しているが、現代では狂言を演じてから能をするという順番になるらしい。狂言は20-30分、能は1.5時間程度といった時間配分になる。現代に当てはめると、狂言はコメディ、能はシリアスなドラマといった演目になる。&lt;/p>
&lt;p>&lt;a href="https://ja.wikipedia.org/wiki/%E9%9B%B7_(%E7%8B%82%E8%A8%80)">雷 (神鳴)&lt;/a> という狂言をみた。狂言は演劇に近いので詞章がなくてもだいたい雰囲気はわかるし、笑えるところもわかる。腰痛を治してもらった雷神が医者にお礼を求められ、持ち合わせがなかったことから「近日眷属を連れてそなたの住処に落ちて礼をする」と言うが、医者は「それは迷惑でござる。」と言い放った瞬間が一番受けていた気がする。一緒に行ったながいさんは狂言の方がわかりやすくてよいと話されていた。&lt;/p>
&lt;h3 id="大鼓方">大鼓方&lt;/h3>
&lt;p>太鼓 (たいこ) じゃなくて大鼓 (おおつづみ)、漢字が似ているのでたまに間違う。&lt;/p>
&lt;p>前回に能を観に行ったときも &lt;a href="http://t-masatoshi.com/">谷口正壽&lt;/a> さんが大鼓を演奏されていた。おそらく関西圏で活動されているのだと推測する。前回はパンフレットに囃子方の名前がなかったけれど、今回は囃子方の演者も記載されていたので名前を確認して調べてみた。観終わった後にいとうさんも谷口さんの演奏について言及しているのを聞いて、私も前回初めて聴いたのに囃子方すごいと印象に残ったのは谷口さんの技量の高さによるものだとわかった。素人が聴いていてもこの人は別格のように感じた。ホームページのプロフィールによると昭和54年 (当時10歳) から能楽石井流大鼓方に入門とあるので40年以上のキャリアになる。&lt;/p>
&lt;p>谷口さんが大鼓で出演している能を探したら次がヒットした。&lt;a href="/diary/diary/posts/2023/0603/">前に菊慈童&lt;/a> の動画を見返したときも感じたが、臨場感が全然違う。動画だと谷口さんの凄さは霞んでしまう。生で聴いた大鼓と掛け声の聴こえ方とは異なる。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/z-h6r-JH37w" allowfullscreen title="高砂">&lt;/iframe>
&lt;/div>
&lt;h3 id="能楽と郷土を知る会">能楽と郷土を知る会&lt;/h3>
&lt;p>能楽を演じる前に30分ほど予備知識や背景などを解説する時間がある。今回は &lt;a href="https://nohgaku-kyodo.com/performer/asahara-hiroki">朝原広基&lt;/a> さんという能楽研究家が演目の解説を行った。肩書きの通り、当時の時代背景や風習などをとても丁寧に解説してくれてわかりやすかった。&lt;/p>
&lt;p>パンフレットに入っていたチラシをみて &lt;a href="https://nohgaku-kyodo.com/">能楽と郷土を知る会&lt;/a> というイベントを運営されているようだ。まさに私が関心のある内容なので今度遊びに行ってみようと思う。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>土曜日は旅行へ行っていたので日曜日の夜にストレッチへ。首が痛いとトレーナーさんに伝えたら、いつもはやらない首のストレッチもやってくれた。感謝。体調の悪いところを伝えるとそこもストレッチしてみてくれるのが助かる。車を運転する姿勢はどうしても前傾姿勢になるのと、運転は意識を集中しないとできないことからデスクワークよりも上位の負荷がかかるらしい。神戸から高知まで何時間もかけて運転しているし、移動の時間は車に乗せてもらうことも多かったので全身あちこちに張りがあって、とくに上半身が全般的に硬かった。今日の開脚幅は開始前151cmで、ストレッチ後154cmだった。いつもとは違う状況での計測なので数値は悪化した。&lt;/p></content></item><item><title>最終日の移動</title><link>/diary/posts/2023/0701/</link><pubDate>Sat, 01 Jul 2023 10:33:47 +0900</pubDate><guid>/diary/posts/2023/0701/</guid><description>0時に寝て3時と6時に起きて7時に起きた。まぁまぁ眠れたと思う。
朝食バイキング 昨日はスマホもってなくて写真を撮れなかったが、今日はもってきてちゃんと撮ったよ。朝ご飯がめっちゃよかった。さすが高級旅館。朝からこんな贅沢が許されるのか (言い過ぎ？) という種類の食材とおいしさの朝ごはんだった。私は普段から外食が多いため、食生活がよくない。野菜をたくさんとれることに大きな価値をおく。あとサラダが大好き。いろんな野菜をとれてよかった。写真に写っている10倍ぐらいの食材があって、オムレツのような簡単な料理はシェフにお願いすれば作ってくれるらしい。和と洋の両方の食材があったと思う。地元の特産品もたくさんあった。団体だとみんなどんな朝ご飯をトッピングしているか、どういう組み合わせにしているかをみて次の参考にできたりもして楽しめた。
バイキングの食材をどう組み合わせるのかというのも創作の1つに思えた。
桂浜へ 高知と言えば桂浜、桂浜と言えば坂本竜馬かな。お約束の竜馬像を見に行ってきた。残念ながら雨だったので桂浜のあちこちを散策しようという雰囲気ではなかった。
当初の予定では 桂浜水族館 へ行くといった話しもあったんだけど、時間の都合で見送られた。私は水族館が大好きなので昨日に続いてもう1つ行けると期待していたのに残念だった。
ドライブイン 西村食堂 という、近くの食堂で少し早めのお昼ご飯を食べる。朝ご飯のバイキングをがっつり食べた人にはややきつそうだった。お刺し身定食が山盛りで出てくる感じの食堂でよかったと思う。私の記憶では高知で食べたお刺身の中ではこの食堂に出てきたものがもっとも鮮度がよくておいしかったと思う。次の高知へ来たときはお腹を空かせて山盛りのお刺身定食を頼んでみたいと思う。私は海鮮丼という普通サイズの、お刺身が4種のった丼ぶりを注文した。これもコスパよくて十分においしかった。
ここで12時をまわっていたので私は社員旅行から離脱して帰路に入ることにした。
海洋堂スペースファクトリー南国の寄り道 帰路の途中だったので 海洋堂スペースファクトリー南国 にも立ち寄ってみた。1F と 2F は無料で見学できて写真も撮ってよいと教えていただいた。有償のガイドツアーのようなものもやっていて関心はあったけど、時間もないので断念した。30分ほどささっと見て回った。アニメや漫画が好きな人には楽しめそう。
車移動 12時55分に海洋堂さんを出発して13時53分に 吉野川サービスエリア で休憩した。雨降りの視界の悪さ、トンネルの多さなどもあって疲労と眠気で運転はかなり辛かった。2-3回ぐらいは車体が揺れて車道にある線をオーバーしそうになった。休むと一時的に眠気はしゃきっとするものの、30分ほど走っているとまたすぐにどんよりしてきて辛かった。私にとってはトンネルを走るのがとても疲れたように思えた。1人だから気楽に運転できたけど、人を乗せていたら怖い運転だったと思う。
14時13分に吉野川サービスエリアを出て、15時16分に淡路島の実家に着いた。高速道路でガーッと走っていたので高速道路を降りた後の実家までの道のりもわりとスピードを出してしまっていた。疲労もあって感覚が狂ってしまっていた。実家には誰もいなかったので30分ほど横になって休んでいた。このままいると寝てしまいそうだったので起き上がって16時7分に実家を出発した。
休息したのと、ここから神戸まで帰る道のりはよく知っている道筋で慣れているせいか、四国を走っていたときよりも頭も眠気も冴えて集中して帰ってくることができた。知らない道を走るというのも疲れるのかもしれないと思えた。17時37分に神戸のマンションへたどり着くことができた。
休憩も含めて5-6時間あれば高知市から神戸市まで車で移動できることもわかった。こうやって移動時間の記録を残しておけば、また何かのイベントのときに役立つかもしれない。</description><content>&lt;p>0時に寝て3時と6時に起きて7時に起きた。まぁまぁ眠れたと思う。&lt;/p>
&lt;h2 id="朝食バイキング">朝食バイキング&lt;/h2>
&lt;p>昨日はスマホもってなくて写真を撮れなかったが、今日はもってきてちゃんと撮ったよ。朝ご飯がめっちゃよかった。さすが高級旅館。朝からこんな贅沢が許されるのか (言い過ぎ？) という種類の食材とおいしさの朝ごはんだった。私は普段から外食が多いため、食生活がよくない。野菜をたくさんとれることに大きな価値をおく。あとサラダが大好き。いろんな野菜をとれてよかった。写真に写っている10倍ぐらいの食材があって、オムレツのような簡単な料理はシェフにお願いすれば作ってくれるらしい。和と洋の両方の食材があったと思う。地元の特産品もたくさんあった。団体だとみんなどんな朝ご飯をトッピングしているか、どういう組み合わせにしているかをみて次の参考にできたりもして楽しめた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_breakfast.jpg"/>
&lt;/figure>
&lt;p>バイキングの食材をどう組み合わせるのかというのも創作の1つに思えた。&lt;/p>
&lt;h2 id="桂浜へ">桂浜へ&lt;/h2>
&lt;p>高知と言えば桂浜、桂浜と言えば坂本竜馬かな。お約束の竜馬像を見に行ってきた。残念ながら雨だったので桂浜のあちこちを散策しようという雰囲気ではなかった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_ryoma.jpg"/>
&lt;/figure>
&lt;p>当初の予定では &lt;a href="https://katurahama-aq.jp/">桂浜水族館&lt;/a> へ行くといった話しもあったんだけど、時間の都合で見送られた。私は水族館が大好きなので昨日に続いてもう1つ行けると期待していたのに残念だった。&lt;/p>
&lt;p>&lt;a href="https://tabelog.com/kochi/A3901/A390101/39007101/">ドライブイン 西村食堂&lt;/a> という、近くの食堂で少し早めのお昼ご飯を食べる。朝ご飯のバイキングをがっつり食べた人にはややきつそうだった。お刺し身定食が山盛りで出てくる感じの食堂でよかったと思う。私の記憶では高知で食べたお刺身の中ではこの食堂に出てきたものがもっとも鮮度がよくておいしかったと思う。次の高知へ来たときはお腹を空かせて山盛りのお刺身定食を頼んでみたいと思う。私は海鮮丼という普通サイズの、お刺身が4種のった丼ぶりを注文した。これもコスパよくて十分においしかった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_don.jpg"/>
&lt;/figure>
&lt;p>ここで12時をまわっていたので私は社員旅行から離脱して帰路に入ることにした。&lt;/p>
&lt;h2 id="海洋堂スペースファクトリー南国の寄り道">海洋堂スペースファクトリー南国の寄り道&lt;/h2>
&lt;p>帰路の途中だったので &lt;a href="https://kaiyodo-sfn.jp/">海洋堂スペースファクトリー南国&lt;/a> にも立ち寄ってみた。1F と 2F は無料で見学できて写真も撮ってよいと教えていただいた。有償のガイドツアーのようなものもやっていて関心はあったけど、時間もないので断念した。30分ほどささっと見て回った。アニメや漫画が好きな人には楽しめそう。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_godzilla.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_tachikoma.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2023/0701_fate.jpg"/>
&lt;/figure>
&lt;h2 id="車移動">車移動&lt;/h2>
&lt;p>12時55分に海洋堂さんを出発して13時53分に &lt;a href="https://www.w-holdings.co.jp/sapa/2484.html">吉野川サービスエリア&lt;/a> で休憩した。雨降りの視界の悪さ、トンネルの多さなどもあって疲労と眠気で運転はかなり辛かった。2-3回ぐらいは車体が揺れて車道にある線をオーバーしそうになった。休むと一時的に眠気はしゃきっとするものの、30分ほど走っているとまたすぐにどんよりしてきて辛かった。私にとってはトンネルを走るのがとても疲れたように思えた。1人だから気楽に運転できたけど、人を乗せていたら怖い運転だったと思う。&lt;/p>
&lt;p>14時13分に吉野川サービスエリアを出て、15時16分に淡路島の実家に着いた。高速道路でガーッと走っていたので高速道路を降りた後の実家までの道のりもわりとスピードを出してしまっていた。疲労もあって感覚が狂ってしまっていた。実家には誰もいなかったので30分ほど横になって休んでいた。このままいると寝てしまいそうだったので起き上がって16時7分に実家を出発した。&lt;/p>
&lt;p>休息したのと、ここから神戸まで帰る道のりはよく知っている道筋で慣れているせいか、四国を走っていたときよりも頭も眠気も冴えて集中して帰ってくることができた。知らない道を走るというのも疲れるのかもしれないと思えた。17時37分に神戸のマンションへたどり着くことができた。&lt;/p>
&lt;p>休憩も含めて5-6時間あれば高知市から神戸市まで車で移動できることもわかった。こうやって移動時間の記録を残しておけば、また何かのイベントのときに役立つかもしれない。&lt;/p></content></item></channel></rss>