<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/05 on forest nook</title><link>/diary/dates/2023/05/</link><description>Recent content in 2023/05 on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/dates/2023/05/index.xml" rel="self" type="application/rss+xml"/><item><title>相続手続き書類の作成</title><link>/diary/posts/2023/0528/</link><pubDate>Sun, 28 May 2023 18:00:18 +0900</pubDate><guid>/diary/posts/2023/0528/</guid><description>昨日は夕方に一度帰ってきて疲れてうたた寝して21時過ぎに晩ご飯を食べてそのままだらだらしてた。ドラクエタクトやりながら本を読みつつたぶん0時頃に寝て7時に起きた。
相続の手続き 先日 弁護士さんと打ち合わせ した書類の正式版ができた。関係者が同意しないといけない。次の3つの書類が必要になる。この書類作成と委任作業で弁護士さんは遺産の 1.1% を報酬として受け取る。成年後見人を要すると財産が弁護士さんに接収される気分になる。
民事委任契約書 遺産分割協議書 委任状 これらに相続権をもつ関係者 (母・姉・私) が署名、実印押印して印鑑証明を添付する。今日はそのために朝から実家へ帰ってきた。往路の途中で スターバックスのドーナツ を3種3個ずつ購入した。本当はケーキにしようと思ったのだけど、保冷剤がないというので暖かいから諦めた。私はスターバックスのドーナツを食べたことがない。ミスドよりも高い価格帯になっているけれど、その分おいしいんやろか？姉は喜んでたのでおそらくおいしいのだろう。
往路で姉から書類を受け取って実家へ着いた。トラクターで田んぼを耕してほしいというのでそれから1時間半ほど耕して畝を作ってお昼になった。そこで母に署名、実印押印してもらった。生涯に2回しか発生しない手続きなので直接行ってやり取りするぐらいの手間暇をかけてもよいだろうという所感。葬儀の当初から姉は相続に懸念を示していてすんなり押印してくれないかとも思ったけど、もう書類まで出来上がったので諦めて相続する気になったみたい。とくに揉めることなく同意してくれた。
ついでに離れのスペースをオフィスにするための備品を運んだり設置されたばかりのエアコンもみてきた。エアコンさえあれば夏でも作業できるし泊まることもできる。あと足りないものは机と椅子。コワーキングスペースのようにするなら大きなテーブルを購入してもよいかもしれない。
布施畑 JCT 経由の迂回路 15時過ぎには神戸に戻ってきた。車があるとほんと便利。朝から実家へ帰って田んぼして戻ってきてもまだ夕方前だった。今日は 第５０回神戸まつり なので住んでいる地域がお祭りをしていた。高速道路も混雑していたと思うし、時間もあったので 垂水 JCT を抜けて布施畑 JCT 経由の迂回路 を使って帰ってきた。距離的には少し遠回りになるけれど、マイナーなルートだけに車が少ないので速く走れるために時間的にはほとんど変わらない。
どこの分岐の違いでルートが変わるかを実際に走って覚えた。明石大橋を渡ってすぐのトンネルを抜けた後で左折すると垂水 JCT から名谷 JCT の通常のルート、直進すると布施畑 JCT のルートになる。明石大橋を渡っているときに高速道路の渋滞情報を聞いてどちらのルートを選択するかを判断すればよい。</description><content>&lt;p>昨日は夕方に一度帰ってきて疲れてうたた寝して21時過ぎに晩ご飯を食べてそのままだらだらしてた。ドラクエタクトやりながら本を読みつつたぶん0時頃に寝て7時に起きた。&lt;/p>
&lt;h2 id="相続の手続き">相続の手続き&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0501/#弁護士さんと相続打ち合わせ">弁護士さんと打ち合わせ&lt;/a> した書類の正式版ができた。関係者が同意しないといけない。次の3つの書類が必要になる。この書類作成と委任作業で弁護士さんは遺産の 1.1% を報酬として受け取る。成年後見人を要すると財産が弁護士さんに接収される気分になる。&lt;/p>
&lt;ul>
&lt;li>民事委任契約書&lt;/li>
&lt;li>遺産分割協議書&lt;/li>
&lt;li>委任状&lt;/li>
&lt;/ul>
&lt;p>これらに相続権をもつ関係者 (母・姉・私) が署名、実印押印して印鑑証明を添付する。今日はそのために朝から実家へ帰ってきた。往路の途中で &lt;a href="https://product.starbucks.co.jp/food/pastry/">スターバックスのドーナツ&lt;/a> を3種3個ずつ購入した。本当はケーキにしようと思ったのだけど、保冷剤がないというので暖かいから諦めた。私はスターバックスのドーナツを食べたことがない。ミスドよりも高い価格帯になっているけれど、その分おいしいんやろか？姉は喜んでたのでおそらくおいしいのだろう。&lt;/p>
&lt;p>往路で姉から書類を受け取って実家へ着いた。トラクターで田んぼを耕してほしいというのでそれから1時間半ほど耕して畝を作ってお昼になった。そこで母に署名、実印押印してもらった。生涯に2回しか発生しない手続きなので直接行ってやり取りするぐらいの手間暇をかけてもよいだろうという所感。葬儀の当初から姉は相続に懸念を示していてすんなり押印してくれないかとも思ったけど、もう書類まで出来上がったので諦めて相続する気になったみたい。とくに揉めることなく同意してくれた。&lt;/p>
&lt;p>ついでに離れのスペースをオフィスにするための備品を運んだり設置されたばかりのエアコンもみてきた。エアコンさえあれば夏でも作業できるし泊まることもできる。あと足りないものは机と椅子。コワーキングスペースのようにするなら大きなテーブルを購入してもよいかもしれない。&lt;/p>
&lt;h2 id="布施畑-jct-経由の迂回路">布施畑 JCT 経由の迂回路&lt;/h2>
&lt;p>15時過ぎには神戸に戻ってきた。車があるとほんと便利。朝から実家へ帰って田んぼして戻ってきてもまだ夕方前だった。今日は &lt;a href="https://kobe-matsuri.com/">第５０回神戸まつり&lt;/a> なので住んでいる地域がお祭りをしていた。高速道路も混雑していたと思うし、時間もあったので &lt;a href="/diary/diary/posts/2023/0212/#帰路">垂水 JCT を抜けて布施畑 JCT 経由の迂回路&lt;/a> を使って帰ってきた。距離的には少し遠回りになるけれど、マイナーなルートだけに車が少ないので速く走れるために時間的にはほとんど変わらない。&lt;/p>
&lt;p>どこの分岐の違いでルートが変わるかを実際に走って覚えた。明石大橋を渡ってすぐのトンネルを抜けた後で左折すると垂水 JCT から名谷 JCT の通常のルート、直進すると布施畑 JCT のルートになる。明石大橋を渡っているときに高速道路の渋滞情報を聞いてどちらのルートを選択するかを判断すればよい。&lt;/p></content></item><item><title>go のジェネリクスと型の集合</title><link>/diary/posts/2023/0527/</link><pubDate>Sat, 27 May 2023 12:06:17 +0900</pubDate><guid>/diary/posts/2023/0527/</guid><description>0時に寝て何度か起きて7時に起きた。22時頃に素麺を食べたら夜に吐き気がして食べるんじゃなかった。
ストレッチ 今週はいつも通りの普通の1週間を過ごした感じ。休養していたわけでもなく負荷が高かったわけでもない。私の感覚的には右太もも後ろの筋と右腰の張りが強かった。トレーナーさん的には腰は大丈夫そうに言っていて、股関節全体の硬さは常態化しているものだけど、すねの筋もやや張りがあったように話していた。私の感覚とトレーナーさんの感覚がちょっとズレていた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。一時期の3-4月の疲弊した状態ではないので一番悪い時期は脱したようにもみえる。
go の学び直し Gopher塾 #5 - ジェネリクスが書けるようになろう に参加した。
すでにうちのプロダクトはジェネリクスを使った開発を行ってはいるけれど、私自身まだ曖昧なところがあったり、どういった設計がよいのかの手探り状態である。go はオブジェクト指向言語ではない (それ自体は構わない) ところが java のジェネリクスとは異なっていて、なにがその根本的な違いになっているのかを、私の中ではまだ理解できていなかった。その答えがこの勉強会に出てわかった気がする。もう少し独学して理論的に理解する必要はあるが、私に足りなかった知識が参加前よりも明確になったのでこの後の学習は容易に思える。
イベントではワークシートに自分で理解したメモや課題の回答を書き出すよう tenntenn さんが促していた。私はメモを自社の課題管理システムに書いていたのでワークシートには書いていないが、自分の理解を書き出すことの重要性は同意できる。tenntenn さんは次のように説明していた。
概念や理解したことを自分の言葉で表現できるか？を確認するために書くことは大事。
もし書いた内容が間違っていても、間違ったことを認識できることにも意味がある。
つまり、学んだことを書くことは正しくても間違っていても得られるものがある。
この考え方は私が提唱する課題管理にも通じている。なぜ書くかの理由の1つは自分の理解を整理するためでもある。そして、その文章を外部から監視できることで上長が助言できる。私にとっては習慣として身に付いた事柄ではあるけれど、改めてこういうことをチームのメンバーに啓蒙したり、開発ガイドに書いておくとよいように思えた。go の勉強会に参加して課題管理で学ぶことがあるとは思わなかった。よいこと尽くめだ。
閑話休題。本題のジェネリクスについて3割ぐらい知らないことがあった。私が java のジェネリクスと比べて go のジェネリクスを完全に理解できていなかったところの要因は 型の集合 (Type sets) の概念を理解できていなかったところに起因する。go ではジェネリクスを導入するにあたってインターフェースに型の集合という概念を導入した。それまでのインターフェースはメソッドの集合を管理するだけだったが、型の集合も管理できるようになった。また go には Underlying types という概念が当初から存在したが、それを意識してプログラミングすることはなかった。これを日本語にすると「基底型」となるが、オブジェクト指向言語で言うところの基底型とはまったく異なる。なにせ継承できないのだから。インターフェースに型の集合として次の記述ができるようになった。Underlying types はこれまで概念としてしか存在していなかったのがチルダを用いた文法で表現できるようになったため、その理解も強いられるようになった。
Go の &amp;ldquo;Type Sets&amp;rdquo; proposal を読む によると、現時点での型の集合とは次の2つを指す。
~T approximation element (近似要素) T | U union element (合併要素) union 型のようなものは他言語でもある概念なのでイメージしやすいが、Underlying types をチルダを使って指定するのは go 独自？の概念なので新たに学び直す必要がある。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。22時頃に素麺を食べたら夜に吐き気がして食べるんじゃなかった。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週はいつも通りの普通の1週間を過ごした感じ。休養していたわけでもなく負荷が高かったわけでもない。私の感覚的には右太もも後ろの筋と右腰の張りが強かった。トレーナーさん的には腰は大丈夫そうに言っていて、股関節全体の硬さは常態化しているものだけど、すねの筋もやや張りがあったように話していた。私の感覚とトレーナーさんの感覚がちょっとズレていた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。一時期の3-4月の疲弊した状態ではないので一番悪い時期は脱したようにもみえる。&lt;/p>
&lt;h2 id="go-の学び直し">go の学び直し&lt;/h2>
&lt;p>&lt;a href="https://tenntenn.connpass.com/event/282717/">Gopher塾 #5 - ジェネリクスが書けるようになろう&lt;/a> に参加した。&lt;/p>
&lt;p>すでにうちのプロダクトはジェネリクスを使った開発を行ってはいるけれど、私自身まだ曖昧なところがあったり、どういった設計がよいのかの手探り状態である。go はオブジェクト指向言語ではない (それ自体は構わない) ところが java のジェネリクスとは異なっていて、なにがその根本的な違いになっているのかを、私の中ではまだ理解できていなかった。その答えがこの勉強会に出てわかった気がする。もう少し独学して理論的に理解する必要はあるが、私に足りなかった知識が参加前よりも明確になったのでこの後の学習は容易に思える。&lt;/p>
&lt;p>イベントではワークシートに自分で理解したメモや課題の回答を書き出すよう tenntenn さんが促していた。私はメモを自社の課題管理システムに書いていたのでワークシートには書いていないが、自分の理解を書き出すことの重要性は同意できる。tenntenn さんは次のように説明していた。&lt;/p>
&lt;blockquote>
&lt;p>概念や理解したことを自分の言葉で表現できるか？を確認するために書くことは大事。&lt;/p>
&lt;p>もし書いた内容が間違っていても、間違ったことを認識できることにも意味がある。&lt;/p>
&lt;p>つまり、学んだことを書くことは正しくても間違っていても得られるものがある。&lt;/p>
&lt;/blockquote>
&lt;p>この考え方は私が提唱する課題管理にも通じている。なぜ書くかの理由の1つは自分の理解を整理するためでもある。そして、その文章を外部から監視できることで上長が助言できる。私にとっては習慣として身に付いた事柄ではあるけれど、改めてこういうことをチームのメンバーに啓蒙したり、開発ガイドに書いておくとよいように思えた。go の勉強会に参加して課題管理で学ぶことがあるとは思わなかった。よいこと尽くめだ。&lt;/p>
&lt;p>閑話休題。本題のジェネリクスについて3割ぐらい知らないことがあった。私が java のジェネリクスと比べて go のジェネリクスを完全に理解できていなかったところの要因は &lt;a href="https://go.dev/blog/intro-generics">型の集合 (Type sets)&lt;/a> の概念を理解できていなかったところに起因する。go ではジェネリクスを導入するにあたってインターフェースに型の集合という概念を導入した。それまでのインターフェースはメソッドの集合を管理するだけだったが、型の集合も管理できるようになった。また go には &lt;a href="https://go.dev/ref/spec#Underlying_types">Underlying types&lt;/a> という概念が当初から存在したが、それを意識してプログラミングすることはなかった。これを日本語にすると「基底型」となるが、オブジェクト指向言語で言うところの基底型とはまったく異なる。なにせ継承できないのだから。インターフェースに型の集合として次の記述ができるようになった。Underlying types はこれまで概念としてしか存在していなかったのがチルダを用いた文法で表現できるようになったため、その理解も強いられるようになった。&lt;/p>
&lt;p>&lt;a href="https://zenn.dev/nobishii/articles/99a2b55e2d3e50">Go の &amp;ldquo;Type Sets&amp;rdquo; proposal を読む&lt;/a> によると、現時点での型の集合とは次の2つを指す。&lt;/p>
&lt;ul>
&lt;li>~T approximation element (近似要素)&lt;/li>
&lt;li>T | U union element (合併要素)&lt;/li>
&lt;/ul>
&lt;p>union 型のようなものは他言語でもある概念なのでイメージしやすいが、Underlying types をチルダを使って指定するのは go 独自？の概念なので新たに学び直す必要がある。&lt;/p></content></item><item><title>開発の隙間の終わり</title><link>/diary/posts/2023/0526/</link><pubDate>Fri, 26 May 2023 08:45:07 +0900</pubDate><guid>/diary/posts/2023/0526/</guid><description>1時に寝て何度か起きて7時に起きた。23時に帰ってきて一昨日にお土産にもらったロールケーキだけ食べてしまった。あかんねんけど、おいしかった。
ドッグフードテストと運用談義 リリースしたばかりのプロダクトを社内に導入するべくインフラ作業をしている。社内の管理者が運用を考慮していくつか質問がくる中で、開発側としても運用の考慮の足りないところがあったりして、実運用における不測の自体に対する運用を想定しておく必要がある。こういうやり取り自体が、開発者だけでは得られない知見なので貴重と言える。追加の検証をして、場合によってはなんらかの機能を作ったりする可能性もある。
ドッグフードテストは本当によく出来た仕組みだと思っていて、仮になにか大きな障害が発生してもそれはお客さんのところで発生する前に自社でみつけられればよかったと考えられる。もちろん障害がなければそれはそれで構わない。障害が発生してもしなくてもどちらも開発にとって大きな資産となる。いわゆる win-win のような関係と言える。開発視点から言えばドッグフードテストを行うと決めた時点でうちらはすでに勝っていると言えよう。
プロダクト説明会 毎週やっているチーム勉強会の時間を使って社内向けにプロダクトの説明会を行った。リリースを終えて、その後のドキュメント作りやパッケージングの最適化なども行えた。インフラは十分に機能しているし、ドキュメントも一通り揃っていて、機能はまだまだ足りないけれど、プロダクトとしての体裁はうまくまとまっていると自画自賛している。リソースをかけた分だけスケールするといった開発体制に変化しつつある。おそらく私がマネージャーとして必要なのもあと3-6ヶ月といったところではないか？重要なことは 開発方法論/開発ガイド に書いてあるし、課題管理 + イテレーション開発は特別なことをしなくてもうまくいくことも立証された。メンバーが私と同じように振る舞えば誰でもマネジメントはできるはずである。
来週からは次開発のマイルストーンに入っていく。メンバーが成長して私のマネジメント工数が減るようになってくれば、私も開発に入って下支えすればいいと考えている。まずは3ヶ月でどのぐらいの追加の機能開発が出来ていくのかを見定めたい。
開発合宿の日程確定 そろそろ宿を予約しないといけない。冬の開発合宿 の予定を2024年3月1-3日に決めた。現時点で参加者は4名確定していて、前向きに検討してくれている人が3名いる。昨年が4名だったので倍増して今年は8名程で行ければいいなと希望をもっている。不特定多数に声をかけられるほどキャパシティはないけど、もう3人ぐらい声をかけてもよさそう。</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。23時に帰ってきて一昨日にお土産にもらったロールケーキだけ食べてしまった。あかんねんけど、おいしかった。&lt;/p>
&lt;h2 id="ドッグフードテストと運用談義">ドッグフードテストと運用談義&lt;/h2>
&lt;p>リリースしたばかりのプロダクトを社内に導入するべくインフラ作業をしている。社内の管理者が運用を考慮していくつか質問がくる中で、開発側としても運用の考慮の足りないところがあったりして、実運用における不測の自体に対する運用を想定しておく必要がある。こういうやり取り自体が、開発者だけでは得られない知見なので貴重と言える。追加の検証をして、場合によってはなんらかの機能を作ったりする可能性もある。&lt;/p>
&lt;p>ドッグフードテストは本当によく出来た仕組みだと思っていて、仮になにか大きな障害が発生してもそれはお客さんのところで発生する前に自社でみつけられればよかったと考えられる。もちろん障害がなければそれはそれで構わない。障害が発生してもしなくてもどちらも開発にとって大きな資産となる。いわゆる win-win のような関係と言える。開発視点から言えばドッグフードテストを行うと決めた時点でうちらはすでに勝っていると言えよう。&lt;/p>
&lt;h2 id="プロダクト説明会">プロダクト説明会&lt;/h2>
&lt;p>毎週やっているチーム勉強会の時間を使って社内向けにプロダクトの説明会を行った。リリースを終えて、その後のドキュメント作りやパッケージングの最適化なども行えた。インフラは十分に機能しているし、ドキュメントも一通り揃っていて、機能はまだまだ足りないけれど、プロダクトとしての体裁はうまくまとまっていると自画自賛している。リソースをかけた分だけスケールするといった開発体制に変化しつつある。おそらく私がマネージャーとして必要なのもあと3-6ヶ月といったところではないか？重要なことは &lt;a href="/diary/diary/posts/2023/0524/#開発方法論開発ガイドの更新">開発方法論/開発ガイド&lt;/a> に書いてあるし、課題管理 + イテレーション開発は特別なことをしなくてもうまくいくことも立証された。メンバーが私と同じように振る舞えば誰でもマネジメントはできるはずである。&lt;/p>
&lt;p>来週からは次開発のマイルストーンに入っていく。メンバーが成長して私のマネジメント工数が減るようになってくれば、私も開発に入って下支えすればいいと考えている。まずは3ヶ月でどのぐらいの追加の機能開発が出来ていくのかを見定めたい。&lt;/p>
&lt;h2 id="開発合宿の日程確定">開発合宿の日程確定&lt;/h2>
&lt;p>そろそろ宿を予約しないといけない。&lt;a href="/diary/diary/posts/2023/0428/#開発合宿の計画づくり">冬の開発合宿&lt;/a> の予定を2024年3月1-3日に決めた。現時点で参加者は4名確定していて、前向きに検討してくれている人が3名いる。昨年が4名だったので倍増して今年は8名程で行ければいいなと希望をもっている。不特定多数に声をかけられるほどキャパシティはないけど、もう3人ぐらい声をかけてもよさそう。&lt;/p></content></item><item><title>c 言語の開発は chatgpt と共に</title><link>/diary/posts/2023/0525/</link><pubDate>Thu, 25 May 2023 09:51:27 +0900</pubDate><guid>/diary/posts/2023/0525/</guid><description>1時に寝てやや吐き気で起きて休憩して3時ぐらいに寝たか寝てないかわからないうちに8時に起きた。ジンをたくさん飲んで帰ってきたのでうまく眠れなかった。
カスタム overlay モジュールの改修 OpenLDAP Overlays という機能がある。以前 ppolicy_hash_cleartext と カスタム overlay モジュール を組み合わせると ppolicy が平文パスワードをハッシュ化してしまって、自分たちのカスタム overlay モジュールから平文パスワードを取得できないことをデバッグで検証した。ppolicy_hash_cleartext の機能が必要なのかどうかが私はよくわかっていないけど、協調して自分たちのカスタム overlay モジュールが動くならそれに越したことはない。
gdb でデバッグして振る舞いと対応方法が分かったところで issue を作成していた。メンバーが暇だったらやってくれるかな？と思っていたら誰も手をつけないみたいなので私がやろうと決めた。最早、私は c 言語をなんも分からんのやけど、chatgpt に質問しながら教えてもらえる。例えば、c 言語についてもこんな感じにヒアリングしながら実装する。
Q. c 言語で関数の最初に変数を宣言するのと、実際に変数を割り当てるところで宣言するのでなにか振る舞いが違ったりしますか？どちらの方がよいのでしょうか？
C言語は伝統的に変数のスコープとライフタイムを管理するために、ブロック（通常は関数または制御構造内）の先頭で変数を宣言するスタイルを採用してきました。しかし、C99標準以降では、変数はその使用が初めて必要となる場所で宣言できるようになりました。 これら2つのスタイルの違いは、主にスコープ、可読性、そしてある程度はパフォーマンスに関連しています。
スコープとライフタイム
関数の先頭で変数を宣言すると、その変数は関数全体で使用できます。これは必要に応じて変数を再利用できるという利点がありますが、一方でスコープが広くなりすぎて変数の使用を追跡しにくくなるという欠点もあります。 一方、変数を使用が必要となる場所で宣言すると、その変数のスコープとライフタイムはその場所からブロックの終わりまでに制限されます。これは、変数の使用をより明確にし、未使用の変数を避けるという利点があります。
可読性
変数を使用が必要となる場所で宣言すると、その変数の目的と使用方法がより明確になるため、コードの可読性が向上することが多いです。一方で、関数の先頭で変数を一括して宣言すると、変数の目的が明確でない場合や、それらがどのように使用されるのかを追跡するのが難しくなることがあります。
パフォーマンス
パフォーマンスについては、現代のコンパイラは非常に高度に最適化されているため、変数の宣言場所がパフォーマンスに直接的な影響を及ぼすことはほとんどありません。
結論
どちらのスタイルを選ぶかは、主にプログラミングスタイルやチームのコーディング規約、または特定のタスクに対する特定の要件に依存します。しかし、変数を使用が初めて必要となる場所で宣言するスタイルは、コードの可読性を向上させ、変数のスコープとライフタイムを制限するという利点から、一般的には推奨されています。これにより、コードの可読性が向上し、変数の使用範囲が明確になるため、コードの理解と保守が容易になります。
そっか。C99 で変数宣言の制約が撤廃されたんだということを学んだ。そんな感じで openldap についても chatgpt にヒアリングしながら開発したら意外とすんなり実装できてローカルでは動いた。レビューまでできた。</description><content>&lt;p>1時に寝てやや吐き気で起きて休憩して3時ぐらいに寝たか寝てないかわからないうちに8時に起きた。ジンをたくさん飲んで帰ってきたのでうまく眠れなかった。&lt;/p>
&lt;h2 id="カスタム-overlay-モジュールの改修">カスタム overlay モジュールの改修&lt;/h2>
&lt;p>&lt;a href="https://www.openldap.org/doc/admin24/overlays.html">OpenLDAP Overlays&lt;/a> という機能がある。以前 ppolicy_hash_cleartext と &lt;a href="/diary/diary/posts/2023/0417/#openldap-のカスタム-overlay-モジュールのデバッグ">カスタム overlay モジュール&lt;/a> を組み合わせると ppolicy が平文パスワードをハッシュ化してしまって、自分たちのカスタム overlay モジュールから平文パスワードを取得できないことをデバッグで検証した。ppolicy_hash_cleartext の機能が必要なのかどうかが私はよくわかっていないけど、協調して自分たちのカスタム overlay モジュールが動くならそれに越したことはない。&lt;/p>
&lt;p>gdb でデバッグして振る舞いと対応方法が分かったところで issue を作成していた。メンバーが暇だったらやってくれるかな？と思っていたら誰も手をつけないみたいなので私がやろうと決めた。最早、私は c 言語をなんも分からんのやけど、chatgpt に質問しながら教えてもらえる。例えば、c 言語についてもこんな感じにヒアリングしながら実装する。&lt;/p>
&lt;blockquote>
&lt;p>Q. c 言語で関数の最初に変数を宣言するのと、実際に変数を割り当てるところで宣言するのでなにか振る舞いが違ったりしますか？どちらの方がよいのでしょうか？&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>C言語は伝統的に変数のスコープとライフタイムを管理するために、ブロック（通常は関数または制御構造内）の先頭で変数を宣言するスタイルを採用してきました。しかし、C99標準以降では、変数はその使用が初めて必要となる場所で宣言できるようになりました。
これら2つのスタイルの違いは、主にスコープ、可読性、そしてある程度はパフォーマンスに関連しています。&lt;/p>
&lt;p>&lt;strong>スコープとライフタイム&lt;/strong>&lt;/p>
&lt;p>関数の先頭で変数を宣言すると、その変数は関数全体で使用できます。これは必要に応じて変数を再利用できるという利点がありますが、一方でスコープが広くなりすぎて変数の使用を追跡しにくくなるという欠点もあります。
一方、変数を使用が必要となる場所で宣言すると、その変数のスコープとライフタイムはその場所からブロックの終わりまでに制限されます。これは、変数の使用をより明確にし、未使用の変数を避けるという利点があります。&lt;/p>
&lt;p>&lt;strong>可読性&lt;/strong>&lt;/p>
&lt;p>変数を使用が必要となる場所で宣言すると、その変数の目的と使用方法がより明確になるため、コードの可読性が向上することが多いです。一方で、関数の先頭で変数を一括して宣言すると、変数の目的が明確でない場合や、それらがどのように使用されるのかを追跡するのが難しくなることがあります。&lt;/p>
&lt;p>&lt;strong>パフォーマンス&lt;/strong>&lt;/p>
&lt;p>パフォーマンスについては、現代のコンパイラは非常に高度に最適化されているため、変数の宣言場所がパフォーマンスに直接的な影響を及ぼすことはほとんどありません。&lt;/p>
&lt;p>&lt;strong>結論&lt;/strong>&lt;/p>
&lt;p>どちらのスタイルを選ぶかは、主にプログラミングスタイルやチームのコーディング規約、または特定のタスクに対する特定の要件に依存します。しかし、変数を使用が初めて必要となる場所で宣言するスタイルは、コードの可読性を向上させ、変数のスコープとライフタイムを制限するという利点から、一般的には推奨されています。これにより、コードの可読性が向上し、変数の使用範囲が明確になるため、コードの理解と保守が容易になります。&lt;/p>
&lt;/blockquote>
&lt;p>そっか。C99 で変数宣言の制約が撤廃されたんだということを学んだ。そんな感じで openldap についても chatgpt にヒアリングしながら開発したら意外とすんなり実装できてローカルでは動いた。レビューまでできた。&lt;/p></content></item><item><title>クラフトジン: YOHAKHU</title><link>/diary/posts/2023/0524/</link><pubDate>Wed, 24 May 2023 11:25:43 +0900</pubDate><guid>/diary/posts/2023/0524/</guid><description>遅く帰ってきたわけではないが、うまく眠れなくて3時に寝て7時に起きた。
開発方法論／開発ガイドの更新 今週が開発の谷間の最後の週。毎週いろいろ資料を作ったり、あちこちのドキュメントを更新したりしていた。最後に残ったものの1つ (を2つに分割した) として、うちのプロダクト開発における開発方法論と開発ガイドを仕上げた。開発方法論は開発のマネジメント手法やプロセスの概念などを抽象的な表現で説明したもの。簡単に言えば、アジャイル開発とかスクラムとか、そういった概念の説明やなぜそれが大事なのかの意図や背景を説明したドキュメントになる。当初はこの1つしかなかったのだけど、実際に課題管理システムを使ってイテレーション開発をする具体的な話しと抽象的な話しを一緒に書くのはまとまりが悪いように思えてきた。抽象的な内容と実務に近い内容は分けて書くことにした。
開発方法論: プロダクトで採用している開発方法論の概念をまとめる 開発ガイド: 開発方法論を具体的に実践する方法についてまとめる 例えば、開発ガイドにはマージリクエストの運用について書いてある。どこの会社へ行っても私は次のような「マージリクエストを作成しなくてよいもの」という文章を書いている。
すべての修正にマージリクエストを要求すると開発がとても遅くなる。それは人間が介在するトコロがもっともコストを要求するからである。とくにコミュニケーションコストは開発の中でも最も大きいコストの1つである。レビューしなくてもコミット履歴は誰でも把握できる。修正内容が気になる開発者は自分でコミット履歴を確認すればよい。
従ってレビューの必要がないと想定される修正は直接 main ブランチに push してよい。例えば、軽微な修正は CI/CD の自動化により品質を担保できるように努める。テストを失敗させる修正を push してしまったとしてもデプロイできないために障害を発生させることはない。
この運用は軽微な修正だと思って push したものが不具合を発生させてしまうリスクを許容している。そのときは気付きの学びとして「ごめんなさい」で終わらせる。稀に不具合を発生させることよりも、開発の速度を上げる方を優先する。
カフーツさんイベント カフーツ13周年Jelly〜カクサク（やりたいこと宣言）第1弾〜 に参加した。私がカフーツさんへ遊びに行ったときに人がたくさんいたことはない。記念イベントだったので参加者多いかな？と思って行ってみた。10人ぐらいいた。参加者の大半は私と同じぐらいか、それ以上の年配の方にみえた。やや年齢層が高め。13年やっているコミュニティなので同じぐらい歳をとったんだと思う。みんなでわいわい話しながら0時前まで飲んでた。ここ行くと基本飲み会w
YOHAKHU というクラフトジンがあってロックと炭酸割りで4-5杯ほど飲んでいた。これまでジンをあまり飲んだことがないので、普通のジンとの比較はできないが、強烈なインパクトのある風味で圧倒されてしまった。おいしいかどうかというよりもこれは強烈やなぁという所感が先にくる。さらに「余白」という名前がよい。いとうさんに影響を受けて私が「ゆとり」と呼んでいた概念にいくつか補強がされて、最近は私も余白という言葉を気に入って使っている。人生に必要な余白を忘れない飲みものがこれだと言えるかもしれない。なんだか酔っ払ったようなコメントになってしまった。</description><content>&lt;p>遅く帰ってきたわけではないが、うまく眠れなくて3時に寝て7時に起きた。&lt;/p>
&lt;h2 id="開発方法論開発ガイドの更新">開発方法論／開発ガイドの更新&lt;/h2>
&lt;p>今週が開発の谷間の最後の週。毎週いろいろ資料を作ったり、あちこちのドキュメントを更新したりしていた。最後に残ったものの1つ (を2つに分割した) として、うちのプロダクト開発における開発方法論と開発ガイドを仕上げた。開発方法論は開発のマネジメント手法やプロセスの概念などを抽象的な表現で説明したもの。簡単に言えば、アジャイル開発とかスクラムとか、そういった概念の説明やなぜそれが大事なのかの意図や背景を説明したドキュメントになる。当初はこの1つしかなかったのだけど、実際に課題管理システムを使ってイテレーション開発をする具体的な話しと抽象的な話しを一緒に書くのはまとまりが悪いように思えてきた。抽象的な内容と実務に近い内容は分けて書くことにした。&lt;/p>
&lt;ul>
&lt;li>開発方法論: プロダクトで採用している開発方法論の概念をまとめる&lt;/li>
&lt;li>開発ガイド: 開発方法論を具体的に実践する方法についてまとめる&lt;/li>
&lt;/ul>
&lt;p>例えば、開発ガイドにはマージリクエストの運用について書いてある。どこの会社へ行っても私は次のような「マージリクエストを作成しなくてよいもの」という文章を書いている。&lt;/p>
&lt;blockquote>
&lt;p>すべての修正にマージリクエストを要求すると開発がとても遅くなる。それは人間が介在するトコロがもっともコストを要求するからである。とくにコミュニケーションコストは開発の中でも最も大きいコストの1つである。レビューしなくてもコミット履歴は誰でも把握できる。修正内容が気になる開発者は自分でコミット履歴を確認すればよい。&lt;/p>
&lt;p>従ってレビューの必要がないと想定される修正は直接 main ブランチに push してよい。例えば、軽微な修正は CI/CD の自動化により品質を担保できるように努める。テストを失敗させる修正を push してしまったとしてもデプロイできないために障害を発生させることはない。&lt;/p>
&lt;p>この運用は軽微な修正だと思って push したものが不具合を発生させてしまうリスクを許容している。そのときは気付きの学びとして「ごめんなさい」で終わらせる。稀に不具合を発生させることよりも、開発の速度を上げる方を優先する。&lt;/p>
&lt;/blockquote>
&lt;h2 id="カフーツさんイベント">カフーツさんイベント&lt;/h2>
&lt;p>&lt;a href="https://www.facebook.com/events/1411909236316752/">カフーツ13周年Jelly〜カクサク（やりたいこと宣言）第1弾〜&lt;/a> に参加した。私がカフーツさんへ遊びに行ったときに人がたくさんいたことはない。記念イベントだったので参加者多いかな？と思って行ってみた。10人ぐらいいた。参加者の大半は私と同じぐらいか、それ以上の年配の方にみえた。やや年齢層が高め。13年やっているコミュニティなので同じぐらい歳をとったんだと思う。みんなでわいわい話しながら0時前まで飲んでた。ここ行くと基本飲み会w&lt;/p>
&lt;p>&lt;a href="https://www.yohakhu.jp/">YOHAKHU&lt;/a> というクラフトジンがあってロックと炭酸割りで4-5杯ほど飲んでいた。これまでジンをあまり飲んだことがないので、普通のジンとの比較はできないが、強烈なインパクトのある風味で圧倒されてしまった。おいしいかどうかというよりもこれは強烈やなぁという所感が先にくる。さらに「余白」という名前がよい。いとうさんに影響を受けて私が「ゆとり」と呼んでいた概念にいくつか補強がされて、最近は私も余白という言葉を気に入って使っている。人生に必要な余白を忘れない飲みものがこれだと言えるかもしれない。なんだか酔っ払ったようなコメントになってしまった。&lt;/p></content></item><item><title>次開発へのモチベーション</title><link>/diary/posts/2023/0523/</link><pubDate>Tue, 23 May 2023 08:56:34 +0900</pubDate><guid>/diary/posts/2023/0523/</guid><description>0時に寝て何度か起きて6時に起きて7時半に起きた。最近疲れからか6時ぐらいに2度寝してしまうことが多い。
定例会議 先週の東京出張で次開発の打ち合わせをしてきたので、今日はそこでいくつか絞り込んだものから決議を行った。すんなりと次の開発課題が決まって時間に余裕があったので、別の曖昧な要件の認識合わせもしていた。半年やって私自身のシステムへの理解やドメイン知識も付いてきたところではあるが、この要件の認識合わせが現状の範囲で私の理解が追いついていないところの最後のピースにもみえる。この要件の背景と解決方法の設計を論理的にやってしまえば、あとは課題管理に馴染んできたうちのメンバーがうまく開発してくれるのではないかと思う。
半年間の開発、課題管理とイテレーション開発のプラクティス、リリースできたという結果、そして主体変容を示唆して過去の自分と比べてどう変わったかをふりかえりで確認した。なんとなくメンバーの働き方が変わってきた感じがして頼もしくなってきた。少なくとも半年前より私が言っていることの意味や価値を理解して開発に取り組んでくれているのではないかと思う。次の開発がどのように展開していくのか、楽しみになってきた。今週はドッグフードテストのインフラ作業をメインにして来週の水曜日から次開発に入ることにした。
車でお買いもの 少し早めに帰ったので車で近所のスーパーへ買いものに行ってきた。過去の記録をみると1月29日に満タンで給油した。そのガソリンがまだ半分ぐらいある。うちの車は燃費のよいハイブリッドカーだ。いくつかの記事をみるとガソリンの消費期限は3-6ヶ月程度だと書いてある。目安としては3ヶ月程度で消費するのが望ましい。長くて6ヶ月程度にしないとエンジンや燃料系の故障の原因となりえるらしい。気温の変化が大きいとさらに劣化が早まるとかあるそうだ。平時はガソリン満タンじゃなくて少しずつ給油した方がよいことに気付いた。</description><content>&lt;p>0時に寝て何度か起きて6時に起きて7時半に起きた。最近疲れからか6時ぐらいに2度寝してしまうことが多い。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>先週の東京出張で次開発の打ち合わせをしてきたので、今日はそこでいくつか絞り込んだものから決議を行った。すんなりと次の開発課題が決まって時間に余裕があったので、別の曖昧な要件の認識合わせもしていた。半年やって私自身のシステムへの理解やドメイン知識も付いてきたところではあるが、この要件の認識合わせが現状の範囲で私の理解が追いついていないところの最後のピースにもみえる。この要件の背景と解決方法の設計を論理的にやってしまえば、あとは課題管理に馴染んできたうちのメンバーがうまく開発してくれるのではないかと思う。&lt;/p>
&lt;p>半年間の開発、課題管理とイテレーション開発のプラクティス、リリースできたという結果、そして主体変容を示唆して過去の自分と比べてどう変わったかをふりかえりで確認した。なんとなくメンバーの働き方が変わってきた感じがして頼もしくなってきた。少なくとも半年前より私が言っていることの意味や価値を理解して開発に取り組んでくれているのではないかと思う。次の開発がどのように展開していくのか、楽しみになってきた。今週はドッグフードテストのインフラ作業をメインにして来週の水曜日から次開発に入ることにした。&lt;/p>
&lt;h2 id="車でお買いもの">車でお買いもの&lt;/h2>
&lt;p>少し早めに帰ったので車で近所のスーパーへ買いものに行ってきた。過去の記録をみると1月29日に満タンで給油した。そのガソリンがまだ半分ぐらいある。うちの車は燃費のよいハイブリッドカーだ。いくつかの記事をみるとガソリンの消費期限は3-6ヶ月程度だと書いてある。目安としては3ヶ月程度で消費するのが望ましい。長くて6ヶ月程度にしないとエンジンや燃料系の故障の原因となりえるらしい。気温の変化が大きいとさらに劣化が早まるとかあるそうだ。平時はガソリン満タンじゃなくて少しずつ給油した方がよいことに気付いた。&lt;/p></content></item><item><title>初めてのコントリビュート経験</title><link>/diary/posts/2023/0522/</link><pubDate>Mon, 22 May 2023 10:01:07 +0900</pubDate><guid>/diary/posts/2023/0522/</guid><description>4時過ぎに寝て7時に起きた。3時前まで相続手続きの書類作業して帰ってきてから本を読んでたら寝るのが遅くなった。
メンバーの oss へのコントリビュート チームのメンバーがプロダクトで使っているライブラリにコントリビュートした。土日にライブラリのメンテナーからコメントがあって、その指摘にもすぐに対応して日曜日にマージされていた。ライブラリ側のレビューもすぐに終わってすごくうまくいったと言える。
feat: enable DirSync control in search operation #436 もともとうちらが欲しい機能を作りかけた pr があったものの、作業途中でマージされずにクローズされていた。その残骸を参考にうちらの要件を満たせるかどうかの調査から始めた。調査を進めているうちにうちらの要件には足りない機能があってそれを拡張するようにも指示していた。すぐに出来たというのでライブラリにコントリビュートするように私が指示していた。
その後メンバーに聞いてみると、oss のライブラリにコントリビュートしたのは今回が初めてだという。開発者なら初めて oss にコントリビュートしたときのことを覚えているだろうか？私は、、、何だったか覚えてないが、おそらく linux distributor で働いているときに簡単なパッチを送った気がする。昔はメールや課題管理システムにパッチを投稿していたのが、いまは pr で気軽にパッチを送れる。若いメンバーがうまくコントリビュート経験を積めたことの背景に github がもたらしたパッチを送る簡単さがあるようにも思えた。oss にコントリビュートする機会は普通に oss を使って開発していればいくらでもある。マネージャーがその機会を見逃さず、ちゃんとメンバーにアサインしてあげることの大事さもあると思う。メンバーにはこの成功体験を活かして今後とも活躍してほしい。
サイトデザイン打ち合わせ 先日の ワイヤーフレームのレビュー の続き。顧問のはらさんとデザイナーさんと私の3人でデザイン案をみながらレビュー会をした。素人の私からみたら十分によいものが出来つつあるように思えるのでデザイナーさんのモチベーションを削がないようにサポートできればと思う。はらさんはデザインの専門家なので細かいところの確認や気付きをあげていてさすがという印象。きっとデザイナーさんのモチベーションも上がるのではないかと推測する。私はこれまでデザインの打ち合わせに出たことがなかったので参考になることが多々ある。サイトのトップは普通は会社の紹介があるものらしいけど、私がそれはいらないとデザイナーさんに伝えたのでトップで会社紹介を一切しない稀な構成のサイトのデザインが出来上がった。その後、社名ぐらいあった方がよいのではないかという話しもあってこれから変えるかもしれない。私の会社情報を書かない理由は次になる。
一見さんの訪問客がみるようなサイト (会社) ではない 知人やうちの会社の関係者がみて近況を手早く分かるようにしたい デザインはシンプルな構成にしたい</description><content>&lt;p>4時過ぎに寝て7時に起きた。3時前まで相続手続きの書類作業して帰ってきてから本を読んでたら寝るのが遅くなった。&lt;/p>
&lt;h2 id="メンバーの-oss-へのコントリビュート">メンバーの oss へのコントリビュート&lt;/h2>
&lt;p>チームのメンバーがプロダクトで使っているライブラリにコントリビュートした。土日にライブラリのメンテナーからコメントがあって、その指摘にもすぐに対応して日曜日にマージされていた。ライブラリ側のレビューもすぐに終わってすごくうまくいったと言える。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/436">feat: enable DirSync control in search operation #436&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>もともとうちらが欲しい機能を作りかけた pr があったものの、作業途中でマージされずにクローズされていた。その残骸を参考にうちらの要件を満たせるかどうかの調査から始めた。調査を進めているうちにうちらの要件には足りない機能があってそれを拡張するようにも指示していた。すぐに出来たというのでライブラリにコントリビュートするように私が指示していた。&lt;/p>
&lt;p>その後メンバーに聞いてみると、oss のライブラリにコントリビュートしたのは今回が初めてだという。開発者なら初めて oss にコントリビュートしたときのことを覚えているだろうか？私は、、、何だったか覚えてないが、おそらく linux distributor で働いているときに簡単なパッチを送った気がする。昔はメールや課題管理システムにパッチを投稿していたのが、いまは pr で気軽にパッチを送れる。若いメンバーがうまくコントリビュート経験を積めたことの背景に github がもたらしたパッチを送る簡単さがあるようにも思えた。oss にコントリビュートする機会は普通に oss を使って開発していればいくらでもある。マネージャーがその機会を見逃さず、ちゃんとメンバーにアサインしてあげることの大事さもあると思う。メンバーにはこの成功体験を活かして今後とも活躍してほしい。&lt;/p>
&lt;h2 id="サイトデザイン打ち合わせ">サイトデザイン打ち合わせ&lt;/h2>
&lt;p>先日の &lt;a href="/diary/diary/posts/2023/0508/#ワイヤーフレームのレビュー">ワイヤーフレームのレビュー&lt;/a> の続き。顧問のはらさんとデザイナーさんと私の3人でデザイン案をみながらレビュー会をした。素人の私からみたら十分によいものが出来つつあるように思えるのでデザイナーさんのモチベーションを削がないようにサポートできればと思う。はらさんはデザインの専門家なので細かいところの確認や気付きをあげていてさすがという印象。きっとデザイナーさんのモチベーションも上がるのではないかと推測する。私はこれまでデザインの打ち合わせに出たことがなかったので参考になることが多々ある。サイトのトップは普通は会社の紹介があるものらしいけど、私がそれはいらないとデザイナーさんに伝えたのでトップで会社紹介を一切しない稀な構成のサイトのデザインが出来上がった。その後、社名ぐらいあった方がよいのではないかという話しもあってこれから変えるかもしれない。私の会社情報を書かない理由は次になる。&lt;/p>
&lt;ul>
&lt;li>一見さんの訪問客がみるようなサイト (会社) ではない&lt;/li>
&lt;li>知人やうちの会社の関係者がみて近況を手早く分かるようにしたい&lt;/li>
&lt;li>デザインはシンプルな構成にしたい&lt;/li>
&lt;/ul></content></item><item><title>yubikey bio を完全にマスターした</title><link>/diary/posts/2023/0521/</link><pubDate>Sun, 21 May 2023 13:28:53 +0900</pubDate><guid>/diary/posts/2023/0521/</guid><description>2時に寝て遅くまで飲んでいたせいか、やや吐き気もしながら朝起きてだらだらして11時ぐらいに起きた。
1password のロック解除を yubikey で行う 先日購入して触っていた yubikey bio の設定 の続き。1password のロック解除を指紋認証で行いたかったが、1password の 8.10.4 のアプリではロック解除をシステム認証で行おうとするとエラーが発生していた (バグってた) 。5月の頭に 8.10.6 がリリースされていてシステム認証のバグが直っていることに気付いた。1password のアプリケーションがどうやって linux のシステム認証を使っているかは次の1文に書いてある。
システム認証は、Linux のユーザーアカウントに組み込まれたアクセス制御機構を使用します。これは polkit と PAM (Pluggable Authentication Modules) という2つの Linux 標準に依存しています。この2つを組み合わせることで、安全な認証サービスを提供します
https://support.1password.com/system-authentication-linux/#about-system-authentication-security
私は polkit を使ったことがなくて初見でよく分かっていないが、どうやら polkit から pam を介して認証しているようにみえる。pam.d 配下の設定を調べてみると /etc/pam.d/polkit-1 がある。前回の設定で pam.d の設定とテストの方法を理解していた。ここまでくれば Module Arguments のドキュメントをみながらオプションを設定するだけ。1Password のロック解除をYubiKeyでやる の記事で origin/appid にホスト名を指定しているが、最新のモジュールだと指定しないときはデフォルトでホスト名が使われるようにみえる。
origin: FIDO 認証手順の party ID を設定する、値が指定されない場合は識別子 pam://$HOSTNAME が使用される appid: FIDO 認証手順の application ID を設定する、値を指定しない場合は origin で使用されたものと同じ値が使用される (origin も指定しない場合は pam://$HOSTNAME) nouserok: 認証しようとするユーザーが authfile 内に存在しない場合や authfile が欠落/不正確な場合でも、認証の試行を成功させるように設定する cue: タッチすることを促すメッセージを表示するように設定する これらを踏まえて u2f で認証が成功したらそれ以降の処理をスキップするように次の設定を先頭に追加する。</description><content>&lt;p>2時に寝て遅くまで飲んでいたせいか、やや吐き気もしながら朝起きてだらだらして11時ぐらいに起きた。&lt;/p>
&lt;h2 id="1password-のロック解除を-yubikey-で行う">1password のロック解除を yubikey で行う&lt;/h2>
&lt;p>先日購入して触っていた &lt;a href="/diary/diary/posts/2023/0429/#yubikey-bio-を触ってみた">yubikey bio の設定&lt;/a> の続き。1password のロック解除を指紋認証で行いたかったが、1password の 8.10.4 のアプリではロック解除をシステム認証で行おうとするとエラーが発生していた (バグってた) 。5月の頭に &lt;a href="https://releases.1password.com/linux/8.10/#1password-for-linux-8.10.6">8.10.6&lt;/a> がリリースされていてシステム認証のバグが直っていることに気付いた。1password のアプリケーションがどうやって linux のシステム認証を使っているかは次の1文に書いてある。&lt;/p>
&lt;blockquote>
&lt;p>システム認証は、Linux のユーザーアカウントに組み込まれたアクセス制御機構を使用します。これは polkit と PAM (Pluggable Authentication Modules) という2つの Linux 標準に依存しています。この2つを組み合わせることで、安全な認証サービスを提供します&lt;/p>
&lt;p>&lt;a href="https://support.1password.com/system-authentication-linux/#about-system-authentication-security">https://support.1password.com/system-authentication-linux/#about-system-authentication-security&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>私は &lt;a href="https://wiki.archlinux.org/title/Polkit">polkit&lt;/a> を使ったことがなくて初見でよく分かっていないが、どうやら polkit から pam を介して認証しているようにみえる。pam.d 配下の設定を調べてみると &lt;code>/etc/pam.d/polkit-1&lt;/code> がある。前回の設定で pam.d の設定とテストの方法を理解していた。ここまでくれば &lt;a href="https://github.com/Yubico/pam-u2f/tree/main#module-arguments">Module Arguments&lt;/a> のドキュメントをみながらオプションを設定するだけ。&lt;a href="https://yoshiori.hatenablog.com/entry/2022/02/17/173147">1Password のロック解除をYubiKeyでやる&lt;/a> の記事で origin/appid にホスト名を指定しているが、最新のモジュールだと指定しないときはデフォルトでホスト名が使われるようにみえる。&lt;/p>
&lt;ul>
&lt;li>origin: FIDO 認証手順の party ID を設定する、値が指定されない場合は識別子 &lt;code>pam://$HOSTNAME&lt;/code> が使用される&lt;/li>
&lt;li>appid: FIDO 認証手順の application ID を設定する、値を指定しない場合は origin で使用されたものと同じ値が使用される (origin も指定しない場合は &lt;code>pam://$HOSTNAME&lt;/code>)&lt;/li>
&lt;li>nouserok: 認証しようとするユーザーが &lt;code>authfile&lt;/code> 内に存在しない場合や &lt;code>authfile&lt;/code> が欠落/不正確な場合でも、認証の試行を成功させるように設定する&lt;/li>
&lt;li>cue: タッチすることを促すメッセージを表示するように設定する&lt;/li>
&lt;/ul>
&lt;p>これらを踏まえて u2f で認証が成功したらそれ以降の処理をスキップするように次の設定を先頭に追加する。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo vi /etc/pam.d/polkit-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth sufficient pam_u2f.so nouserok cue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>cue を指定したことでパスワードプロンプトを表示せず、デバイスをタッチするように促される。よい感じ。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ pamtester polkit-1 t2y authenticate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please touch the device.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pamtester: successfully authenticated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これで pam の polkit の設定が正しいことを検証できる。この後に 1password のアプリケーションでロック解除するときに u2f を使って指紋認証できた。めっちゃ便利。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0521_1password-system-auth.png"/>
&lt;/figure></content></item><item><title>価値観のあう人たちとお酒を飲みながら語り合う</title><link>/diary/posts/2023/0520/</link><pubDate>Sat, 20 May 2023 12:28:15 +0900</pubDate><guid>/diary/posts/2023/0520/</guid><description>3時に寝て7時に起きた。昨日は深夜まで yubikey bio で 1password のロック解除の設定を調べていて遅くなった。また後日まとめる。
ストレッチ 今週は出張があったり、飲み会があったり、前日に深夜まで作業して疲弊していたりとあまり調子はよくなかった。いつも通りの右股関節の関節痛はあるし、腰の張りも少しあったし、右の太もも後ろの筋に違和感があるように感じた。太ももの後ろの筋を伸ばすストレッチが快適でお気に入りの1つなんだが、そこの部位でいつもとはやや違う別の張りを感じた。筋の張りの違和感をトレーナーさんにどう伝えてよいか、表現方法がわからなくて困ることが多い。今日の開脚幅は開始前156cmで、ストレッチ後158cmだった。疲労した体調を立て直すきっかけになってよかったと思う。
カフーツさん訪問 カフーツさんへ 昨年の6月以来 となる訪問をしてきた。毎月オンラインでいとうさんと話しているので身近ではあるけれど、リアルで会うのは約1年振りになる、本当に月日の流れる早さを実感する。ブログJelly Vol.132 に参加してきた。参加者は3人で18時から始まって1時半ぐらいまでお酒を飲みながらうだつの上がらない話しをしていたw ここにいる人たちと私は価値観があうのでだらだら話しているのが楽しい。
神戸と実家で2拠点生活しようと考えているという話しをしたら、実家のはなれを改修したスペースに宿泊できるなら airbnb で貸し出したらいいんじゃない？という話題が出て、たしかにそういう取り組みもできるなと感心した。そして、そのスペースにもう少し手を入れて小さいコワーキングスペースにしてもよいのかもしれない。すぐ側に田んぼもあるので農業体験なども簡単にできる。淡路島は気候もよくそこそこよい環境でコワーキングの拠点になるかはともかく、海が好きな人向けにはよいところかもしれない。実家のコワーキングスペース化という視点を今後も考えていきたい。</description><content>&lt;p>3時に寝て7時に起きた。昨日は深夜まで yubikey bio で 1password のロック解除の設定を調べていて遅くなった。また後日まとめる。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週は出張があったり、飲み会があったり、前日に深夜まで作業して疲弊していたりとあまり調子はよくなかった。いつも通りの右股関節の関節痛はあるし、腰の張りも少しあったし、右の太もも後ろの筋に違和感があるように感じた。太ももの後ろの筋を伸ばすストレッチが快適でお気に入りの1つなんだが、そこの部位でいつもとはやや違う別の張りを感じた。筋の張りの違和感をトレーナーさんにどう伝えてよいか、表現方法がわからなくて困ることが多い。今日の開脚幅は開始前156cmで、ストレッチ後158cmだった。疲労した体調を立て直すきっかけになってよかったと思う。&lt;/p>
&lt;h2 id="カフーツさん訪問">カフーツさん訪問&lt;/h2>
&lt;p>カフーツさんへ &lt;a href="/diary/diary/posts/2022/0618/#カフーツさん訪問">昨年の6月以来&lt;/a> となる訪問をしてきた。毎月オンラインでいとうさんと話しているので身近ではあるけれど、リアルで会うのは約1年振りになる、本当に月日の流れる早さを実感する。&lt;a href="https://www.facebook.com/events/155507457318971/?active_tab=discussion">ブログJelly Vol.132&lt;/a> に参加してきた。参加者は3人で18時から始まって1時半ぐらいまでお酒を飲みながらうだつの上がらない話しをしていたw ここにいる人たちと私は価値観があうのでだらだら話しているのが楽しい。&lt;/p>
&lt;p>神戸と実家で2拠点生活しようと考えているという話しをしたら、実家のはなれを改修したスペースに宿泊できるなら &lt;a href="https://www.airbnb.jp/">airbnb&lt;/a> で貸し出したらいいんじゃない？という話題が出て、たしかにそういう取り組みもできるなと感心した。そして、そのスペースにもう少し手を入れて小さいコワーキングスペースにしてもよいのかもしれない。すぐ側に田んぼもあるので農業体験なども簡単にできる。淡路島は気候もよくそこそこよい環境でコワーキングの拠点になるかはともかく、海が好きな人向けにはよいところかもしれない。実家のコワーキングスペース化という視点を今後も考えていきたい。&lt;/p></content></item><item><title>issue を作るとストレスが軽減する</title><link>/diary/posts/2023/0519/</link><pubDate>Fri, 19 May 2023 19:49:10 +0900</pubDate><guid>/diary/posts/2023/0519/</guid><description>お酒飲んで新幹線乗ったせいか、新幹線の中であまり寝られなくて暑くていつもより移動に疲れた。その後1時に寝て何度か起きて7時に起きた。2日酔いではないが、寝起きの気分はよくなかった。
issue を作ることによるストレス軽減 昨日の打ち合わせのメモから議事録を作ったり、そこから新しい issue を作ったりしながら来週の打ち合わせの資料作りをしていた。資料を作っている途中、割り込みでメンバーのコードレビューが入ったりして、あまり資料作りは進捗しなかった。
打ち合わせした内容から issue を作る作業を、私は好きだったりする。何をやってよいかわからない状況というのは苦しい。issue を作ること、要件を言語化したり、背景を調べたり、他の issue との関連付けしたり、そういった手を動かすことがきっかけになって、その issue を明確化していく作業を積み重ねれば時間の経過とともに課題が解決するということを経験的に理解しているからだ。
大雑把に言えば、私にとって、issue さえ作れればその課題解決は優先順位付けと (解決までの) 時間の問題に置き換えられる。あれやらなきゃ、これもやらなきゃ、なにか抜け・漏れがあるんじゃないかと頭の中でもやもやしているものを issue という概念に変換することで考えなくて済むようになっていく過程がストレスを軽減している気もする。
コンテナ勉強会 先日公開したテックブログ とプラスアルファで勉強会をした。コンテナという汎用的な話題だったので CTO から社内向けにアナウンスされて (半業務命令っぽい雰囲気で) いつもより参加者は多かったように思える。10人前後は参加されていた。40分ぐらいで話し終えて20分ほど雑談の時間をとって盛り上がりは微妙だったけど、いくつか意見や質問が出たのでよかったのではないかと思う。
チームのメンバーが発表するときは私がモデレーターの役割をしている。私が発表するときはモデレーター兼発表者になってしまう。モデレーターと発表者を兼任するのはとても難しい。おそらく脳の集中力を向ける先が異なるからではないかと思う。モデレーターは質問者の質問を広げたり、コミュニケーションがうまくいくように手伝ったりする。回答から次の質問を考えたりもする。一方で発表者は自分の調べたことや伝えたいことを聴衆にわかりやすく伝えることのみに注力する。
モデレーターと発表者が同じになってしまうと、自分の説明のどこが伝わっていないのか、質問者の意図を組むにはどうすればいいかといったモデレーターの視点がなくなってしまう。以前 tenntenn さんの個人カンファレンス に参加したときに1人2役でパネルディスカッションをされていて、そのときに同僚からあまりやり過ぎると人格崩壊するから気をつけた方よいといった忠告を受けたと冗談で話されていた意味が理解できた。役者が他人になりきるように、これは兼任じゃなくて1人で2つの人格を演じないといけない。そんな器用なことはそうそうできない。</description><content>&lt;p>お酒飲んで新幹線乗ったせいか、新幹線の中であまり寝られなくて暑くていつもより移動に疲れた。その後1時に寝て何度か起きて7時に起きた。2日酔いではないが、寝起きの気分はよくなかった。&lt;/p>
&lt;h2 id="issue-を作ることによるストレス軽減">issue を作ることによるストレス軽減&lt;/h2>
&lt;p>昨日の打ち合わせのメモから議事録を作ったり、そこから新しい issue を作ったりしながら来週の打ち合わせの資料作りをしていた。資料を作っている途中、割り込みでメンバーのコードレビューが入ったりして、あまり資料作りは進捗しなかった。&lt;/p>
&lt;p>打ち合わせした内容から issue を作る作業を、私は好きだったりする。何をやってよいかわからない状況というのは苦しい。issue を作ること、要件を言語化したり、背景を調べたり、他の issue との関連付けしたり、そういった手を動かすことがきっかけになって、その issue を明確化していく作業を積み重ねれば時間の経過とともに課題が解決するということを経験的に理解しているからだ。&lt;/p>
&lt;p>大雑把に言えば、私にとって、issue さえ作れればその課題解決は優先順位付けと (解決までの) 時間の問題に置き換えられる。あれやらなきゃ、これもやらなきゃ、なにか抜け・漏れがあるんじゃないかと頭の中でもやもやしているものを issue という概念に変換することで考えなくて済むようになっていく過程がストレスを軽減している気もする。&lt;/p>
&lt;h2 id="コンテナ勉強会">コンテナ勉強会&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0516/#テックブログ公開">先日公開したテックブログ&lt;/a> とプラスアルファで勉強会をした。コンテナという汎用的な話題だったので CTO から社内向けにアナウンスされて (半業務命令っぽい雰囲気で) いつもより参加者は多かったように思える。10人前後は参加されていた。40分ぐらいで話し終えて20分ほど雑談の時間をとって盛り上がりは微妙だったけど、いくつか意見や質問が出たのでよかったのではないかと思う。&lt;/p>
&lt;p>チームのメンバーが発表するときは私がモデレーターの役割をしている。私が発表するときはモデレーター兼発表者になってしまう。モデレーターと発表者を兼任するのはとても難しい。おそらく脳の集中力を向ける先が異なるからではないかと思う。モデレーターは質問者の質問を広げたり、コミュニケーションがうまくいくように手伝ったりする。回答から次の質問を考えたりもする。一方で発表者は自分の調べたことや伝えたいことを聴衆にわかりやすく伝えることのみに注力する。&lt;/p>
&lt;p>モデレーターと発表者が同じになってしまうと、自分の説明のどこが伝わっていないのか、質問者の意図を組むにはどうすればいいかといったモデレーターの視点がなくなってしまう。以前 &lt;a href="/diary/diary/posts/2023/0401/#個人カンファレンス">tenntenn さんの個人カンファレンス&lt;/a> に参加したときに1人2役でパネルディスカッションをされていて、そのときに同僚からあまりやり過ぎると人格崩壊するから気をつけた方よいといった忠告を受けたと冗談で話されていた意味が理解できた。役者が他人になりきるように、これは兼任じゃなくて1人で2つの人格を演じないといけない。そんな器用なことはそうそうできない。&lt;/p></content></item><item><title>次開発と打ち上げ</title><link>/diary/posts/2023/0518/</link><pubDate>Thu, 18 May 2023 08:48:14 +0900</pubDate><guid>/diary/posts/2023/0518/</guid><description>能のサイトを眺めつつ 世界を変えた“愚か者”フラーとジョブズ をみているうちに寝落ちした。0時過ぎに寝て何度か起きて8時過ぎに起きた。休日以外に8時まわるまで寝ていたという記憶が直近数ヶ月にはないので久しぶりに寝坊した。起きたら8時10数分でそんなことあるはずないとか思ってしまって脳が現実を受け入れられなくて起きた時間を認識できなかった。明らかに8時10数分なんだけど、時計が壊れているなとか思ってしまった。
開発課題の打ち合わせ 大きく時間を使って次開発の打ち合わせ。事前にいくつか開発課題を洗い出せているが、その優先順位付けをしていかないといけない。開発メンバー + 別チームのコンサルタントにも入ってもらって各々の意見を出し合うといった会議をした。私が議題の資料を予め作っておいた。その進行に応じて議論や意見が盛り上がったのでうまくいってよかったと思う。 大項目でまとまった機能をやるよりも、個々の機能単位に優先順位付けした方がよいだろうという話しになって小さい単位で担当者を割り当てて開発を進めていくことになる。いずれはすべてやるが、開発の順番を決めていくのは意外と難しい。
話し終えてからメモをまとめ直しているうちに私自身が要件を詳細に把握できていない要件があることもわかってきた。空中戦だとわからないままふわっと進んでしまうので、文字に落とし込んで整理した上で、本当に必要なものをさらに深堀りして議論しないといけないことに気付いた。
少ない人数で会議をやる利点の1つとして、みんなの意見を順番に聞いていく余裕をもてることがあげられる。「誰一人取り残されない」とどこかの省庁がミッションにあげているように、うちのチームも課題管理を駆使して、それぞれのメンバーができることややりたいことでチームに貢献するような開発にしていきたい。もう半年やって課題管理に慣れてきているので、次開発は前回のようなやり方を教えるところからスタートにはならないはずだと思う。
打ち上げ 4月末にリリースを終えたので区切りとして打ち上げしてきた。うちのチームメンバーと偉い人の5人で行くのだと思っていたら直前に社内のメンバーにたくさん声を掛けたそうで10数人での飲み会になって送別会や部署のキックオフみたいな飲み会になった。賑やかでよかった。個人だとあまり行かないようなちょっとお値段のするコースでよいものを食べられておいしかった。日本酒もいろいろ飲んだ。神戸の酒どころに住んでいるので日本酒に関心をもつようになってきた。
山形 上喜元 愛知 醸し人九平次 18-20時と打ち上げやって、21時に新幹線を予約していたのでそのまま帰ってきた。このスケジュールの段取りもちょうどよかった。お酒を飲んで新幹線に乗ると思いの外眠れなくてそこだけ疲れた。</description><content>&lt;p>能のサイトを眺めつつ &lt;a href="https://www.nhk.jp/p/ts/9N81M92LXV/episode/te/6XWRL58JNK/">世界を変えた“愚か者”フラーとジョブズ&lt;/a> をみているうちに寝落ちした。0時過ぎに寝て何度か起きて8時過ぎに起きた。休日以外に8時まわるまで寝ていたという記憶が直近数ヶ月にはないので久しぶりに寝坊した。起きたら8時10数分でそんなことあるはずないとか思ってしまって脳が現実を受け入れられなくて起きた時間を認識できなかった。明らかに8時10数分なんだけど、時計が壊れているなとか思ってしまった。&lt;/p>
&lt;h2 id="開発課題の打ち合わせ">開発課題の打ち合わせ&lt;/h2>
&lt;p>大きく時間を使って次開発の打ち合わせ。事前にいくつか開発課題を洗い出せているが、その優先順位付けをしていかないといけない。開発メンバー + 別チームのコンサルタントにも入ってもらって各々の意見を出し合うといった会議をした。私が議題の資料を予め作っておいた。その進行に応じて議論や意見が盛り上がったのでうまくいってよかったと思う。
大項目でまとまった機能をやるよりも、個々の機能単位に優先順位付けした方がよいだろうという話しになって小さい単位で担当者を割り当てて開発を進めていくことになる。いずれはすべてやるが、開発の順番を決めていくのは意外と難しい。&lt;/p>
&lt;p>話し終えてからメモをまとめ直しているうちに私自身が要件を詳細に把握できていない要件があることもわかってきた。空中戦だとわからないままふわっと進んでしまうので、文字に落とし込んで整理した上で、本当に必要なものをさらに深堀りして議論しないといけないことに気付いた。&lt;/p>
&lt;p>少ない人数で会議をやる利点の1つとして、みんなの意見を順番に聞いていく余裕をもてることがあげられる。「誰一人取り残されない」とどこかの省庁がミッションにあげているように、うちのチームも課題管理を駆使して、それぞれのメンバーができることややりたいことでチームに貢献するような開発にしていきたい。もう半年やって課題管理に慣れてきているので、次開発は前回のようなやり方を教えるところからスタートにはならないはずだと思う。&lt;/p>
&lt;h2 id="打ち上げ">打ち上げ&lt;/h2>
&lt;p>4月末にリリースを終えたので区切りとして打ち上げしてきた。うちのチームメンバーと偉い人の5人で行くのだと思っていたら直前に社内のメンバーにたくさん声を掛けたそうで10数人での飲み会になって送別会や部署のキックオフみたいな飲み会になった。賑やかでよかった。個人だとあまり行かないようなちょっとお値段のするコースでよいものを食べられておいしかった。日本酒もいろいろ飲んだ。神戸の酒どころに住んでいるので日本酒に関心をもつようになってきた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.kigawaya.com/sake/jyouki/">山形 上喜元&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kuheiji.co.jp/">愛知 醸し人九平次&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>18-20時と打ち上げやって、21時に新幹線を予約していたのでそのまま帰ってきた。このスケジュールの段取りもちょうどよかった。お酒を飲んで新幹線に乗ると思いの外眠れなくてそこだけ疲れた。&lt;/p></content></item><item><title>出張の中日</title><link>/diary/posts/2023/0517/</link><pubDate>Wed, 17 May 2023 18:37:05 +0900</pubDate><guid>/diary/posts/2023/0517/</guid><description>0時に寝て何度か起きて5時半に起きてテレビで朝のニュースを聞き流しながら7時に起きた。
資料作成 今日はメンバーの1人が休暇だったため、打ち合わせはなしで資料ばかり作っていた。今週のチーム勉強会の発表は私が担当するのでその資料を作ったり、リリースを終えて社内向けにプロダクトの説明のための資料を準備したりしていた。これまでたくさんの資料を作ってきてるので改めて作るというよりは、過去に作ったものを洗練させたり、集めてきて補足する程度の作業になりそうな雰囲気だけわかってきた。
aws app runner の情報収集 App Runner Night !! にオンラインで参加した。AWS Startup Community というコミュニティがあることも知らなかった。顧問のはらさんが LT 発表すると聞いていたのでそれをみようと思ってながらで聞いていたので他の発表はあまりちゃんとみていてない。特別に目新しいことはなかったし、発表の中でもいくつかちょっとそこ怪しいんじゃない？とか思いながら他の作業をしていた。
私も余裕があれば app runner でサービスを動かしてみてその勘所を把握しておきたい。ecs がやりたいことに比べて使いにくいという印象は私もずっと思っていた。実質 k8s 以外のコンテナプラットフォームは aws しかないので app runner がよいものかどうかに関心をもっている。
コワーキングのオンラインイベント 月例のカフーツさんのオンラインイベントに参加した。先月の所感はここ 。今日は「移動」というテーマでいつも通りいとうさんがわーっと話をしていた。この2ヶ月に新しい官民の取り組みが始まったらしい。なんか空気だけでダメそうにみえる。
「テレワーク・ワーケーション官民推進協議会」を設立しました！ このサイトでは次の2つの用語を定義している。ブレジャーを初めて知ったけど、発音しにくくて語呂が悪いだろとか思えた。
ワーケーション (Work + Vacation) ブレジャー (Business + Leisure) このサイトにあるワーケーションの実施形態には共感するところもあって次の4つに分類している。IT 業界で多いのは合宿型とサテライトオフィス型かな。
福利厚生型 地域課題解決型 合宿型 サテライトオフィス型 あとどういう文脈だったか忘れてしまったが、身体感覚で「芭蕉」を読みなおす。 『おくのほそ道』謎解きの旅 という本を紹介された。能の探求者が書いた独特の視点から松尾芭蕉を取り上げた本らしくて、なんかおもしろそうにみえたのですぐに購入してみた。紙の文庫本しかなかった。読んでみる。</description><content>&lt;p>0時に寝て何度か起きて5時半に起きてテレビで朝のニュースを聞き流しながら7時に起きた。&lt;/p>
&lt;h2 id="資料作成">資料作成&lt;/h2>
&lt;p>今日はメンバーの1人が休暇だったため、打ち合わせはなしで資料ばかり作っていた。今週のチーム勉強会の発表は私が担当するのでその資料を作ったり、リリースを終えて社内向けにプロダクトの説明のための資料を準備したりしていた。これまでたくさんの資料を作ってきてるので改めて作るというよりは、過去に作ったものを洗練させたり、集めてきて補足する程度の作業になりそうな雰囲気だけわかってきた。&lt;/p>
&lt;h2 id="aws-app-runner-の情報収集">aws app runner の情報収集&lt;/h2>
&lt;p>&lt;a href="https://aws-startup-community.connpass.com/event/282015/">App Runner Night !!&lt;/a> にオンラインで参加した。&lt;a href="https://aws-startup-community.connpass.com/">AWS Startup Community&lt;/a> というコミュニティがあることも知らなかった。顧問のはらさんが LT 発表すると聞いていたのでそれをみようと思ってながらで聞いていたので他の発表はあまりちゃんとみていてない。特別に目新しいことはなかったし、発表の中でもいくつかちょっとそこ怪しいんじゃない？とか思いながら他の作業をしていた。&lt;/p>
&lt;p>私も余裕があれば app runner でサービスを動かしてみてその勘所を把握しておきたい。ecs がやりたいことに比べて使いにくいという印象は私もずっと思っていた。実質 k8s 以外のコンテナプラットフォームは aws しかないので app runner がよいものかどうかに関心をもっている。&lt;/p>
&lt;h2 id="コワーキングのオンラインイベント">コワーキングのオンラインイベント&lt;/h2>
&lt;p>月例のカフーツさんのオンラインイベントに参加した。&lt;a href="/diary/diary/posts/2023/0419/#コワーキングのオンラインイベント">先月の所感はここ&lt;/a> 。今日は「移動」というテーマでいつも通りいとうさんがわーっと話をしていた。この2ヶ月に新しい官民の取り組みが始まったらしい。なんか空気だけでダメそうにみえる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.mlit.go.jp/kankocho/workation-bleisure/news/230218/">「テレワーク・ワーケーション官民推進協議会」を設立しました！&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>このサイトでは次の2つの用語を定義している。ブレジャーを初めて知ったけど、発音しにくくて語呂が悪いだろとか思えた。&lt;/p>
&lt;ul>
&lt;li>ワーケーション (Work + Vacation)&lt;/li>
&lt;li>ブレジャー (Business + Leisure)&lt;/li>
&lt;/ul>
&lt;p>このサイトにあるワーケーションの実施形態には共感するところもあって次の4つに分類している。IT 業界で多いのは合宿型とサテライトオフィス型かな。&lt;/p>
&lt;ul>
&lt;li>福利厚生型&lt;/li>
&lt;li>地域課題解決型&lt;/li>
&lt;li>合宿型&lt;/li>
&lt;li>サテライトオフィス型&lt;/li>
&lt;/ul>
&lt;p>あとどういう文脈だったか忘れてしまったが、&lt;a href="https://www.shunjusha.co.jp/book/9784393436400.html">身体感覚で「芭蕉」を読みなおす。 『おくのほそ道』謎解きの旅&lt;/a> という本を紹介された。能の探求者が書いた独特の視点から松尾芭蕉を取り上げた本らしくて、なんかおもしろそうにみえたのですぐに購入してみた。紙の文庫本しかなかった。読んでみる。&lt;/p></content></item><item><title>半期に1回のふりかえり大会</title><link>/diary/posts/2023/0516/</link><pubDate>Tue, 16 May 2023 08:37:07 +0900</pubDate><guid>/diary/posts/2023/0516/</guid><description>少し寝ようかと思って横になった時間はあったものの、寝過ごすのが怖くて結局は新幹線の始発まで起きていた。この時期は4時を回り始めると徐々に外が明るくなっていき、5時は普通に明るくなっている。夏至も近い。
テックブログ公開 先日書いてレビューを終えた テックブログを公開した。
Docker とは何か？ コンテンツは狙ってバズらない
私の言葉だ。多くの開発者が関心をもつ話題ではないけれど、仲間内では評判がよかったので拡散されると嬉しい、、、。と淡い期待を寄せていたが、そうでもなかった。工数をかけて丁寧に書いても関心をもたれないことはよくある。個々のコンテンツがバズらなくてもコンテンツは積み重ねることも大事なので私がよいと思う記事を今後も書いていく。
半年間の開発のふりかえり 2時間をとって半年間の開発のふりかえりをやった。課題管理システムから定量的な数字をみたり、定性的なのは、過去のマイルストーンのふりかえりのふりかえりをしたり、課題管理システムから特定の issue を取り上げて改善するにはどうしたらよいかなどを議論したりしてみた。
私もチームのファシリテーションに慣れてきて、自由に意見を求めるよりも、個人個人を指してどうですか？と尋ねる方が意見がわーっと出てきて議論が活発になることに気付いた。なにか議題があったら必ず当てられて意見を言わないといけないとメンバーも察してくれるようになっていると思う。そういう空気になってきた。そして、ちゃんと答えてくれるのでそれで問題ないと思う。大人しいというのか、消極的というのか、うちのチームのメンバーには意見を求められなければ言わないという姿勢が垣間みえる。これは開発の自律性とは反対にある価値観なのでなるべくそこから脱却して自分から議題に意見を言うようになってほしい。もしかしたら私が喋り過ぎなのかもしれない？
ふりかえりをしないチームは多いので何もしないよりはなにかしら 示唆は与えられた のではないかと思いたい。</description><content>&lt;p>少し寝ようかと思って横になった時間はあったものの、寝過ごすのが怖くて結局は新幹線の始発まで起きていた。この時期は4時を回り始めると徐々に外が明るくなっていき、5時は普通に明るくなっている。夏至も近い。&lt;/p>
&lt;h2 id="テックブログ公開">テックブログ公開&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0509/#Docker-についてのテックブログ執筆">先日書いてレビューを終えた&lt;/a> テックブログを公開した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.osstech.co.jp/posts/2023/05/what-is-docker/">Docker とは何か？&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>コンテンツは狙ってバズらない&lt;/p>
&lt;/blockquote>
&lt;p>私の言葉だ。多くの開発者が関心をもつ話題ではないけれど、仲間内では評判がよかったので拡散されると嬉しい、、、。と淡い期待を寄せていたが、そうでもなかった。工数をかけて丁寧に書いても関心をもたれないことはよくある。個々のコンテンツがバズらなくてもコンテンツは積み重ねることも大事なので私がよいと思う記事を今後も書いていく。&lt;/p>
&lt;h2 id="半年間の開発のふりかえり">半年間の開発のふりかえり&lt;/h2>
&lt;p>2時間をとって半年間の開発のふりかえりをやった。課題管理システムから定量的な数字をみたり、定性的なのは、過去のマイルストーンのふりかえりのふりかえりをしたり、課題管理システムから特定の issue を取り上げて改善するにはどうしたらよいかなどを議論したりしてみた。&lt;/p>
&lt;p>私もチームのファシリテーションに慣れてきて、自由に意見を求めるよりも、個人個人を指してどうですか？と尋ねる方が意見がわーっと出てきて議論が活発になることに気付いた。なにか議題があったら必ず当てられて意見を言わないといけないとメンバーも察してくれるようになっていると思う。そういう空気になってきた。そして、ちゃんと答えてくれるのでそれで問題ないと思う。大人しいというのか、消極的というのか、うちのチームのメンバーには意見を求められなければ言わないという姿勢が垣間みえる。これは開発の自律性とは反対にある価値観なのでなるべくそこから脱却して自分から議題に意見を言うようになってほしい。もしかしたら私が喋り過ぎなのかもしれない？&lt;/p>
&lt;p>ふりかえりをしないチームは多いので何もしないよりはなにかしら &lt;a href="/diary/diary/posts/2023/0424/#示唆を与えなければならない">示唆は与えられた&lt;/a> のではないかと思いたい。&lt;/p></content></item><item><title>goleak と context によるキャンセル制御</title><link>/diary/posts/2023/0515/</link><pubDate>Mon, 15 May 2023 09:38:03 +0900</pubDate><guid>/diary/posts/2023/0515/</guid><description>0時に寝て何度か起きて7時に起きた。いつもなら日曜日は徹夜して翌日の早朝に出掛けるのが月曜日は行かなくて済むのでちょっと楽になった。
amqp091-go の context 制御 goroutine リークを検出するツールに uber-go/goleak がある。ずっと前から余裕のあるときに結合テストの導入しようという issue を作っていたものの、適当なタイミングがなかった。先週末に少し手が空いたので着手した。goleak は個別のテストメソッドにも TestMain にも両方に対応している。結合テストの TestMain に入れた方が保守コストが下がるのでそういった用途がよいのではないかと思う。
go の TestMain がこういうものかもしれないが、defer 文を使う終了処理があるとそのコードを直接 TestMain には実装できない。関数で wrap して m.Run() を実行した結果を返すようにしないといけない。そこに goleak を入れる場合、goleak.Cleanup を何もしない関数に置き換えて m.Run() の結果を返せばよいのではないかと思う。そして VerifyTestMain() は m.Run() を実行してからすぐに goroutine が動いていないかをチェックする。ここで結合テストを動かすための、環境構築のために http サーバーを goroutine で起動するとか、テストのための goroutine が動いているとそれも検出してしまうのでそれらの goroutine は無視できるよう、2つのオプションが用意されている。
IgnoreTopFunction: 明示的に無視してよい goroutine のトップ関数を指定する IgnoreCurrent: オプションを登録した時点で稼働している goroutine を無視する これらを踏まえて TestMain で goleak を使うと次のようなコードになった。しかし、おそらくこの使い方はあまりよくない。いくつか goroutine を無視する設定を追加したために、そこに意図しない goroutine リークが隠蔽されてしまう懸念がある。
func main(m *testing.M) int { defer myTearDown() var code int goleak.</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。いつもなら日曜日は徹夜して翌日の早朝に出掛けるのが月曜日は行かなくて済むのでちょっと楽になった。&lt;/p>
&lt;h2 id="amqp091-go-の-context-制御">amqp091-go の context 制御&lt;/h2>
&lt;p>goroutine リークを検出するツールに &lt;a href="https://github.com/uber-go/goleak">uber-go/goleak&lt;/a> がある。ずっと前から余裕のあるときに結合テストの導入しようという issue を作っていたものの、適当なタイミングがなかった。先週末に少し手が空いたので着手した。goleak は個別のテストメソッドにも TestMain にも両方に対応している。結合テストの TestMain に入れた方が保守コストが下がるのでそういった用途がよいのではないかと思う。&lt;/p>
&lt;p>go の TestMain がこういうものかもしれないが、defer 文を使う終了処理があるとそのコードを直接 TestMain には実装できない。関数で wrap して m.Run() を実行した結果を返すようにしないといけない。そこに goleak を入れる場合、goleak.Cleanup を何もしない関数に置き換えて m.Run() の結果を返せばよいのではないかと思う。そして VerifyTestMain() は m.Run() を実行してからすぐに goroutine が動いていないかをチェックする。ここで結合テストを動かすための、環境構築のために http サーバーを goroutine で起動するとか、テストのための goroutine が動いているとそれも検出してしまうのでそれらの goroutine は無視できるよう、2つのオプションが用意されている。&lt;/p>
&lt;ul>
&lt;li>IgnoreTopFunction: 明示的に無視してよい goroutine のトップ関数を指定する&lt;/li>
&lt;li>IgnoreCurrent: オプションを登録した時点で稼働している goroutine を無視する&lt;/li>
&lt;/ul>
&lt;p>これらを踏まえて TestMain で goleak を使うと次のようなコードになった。しかし、おそらくこの使い方はあまりよくない。いくつか goroutine を無視する設定を追加したために、そこに意図しない goroutine リークが隠蔽されてしまう懸念がある。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">testing&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">myTearDown&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">code&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">VerifyTestMain&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">m&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">Cleanup&lt;/span>(&lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">exitCode&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;skip goleak cleanup&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">exitCode&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">code&lt;/span> = &lt;span style="color:#a6e22e">exitCode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">IgnoreTopFunction&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;net/http.(*persistConn).readLoop&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">IgnoreTopFunction&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;net/http.(*persistConn).writeLoop&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">IgnoreTopFunction&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;internal/poll.runtime_pollWait&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">goleak&lt;/span>.&lt;span style="color:#a6e22e">IgnoreCurrent&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">TestMain&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">testing&lt;/span>.&lt;span style="color:#a6e22e">M&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Exit&lt;/span>(&lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>さらにこの調査をしているときに amqp091-go の api も context 受け取った方がシンプルでいいんじゃない？と思って提案の pr を送ってみた。context 使わなくても自前でキャンセルする api は提供されているため、開発者の考え方によってこの提案を拒否するのも妥当な判断だと思える。次のメジャーバージョンとか、互換性を維持しなくてよいタイミングから取り入れようという考え方もあるかもしれない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rabbitmq/amqp091-go/pull/192">Add Channel.ConsumeWithContext to be able to cancel delivering #192&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>出張前々日</title><link>/diary/posts/2023/0514/</link><pubDate>Sun, 14 May 2023 14:58:19 +0900</pubDate><guid>/diary/posts/2023/0514/</guid><description>0時に寝て何度か起きて7時に起きた。雨降りだったので午前中はドラクエタクトしてた。午後から雨が小さくなったのをみて、オフィスで出張前の資料作りをしてた。夕方には雨がやんでお土産を購入するために出掛けたらすみよさんさんに偶然会った。
ソフトウェアライセンス事業を加速させる OSS 戦略 ビジネス法務 2023年6月号 という雑誌に寄稿したとなかいさんのタイムラインをみかけたので読んでみた。電子版は年間契約でないと購入できないようで仕方なく紙の雑誌を購入した。ライセンス契約の特集の中の1記事らしい。3ページの記事だったので OSS というソフトウェアのビジネス形態の紹介といった記事のようにみえる。OSS や web 業界の開発者からみたら目新しい内容ではないが、こういった雑誌に紹介されること自体がすごいことだと思いながら読んでみた。自社ソフトウェアを OSS とする戦略の特徴として次の3つをあげていた。
ユーザーの開発者が動作を確認したり、カスタマイズできる 製品の透明性を証明できる (ソースコードを読めるから) 技術力のアピールできる うちも近いうちに OSS でプロダクト開発を始めるので参考にしながらやろうと思う。うちは OSS で儲けようと考えていないが、うちで作るものは原則として OSS で公開していく方針で考えている。
近況報告の資料作り 4月末にリリース できているのでそれほど重要ではないけど、毎月出張したタイミングで報告会をしているので急にやめるのもどうかな？という気がして資料を作って打ち合わせする。リリースして GW を挟んで次の開発への準備期間という隙間時間がいまになる。ある種のゆとりになっていて、これはパッケージベンダーだからこそなのか、中小企業ゆえの労務管理や目標管理の緩さからなのか、いずれにしてもこういう隙間時間を使って自分で考えて、自分で調査して、自分でふりかえるといった自律性を養うのによいかもしれない。私もゆっくり考える時間を取れてよかった。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。雨降りだったので午前中はドラクエタクトしてた。午後から雨が小さくなったのをみて、オフィスで出張前の資料作りをしてた。夕方には雨がやんでお土産を購入するために出掛けたらすみよさんさんに偶然会った。&lt;/p>
&lt;h2 id="ソフトウェアライセンス事業を加速させる-oss-戦略">ソフトウェアライセンス事業を加速させる OSS 戦略&lt;/h2>
&lt;p>&lt;a href="https://www.chuokeizai.co.jp/bjh/archive/detail_009856.html">ビジネス法務 2023年6月号&lt;/a> という雑誌に寄稿したとなかいさんのタイムラインをみかけたので読んでみた。電子版は年間契約でないと購入できないようで仕方なく紙の雑誌を購入した。ライセンス契約の特集の中の1記事らしい。3ページの記事だったので OSS というソフトウェアのビジネス形態の紹介といった記事のようにみえる。OSS や web 業界の開発者からみたら目新しい内容ではないが、こういった雑誌に紹介されること自体がすごいことだと思いながら読んでみた。自社ソフトウェアを OSS とする戦略の特徴として次の3つをあげていた。&lt;/p>
&lt;ul>
&lt;li>ユーザーの開発者が動作を確認したり、カスタマイズできる&lt;/li>
&lt;li>製品の透明性を証明できる (ソースコードを読めるから)&lt;/li>
&lt;li>技術力のアピールできる&lt;/li>
&lt;/ul>
&lt;p>うちも近いうちに OSS でプロダクト開発を始めるので参考にしながらやろうと思う。うちは OSS で儲けようと考えていないが、うちで作るものは原則として OSS で公開していく方針で考えている。&lt;/p>
&lt;h2 id="近況報告の資料作り">近況報告の資料作り&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0425/#リリース">4月末にリリース&lt;/a> できているのでそれほど重要ではないけど、毎月出張したタイミングで報告会をしているので急にやめるのもどうかな？という気がして資料を作って打ち合わせする。リリースして GW を挟んで次の開発への準備期間という隙間時間がいまになる。ある種のゆとりになっていて、これはパッケージベンダーだからこそなのか、中小企業ゆえの労務管理や目標管理の緩さからなのか、いずれにしてもこういう隙間時間を使って自分で考えて、自分で調査して、自分でふりかえるといった自律性を養うのによいかもしれない。私もゆっくり考える時間を取れてよかった。&lt;/p></content></item><item><title>書きものしていただけの土曜日</title><link>/diary/posts/2023/0513/</link><pubDate>Sat, 13 May 2023 09:36:13 +0900</pubDate><guid>/diary/posts/2023/0513/</guid><description>0時に寝て何度か起きて6時に起きた。朝からなんとなくだらだらしていた。午後から日記を書きながら外をみると雨降りでのんびり過ごした一日だった。
ストレッチ 今週も資料作りをしていただけでプレッシャーやストレスなどは皆無なので体調よいのだろうと思っていたけど、思いの外、腰の張りはあったので想定したよりは疲れていたかもしれない。もしかしたら、その前の週が連休だっただけに連休明けの週だから身体的に余計に疲れたのかもしれない。今日の開脚幅は開始前155cmで、ストレッチ後159cmだった。いつも通りの数値。初めて縦方向に開脚するストレッチをしてみたら、股関節の可動域のよくないところがきつかった。家でも意識して伸ばしてみようと思う。</description><content>&lt;p>0時に寝て何度か起きて6時に起きた。朝からなんとなくだらだらしていた。午後から日記を書きながら外をみると雨降りでのんびり過ごした一日だった。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週も資料作りをしていただけでプレッシャーやストレスなどは皆無なので体調よいのだろうと思っていたけど、思いの外、腰の張りはあったので想定したよりは疲れていたかもしれない。もしかしたら、その前の週が連休だっただけに連休明けの週だから身体的に余計に疲れたのかもしれない。今日の開脚幅は開始前155cmで、ストレッチ後159cmだった。いつも通りの数値。初めて縦方向に開脚するストレッチをしてみたら、股関節の可動域のよくないところがきつかった。家でも意識して伸ばしてみようと思う。&lt;/p></content></item><item><title>第5期の展望</title><link>/diary/posts/2023/0512/</link><pubDate>Fri, 12 May 2023 07:46:19 +0900</pubDate><guid>/diary/posts/2023/0512/</guid><description>0時に寝て6時に起きた。昨日の夜に展望の資料を作りやるつもりがバテて寝てしまったので朝から作ってた。日中はふりかえりの資料を作っていて、それも作り終えたので来週の東京出張の準備は概ね終わった。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
デザイナーさんとの契約の話し 第5期の展望 後者の資料を昨日の夜に作ろうと思いながら帰って晩ご飯食べたら疲れて家でのんびりしてしまった。最近あまりよくない傾向として、晩ご飯を食べに家に帰ると戻って来れなくなることが多い。たまに日記でも書いているが、23時や24時に晩ご飯を食べると寝ているときに胃酸が逆流して吐き気を催したり、最悪、吐いたりする。そうなると夜中に1-2時間は眠れなくなって辛いので夜遅くに食べるのを避けるため、19時前後に家に帰って晩ご飯を食べるようにし始めた。おそらく身体的には晩ご飯なんかもう食べなくてよいはずなのに食べてしまうのはストレスや糖質への依存症なのかもしれない。これはまた別の話し。
オフィスから家が近いので晩ご飯を外食せずに済むことはよいことなのだが、本来なら晩ご飯を食べて20-21時頃にオフィスへ戻って作業の続きをするのが望ましい。このモチベーション管理がとても難しい。本当の意味では、オフィスに戻って作業しなくてもよいと頭で理解してしまうとついついさぼってしまう。それは私のモチベーションが低いだけでしかない。さぼると多少の自己嫌悪があってさらにモチベーション管理が難しくなる。
閑話休題。今朝7時からオフィスへ出掛けて資料を作り始めた。期ごとのふりかえりや展望を毎年やっていることには意味があって、昨年の資料を見返すきっかけになる。昨年立てた展望がどうなったかというふりかえりにもなるし、できていないことは今季も継続するのか、やめてしまうのかという判断材料にもなる。毎年の積み重ねとして気付きを溜めていくという見方もできる。どんなことでも継続していると役に立つ。
起業したときにざっくり10年の計画を3つのステージに見立てた。そして、最初のステージは想定通り進捗し、今季は2つ目のステージへの過渡期となる。起業してもう4年目、4年も経ったんやなぁと思う。年月は早い。マイルストーンの1つとしていた 経営セーフティ共済 の積立が完了する。
昨年からマーケティングの施策をやっていこうと立案したが、jjug ccc で発表したこと以外は目立った成果をあげていない。日々のお仕事にいっぱいいっぱいになっていて、最低限のことをやっていくだけで生活に余裕はあまりない。その余裕のなさは、先にも書いたモチベーション管理からきているのか？体力的なものなのか、それらが加齢によるものなのかはまだよくわからない。普通に考えると40歳を超えると、いろんな要素が下り坂になっていくことは想定されるので元気のあるうちに新しい施策や行動につなげるのが安全な考え方ではないかと思う。</description><content>&lt;p>0時に寝て6時に起きた。昨日の夜に展望の資料を作りやるつもりがバテて寝てしまったので朝から作ってた。日中はふりかえりの資料を作っていて、それも作り終えたので来週の東京出張の準備は概ね終わった。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;ul>
&lt;li>デザイナーさんとの契約の話し&lt;/li>
&lt;li>第5期の展望&lt;/li>
&lt;/ul>
&lt;p>後者の資料を昨日の夜に作ろうと思いながら帰って晩ご飯食べたら疲れて家でのんびりしてしまった。最近あまりよくない傾向として、晩ご飯を食べに家に帰ると戻って来れなくなることが多い。たまに日記でも書いているが、23時や24時に晩ご飯を食べると寝ているときに胃酸が逆流して吐き気を催したり、最悪、吐いたりする。そうなると夜中に1-2時間は眠れなくなって辛いので夜遅くに食べるのを避けるため、19時前後に家に帰って晩ご飯を食べるようにし始めた。おそらく身体的には晩ご飯なんかもう食べなくてよいはずなのに食べてしまうのはストレスや糖質への依存症なのかもしれない。これはまた別の話し。&lt;/p>
&lt;p>オフィスから家が近いので晩ご飯を外食せずに済むことはよいことなのだが、本来なら晩ご飯を食べて20-21時頃にオフィスへ戻って作業の続きをするのが望ましい。このモチベーション管理がとても難しい。本当の意味では、オフィスに戻って作業しなくてもよいと頭で理解してしまうとついついさぼってしまう。それは私のモチベーションが低いだけでしかない。さぼると多少の自己嫌悪があってさらにモチベーション管理が難しくなる。&lt;/p>
&lt;p>閑話休題。今朝7時からオフィスへ出掛けて資料を作り始めた。期ごとのふりかえりや展望を毎年やっていることには意味があって、昨年の資料を見返すきっかけになる。昨年立てた展望がどうなったかというふりかえりにもなるし、できていないことは今季も継続するのか、やめてしまうのかという判断材料にもなる。毎年の積み重ねとして気付きを溜めていくという見方もできる。どんなことでも継続していると役に立つ。&lt;/p>
&lt;p>起業したときにざっくり10年の計画を3つのステージに見立てた。そして、最初のステージは想定通り進捗し、今季は2つ目のステージへの過渡期となる。起業してもう4年目、4年も経ったんやなぁと思う。年月は早い。マイルストーンの1つとしていた &lt;a href="https://www.smrj.go.jp/kyosai/tkyosai/index.html">経営セーフティ共済&lt;/a> の積立が完了する。&lt;/p>
&lt;p>昨年からマーケティングの施策をやっていこうと立案したが、&lt;a href="/diary/diary/posts/2022/0619/">jjug ccc&lt;/a> で発表したこと以外は目立った成果をあげていない。日々のお仕事にいっぱいいっぱいになっていて、最低限のことをやっていくだけで生活に余裕はあまりない。その余裕のなさは、先にも書いたモチベーション管理からきているのか？体力的なものなのか、それらが加齢によるものなのかはまだよくわからない。普通に考えると40歳を超えると、いろんな要素が下り坂になっていくことは想定されるので元気のあるうちに新しい施策や行動につなげるのが安全な考え方ではないかと思う。&lt;/p></content></item><item><title>gitlab issues と mongodb による分析</title><link>/diary/posts/2023/0511/</link><pubDate>Thu, 11 May 2023 09:06:56 +0900</pubDate><guid>/diary/posts/2023/0511/</guid><description>0時に寝て何度か起きて7時に起きた。今日も一日資料作りをしていた。
gitlab issues の解析 ふりかえりの資料を作っていて gitlab issues の解析を始めた。gitlab にも分析系機能は提供されているが、大半が有償機能で free では使えない。実質 free で役に立ちそうなレポートを私はみつけられなかった。
Analyze GitLab usage gitlab は glab cli というツールを提供している。試しに glab を使って issues の解析ができないかとやってみたが、グループ単位ではなくプロジェクト単位でしか操作できないようにみえた。そこで rest api を呼び出すための便利ツールとして使うことにした。要は rest api で任意のデータを取得してそれを使ってローカルで解析することにした。例えば、次のようにして特定ラベルを除外した特定グループのマイルストーンごとの issues をすべて取得できる。
$ mygrpid=&amp;#34;xxx&amp;#34; $ milestones=&amp;#34;2022-11 2022-12 2023-01 2023-02 2023-03 2023-04&amp;#34; $ for i in $milestones; do echo $i; glab api --paginate &amp;#34;groups/${mygrpid}/issues?milestone=${i}&amp;amp;not[labels]=Duplicate,Invalid,Wontfix&amp;#34; | jq -c &amp;#39;.[]&amp;#39; &amp;gt; &amp;#34;${i}-issues.json&amp;#34;; done あとはこの json データをそのまま分析のためのデータベースに取り込む。今回は mongodb にインポートしてみた。mongodb だとスキーマを定義しなくても json データをそのままインポートできてアドホックな分析に便利そうに思えた。オブジェクトの入れ子構造をもつ json データのようなものを rdbms にインポートするのはひと工夫必要なことから json データをそのままインポートできるドキュメントデータベースの有効性を理解できた。インポートしたら MongoDB Shell を使うとてっとり早い。例えば、マイルストーンごとの issues の件数などは次のようにして集計できる。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。今日も一日資料作りをしていた。&lt;/p>
&lt;h2 id="gitlab-issues-の解析">gitlab issues の解析&lt;/h2>
&lt;p>ふりかえりの資料を作っていて gitlab issues の解析を始めた。gitlab にも分析系機能は提供されているが、大半が有償機能で free では使えない。実質 free で役に立ちそうなレポートを私はみつけられなかった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/ee/user/analytics/">Analyze GitLab usage&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>gitlab は &lt;a href="https://gitlab.com/gitlab-org/cli">glab cli&lt;/a> というツールを提供している。試しに glab を使って issues の解析ができないかとやってみたが、グループ単位ではなくプロジェクト単位でしか操作できないようにみえた。そこで rest api を呼び出すための便利ツールとして使うことにした。要は rest api で任意のデータを取得してそれを使ってローカルで解析することにした。例えば、次のようにして特定ラベルを除外した特定グループのマイルストーンごとの issues をすべて取得できる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ mygrpid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ milestones&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2022-11 2022-12 2023-01 2023-02 2023-03 2023-04&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#66d9ef">for&lt;/span> i in $milestones; &lt;span style="color:#66d9ef">do&lt;/span> echo $i; glab api --paginate &lt;span style="color:#e6db74">&amp;#34;groups/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>mygrpid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/issues?milestone=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;amp;not[labels]=Duplicate,Invalid,Wontfix&amp;#34;&lt;/span> | jq -c &lt;span style="color:#e6db74">&amp;#39;.[]&amp;#39;&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">-issues.json&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>あとはこの json データをそのまま分析のためのデータベースに取り込む。今回は mongodb にインポートしてみた。mongodb だとスキーマを定義しなくても json データをそのままインポートできてアドホックな分析に便利そうに思えた。オブジェクトの入れ子構造をもつ json データのようなものを rdbms にインポートするのはひと工夫必要なことから json データをそのままインポートできるドキュメントデータベースの有効性を理解できた。インポートしたら &lt;a href="https://www.mongodb.com/products/shell">MongoDB Shell&lt;/a> を使うとてっとり早い。例えば、マイルストーンごとの issues の件数などは次のようにして集計できる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gitlab&amp;gt; db.issues.aggregate&lt;span style="color:#f92672">([{&lt;/span> $group: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$milestone&lt;span style="color:#e6db74">.title&amp;#34;&lt;/span>, count: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sum&lt;span style="color:#e6db74">&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>, &lt;span style="color:#f92672">{&lt;/span> $sort: &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}}])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2022-11&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">348&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2022-12&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">346&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2023-01&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">338&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2023-02&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">357&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2023-03&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">347&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#e6db74">&amp;#39;2023-04&amp;#39;&lt;/span>, count: &lt;span style="color:#ae81ff">336&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>担当者別に &lt;code>Enhance&lt;/code> ラベルが付いた issues の件数を数えるときには次のようになる。sql を使えないというデメリットを json データをそのままインポートできるメリットの方が上回るときは mongodb のクエリを学ぶ機会になる。私も mongodb の aggregation の実行方法をドキュメントみながらやってた。全然わからないので慣れが必要になる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gitlab&amp;gt; db.issues.aggregate&lt;span style="color:#f92672">([{&lt;/span> $group: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span> assignee: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$assignee&lt;span style="color:#e6db74">.username&amp;#34;&lt;/span>, enhance: &lt;span style="color:#f92672">{&lt;/span>$in: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Enhance&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$labels&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">]}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>, count: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sum&lt;span style="color:#e6db74">&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>$match: &lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_id.enhance&amp;#34;&lt;/span>: true&lt;span style="color:#f92672">}}&lt;/span>, &lt;span style="color:#f92672">{&lt;/span> $sort: &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}}])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#f92672">{&lt;/span> assignee: &lt;span style="color:#e6db74">&amp;#39;bob&amp;#39;&lt;/span>, enhance: true &lt;span style="color:#f92672">}&lt;/span>, count: &lt;span style="color:#ae81ff">84&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#f92672">{&lt;/span> assignee: &lt;span style="color:#e6db74">&amp;#39;john&amp;#39;&lt;/span>, enhance: true &lt;span style="color:#f92672">}&lt;/span>, count: &lt;span style="color:#ae81ff">143&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#f92672">{&lt;/span> assignee: &lt;span style="color:#e6db74">&amp;#39;mary&amp;#39;&lt;/span>, enhance: true &lt;span style="color:#f92672">}&lt;/span>, count: &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#f92672">{&lt;/span> assignee: &lt;span style="color:#e6db74">&amp;#39;parks&amp;#39;&lt;/span>, enhance: true &lt;span style="color:#f92672">}&lt;/span>, count: &lt;span style="color:#ae81ff">78&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>未登記の建物の扱い</title><link>/diary/posts/2023/0510/</link><pubDate>Wed, 10 May 2023 08:44:26 +0900</pubDate><guid>/diary/posts/2023/0510/</guid><description>1時に寝て7時に起きた。来週は出張なのでその準備もいるし、連休明けから急に忙しくなってきた。今日も一日中資料を作成していた。来週に東京出張して集中的に打ち合わせする。その叩き台の資料を作っていた。
建物の登記 登記の専門家として 土地家屋調査士 という士業があるらしい。相続に関して土地家屋調査士さんと話したので少し書いておく。相続のやり取りで実家の建物を母が相続する段取りで進めていたが、どうやらうちの建物はすべて未登記らしい。土地家屋調査士さんが言うには、未登記の建物は相続できないという。
いまは建物を建てると原則として法務局に不動産として登記することが義務付けられている。昔もそうだったかもしれないけど、昔はいまよりも適当だったので未登記の建物がたくさんあるという。未登記だと10万円以下の過料を支払うという法律になっているそうだが、現状は未登記の建物がたくさんあるとわかっていて、本当にすべての建物に10万円以下の過料を取り立てるのかというと、土地家屋調査士さんも懐疑的だという。おそらく過渡期においてはなんらかの救済策が取られるのではないかと推測する。
未登記であっても固定資産税の支払いはできるために、実質的に登記というのは誰がその建物を所有しているかの第3者における証明に過ぎない。例えば融資を受ける場合には必須になる。他人が使っている建物を自分たちのものだと出張して裁判になるといったことは、普通に生活していて起きることでもないので未登記でも実質的に困ることはない。昔はそうだったわけだし。固定資産税は地方自治体が管理している固定資産税評価額に基づいて支払うため、その金額に基づいて相続税も支払える。未登記だから相続はできないのに。
いま未登記だということは、おそらく祖父から父への相続がなされていないという解釈になるという。そのため、登記にあたって祖父の相続人に対しての確認をした上でいくつかの手順を踏んで登記の手続きを進めないといけないという。
未登記建物がもたらすリスクとは？登記方法と相続する場合の手続きも解説 表題登記を行うためには、司法書士への依頼費用が2〜3万円ほど、土地家屋調査士へ依頼する費用が8〜12万円ほど必要です。
調べていると、なぜ未登記の建物が多いかというと士業への費用を節約するためだという。士業の方々に登記を依頼するとそれなりの費用がかかる。この費用を支払っても得られるメリットがないときにこれまで未登記が選択されてきたという。土地家屋調査士さんに「このまま未登記で困ることありますか？」と聞いたら、親族でお金に困った人が出てきたときにその建物の所有権を主張して云々みたいな話しを始めたので、途中で「そのリスクは受け入れます。」遮ってしまった。ほとんど資産価値のない、田舎にある老朽化した建物を、お金に困った人が所有権を主張するとは事実上考えにくい。
うちにとっては未登記の建物のデメリットは事実上ないようにみえる。土地家屋調査士さんの作業だけで登記できるならやってもらって構わないが、祖父からの相続を考慮して親戚の念書と印鑑証明を集めて登記するといったことは、デメリットに対して労力が大き過ぎると私は判断した。相続税は支払うが、建物は未登記／未相続で進めてもらってよいという主旨の回答をした。士業の方々がその要件に納得するかどうかはまだわからない。</description><content>&lt;p>1時に寝て7時に起きた。来週は出張なのでその準備もいるし、連休明けから急に忙しくなってきた。今日も一日中資料を作成していた。来週に東京出張して集中的に打ち合わせする。その叩き台の資料を作っていた。&lt;/p>
&lt;h2 id="建物の登記">建物の登記&lt;/h2>
&lt;p>登記の専門家として &lt;a href="https://www.chosashi.or.jp/investigator/about/">土地家屋調査士&lt;/a> という士業があるらしい。相続に関して土地家屋調査士さんと話したので少し書いておく。相続のやり取りで実家の建物を母が相続する段取りで進めていたが、どうやらうちの建物はすべて未登記らしい。土地家屋調査士さんが言うには、未登記の建物は相続できないという。&lt;/p>
&lt;p>いまは建物を建てると原則として法務局に不動産として登記することが義務付けられている。昔もそうだったかもしれないけど、昔はいまよりも適当だったので未登記の建物がたくさんあるという。未登記だと10万円以下の過料を支払うという法律になっているそうだが、現状は未登記の建物がたくさんあるとわかっていて、本当にすべての建物に10万円以下の過料を取り立てるのかというと、土地家屋調査士さんも懐疑的だという。おそらく過渡期においてはなんらかの救済策が取られるのではないかと推測する。&lt;/p>
&lt;p>未登記であっても固定資産税の支払いはできるために、実質的に登記というのは誰がその建物を所有しているかの第3者における証明に過ぎない。例えば融資を受ける場合には必須になる。他人が使っている建物を自分たちのものだと出張して裁判になるといったことは、普通に生活していて起きることでもないので未登記でも実質的に困ることはない。昔はそうだったわけだし。固定資産税は地方自治体が管理している固定資産税評価額に基づいて支払うため、その金額に基づいて相続税も支払える。未登記だから相続はできないのに。&lt;/p>
&lt;p>いま未登記だということは、おそらく祖父から父への相続がなされていないという解釈になるという。そのため、登記にあたって祖父の相続人に対しての確認をした上でいくつかの手順を踏んで登記の手続きを進めないといけないという。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.yasiro.co.jp/eitaikuyo/media/archives/6972">未登記建物がもたらすリスクとは？登記方法と相続する場合の手続きも解説&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>表題登記を行うためには、司法書士への依頼費用が2〜3万円ほど、土地家屋調査士へ依頼する費用が8〜12万円ほど必要です。&lt;/p>
&lt;/blockquote>
&lt;p>調べていると、なぜ未登記の建物が多いかというと士業への費用を節約するためだという。士業の方々に登記を依頼するとそれなりの費用がかかる。この費用を支払っても得られるメリットがないときにこれまで未登記が選択されてきたという。土地家屋調査士さんに「このまま未登記で困ることありますか？」と聞いたら、親族でお金に困った人が出てきたときにその建物の所有権を主張して云々みたいな話しを始めたので、途中で「そのリスクは受け入れます。」遮ってしまった。ほとんど資産価値のない、田舎にある老朽化した建物を、お金に困った人が所有権を主張するとは事実上考えにくい。&lt;/p>
&lt;p>うちにとっては未登記の建物のデメリットは事実上ないようにみえる。土地家屋調査士さんの作業だけで登記できるならやってもらって構わないが、祖父からの相続を考慮して親戚の念書と印鑑証明を集めて登記するといったことは、デメリットに対して労力が大き過ぎると私は判断した。相続税は支払うが、建物は未登記／未相続で進めてもらってよいという主旨の回答をした。士業の方々がその要件に納得するかどうかはまだわからない。&lt;/p></content></item><item><title>久しぶりのテックブログの執筆</title><link>/diary/posts/2023/0509/</link><pubDate>Tue, 09 May 2023 20:59:03 +0900</pubDate><guid>/diary/posts/2023/0509/</guid><description>3時に寝て7時に起きた。昨日は連休明け初日なのに2時まで作業していた。開発が落ち着いたので夜に自社のお仕事をする余力が戻ってきたとも言える。
Docker についてのテックブログ執筆 先日から Docker エコシステムの調査 をして、そこでわかったことをテックブログとしてまとめていた。一通り書き終えてマージリクエストを作成して社内レビューを依頼した。当初は 「ライブラリとしての Docker とは何か？」 というタイトルで書いていたものの、レビューを経て「ライブラリとしての」という修飾は必要ないことに気付いた。そのまま Docker のコンポーネントのソフトウェアスタックや過去の経緯や現状の雰囲気がわかるような記事にした。Docker を中心としたコンテナプラットフォームと標準化の概要について追っていく記事に仕上がった。インフラに関心をもつ人たちは少ないかもしれないけど、個人的にはコンテナの学びになってよい記事に仕上がったと思う。調査と執筆とレビューを含めると5人日ぐらいかけている。かけた工数を考えれば当然と言えるかもしれない。
デザイナーさんと契約締結 昨日の続き。デザイナーさんからいただいたワイヤーフレームをレビューして、契約書の叩き台も送付して、先方の所感や意見も伺いながら契約を締結した。基本的にはこちらが提示した契約書の通りに進んだのでとくに揉めることなくうまくいったと言える。顧問のはらさんからデザイナーと契約をするときの要項を事前にヒアリングしていて、その詳細を盛り込めんたこともよかったと思える。サイトデザインをお願いするものの、hugo のテンプレートは私が実装しないといけない。ある意味デザイナーと協調してサイトデザインを構築すると言えるかもしれない。私もそこから学ぶ機会があるだろうし、その過程でできた成果物は hugo のテーマとして oss で公開したい。</description><content>&lt;p>3時に寝て7時に起きた。昨日は連休明け初日なのに2時まで作業していた。開発が落ち着いたので夜に自社のお仕事をする余力が戻ってきたとも言える。&lt;/p>
&lt;h2 id="docker-についてのテックブログ執筆">Docker についてのテックブログ執筆&lt;/h2>
&lt;p>先日から &lt;a href="/diary/diary/posts/2023/0502/#docker-エコシステムの調査">Docker エコシステムの調査&lt;/a> をして、そこでわかったことをテックブログとしてまとめていた。一通り書き終えてマージリクエストを作成して社内レビューを依頼した。当初は &lt;em>「ライブラリとしての Docker とは何か？」&lt;/em> というタイトルで書いていたものの、レビューを経て「ライブラリとしての」という修飾は必要ないことに気付いた。そのまま Docker のコンポーネントのソフトウェアスタックや過去の経緯や現状の雰囲気がわかるような記事にした。Docker を中心としたコンテナプラットフォームと標準化の概要について追っていく記事に仕上がった。インフラに関心をもつ人たちは少ないかもしれないけど、個人的にはコンテナの学びになってよい記事に仕上がったと思う。調査と執筆とレビューを含めると5人日ぐらいかけている。かけた工数を考えれば当然と言えるかもしれない。&lt;/p>
&lt;h2 id="デザイナーさんと契約締結">デザイナーさんと契約締結&lt;/h2>
&lt;p>昨日の続き。デザイナーさんからいただいたワイヤーフレームをレビューして、契約書の叩き台も送付して、先方の所感や意見も伺いながら契約を締結した。基本的にはこちらが提示した契約書の通りに進んだのでとくに揉めることなくうまくいったと言える。顧問のはらさんからデザイナーと契約をするときの要項を事前にヒアリングしていて、その詳細を盛り込めんたこともよかったと思える。サイトデザインをお願いするものの、hugo のテンプレートは私が実装しないといけない。ある意味デザイナーと協調してサイトデザインを構築すると言えるかもしれない。私もそこから学ぶ機会があるだろうし、その過程でできた成果物は hugo のテーマとして oss で公開したい。&lt;/p></content></item><item><title>法人決算を完了</title><link>/diary/posts/2023/0508/</link><pubDate>Mon, 08 May 2023 19:51:57 +0900</pubDate><guid>/diary/posts/2023/0508/</guid><description>1時に寝て7時に起きた。ヤフー防災速報 を設定したら昨日の大雨で次から次へと通知が届いた。状況を注視しておいた方がよいのかもしれないけど、どんどん通知が届くことに驚いた。アプリ自体はよく出来ていると思うのだけど、大雨が強くなっていく過程で様々な通知が届くようになって、通知が届いたところで私はなにかするわけでもないため、徐々に通知を無視するようになってしまって、本当に重要な通知を見逃したりしないかと心配になった。そういう意味で通知設定のカスタマイズが大事なのかもしれない。
法人決算 連休中に申告書の作成は完了していた。8時30分からの e-tax の稼働を待ってマイナンバーカードで署名して電子申告した。すぐに納付情報が返ってくるので pay-easy で法人税と地方法人税の納付をした。その後、紙の決算書を税務署へ提出しにいく。経験則から朝早い時間帯に税務署へ行くと2-3人ぐらいしか訪問者がいないため、ほぼ待ち時間なく窓口の受け付けができる。e-tax のドキュメントには電子申告の受付番号を書けとあるけど、窓口ではいつ電子申告したか日付だけでよいと指示された。おそらくシステムの検索条件に使うだけなのだろう。
本日の9時15分をもって第4期の法人決算を完了した。まだ5月上旬の段階で決算を終えられたので気分がよい。昨年は月末にぎりぎり提出でバタバタしていた。お仕事の区切りが4月末だったというタイミングの良さがこの余裕につながっていると思う。昨年は初めての電子申告だったせいか、1ヶ月後ぐらいに書類の書き方が間違っていると指摘があり、訂正して修正申告することになった。今年はどうだろうか。
ワイヤーフレームのレビュー 先日からコーポレートサイトのデザインをリニューアルしようとデザイナーさんとやり取りしている。最初のワイヤーフレームが出来たので21時から顧問のはらさんとワイヤーフレームのレビューをしていた。他に契約書の叩き台のレビューも兼ねていたので時間がかかって1時間半ほど雑談していた。デザイン変更にあたって、どうしたいという運営者の要件があって、それに対してデザインや訪問者の ui/ux があるので一概にこうだとも言えない。いくつか私が気付いていなかったアイディアも出て、うちみたいな動きのない、しょぼいサイトデザインでも確認事項はいくつも出てくることに気付いた。デザインに対してあれこれ意見が出ること自体はよいことだという。発散した意見をデザイナーさんがどう現実に落とし込んでいくのかが腕の見せ所なんだろう。私はデザインの素人なので要件以外にあまり口出しするつもりはない。一方でどういった内容が要件なのか詳細なのかの境界もよくわかっていないので今回はデザイナーさんと一緒にやり取りしながら学ぶ機会とする。</description><content>&lt;p>1時に寝て7時に起きた。&lt;a href="https://emg.yahoo.co.jp/">ヤフー防災速報&lt;/a> を設定したら昨日の大雨で次から次へと通知が届いた。状況を注視しておいた方がよいのかもしれないけど、どんどん通知が届くことに驚いた。アプリ自体はよく出来ていると思うのだけど、大雨が強くなっていく過程で様々な通知が届くようになって、通知が届いたところで私はなにかするわけでもないため、徐々に通知を無視するようになってしまって、本当に重要な通知を見逃したりしないかと心配になった。そういう意味で通知設定のカスタマイズが大事なのかもしれない。&lt;/p>
&lt;h2 id="法人決算">法人決算&lt;/h2>
&lt;p>連休中に申告書の作成は完了していた。8時30分からの e-tax の稼働を待ってマイナンバーカードで署名して電子申告した。すぐに納付情報が返ってくるので pay-easy で法人税と地方法人税の納付をした。その後、紙の決算書を税務署へ提出しにいく。経験則から朝早い時間帯に税務署へ行くと2-3人ぐらいしか訪問者がいないため、ほぼ待ち時間なく窓口の受け付けができる。e-tax のドキュメントには電子申告の受付番号を書けとあるけど、窓口ではいつ電子申告したか日付だけでよいと指示された。おそらくシステムの検索条件に使うだけなのだろう。&lt;/p>
&lt;p>本日の9時15分をもって第4期の法人決算を完了した。まだ5月上旬の段階で決算を終えられたので気分がよい。昨年は月末にぎりぎり提出でバタバタしていた。お仕事の区切りが4月末だったというタイミングの良さがこの余裕につながっていると思う。昨年は初めての電子申告だったせいか、1ヶ月後ぐらいに書類の書き方が間違っていると指摘があり、訂正して修正申告することになった。今年はどうだろうか。&lt;/p>
&lt;h2 id="ワイヤーフレームのレビュー">ワイヤーフレームのレビュー&lt;/h2>
&lt;p>先日からコーポレートサイトのデザインをリニューアルしようとデザイナーさんとやり取りしている。最初のワイヤーフレームが出来たので21時から顧問のはらさんとワイヤーフレームのレビューをしていた。他に契約書の叩き台のレビューも兼ねていたので時間がかかって1時間半ほど雑談していた。デザイン変更にあたって、どうしたいという運営者の要件があって、それに対してデザインや訪問者の ui/ux があるので一概にこうだとも言えない。いくつか私が気付いていなかったアイディアも出て、うちみたいな動きのない、しょぼいサイトデザインでも確認事項はいくつも出てくることに気付いた。デザインに対してあれこれ意見が出ること自体はよいことだという。発散した意見をデザイナーさんがどう現実に落とし込んでいくのかが腕の見せ所なんだろう。私はデザインの素人なので要件以外にあまり口出しするつもりはない。一方でどういった内容が要件なのか詳細なのかの境界もよくわかっていないので今回はデザイナーさんと一緒にやり取りしながら学ぶ機会とする。&lt;/p></content></item><item><title>契約書作成の効率化</title><link>/diary/posts/2023/0507/</link><pubDate>Sun, 07 May 2023 14:37:48 +0900</pubDate><guid>/diary/posts/2023/0507/</guid><description>3時に寝て8時に起きて午前中はドラクエタクトしてた。午後からオフィスへ行って作業していたものの、今日は一日雨降りでお休みって感じ。
デザイナーさん向けの契約書の叩き台 先日ヒアリングした デザイナーさんにお仕事をお願いするときの要項 を踏まえて契約書の叩き台を作成した。これまで準委任契約の契約書しか作ったことがなかったので初めて請負契約の契約書を作ってみた。たまたま検索していて、中小機構の デザイン支援ツール にデザイナーさん向け契約書のサンプルもあったので目を通して少し参考にした。大半は準委任契約と変わらないので、請負契約に特化した条項、デザインに特化した条項などを追加・修正して作成した。
他社との契約をしているうちに契約内容にあまり関係なく締結する汎用的な条項を基本契約書とし、個別の契約に特化した内容を別紙や明細として別の契約書で取り扱っていることを学んだ。契約書の別紙とは？どういう場面で使用する？ によると、別紙の有無は契約書の効力に影響を与えないものの、契約書をわかりやすくする目的で別紙を作るという。契約書は法律上の文言であったり、冗長でかたい表現が多いため、定型的な条項は幅広い契約で再利用できると想定される。一方で個別の契約ごとに変わる内容と言えば、業務内容、報酬、期間・納期、勤務場所、請求・支払いなどの要項になる。これらだけ別紙にして契約相手と詳細に確認するといった方が、契約書の作成側は基本契約書の内容が頭に入っているから契約書の作成を効率化できる。これまで他社にお仕事をアウトソーシングする機会が少なかったので一から契約書を作っていた。いますぐはできないが、また時間ができたときに自社の基本契約書を策定しようと思う。</description><content>&lt;p>3時に寝て8時に起きて午前中はドラクエタクトしてた。午後からオフィスへ行って作業していたものの、今日は一日雨降りでお休みって感じ。&lt;/p>
&lt;h2 id="デザイナーさん向けの契約書の叩き台">デザイナーさん向けの契約書の叩き台&lt;/h2>
&lt;p>先日ヒアリングした &lt;a href="/diary/diary/posts/2023/0428/#隔週の雑談">デザイナーさんにお仕事をお願いするときの要項&lt;/a> を踏まえて契約書の叩き台を作成した。これまで準委任契約の契約書しか作ったことがなかったので初めて請負契約の契約書を作ってみた。たまたま検索していて、中小機構の &lt;a href="https://www.smrj.go.jp/tool/supporter/soft_asset4/index.html">デザイン支援ツール&lt;/a> にデザイナーさん向け契約書のサンプルもあったので目を通して少し参考にした。大半は準委任契約と変わらないので、請負契約に特化した条項、デザインに特化した条項などを追加・修正して作成した。&lt;/p>
&lt;p>他社との契約をしているうちに契約内容にあまり関係なく締結する汎用的な条項を基本契約書とし、個別の契約に特化した内容を別紙や明細として別の契約書で取り扱っていることを学んだ。&lt;a href="https://biz.moneyforward.com/contract/basic/3127/">契約書の別紙とは？どういう場面で使用する？&lt;/a> によると、別紙の有無は契約書の効力に影響を与えないものの、契約書をわかりやすくする目的で別紙を作るという。契約書は法律上の文言であったり、冗長でかたい表現が多いため、定型的な条項は幅広い契約で再利用できると想定される。一方で個別の契約ごとに変わる内容と言えば、業務内容、報酬、期間・納期、勤務場所、請求・支払いなどの要項になる。これらだけ別紙にして契約相手と詳細に確認するといった方が、契約書の作成側は基本契約書の内容が頭に入っているから契約書の作成を効率化できる。これまで他社にお仕事をアウトソーシングする機会が少なかったので一から契約書を作っていた。いますぐはできないが、また時間ができたときに自社の基本契約書を策定しようと思う。&lt;/p></content></item><item><title>法人決算の続きの続き</title><link>/diary/posts/2023/0506/</link><pubDate>Sat, 06 May 2023 11:49:42 +0900</pubDate><guid>/diary/posts/2023/0506/</guid><description>0時に寝て7時に起きた。竹原テレビ をみながら寝てた。youtube ばかりみていてバカになるんじゃないかと思い始めてきた。
ストレッチ 今週はお休みなものの、私は基本的にオフィスでデスクワークをしていた。言うても所々遊びに出掛けたりもしているので普段よりは座っている時間は短かったはず。腰の負担は低かった。今日の開脚幅は開始前155cmで、ストレッチ後160cmだった。数値もよい。右股関節の可動域が狭い以外は全体として問題なかった。私の普段の生活を振り返ってわかったことの1つは働かなければ体調がよい。働きたくない。
法人決算 午後から法人決算の続き。eltax が稼働していたので次の地方税の申告と納付を行った。
法人住民税 法人県民税 法人市民税 法人事業税 法人事業税 特別法人事業税 手で計算した税金の金額と eltax の帳票に入力してバリデーションチェックされた金額が一致していることを確認できた。帳票を作成したらマイナンバーカードの公的個人認証サービスを使って電子署名して申告する。申告した後に納付情報の取得リクエストを送って返ってきた納付情報をみて pay-easy で納付する。納付を終えたらその明細を会計システムと連動して3月31日の未払法人税の明細に対して消し込みを行う。1時間ほどで地方税の申告と納付と会計システムへの記帳を完了した。
地方税を確定した上で別表四と別表五を確定させて決算書の作成を完了した。これで法人税の算出は完了。あとは手間がかかるだけのコツコツ記入していけばいいだけの書類のみになる。
法人事業概況説明書 勘定科目の内訳書 預貯金等 売掛金(未収入金) 仮払金(前渡金) 買掛金(未払金・未払費用) 仮受金(前受金・預り金) 役員報酬⼿当等及び⼈件費 地代家賃等の内訳書・⼯業所有権等の使⽤料 雑益・雑損失等 今日は e-tax が休止なので提出できないものの、すべての帳票を作成完了にした。決算書 (財務諸表) は xml/xbrl, csv での添付が可能なものの pdf 添付が許可されていないため、決算書だけ税務署へ行って紙で提出する必要がある。
電子データ（XML形式又はXBRL形式）による提出が可能な添付書類（例：法人税申告の財務諸表及び勘定科目内訳明細書、所得税申告の青色申告決算書及び譲渡所得の内訳書など）
イメージデータによる提出の対象となる添付書類には、どのようなものがありますか。
freee 申告の有償サービスを使えば会計システムと連動して電子申告できる。そのためだけに24,800円 (売上換算だと約25万円) を払う価値があるかどうか、まだ迷っている。というのは、法人決算は年に1回だけで丸1日もあれば完了する作業だし、業務のワークフローを思い出すために自分でやるのもいいなと考えている。決算書を印刷して税務署と往復するのは30分ぐらいの工数だが、そんなところに注意を払わずにお金を払ったらいいやんという意見はあるかもしれない。私もそうかなと思う気持ちもある。</description><content>&lt;p>0時に寝て7時に起きた。&lt;a href="https://www.youtube.com/channel/UCQXwvYkiHyEfzV66-fols3w">竹原テレビ&lt;/a> をみながら寝てた。youtube ばかりみていてバカになるんじゃないかと思い始めてきた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週はお休みなものの、私は基本的にオフィスでデスクワークをしていた。言うても所々遊びに出掛けたりもしているので普段よりは座っている時間は短かったはず。腰の負担は低かった。今日の開脚幅は開始前155cmで、ストレッチ後160cmだった。数値もよい。右股関節の可動域が狭い以外は全体として問題なかった。私の普段の生活を振り返ってわかったことの1つは働かなければ体調がよい。働きたくない。&lt;/p>
&lt;h2 id="法人決算">法人決算&lt;/h2>
&lt;p>午後から法人決算の続き。&lt;a href="https://www.eltax.lta.go.jp/">eltax&lt;/a> が稼働していたので次の地方税の申告と納付を行った。&lt;/p>
&lt;ul>
&lt;li>法人住民税
&lt;ul>
&lt;li>法人県民税&lt;/li>
&lt;li>法人市民税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>法人事業税
&lt;ul>
&lt;li>法人事業税&lt;/li>
&lt;li>特別法人事業税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>手で計算した税金の金額と eltax の帳票に入力してバリデーションチェックされた金額が一致していることを確認できた。帳票を作成したらマイナンバーカードの公的個人認証サービスを使って電子署名して申告する。申告した後に納付情報の取得リクエストを送って返ってきた納付情報をみて &lt;a href="http://www.pay-easy.jp/">pay-easy&lt;/a> で納付する。納付を終えたらその明細を会計システムと連動して3月31日の未払法人税の明細に対して消し込みを行う。1時間ほどで地方税の申告と納付と会計システムへの記帳を完了した。&lt;/p>
&lt;p>地方税を確定した上で別表四と別表五を確定させて決算書の作成を完了した。これで法人税の算出は完了。あとは手間がかかるだけのコツコツ記入していけばいいだけの書類のみになる。&lt;/p>
&lt;ul>
&lt;li>法人事業概況説明書&lt;/li>
&lt;li>勘定科目の内訳書
&lt;ul>
&lt;li>預貯金等&lt;/li>
&lt;li>売掛金(未収入金)&lt;/li>
&lt;li>仮払金(前渡金)&lt;/li>
&lt;li>買掛金(未払金・未払費用)&lt;/li>
&lt;li>仮受金(前受金・預り金)&lt;/li>
&lt;li>役員報酬⼿当等及び⼈件費&lt;/li>
&lt;li>地代家賃等の内訳書・⼯業所有権等の使⽤料&lt;/li>
&lt;li>雑益・雑損失等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>今日は e-tax が休止なので提出できないものの、すべての帳票を作成完了にした。決算書 (財務諸表) は xml/xbrl, csv での添付が可能なものの pdf 添付が許可されていないため、決算書だけ税務署へ行って紙で提出する必要がある。&lt;/p>
&lt;blockquote>
&lt;p>電子データ（XML形式又はXBRL形式）による提出が可能な添付書類（例：法人税申告の財務諸表及び勘定科目内訳明細書、所得税申告の青色申告決算書及び譲渡所得の内訳書など）&lt;/p>
&lt;p>&lt;a href="https://www.e-tax.nta.go.jp/toiawase/qa/imagedata/03.htm">イメージデータによる提出の対象となる添付書類には、どのようなものがありますか。&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>freee 申告の有償サービスを使えば会計システムと連動して電子申告できる。そのためだけに24,800円 (売上換算だと約25万円) を払う価値があるかどうか、まだ迷っている。というのは、法人決算は年に1回だけで丸1日もあれば完了する作業だし、業務のワークフローを思い出すために自分でやるのもいいなと考えている。決算書を印刷して税務署と往復するのは30分ぐらいの工数だが、そんなところに注意を払わずにお金を払ったらいいやんという意見はあるかもしれない。私もそうかなと思う気持ちもある。&lt;/p></content></item><item><title>バランスチェアを購入した</title><link>/diary/posts/2023/0505/</link><pubDate>Fri, 05 May 2023 11:54:30 +0900</pubDate><guid>/diary/posts/2023/0505/</guid><description>0時に寝て何度か起きて6時半に起きた。余裕のある生活を送っていると朝もすんなり起きれる。たぶん普段働き過ぎなんやな。今日は朝もお昼もご飯食べてないが、とくに気にならなくて余裕があるとお腹も空かないことに気付いた。
ジモティーで椅子の受け取り 以前コワーキングのオンラインイベントで ジモティーが熱い と聞いてから ジモティー にアカウント登録して、たまに眺めたりしていた。実家のオフィスで使う椅子をジモティーで探そうと思って検索していた。いくつか候補をみつけて最も近所で受け渡しが簡単そうだったのがバランスチェアだった。実家で使おうと思って購入を決めた。ジモティーで売買をやり取りするのは初めてだったので勝手がわからないものの、出品者とメッセージをやり取りして翌日には受け取りの待ち合わせをすることで話しが付いた。振り込みとか発送とかそういう概念がなくて、直接会って現物交換するときに現金で支払うという、なんというか、昔ながらの個人間取り引きになる。一周まわって新しい。
出品者が10年以上前に購入してブランドロゴがいまとは違うため、類似品と正規品との判断がつかないということで明言はしていないものの、おそらく VARIER MULTI ではないかと思われる。椅子じゃなくても10年以上使うとなにかしら劣化や変色などがみられると思う。もちろんこの椅子も新品と比較すればいくらかはそうだろうけど、10年以上使ってきたという歴史に対して色褪せない質感を醸しているのでおそらくはもともとの素材や構造が優れているのだと思う。
出品者の人もよい人で待ち合わせして受け取り／支払いの体験もよかった。一周まわって新しいと書いたのは、人と人のコミュニケーションの原点のようなものがある。ヤフオクやメルカリだとシステムとのやり取りだけで完結するので相対的にそういったものを思い出した。戻ってきて早速使ってみる。見た目の質感の良さの通り、座った感じの、フィットするのにまったくブレない剛性感もしっくりきて気に入った。当初は実家で使おうと思っていたものの、すごく気に入ったので現オフィスでセカンドチェアとして使うことに方針変更した。
姿勢もよくなりそうだし、背もたれがないので作業に集中したいときのルーチンにもよさそうに思う。
しくじり先生 前回の青春編 をみておもしろかったので続編の 竹原慎二先生「５０歳過ぎてもケンカを売られ続けてバリしんどい先生」完結編 をみた。ガチンコ時代の裏話などもあって懐かしくておもしろかった。またガチンコ時代の教え子でプロボクサーからは引退したものの、いまも仲良くしているメンバーもいて、そういうのもいろんな人の縁で社会がまわっているなにかを感じられてよい演出だったと思う。竹原氏は見た目怖いし、実際に強いし、無礼に対する態度も威圧的なものの、意外？と精神的には普通の人とあまり変わらない雰囲気だった。格闘技が強いかどうかよりも、精神を鍛えることの難しさや大事さが伺えた。見た目の強さよりも内面の強さというか、若い頃はあまりそういうことがわからない気がする。多くの人がある程度社会で揉まれていくうちになんとなく理解していくのではないかと思う。</description><content>&lt;p>0時に寝て何度か起きて6時半に起きた。余裕のある生活を送っていると朝もすんなり起きれる。たぶん普段働き過ぎなんやな。今日は朝もお昼もご飯食べてないが、とくに気にならなくて余裕があるとお腹も空かないことに気付いた。&lt;/p>
&lt;h2 id="ジモティーで椅子の受け取り">ジモティーで椅子の受け取り&lt;/h2>
&lt;p>以前コワーキングのオンラインイベントで &lt;a href="/diary/diary/posts/2023/0118/#コワーキングのオンラインイベント">ジモティーが熱い&lt;/a> と聞いてから &lt;a href="https://jmty.jp/">ジモティー&lt;/a> にアカウント登録して、たまに眺めたりしていた。実家のオフィスで使う椅子をジモティーで探そうと思って検索していた。いくつか候補をみつけて最も近所で受け渡しが簡単そうだったのがバランスチェアだった。実家で使おうと思って購入を決めた。ジモティーで売買をやり取りするのは初めてだったので勝手がわからないものの、出品者とメッセージをやり取りして翌日には受け取りの待ち合わせをすることで話しが付いた。振り込みとか発送とかそういう概念がなくて、直接会って現物交換するときに現金で支払うという、なんというか、昔ながらの個人間取り引きになる。一周まわって新しい。&lt;/p>
&lt;p>出品者が10年以上前に購入してブランドロゴがいまとは違うため、類似品と正規品との判断がつかないということで明言はしていないものの、おそらく &lt;a href="https://www.varierfurniture.com/en/multi/1700101191110">VARIER MULTI&lt;/a> ではないかと思われる。椅子じゃなくても10年以上使うとなにかしら劣化や変色などがみられると思う。もちろんこの椅子も新品と比較すればいくらかはそうだろうけど、10年以上使ってきたという歴史に対して色褪せない質感を醸しているのでおそらくはもともとの素材や構造が優れているのだと思う。&lt;/p>
&lt;p>出品者の人もよい人で待ち合わせして受け取り／支払いの体験もよかった。一周まわって新しいと書いたのは、人と人のコミュニケーションの原点のようなものがある。ヤフオクやメルカリだとシステムとのやり取りだけで完結するので相対的にそういったものを思い出した。戻ってきて早速使ってみる。見た目の質感の良さの通り、座った感じの、フィットするのにまったくブレない剛性感もしっくりきて気に入った。当初は実家で使おうと思っていたものの、すごく気に入ったので現オフィスでセカンドチェアとして使うことに方針変更した。&lt;/p>
&lt;p>姿勢もよくなりそうだし、背もたれがないので作業に集中したいときのルーチンにもよさそうに思う。&lt;/p>
&lt;h2 id="しくじり先生">しくじり先生&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0502/#しくじり先生">前回の青春編&lt;/a> をみておもしろかったので続編の &lt;a href="https://www.tv-asahi.co.jp/shikujiri/backnumber2/0100/">竹原慎二先生「５０歳過ぎてもケンカを売られ続けてバリしんどい先生」完結編&lt;/a> をみた。ガチンコ時代の裏話などもあって懐かしくておもしろかった。またガチンコ時代の教え子でプロボクサーからは引退したものの、いまも仲良くしているメンバーもいて、そういうのもいろんな人の縁で社会がまわっているなにかを感じられてよい演出だったと思う。竹原氏は見た目怖いし、実際に強いし、無礼に対する態度も威圧的なものの、意外？と精神的には普通の人とあまり変わらない雰囲気だった。格闘技が強いかどうかよりも、精神を鍛えることの難しさや大事さが伺えた。見た目の強さよりも内面の強さというか、若い頃はあまりそういうことがわからない気がする。多くの人がある程度社会で揉まれていくうちになんとなく理解していくのではないかと思う。&lt;/p></content></item><item><title>法人決算の続き</title><link>/diary/posts/2023/0504/</link><pubDate>Thu, 04 May 2023 08:24:43 +0900</pubDate><guid>/diary/posts/2023/0504/</guid><description>0時に寝て何度か起きて6時過ぎに起きた。休日は朝だらだらしてオフィスへ行くのが9-10時ぐらいになることが多いのだけど、今日は普通に8時過ぎに行けた。
法人決算 朝から法人決算の続き。昨日たまたま消費税の計算をして、祝日やのに e-tax 稼働しているんやと思いながら申告した。これまで休日や祝日は稼働していなかった気がするので時代の変化にあわせてシステムはなるべく24時間稼働するように少しずつ変わってきている。今日も法人決算の続きをやっていて、課税所得を確認して、カテゴリ的には3つに分類される法人3税と呼ばれる税金を算出した。具体的には6つの税金を算出しないといけない。
法人税 (=&amp;gt; 国税 =&amp;gt; e-tax) 法人税 地方法人税 法人住民税 (=&amp;gt; 地方税 =&amp;gt; eltax) 法人県民税 法人市民税 法人事業税 (=&amp;gt; 地方税 =&amp;gt; eltax) 法人事業税 特別法人事業税 過去の法人決算の経験からまず法人住民税と法人事業税を確定させてから法人決算の申告をすべきだというプラクティスがある。というのは、法人住民税と法人事業税の数値になんらかの誤りがあると法人決算で提出する別表の数字も修正しないといけないため、先に地方税を確定させた方が手戻りを少なくできる可能性が高い。電子申請するとそれぞれの書類の数値のバリデーションが機能するので手計算や手入力で誤りがあったときに発見できる可能性がある。これは電子申請をするメリットの1つでもある。
地方税を管轄するのが eltax で国税を管轄するのが e-tax で別システムになる。いまとなっては、事前にチェックしておけばよかったなと思うところだが、あとの祭り。e-tax は5月3-4日が稼働していて5-7日が休止している。eltax は5月3-5日が休止していて6-7日が稼働しているというスケジュールになっていた。双方のシステムが稼働していれば今日中に終えられたものが、なんともちぐはぐなスケジュールで申告を完了させるのは来週以降に持ち越すことになる。また来年やるときはこのそれぞれのシステムの稼働スケジュールを事前にチェックして法人決算の作業日程を決めるように法人決算の issue に書き込んでおいた。来年はもっとうまくやる。
e-tax e-Taxの利用可能時間 eltax 令和5年度の休日運用日 今日のところは法人3税の税金を算出し終えて、それらと関係ない別表の大半を作成した。基本的には決算の試算表から数値を転記したり、特例措置の申請のための書類を作ったりでなにも難しくない。
iijmio と iphone で作るモバイル wifi ルーター 今年に入ってから 実家のオフィス化 の準備を着々と進めている。晩年は足が不自由だった祖父が生活できるよう、倉庫の一部を改築して車椅子でも生活できるような部屋になっていて、ある種の離れのようなスペースになっている。祖父が他界してからは誰も使っていない。トイレもお風呂もキッチンもついていて広さで言えば14畳ぐらいある。これまで使いにくかった理由は2つあってエアコンとインターネットがなかった。この前、母にお願いしてエアコンを購入してもらい、つい先日、設置が完了したらしい。
インターネットの回線をひくことも検討していたが、どうやら5000円/月ぐらいかかることがわかってきた。母はインターネットを必要としていないので月1回ぐらいしか使わないのに5000円も支払うのはもったいないなと一旦ストップしていた。スマートフォンのテザリングでお仕事できないわけではないから当初はそれでもいいかと考えていた。私の個人のスマホとインターネット回線は iijmio を使っていて iij さん好きなので同じように pocket wifi 的なものはないのかな？と調べたら正にそういう記事をみつけた。
格安！IIJmioでポケットWiFiを作る！料金・手順・注意点まとめ よくよく考えたらデータ専用の sim を購入したらあとはモバイル wifi ルーターだけあればよいことに気付いて、それって iphone でできるやんということに気付いて、過去に使っていた古い iphone 11 を再利用できることに気付いた。さらにいまは esim という物理 sim を必要としないソフトウェアベースの sim もあるようで月額の料金も esim の方が安い。 音声通話なしのデータ専用プランで税込で次の金額になる。さらに使わなかったらデータ量は翌月以降に繰越できる。プランによって繰越できる期間が異なる。例えば2GiBなら翌月末まで繰越できる。繰越という概念はたまにしか使わない私の用途にぴったりでひとまず2GiBプランを選択してお試し運用してみることにした。</description><content>&lt;p>0時に寝て何度か起きて6時過ぎに起きた。休日は朝だらだらしてオフィスへ行くのが9-10時ぐらいになることが多いのだけど、今日は普通に8時過ぎに行けた。&lt;/p>
&lt;h2 id="法人決算">法人決算&lt;/h2>
&lt;p>朝から法人決算の続き。昨日たまたま消費税の計算をして、祝日やのに e-tax 稼働しているんやと思いながら申告した。これまで休日や祝日は稼働していなかった気がするので時代の変化にあわせてシステムはなるべく24時間稼働するように少しずつ変わってきている。今日も法人決算の続きをやっていて、課税所得を確認して、カテゴリ的には3つに分類される法人3税と呼ばれる税金を算出した。具体的には6つの税金を算出しないといけない。&lt;/p>
&lt;ul>
&lt;li>法人税 (=&amp;gt; 国税 =&amp;gt; e-tax)
&lt;ul>
&lt;li>法人税&lt;/li>
&lt;li>地方法人税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>法人住民税 (=&amp;gt; 地方税 =&amp;gt; eltax)
&lt;ul>
&lt;li>法人県民税&lt;/li>
&lt;li>法人市民税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>法人事業税 (=&amp;gt; 地方税 =&amp;gt; eltax)
&lt;ul>
&lt;li>法人事業税&lt;/li>
&lt;li>特別法人事業税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>過去の法人決算の経験からまず法人住民税と法人事業税を確定させてから法人決算の申告をすべきだというプラクティスがある。というのは、法人住民税と法人事業税の数値になんらかの誤りがあると法人決算で提出する別表の数字も修正しないといけないため、先に地方税を確定させた方が手戻りを少なくできる可能性が高い。電子申請するとそれぞれの書類の数値のバリデーションが機能するので手計算や手入力で誤りがあったときに発見できる可能性がある。これは電子申請をするメリットの1つでもある。&lt;/p>
&lt;p>地方税を管轄するのが &lt;a href="https://www.eltax.lta.go.jp/">eltax&lt;/a> で国税を管轄するのが &lt;a href="https://www.e-tax.nta.go.jp/">e-tax&lt;/a> で別システムになる。いまとなっては、事前にチェックしておけばよかったなと思うところだが、あとの祭り。e-tax は5月3-4日が稼働していて5-7日が休止している。eltax は5月3-5日が休止していて6-7日が稼働しているというスケジュールになっていた。双方のシステムが稼働していれば今日中に終えられたものが、なんともちぐはぐなスケジュールで申告を完了させるのは来週以降に持ち越すことになる。また来年やるときはこのそれぞれのシステムの稼働スケジュールを事前にチェックして法人決算の作業日程を決めるように法人決算の issue に書き込んでおいた。来年はもっとうまくやる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.e-tax.nta.go.jp/info_center/index.htm">e-tax e-Taxの利用可能時間&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.eltax.lta.go.jp/news/07638">eltax 令和5年度の休日運用日&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>今日のところは法人3税の税金を算出し終えて、それらと関係ない別表の大半を作成した。基本的には決算の試算表から数値を転記したり、特例措置の申請のための書類を作ったりでなにも難しくない。&lt;/p>
&lt;h2 id="iijmio-と-iphone-で作るモバイル-wifi-ルーター">iijmio と iphone で作るモバイル wifi ルーター&lt;/h2>
&lt;p>今年に入ってから &lt;a href="/diary/diary/posts/2023/0321/#実家の出張所オフィスの準備">実家のオフィス化&lt;/a> の準備を着々と進めている。晩年は足が不自由だった祖父が生活できるよう、倉庫の一部を改築して車椅子でも生活できるような部屋になっていて、ある種の離れのようなスペースになっている。祖父が他界してからは誰も使っていない。トイレもお風呂もキッチンもついていて広さで言えば14畳ぐらいある。これまで使いにくかった理由は2つあってエアコンとインターネットがなかった。この前、母にお願いしてエアコンを購入してもらい、つい先日、設置が完了したらしい。&lt;/p>
&lt;p>インターネットの回線をひくことも検討していたが、どうやら5000円/月ぐらいかかることがわかってきた。母はインターネットを必要としていないので月1回ぐらいしか使わないのに5000円も支払うのはもったいないなと一旦ストップしていた。スマートフォンのテザリングでお仕事できないわけではないから当初はそれでもいいかと考えていた。私の個人のスマホとインターネット回線は &lt;a href="https://www.iijmio.jp/">iijmio&lt;/a> を使っていて iij さん好きなので同じように pocket wifi 的なものはないのかな？と調べたら正にそういう記事をみつけた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mobile.inest-inc.co.jp/iijmio-pocket-wifi/">格安！IIJmioでポケットWiFiを作る！料金・手順・注意点まとめ&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>よくよく考えたらデータ専用の sim を購入したらあとはモバイル wifi ルーターだけあればよいことに気付いて、それって iphone でできるやんということに気付いて、過去に使っていた古い iphone 11 を再利用できることに気付いた。さらにいまは &lt;a href="https://www.iijmio.jp/gigaplan/esim/">esim&lt;/a> という物理 sim を必要としないソフトウェアベースの sim もあるようで月額の料金も esim の方が安い。
音声通話なしのデータ専用プランで税込で次の金額になる。さらに使わなかったらデータ量は翌月以降に繰越できる。プランによって繰越できる期間が異なる。例えば2GiBなら翌月末まで繰越できる。繰越という概念はたまにしか使わない私の用途にぴったりでひとまず2GiBプランを選択してお試し運用してみることにした。&lt;/p>
&lt;ul>
&lt;li>1GiB: 165円/月&lt;/li>
&lt;li>2GiB: 440円/月&lt;/li>
&lt;li>5GiB: 660円/月&lt;/li>
&lt;li>10GiB: 1,100円/月&lt;/li>
&lt;li>20GiB: 1,650円/月&lt;/li>
&lt;/ul>
&lt;p>esim というソフトウェアベースのものだと、申し込みして5分後に設定できましたというメールが届き、すぐにアクティベートして iphone 11 に esim の設定をしたら10分後にはインターネットに接続できるようになった。その後 apn の設定を行ってテザリングもできるようになって、30分後には iphone 11 をモバイル wifi ルーターとして macbook からインターネットにアクセスできるかの疎通確認を終えた。&lt;/p>
&lt;p>つまりソフトウェアベースで業務を行うことのワークフローの効率が半端なく高い。これが物理 sim なら数人の人手と待ち時間がかかることは容易に想像できる。物理的にしかできなかったことをソフトウェアベースにしてワークフローを洗練化させることの強力さを実感した。常々、私が課題管理の文脈でコミュニケーションコストを減らせれば生産性が上がると開発者に啓蒙していることと同じで自分がやろうとしていることの概念を追体験するような経験となった。ワークフローの効率を極端に落とすのは人間である。&lt;/p></content></item><item><title>第4期の法人決算に着手</title><link>/diary/posts/2023/0503/</link><pubDate>Wed, 03 May 2023 09:29:26 +0900</pubDate><guid>/diary/posts/2023/0503/</guid><description>0時に寝て何度か起きて7時に起きてドラクエタクトのランクマッチやってた。
法人決算 朝から着手した。過去の日記から 第3期の法人決算に着手した のは5月5日だったらしい。この情報だけでも昨年よりは体調がよく、いまの業務に集中できていることが伺える。過去3回分の法人決算のノウハウがあるから私にとって法人決算はなんら難しくない、ただの作業になる。しかし、こういった面倒なだけの事務手続きをいつ取り組めるかというのはモチベーション管理の視点からはとても大きな意味をもつように、年齢を重ねてから思うようになった。というのは本気を出せば数時間で終えるものの、あまり楽しい作業ではないので、他の楽しい開発や調べものに心を奪われがちになる。たった数時間なのだから先に事務手続きをやってから他の楽しいことやればいいやんと頭ではわかっているものの、それができるかどうかがモチベーション管理の難しいところ。連休の初日からそれができるのだから調子がよいのだろうと考えられる。
消費税の申告 法人決算と消費税の申告は同じタイミングで行うものの、それぞれの申告は独立している。消費税は未払金として決算書には記載する必要があるので普通にやると、法人決算の前に消費税の申告をやるという手順になるはず。昨年は3期目で免税事業者から課税事業者へと移り、初めての消費税申告でやや手間取ったが、今回は2回目なので昨年のノウハウがあって1.5時間もあれば完了した。昨年のメモを見返しながら課題管理システムに手順や要項をメモしながらやっているので実質1時間もあればできる。こうやって作業手順を洗練させていくのが課題管理的なやり方。昨年は消費税の算出と申告と会計処理を2日に分けて別々のタイミングで行っていた。会計システムに振替伝票を登録するやり方なども初めてでよくわからなかった。しかし、今年は全体像も手順もわかっているのでこれらの作業をまとめて完了できた。よい感じ。
パワーランチ 大学の同級生の友だちが実家に戻ってきた機会にオフィスを案内してお昼ご飯を食べて雑談してきた。本当は昨年末に予定していたが、年末休み前に 父の訃報 があって先送りしていた。引っ越してから知人がオフィスへ来た機会は初めてかな。お昼ご飯食べてカフェで雑談してなんやらかんやらで3時間ほど話していた。ざっくばらんに近況やキャリアや起業についての話しをしていた。友だちの会社は外資系なのでリストラが敢行されているが、その友だちはビジネスに近い方の業務をやっていて、そういう人たちはリストラされていないらしい。リストラされているのは新しいビジネスの種としてやってたプロジェクトのメンバーでそれはベテラン／新参に関係なくリストラされているそうなので外資の厳しさを伺える。あとはお仕事のパフォーマンスがよくない新参者がリストラされているのはそうらしい。
50歳のキャリアどうするといった話しをしていて、いまの会社でずっと働くという選択肢もある。一方で40歳を超えると転職はとても選択肢が限られるというのは私の経験からもそうで、おそらく50歳はさらに転職の選択肢が限定されるだろうと推測する。そうなると、起業するという選択肢もあるが、そういった将来のキャリア観をお互いに話していた。私からは誰にでも言っていることだけど、知り合いのスタートアップに転職するよりも自分で会社を作って好き勝手やるのが楽しいよとお奨めしておいた。
きんとん さんでシャトーブリアン定食 (2,600円) を食べた。ヒレの中心部分の柔らかい部分をシャトーブリアンと呼ぶらしい。とんかつの種類で言えばヒレカツに分類される。前から気になっていたメニューだったので祝日だし接待だしと良縁も重なって食べてきた。岩塩、わさび醤油、とんかつソースという3つのタレを使い分けられるところもよい。値が張るし、おいしかったし、見栄えもよいので接待にもよいメニューだと思う。食べログのとんかつ百名店[2022]の1つ。
これまで私はロースカツ派でヒレカツというのをあまり食べてこなかった。カツ丼も好きだが、通常はロースカツだと思う。東京へ出張したときに とん金 さんで食べたヒレカツがおいしかった。金曜日のランチがヒレカツ定食 (1,200円) になる。肉の暑さと柔らかさではきんとんさんのヒレカツに負けないインパクトがあったように思う。食べログの定食百名店[2021]の1つ。それ以来ヒレカツもおいしいなと思うようになってきた。加齢によって脂身をあまり食べられなくなったのもあるのかもしれない。</description><content>&lt;p>0時に寝て何度か起きて7時に起きてドラクエタクトのランクマッチやってた。&lt;/p>
&lt;h2 id="法人決算">法人決算&lt;/h2>
&lt;p>朝から着手した。過去の日記から &lt;a href="/diary/diary/posts/2022/0505/">第3期の法人決算に着手した&lt;/a> のは5月5日だったらしい。この情報だけでも昨年よりは体調がよく、いまの業務に集中できていることが伺える。過去3回分の法人決算のノウハウがあるから私にとって法人決算はなんら難しくない、ただの作業になる。しかし、こういった面倒なだけの事務手続きをいつ取り組めるかというのはモチベーション管理の視点からはとても大きな意味をもつように、年齢を重ねてから思うようになった。というのは本気を出せば数時間で終えるものの、あまり楽しい作業ではないので、他の楽しい開発や調べものに心を奪われがちになる。たった数時間なのだから先に事務手続きをやってから他の楽しいことやればいいやんと頭ではわかっているものの、それができるかどうかがモチベーション管理の難しいところ。連休の初日からそれができるのだから調子がよいのだろうと考えられる。&lt;/p>
&lt;h2 id="消費税の申告">消費税の申告&lt;/h2>
&lt;p>法人決算と消費税の申告は同じタイミングで行うものの、それぞれの申告は独立している。消費税は未払金として決算書には記載する必要があるので普通にやると、法人決算の前に消費税の申告をやるという手順になるはず。昨年は3期目で免税事業者から課税事業者へと移り、初めての消費税申告でやや手間取ったが、今回は2回目なので昨年のノウハウがあって1.5時間もあれば完了した。昨年のメモを見返しながら課題管理システムに手順や要項をメモしながらやっているので実質1時間もあればできる。こうやって作業手順を洗練させていくのが課題管理的なやり方。昨年は消費税の算出と申告と会計処理を2日に分けて別々のタイミングで行っていた。会計システムに振替伝票を登録するやり方なども初めてでよくわからなかった。しかし、今年は全体像も手順もわかっているのでこれらの作業をまとめて完了できた。よい感じ。&lt;/p>
&lt;h2 id="パワーランチ">パワーランチ&lt;/h2>
&lt;p>大学の同級生の友だちが実家に戻ってきた機会にオフィスを案内してお昼ご飯を食べて雑談してきた。本当は昨年末に予定していたが、年末休み前に &lt;a href="/diary/diary/posts/2022/1226/">父の訃報&lt;/a> があって先送りしていた。引っ越してから知人がオフィスへ来た機会は初めてかな。お昼ご飯食べてカフェで雑談してなんやらかんやらで3時間ほど話していた。ざっくばらんに近況やキャリアや起業についての話しをしていた。友だちの会社は外資系なのでリストラが敢行されているが、その友だちはビジネスに近い方の業務をやっていて、そういう人たちはリストラされていないらしい。リストラされているのは新しいビジネスの種としてやってたプロジェクトのメンバーでそれはベテラン／新参に関係なくリストラされているそうなので外資の厳しさを伺える。あとはお仕事のパフォーマンスがよくない新参者がリストラされているのはそうらしい。&lt;/p>
&lt;p>50歳のキャリアどうするといった話しをしていて、いまの会社でずっと働くという選択肢もある。一方で40歳を超えると転職はとても選択肢が限られるというのは私の経験からもそうで、おそらく50歳はさらに転職の選択肢が限定されるだろうと推測する。そうなると、起業するという選択肢もあるが、そういった将来のキャリア観をお互いに話していた。私からは誰にでも言っていることだけど、知り合いのスタートアップに転職するよりも自分で会社を作って好き勝手やるのが楽しいよとお奨めしておいた。&lt;/p>
&lt;p>&lt;a href="https://tonkatsu-kinton.business.site/">きんとん&lt;/a> さんでシャトーブリアン定食 (2,600円) を食べた。ヒレの中心部分の柔らかい部分をシャトーブリアンと呼ぶらしい。とんかつの種類で言えばヒレカツに分類される。前から気になっていたメニューだったので祝日だし接待だしと良縁も重なって食べてきた。岩塩、わさび醤油、とんかつソースという3つのタレを使い分けられるところもよい。値が張るし、おいしかったし、見栄えもよいので接待にもよいメニューだと思う。食べログのとんかつ百名店[2022]の1つ。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0503_kinton.jpg"/>
&lt;/figure>
&lt;p>これまで私はロースカツ派でヒレカツというのをあまり食べてこなかった。カツ丼も好きだが、通常はロースカツだと思う。東京へ出張したときに &lt;a href="https://tabelog.com/tokyo/A1316/A131603/13025438/">とん金&lt;/a> さんで食べたヒレカツがおいしかった。金曜日のランチがヒレカツ定食 (1,200円) になる。肉の暑さと柔らかさではきんとんさんのヒレカツに負けないインパクトがあったように思う。食べログの定食百名店[2021]の1つ。それ以来ヒレカツもおいしいなと思うようになってきた。加齢によって脂身をあまり食べられなくなったのもあるのかもしれない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0503_tonkin.jpg"/>
&lt;/figure></content></item><item><title>飛び石のお仕事</title><link>/diary/posts/2023/0502/</link><pubDate>Tue, 02 May 2023 19:02:31 +0900</pubDate><guid>/diary/posts/2023/0502/</guid><description>0時に寝て何度か起きて7時に起きた。休んでもよかったんだけど、休む理由がないので飛び石でお仕事することにした。
docker エコシステムの調査 少し前に docker をライブラリとして使って運用ツールを作った 。その内容をテックブログに書こうと思って docker のソフトウェアスタックやアーキテクチャの背景を調べ直していた。もっとたくさんいろんな記事を読んだのだけど、次の記事とそこから辿れるものを読むとよいだろうと思う。
Docker社がエンタープライズ事業を譲渡した今、Dockerの父が思うこと The differences between Docker, containerd, CRI-O and runc Red Hat, Google Engineers Work on a Way for Kubernetes to Run Containers Without Docker コンテナに関して cri と oci という2つの標準化があることを学び、その実装として docker 社が使っているツールに関係があるのが次の3つになる。おもしろいことにすべて docker 社のリポジトリにはなく、oss として然るべき所管の organization にリポジトリがある。
https://github.com/moby/moby https://github.com/opencontainers/runc https://github.com/containerd/containerd すべて docker 社がオリジナルを作って、いまも moby は docker 社が主体となって開発を継続しているだろうけれど、コンテナの実行環境のプラットフォームは k8s に取って変わられ、cri のコンテナランタイムとしての containerd があれば moby は docker daemon や docker engine のためのツールでしかなくなっている。当初 docker と moby を分割したのは、docker を開発ツール、moby を infrastructure にするという判断の下、moby を k8s のようなプラットフォームにしたかったはずである。しかし、結果的にその標準化競争に破れ containerd があれば dockerd daemon は不要になったとも解釈できる。docker という名前はコンテナのエコシステムにおいて docker 社が提供するコマンドラインやプロダクトの総称としての名前でしかなくなってしまっていて、一世を風靡した docker というパッケージングシステムの開発元に同情してしまう感もある。いまの docker engine は docker daemon と containerd の2つの daemon を起動していて docker 社としては微妙なアーキテクチャになっているのではないかと推測する。とくに swarm なんか最早削除したいだろう。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。休んでもよかったんだけど、休む理由がないので飛び石でお仕事することにした。&lt;/p>
&lt;h2 id="docker-エコシステムの調査">docker エコシステムの調査&lt;/h2>
&lt;p>少し前に &lt;a href="/diary/diary/posts/2023/0327/">docker をライブラリとして使って運用ツールを作った&lt;/a> 。その内容をテックブログに書こうと思って docker のソフトウェアスタックやアーキテクチャの背景を調べ直していた。もっとたくさんいろんな記事を読んだのだけど、次の記事とそこから辿れるものを読むとよいだろうと思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.inductor.me/entry/2019/11/22/072353">Docker社がエンタープライズ事業を譲渡した今、Dockerの父が思うこと&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.tutorialworks.com/difference-docker-containerd-runc-crio-oci/">The differences between Docker, containerd, CRI-O and runc&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://thenewstack.io/oci-building-way-kubernetes-run-containers-without-docker/">Red Hat, Google Engineers Work on a Way for Kubernetes to Run Containers Without Docker&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>コンテナに関して cri と oci という2つの標準化があることを学び、その実装として docker 社が使っているツールに関係があるのが次の3つになる。おもしろいことにすべて docker 社のリポジトリにはなく、oss として然るべき所管の organization にリポジトリがある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/moby/moby">https://github.com/moby/moby&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/opencontainers/runc">https://github.com/opencontainers/runc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/containerd/containerd">https://github.com/containerd/containerd&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>すべて docker 社がオリジナルを作って、いまも moby は docker 社が主体となって開発を継続しているだろうけれど、コンテナの実行環境のプラットフォームは k8s に取って変わられ、cri のコンテナランタイムとしての containerd があれば moby は docker daemon や docker engine のためのツールでしかなくなっている。当初 docker と moby を分割したのは、docker を開発ツール、moby を infrastructure にするという判断の下、moby を k8s のようなプラットフォームにしたかったはずである。しかし、結果的にその標準化競争に破れ containerd があれば dockerd daemon は不要になったとも解釈できる。docker という名前はコンテナのエコシステムにおいて docker 社が提供するコマンドラインやプロダクトの総称としての名前でしかなくなってしまっていて、一世を風靡した docker というパッケージングシステムの開発元に同情してしまう感もある。いまの docker engine は docker daemon と containerd の2つの daemon を起動していて docker 社としては微妙なアーキテクチャになっているのではないかと推測する。とくに swarm なんか最早削除したいだろう。&lt;/p>
&lt;p>こういった docker を取り巻くエコシステムやツールの背景を説明するだけでも1つの記事になりそうなことが1日調べていてわかった。&lt;/p>
&lt;h2 id="しくじり先生">しくじり先生&lt;/h2>
&lt;p>たまたま &lt;a href="https://www.tv-asahi.co.jp/shikujiri/backnumber2/0099/">竹原慎二先生「５０歳過ぎてもケンカを売られ続けてバリしんどい先生」&lt;/a> をみたらおもしろかった。ガチンコをリアルタイムでみていた世代なので竹原氏には好感をもっている。少し前に &lt;a href="https://www.nhk.or.jp/kenko/atc_731.html">【あの人の健康法】元プロボクサー・竹原慎二の膀胱（ぼうこう）がんとの闘い&lt;/a> のような、闘病生活の記事もみかけていた。病気は克服してがんばっているといるようにみえる。よかった。もう51歳なのか。&lt;/p>
&lt;p>この番組の中で若い頃に上京してボクシングジムへ通ったときに根性の定義が変わったという話しが出てくる。&lt;/p>
&lt;blockquote>
&lt;p>殴られても耐えることを根性だと思っていた。そのときに初めて殴られようが何しようが毎日辛い練習を重ねるのが根性だと気付かされた。&lt;/p>
&lt;/blockquote>
&lt;p>地元で最強だったのが、ボクシングジムのヤンキーでもない先輩にまったく太刀打ちできなかったという。そのとき1番違うのはスタミナだったらしく、竹原氏は1分で息がきれるのに相手は軽く流すといった様相だった。この先輩にボコボコにされた経験を経てそれから心を改めて真面目になったと言う。その後ボクシングと真剣に向き合い、1995年に日本人初のミドル級世界チャンピオンになる。おそらく番組の主旨的に若ものへのメッセージとして「強さ」について話されていた。&lt;/p>
&lt;blockquote>
&lt;p>「ケンカに強い」だけが「強さ」じゃない、「強さ」の意味を履き違えずに生きよう。大人になると、いろんな強さを知る。大切な人のために仕事をどれだけ頑張れるか、辛い状況でもじっと耐えることができるか。そういう強さもある。&lt;/p>
&lt;/blockquote>
&lt;p>私は誰かのために仕事をがんばったことないし、辛い状況を耐えるみたいなこともほぼやってなくて、嫌になったら仕事を辞めてて、こういう言葉にあうと自分を恥じてしまう。その後、喧嘩自慢で youtube 動画を検索していたらまさにそういうのがあった。竹原氏が「勝てるはずねぇだろ、お前らこんな茶番なことすんなよ」とぼやいていた。先の番組の中でも触れていたが、本当に真剣勝負したいと思って来ているのではなく、記念に戦ってみたいという不純な動機でやってくる人が多いらしい。たしかにそれは相手するのがしんどそう。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/O2rjpxf9W7U" allowfullscreen title="懲りない喧嘩自慢に終止符を打ってみた">&lt;/iframe>
&lt;/div></content></item><item><title>対外的なお仕事をお休みしてドライブ</title><link>/diary/posts/2023/0501/</link><pubDate>Mon, 01 May 2023 10:52:07 +0900</pubDate><guid>/diary/posts/2023/0501/</guid><description>3時に寝て7時に起きた。翌日がお休みだと思うとはしゃいでうまく眠れなかった。午前中と夕方にオフィスへ行って作業していたので今日は day off じゃないけど、お出掛けする私用もあったのでお手伝い先のお仕事はお休みした。
明石までドライブ 11時半から車で明石市にある弁護士さんの事務所まで行ってきた。高速道路をわーっと走って明石市へ。ついでに明石市周辺も軽くドライブして浜辺なども走ってきた。毎週のように天気がよかったら車に乗ろうと思うものの、立体駐車場から車を出すのが面倒なのでなにか目的がないとなかなか乗る機会にならない。電車で明石へ行ってもほとんど時間は変わらないものの、ちょうどよい車を動かす機会だったのでドライブしてきた。昼間は天候もよくて気持ちよかった。戻ってきてから急に天気が崩れてちょうど雨が振り始める前のよい時間帯に走れた。たまにしか乗らないからかドライブするのもなかなか楽しい。お昼に焼き穴子丼定食を食べた。地元の食べものって感じで心地よかった。
弁護士さんと相続打ち合わせ 3-4月と私がいっぱいいっぱいで忙しいから相続の打ち合わせを遅らせてもらっていた。相続税を10カ月以内に支払わないと追徴課税になる。弁護士さんから直接会って話したいということで明石の事務所まで行ってきた。私との会話の雰囲気から温度感をみたかったと弁護士さんは話されていた。
母・姉・私の3人で法定相続を行う。表現はよくないが、うちの家族は相続なんかどうでもよくて誰も関心をもっていない。一方で弁護士さんは利害関係の調整人になるので細かい数字の詳細確認やところどころで経費がかかることへの承諾を求めてくる。税理士さん、司法書士さん、弁護士さんと士業揃い踏みで相続の書類を作ってもらっている。田舎なので相続する建てものが登記されていませんとか普通に起きる。3月の時点で私が大きな方針だけ伝えて詳細はすべて専門家に委譲して経費も然るべきものはすべて言い値でよいから勝手に進めてみたいな指示を出していた。弁護士さんからしたら本当にそんな投げやりでいいのか？みたいな最終確認に face to face で打ち合わせしたかったんだと思う。私がメールのやり取りでそっけない対応をし過ぎたのかもしれない。
例えば、不動産の価値を評価するにも3つの価格がある。
固定資産税評価額 自治体が決める 弁護士はこの金額を使いたい 路線価 国税庁が決める 税理士はこの金額を使いたい 不動産屋さんの評価額 市場が決める 不動産を評価するときに弁護士と税理士で扱う価格が異なると金額も変わってきてそれぞれの金額を、、、と話そうとするところで、私は複数の金額を調整とかしなくてよいので、シンプルでわかりやすい形でどれか1つの価格で評価してもらったらそれでよいですと突っ込む。母も姉も私も金額を計算し直すとかやらないし、それによる多少の損得があってもそんなのどうでもよいと弁護士さんへ伝える。家によっては、お墓や法事にかかる費用を誰が出すかで、相続とは別にその費用を相続のタイミングで多めにもらっておくといった手続きをすることもあるという。なるほど。うちは母がすべて出している。母が支払うので問題ないし、わざわざそんなことを文書で残さなくても大丈夫ですみたいなやり取りが必要になる。いまから書類を作って相続人にハンコを押してもらって手続きをを終えるのが9月頃の見込み。期限は10月中なのでいまからやってちょうどよい時期らしい。相続の手続きは大変。
自動車税の支払い 4月1日に自動車をもっていると5月末までに自動車税を納めないといけない。自動車税は県に対して支払う。社用車の初めての自動車税なので毎年の手続きを忘れないための社内手続きをしていた。言うても google カレンダーと jira に issue 登録するだけなんやけど。送られてきた納付書から pay-easy で即時支払い手続きをした。自動車税の勘定科目は租税公課か車両費のどちらかで会計システムに登録すればよいらしい。うちは租税公課で自動車税という品目を割り当てて会計処理している。また1つ税金について学びを得た。</description><content>&lt;p>3時に寝て7時に起きた。翌日がお休みだと思うとはしゃいでうまく眠れなかった。午前中と夕方にオフィスへ行って作業していたので今日は day off じゃないけど、お出掛けする私用もあったのでお手伝い先のお仕事はお休みした。&lt;/p>
&lt;h2 id="明石までドライブ">明石までドライブ&lt;/h2>
&lt;p>11時半から車で明石市にある弁護士さんの事務所まで行ってきた。高速道路をわーっと走って明石市へ。ついでに明石市周辺も軽くドライブして浜辺なども走ってきた。毎週のように天気がよかったら車に乗ろうと思うものの、立体駐車場から車を出すのが面倒なのでなにか目的がないとなかなか乗る機会にならない。電車で明石へ行ってもほとんど時間は変わらないものの、ちょうどよい車を動かす機会だったのでドライブしてきた。昼間は天候もよくて気持ちよかった。戻ってきてから急に天気が崩れてちょうど雨が振り始める前のよい時間帯に走れた。たまにしか乗らないからかドライブするのもなかなか楽しい。お昼に焼き穴子丼定食を食べた。地元の食べものって感じで心地よかった。&lt;/p>
&lt;h2 id="弁護士さんと相続打ち合わせ">弁護士さんと相続打ち合わせ&lt;/h2>
&lt;p>3-4月と私がいっぱいいっぱいで忙しいから相続の打ち合わせを遅らせてもらっていた。相続税を10カ月以内に支払わないと追徴課税になる。弁護士さんから直接会って話したいということで明石の事務所まで行ってきた。私との会話の雰囲気から温度感をみたかったと弁護士さんは話されていた。&lt;/p>
&lt;p>母・姉・私の3人で法定相続を行う。表現はよくないが、うちの家族は相続なんかどうでもよくて誰も関心をもっていない。一方で弁護士さんは利害関係の調整人になるので細かい数字の詳細確認やところどころで経費がかかることへの承諾を求めてくる。税理士さん、司法書士さん、弁護士さんと士業揃い踏みで相続の書類を作ってもらっている。田舎なので相続する建てものが登記されていませんとか普通に起きる。3月の時点で私が大きな方針だけ伝えて詳細はすべて専門家に委譲して経費も然るべきものはすべて言い値でよいから勝手に進めてみたいな指示を出していた。弁護士さんからしたら本当にそんな投げやりでいいのか？みたいな最終確認に face to face で打ち合わせしたかったんだと思う。私がメールのやり取りでそっけない対応をし過ぎたのかもしれない。&lt;/p>
&lt;p>例えば、不動産の価値を評価するにも3つの価格がある。&lt;/p>
&lt;ul>
&lt;li>固定資産税評価額
&lt;ul>
&lt;li>自治体が決める&lt;/li>
&lt;li>弁護士はこの金額を使いたい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.rosenka.nta.go.jp/">路線価&lt;/a>
&lt;ul>
&lt;li>国税庁が決める&lt;/li>
&lt;li>税理士はこの金額を使いたい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>不動産屋さんの評価額
&lt;ul>
&lt;li>市場が決める&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>不動産を評価するときに弁護士と税理士で扱う価格が異なると金額も変わってきてそれぞれの金額を、、、と話そうとするところで、私は複数の金額を調整とかしなくてよいので、シンプルでわかりやすい形でどれか1つの価格で評価してもらったらそれでよいですと突っ込む。母も姉も私も金額を計算し直すとかやらないし、それによる多少の損得があってもそんなのどうでもよいと弁護士さんへ伝える。家によっては、お墓や法事にかかる費用を誰が出すかで、相続とは別にその費用を相続のタイミングで多めにもらっておくといった手続きをすることもあるという。なるほど。うちは母がすべて出している。母が支払うので問題ないし、わざわざそんなことを文書で残さなくても大丈夫ですみたいなやり取りが必要になる。いまから書類を作って相続人にハンコを押してもらって手続きをを終えるのが9月頃の見込み。期限は10月中なのでいまからやってちょうどよい時期らしい。相続の手続きは大変。&lt;/p>
&lt;h2 id="自動車税の支払い">自動車税の支払い&lt;/h2>
&lt;p>4月1日に自動車をもっていると5月末までに自動車税を納めないといけない。自動車税は県に対して支払う。社用車の初めての自動車税なので毎年の手続きを忘れないための社内手続きをしていた。言うても google カレンダーと jira に issue 登録するだけなんやけど。送られてきた納付書から pay-easy で即時支払い手続きをした。自動車税の勘定科目は租税公課か車両費のどちらかで会計システムに登録すればよいらしい。うちは租税公課で自動車税という品目を割り当てて会計処理している。また1つ税金について学びを得た。&lt;/p></content></item></channel></rss>