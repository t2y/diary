<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2021/12 on forest nook</title><link>/diary/dates/2021/12/</link><description>Recent content in 2021/12 on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/dates/2021/12/index.xml" rel="self" type="application/rss+xml"/><item><title>チームごっこ</title><link>/diary/posts/2021/1203/</link><pubDate>Fri, 03 Dec 2021 08:55:15 +0900</pubDate><guid>/diary/posts/2021/1203/</guid><description>0時に寝て6時に起きた。
朝活: アジャイル開発とスクラム 第2版 第7章の残りと第8章を読んだ。事例紹介なので軽く読み流した感じ。インタビュー記事のタイトルが気になった。
「合宿で、「仕事での同僚」から「チームの仲間」になれました
このタイトルと内容に私は違和感があるので反論としてそれを書いていく。
心理的安全性のつくりかた に書いてあったが、MIT のオスターマン教授によると、チームという概念は比較的新しいものらしい。
職場における、チームという概念は1980年以降、最も広まったイノベーションのひとつだ。
「心理的安全性のつくりかた」ではチームとグループの違いは次になる。
チームは共通の目標に向かってともに問題解決やアイディアを出す集団 グループはそうなっていない、ただの寄せ集めの集団 共通の目標に対して互いに対話や協働することでチームになっていく。この考え方は私の経験則とも合致するし支持している。実際の業務や作業を通してチームは築かれていくと私は考える。しかし、コミュニケーションの活性化や親睦を深めればチームになると誤解している人もいるように思う。
件のインタビュー記事では、次の内容があった。
合宿の最大の成果は、何だったのでしょう？
「仕事での同僚」から「チームの仲間」になれたことだと思います。昨今、ハラスメントやプライバシーの観点からなかなか個人の深い話ができないことが多いと思いますが、お互いを信頼した上で自分の生い立ちや経験から「私がなぜここにいるのか」を深掘りできたことが大きいと思います。
具体的には、誰とも話さず、自分を見つめる時間として三浦海岸の浜辺に全員を１時間放置しました（笑）。その時間で自分の今までをふりかえり、再集合したときに１人ずつ語り、お互いのことを尊重し受け入れることで心理的安全性が一気に高まったと思います。
私だったら転職を考えますね。浜辺に放置されて再集合して生い立ちとか語れとか言われて、そんな上司だと懸念を抱くと思う。その場で抗議はしなかったとしても。仕事を通して結果的に信頼関係が深くなって、同じ行動をするなら理解できるが、そうじゃない状態で職位の高い人がメンバーに合宿を半強制参加させてプライベートの内容を話させるのはハラスメントと紙一重かもしれない。おそらくこれはたまたまうまくいったケースだというだけで再現性のあるプラクティスにはまったく思えない。厳しい言い方をすると、偉い人の自己満足によるチームごっこではないかと思う。
「仕事での同僚」から「チームの仲間」になれたというインタビューが書かれていた。私の感覚ではやや違和感がある。グループではなくチームという概念が認識されるようになったのはわりと最近の話だというのはたしか心理的安全性のつくりかたに書いてあった気がする。 #金朝ツメトギ
&amp;mdash; Tetsuya Morimoto (@t2y) December 2, 2021 本番リリース作業 今日は非稼働日なんだけど、インフラ周りの修正をしていたので本番リリースの作業を見守っていた。ハドルで画面共有しながらみんなでわいわいできるので、これはこれでリリース作業の雰囲気を学ぶ機会にもなる。私が本番リリースすることはないだろうけど、担当者がどういった作業でリリースしているかを知っておく方が運用に役に立つ仕組みも導入できるかもしれない。音声通話と画面共有さえあればフルリモートワークでもなにも困ることはない。よい世の中になったと思う。RabbitMQ と Dapr 周りで私が懸念に思っていたことを本番リリースを通して検証したり振る舞いを観察できたので新たな知見を得た。</description><content>&lt;p>0時に寝て6時に起きた。&lt;/p>
&lt;h2 id="朝活-アジャイル開発とスクラム-第2版">朝活: アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>第7章の残りと第8章を読んだ。事例紹介なので軽く読み流した感じ。インタビュー記事のタイトルが気になった。&lt;/p>
&lt;blockquote>
&lt;p>「合宿で、「仕事での同僚」から「チームの仲間」になれました&lt;/p>
&lt;/blockquote>
&lt;p>このタイトルと内容に私は違和感があるので反論としてそれを書いていく。&lt;/p>
&lt;p>&lt;a href="https://pub.jmam.co.jp/book/b517388.html">心理的安全性のつくりかた&lt;/a> に書いてあったが、MIT のオスターマン教授によると、チームという概念は比較的新しいものらしい。&lt;/p>
&lt;blockquote>
&lt;p>職場における、チームという概念は1980年以降、最も広まったイノベーションのひとつだ。&lt;/p>
&lt;/blockquote>
&lt;p>「心理的安全性のつくりかた」ではチームとグループの違いは次になる。&lt;/p>
&lt;ul>
&lt;li>チームは共通の目標に向かってともに問題解決やアイディアを出す集団&lt;/li>
&lt;li>グループはそうなっていない、ただの寄せ集めの集団&lt;/li>
&lt;/ul>
&lt;p>共通の目標に対して互いに対話や協働することでチームになっていく。この考え方は私の経験則とも合致するし支持している。実際の業務や作業を通してチームは築かれていくと私は考える。しかし、コミュニケーションの活性化や親睦を深めればチームになると誤解している人もいるように思う。&lt;/p>
&lt;p>件のインタビュー記事では、次の内容があった。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>合宿の最大の成果は、何だったのでしょう？&lt;/strong>&lt;/p>
&lt;p>「仕事での同僚」から「チームの仲間」になれたことだと思います。昨今、ハラスメントやプライバシーの観点からなかなか個人の深い話ができないことが多いと思いますが、お互いを信頼した上で自分の生い立ちや経験から「私がなぜここにいるのか」を深掘りできたことが大きいと思います。&lt;/p>
&lt;p>具体的には、誰とも話さず、自分を見つめる時間として三浦海岸の浜辺に全員を１時間放置しました（笑）。その時間で自分の今までをふりかえり、再集合したときに１人ずつ語り、お互いのことを尊重し受け入れることで心理的安全性が一気に高まったと思います。&lt;/p>
&lt;/blockquote>
&lt;p>私だったら転職を考えますね。浜辺に放置されて再集合して生い立ちとか語れとか言われて、そんな上司だと懸念を抱くと思う。その場で抗議はしなかったとしても。仕事を通して結果的に信頼関係が深くなって、同じ行動をするなら理解できるが、そうじゃない状態で職位の高い人がメンバーに合宿を半強制参加させてプライベートの内容を話させるのはハラスメントと紙一重かもしれない。おそらくこれはたまたまうまくいったケースだというだけで再現性のあるプラクティスにはまったく思えない。厳しい言い方をすると、偉い人の自己満足によるチームごっこではないかと思う。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">「仕事での同僚」から「チームの仲間」になれたというインタビューが書かれていた。私の感覚ではやや違和感がある。グループではなくチームという概念が認識されるようになったのはわりと最近の話だというのはたしか心理的安全性のつくりかたに書いてあった気がする。 &lt;a href="https://twitter.com/hashtag/%E9%87%91%E6%9C%9D%E3%83%84%E3%83%A1%E3%83%88%E3%82%AE?src=hash&amp;amp;ref_src=twsrc%5Etfw">#金朝ツメトギ&lt;/a>&lt;/p>&amp;mdash; Tetsuya Morimoto (@t2y) &lt;a href="https://twitter.com/t2y/status/1466528241661874179?ref_src=twsrc%5Etfw">December 2, 2021&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;h2 id="本番リリース作業">本番リリース作業&lt;/h2>
&lt;p>今日は非稼働日なんだけど、インフラ周りの修正をしていたので本番リリースの作業を見守っていた。ハドルで画面共有しながらみんなでわいわいできるので、これはこれでリリース作業の雰囲気を学ぶ機会にもなる。私が本番リリースすることはないだろうけど、担当者がどういった作業でリリースしているかを知っておく方が運用に役に立つ仕組みも導入できるかもしれない。音声通話と画面共有さえあればフルリモートワークでもなにも困ることはない。よい世の中になったと思う。RabbitMQ と Dapr 周りで私が懸念に思っていたことを本番リリースを通して検証したり振る舞いを観察できたので新たな知見を得た。&lt;/p></content></item><item><title>スクラムイベントにもの思い</title><link>/diary/posts/2021/1202/</link><pubDate>Thu, 02 Dec 2021 07:43:21 +0900</pubDate><guid>/diary/posts/2021/1202/</guid><description>23時に寝て6時半に起きた。昨日は疲労困憊だったのでなんもせずすぐ寝た。
スクラムイベント お仕事のスクラム開発で木曜日はスプリントレビューとプロダクトバックログリファインメントを行う。主にステークホルダーとプロジェクトオーナーがプロダクトバックログアイテムの優先度を議論したり、タスクに細分化されていない課題をタスクにしていくための作業に当てたりしている。本当はタスク化されたイシューをさらにリファイメントするイベントなのだろうだけど、まだそこまで業務やチームの体制が成熟していないため、タスクの細分化のための時間になっていたりしている。
これらのイベントで開発者がイニシアティブをとることはないけど、プロダクトオーナーやその業務チームにいるメンバーたちがどうやって業務をタスク化しているかのやり取りもみえたりする。開発者にとってそのやり取りをみていることに意味があるかどうかはまだ私にはわからないが、業務チームのメンバーがどういった働き方をしているかを知るきっかけにはなる。業務チームは miro を使ってメンバーみんなで同時編集しながら課題を付箋代わりのメモに落としていく。その個々のメモがタスクに近いものになるのだろうけど、私からみたら業務すべてを知っている人がまとめて細分化してドキュメントに書き記して2-3回みんなでレビューすれば終わるようなものを、みんなで付箋紙に書いていって整合性が取れているのかどうかわからないメモの固まりを作っているようにみえる。この作業はみんなでやらないと進捗しないので1週間に1回とかになる。
チームが扱うすべての業務を知っているメンバーはいない 業務に必要な機能の優先順位や優先度を決める権限をもっていない 情報が足りないと思ったときにメンバーが自律的に動いて補う体制が整っていない あとステークホルダーが話す要件や仕様に関わってくる話の大半が口頭で行われていてドキュメントや課題管理に文章として書き記されていない。だから同じ話しを何度も繰り返し聞くようなケースも発生する。わからないことを聞くことも、繰り返し聞くことも問題ではないが、議事録以外にそこで話す内容がドキュメント化されないのはどうしてだろう？という気もした。もっともっと文章を書かないと情報共有やノウハウをためることにはつながっていかないだろうということも垣間みえる。
総括すれば、どんな開発方法論を使っても、リーダーやマネージャークラスが圧倒的に文章を書けないと、その配下のメンバーは自律的に行動できないというだけの話しでしかないが、どうやったら解消できるか？はまだまだこれからの私の課題でもある。</description><content>&lt;p>23時に寝て6時半に起きた。昨日は疲労困憊だったのでなんもせずすぐ寝た。&lt;/p>
&lt;h2 id="スクラムイベント">スクラムイベント&lt;/h2>
&lt;p>お仕事のスクラム開発で木曜日はスプリントレビューとプロダクトバックログリファインメントを行う。主にステークホルダーとプロジェクトオーナーがプロダクトバックログアイテムの優先度を議論したり、タスクに細分化されていない課題をタスクにしていくための作業に当てたりしている。本当はタスク化されたイシューをさらにリファイメントするイベントなのだろうだけど、まだそこまで業務やチームの体制が成熟していないため、タスクの細分化のための時間になっていたりしている。&lt;/p>
&lt;p>これらのイベントで開発者がイニシアティブをとることはないけど、プロダクトオーナーやその業務チームにいるメンバーたちがどうやって業務をタスク化しているかのやり取りもみえたりする。開発者にとってそのやり取りをみていることに意味があるかどうかはまだ私にはわからないが、業務チームのメンバーがどういった働き方をしているかを知るきっかけにはなる。業務チームは &lt;a href="https://miro.com/">miro&lt;/a> を使ってメンバーみんなで同時編集しながら課題を付箋代わりのメモに落としていく。その個々のメモがタスクに近いものになるのだろうけど、私からみたら業務すべてを知っている人がまとめて細分化してドキュメントに書き記して2-3回みんなでレビューすれば終わるようなものを、みんなで付箋紙に書いていって整合性が取れているのかどうかわからないメモの固まりを作っているようにみえる。この作業はみんなでやらないと進捗しないので1週間に1回とかになる。&lt;/p>
&lt;ul>
&lt;li>チームが扱うすべての業務を知っているメンバーはいない&lt;/li>
&lt;li>業務に必要な機能の優先順位や優先度を決める権限をもっていない&lt;/li>
&lt;li>情報が足りないと思ったときにメンバーが自律的に動いて補う体制が整っていない&lt;/li>
&lt;/ul>
&lt;p>あとステークホルダーが話す要件や仕様に関わってくる話の大半が口頭で行われていてドキュメントや課題管理に文章として書き記されていない。だから同じ話しを何度も繰り返し聞くようなケースも発生する。わからないことを聞くことも、繰り返し聞くことも問題ではないが、議事録以外にそこで話す内容がドキュメント化されないのはどうしてだろう？という気もした。もっともっと文章を書かないと情報共有やノウハウをためることにはつながっていかないだろうということも垣間みえる。&lt;/p>
&lt;p>総括すれば、どんな開発方法論を使っても、リーダーやマネージャークラスが圧倒的に文章を書けないと、その配下のメンバーは自律的に行動できないというだけの話しでしかないが、どうやったら解消できるか？はまだまだこれからの私の課題でもある。&lt;/p></content></item><item><title>師走入り</title><link>/diary/posts/2021/1201/</link><pubDate>Wed, 01 Dec 2021 04:13:59 +0900</pubDate><guid>/diary/posts/2021/1201/</guid><description>1時から1時間ほど仮眠をとって2時から4時過ぎまで作業して帰ってお風呂に入ってそのまま6時から 【三宮.dev オンライン】リモート朝活もくもく会 の朝活に参加した。30分ほど雑談して眠くなって7時過ぎから9時前まで寝てた。
dapr の pubsub の dead letter サポート お仕事で dapr を触っている。pubsub で dead letter queue の仕組みを導入しようとしているが、PubSub&amp;rsquo;s DeadLetter Topic #2217 によると v1.6 (2022年1月20日リリース予定) のマイルストーンになっている。本当にその予定ならそろそろベータ版が実装されていて、開発ブランチあったらテストしようかと考えていた。調べてたら rabbitmq はすでに v1.5 で dead letter のサポートがマージされているのを発見した。
Add dead letter support for RabbitMQ pubsub #1844 たまたま、いま使っている pubsub も rabbitmq だった。ドキュメントをみたら確かにその設定が追加されている。
dapr RabbitMQ
Field Required Details Example enableDeadLetter N Enable forwarding Messages that cannot be handled to a dead-letter topic.</description><content>&lt;p>1時から1時間ほど仮眠をとって2時から4時過ぎまで作業して帰ってお風呂に入ってそのまま6時から &lt;a href="https://kobe-sannomiya-dev.connpass.com/event/232426/">【三宮.dev オンライン】リモート朝活もくもく会&lt;/a> の朝活に参加した。30分ほど雑談して眠くなって7時過ぎから9時前まで寝てた。&lt;/p>
&lt;h2 id="dapr-の-pubsub-の-dead-letter-サポート">dapr の pubsub の dead letter サポート&lt;/h2>
&lt;p>お仕事で dapr を触っている。pubsub で dead letter queue の仕組みを導入しようとしているが、&lt;a href="https://github.com/dapr/dapr/issues/2217">PubSub&amp;rsquo;s DeadLetter Topic #2217&lt;/a> によると v1.6 (2022年1月20日リリース予定) のマイルストーンになっている。本当にその予定ならそろそろベータ版が実装されていて、開発ブランチあったらテストしようかと考えていた。調べてたら rabbitmq はすでに v1.5 で dead letter のサポートがマージされているのを発見した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dapr/docs/pull/1844">Add dead letter support for RabbitMQ pubsub #1844&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>たまたま、いま使っている pubsub も rabbitmq だった。ドキュメントをみたら確かにその設定が追加されている。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://docs.dapr.io/reference/components-reference/supported-pubsub/setup-rabbitmq/">dapr RabbitMQ&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Required&lt;/th>
&lt;th>Details&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enableDeadLetter&lt;/td>
&lt;td>N&lt;/td>
&lt;td>Enable forwarding Messages that cannot be handled to a dead-letter topic. Defaults to &amp;ldquo;false&amp;rdquo;&lt;/td>
&lt;td>&amp;ldquo;true&amp;rdquo;, &amp;ldquo;false&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>maxLen&lt;/td>
&lt;td>N&lt;/td>
&lt;td>The maximum number of messages of a queue and its dead letter queue (if dead letter enabled). If both maxLen and maxLenBytes are set then both will apply; whichever limit is hit first will be enforced. Defaults to no limit.&lt;/td>
&lt;td>&amp;ldquo;1000&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>maxLenBytes&lt;/td>
&lt;td>N&lt;/td>
&lt;td>Maximum length in bytes of a queue and its dead letter queue (if dead letter enabled). If both maxLen and maxLenBytes are set then both will apply; whichever limit is hit first will be enforced. Defaults to no limit.&lt;/td>
&lt;td>&amp;ldquo;1048576&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/blockquote>
&lt;p>enableDeadLetter=true に設定して、適当にエラーが発生しそうなリクエストを作って dead letter にメッセージが入るかどうかを検証してた。ひとまず dead letter にメッセージが入ること自体は確認できた。&lt;/p>
&lt;h2 id="bizpy-勉強会">bizpy 勉強会&lt;/h2>
&lt;p>&lt;a href="https://bizpy.connpass.com/event/229239/">Python で Slack のインテグレーションをやってみる勉強会 #3&lt;/a> を開催した。月曜日から2時間もあればできる資料作成をだらだら先送りしていて夜中に作った。なんか体調を崩しているのかもしれない。たまたま勉強会の前にせらさんから激励のコメントをいただいて嬉しかった。&lt;/p>
&lt;blockquote>
&lt;p>今日の分も含めコンテンツ拝見しましたが、素晴らしいですね&lt;/p>
&lt;/blockquote>
&lt;p>私見だけど、slack インテグレーションで調べものをしているとせらさんの記事や issue のやり取りをみかけることが多い。twitter で slack インテグレーションに関してつぶやくと100%せらさんからレスポンスがある (個人の経験談) 。過去に私は外資の ISV で働きたいと思って活動したこともあったけど、せらさんをみていて自分のレベルでは無理だったなと得心がいった。なにがすごいって、bizpy の勉強会のようなところにもわざわざやってきて、講師にコメントしたりアドバイスしてくれるんだからね。&lt;/p>
&lt;p>2ヶ月に渡り、slack インテグレーションのチュートリアルレベルの記事を実際に設定してみて、サンプルコード書いてみて、動かしてみて、slack でどんなことができそうかの理解を深めることができた。今回の内容はビジネスパーソン向けではなかったのでちょっと敷居が高かったかもしれないが、全3回でやり切ることができてよかった。終わってから運営に新たにわたなべさんが加わったことを参加者に紹介しつつ、次回の企画について雑談していた。次回はわたなべさんから機械学習入門のような勉強会をしてもらうことに決まった。&lt;/p></content></item></channel></rss>