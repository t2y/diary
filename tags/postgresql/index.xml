<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>postgresql on forest nook</title><link>/diary/tags/postgresql/</link><description>Recent content in postgresql on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Mon, 26 Sep 2022 08:01:22 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/postgresql/index.xml" rel="self" type="application/rss+xml"/><item><title>postgresql の json データ型</title><link>/diary/posts/2022/0926/</link><pubDate>Mon, 26 Sep 2022 08:01:22 +0900</pubDate><guid>/diary/posts/2022/0926/</guid><description>1時に寝て6時半に起きた。連休中に夜更ししてたから生活が乱れた。
ロガー向けのログ保存 API の開発 先週の休暇前にやっていた作業の開発に着手。一通り web api のエンドポイントの実装は終えてテストをあらかた書いたところ。いまのプロジェクトとしても、過去の私の経験としてもやったことのない新しい挑戦の1つとして postgresql の JSONデータ型 を使う。具体的には json 型と jsonb 型の2つがある。前者はテキストで保持する型で、後者は内部的にバイナリに変換されてインデックスも使える。バイナリに変換してインデックスを作る分、insert 時にテキストで保存するよりは少し余分なオーバーヘッドを要する。json のデータを参照用途で使うのか、検索するのかでこれらの型を使い分ければいいのかな。
実際の sql で json データの条件指定は次のようになる。@&amp;gt; というみたこともない気持ち悪い演算子を使う。
&amp;gt; select * from mytable where data @&amp;gt; &amp;#39;{&amp;#34;x&amp;#34;: 1, &amp;#34;y&amp;#34;: 2}&amp;#39;; java の jdbc で扱うには PGobject という型に変換して扱う必要がある。
private PGobject convertData(String value) throws SQLException { var data = new PGobject(); data.setType(&amp;#34;jsonb&amp;#34;); data.setValue(value); return data; } 余談だけど、curl で json 文字列を query string としてリクエストするには url encode しないといけない。
$ curl -s --get --data-urlencode &amp;#39;data={&amp;#34;x&amp;#34;: 1, &amp;#34;y&amp;#34;: 2}&amp;#39; http://localhost/path | jq .</description><content>&lt;p>1時に寝て6時半に起きた。連休中に夜更ししてたから生活が乱れた。&lt;/p>
&lt;h2 id="ロガー向けのログ保存-api-の開発">ロガー向けのログ保存 API の開発&lt;/h2>
&lt;p>先週の休暇前にやっていた作業の開発に着手。一通り web api のエンドポイントの実装は終えてテストをあらかた書いたところ。いまのプロジェクトとしても、過去の私の経験としてもやったことのない新しい挑戦の1つとして postgresql の &lt;a href="https://www.postgresql.jp/document/13/html/datatype-json.html">JSONデータ型&lt;/a> を使う。具体的には json 型と jsonb 型の2つがある。前者はテキストで保持する型で、後者は内部的にバイナリに変換されてインデックスも使える。バイナリに変換してインデックスを作る分、insert 時にテキストで保存するよりは少し余分なオーバーヘッドを要する。json のデータを参照用途で使うのか、検索するのかでこれらの型を使い分ければいいのかな。&lt;/p>
&lt;p>実際の sql で json データの条件指定は次のようになる。&lt;code>@&amp;gt;&lt;/code> というみたこともない気持ち悪い演算子を使う。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> mytable &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#66d9ef">data&lt;/span> &lt;span style="color:#f92672">@&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;x&amp;#34;: 1, &amp;#34;y&amp;#34;: 2}&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>java の jdbc で扱うには &lt;em>PGobject&lt;/em> という型に変換して扱う必要がある。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> PGobject &lt;span style="color:#a6e22e">convertData&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> SQLException &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> var data &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PGobject&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jsonb&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>value&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> data&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>余談だけど、curl で json 文字列を query string としてリクエストするには url encode しないといけない。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -s --get --data-urlencode &lt;span style="color:#e6db74">&amp;#39;data={&amp;#34;x&amp;#34;: 1, &amp;#34;y&amp;#34;: 2}&amp;#39;&lt;/span> http://localhost/path | jq .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>