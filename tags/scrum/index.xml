<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>scrum on forest nook</title><link>/diary/tags/scrum/</link><description>Recent content in scrum on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Fri, 04 Feb 2022 08:27:32 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/scrum/index.xml" rel="self" type="application/rss+xml"/><item><title>バーンダウンしないチャート</title><link>/diary/posts/2022/0204/</link><pubDate>Fri, 04 Feb 2022 08:27:32 +0900</pubDate><guid>/diary/posts/2022/0204/</guid><description>0時に寝て4時に起きてドラクエタクトしたり twtter 眺めたりして金朝ツメトギで DX 実践手引書 を読んでた。
スプリントの残チケット スクラム開発でバックログのバーンダウンチャートを表示させるために、スプリントに対して、同じ期間のマイルストーンを設定するように運用が変わった。運用変更に伴い、バーンダウンチャートも表示されるようになり、スプリントの進捗状況の見える化が進められた。そのバーンダウンチャートの運用について SM と話していて、私の過去の開発とスプリントの考え方の大きな違いを発見した。
私がこれまでやってきた開発はマイルストーンの日には残チケットがゼロになるように開発していた。開発が遅延してそのマイルストーンで完了しそうにないチケットはどこかのタイミングで次のマイルストーンに先送りさせることで、いまやっているマイルストーンの開発が計画通りに完了するよう調整していた。作業が期限までに間に合わないチケットは早めに検知して報告して対応を検討する。一般論として、遅延したときは期限を延期するか、次のマイルストーンに先送りするかのどちらかしかない。
スクラムの場合、PO はスプリントを中止する権限をもっているが、基本的にスプリントの計画は変更しない。スプリント内でマイルストーンに間に合わないチケットがわかっていても、マイルストーンは変更せず、次のスプリントプランニングまで放置して、次のスプリントプランニングで遅れたチケットの作業を中止するか、引き続きやるかを検討するという。このやり方だと、スプリント終了日 (マイルストーンの日) に遅延して完了できないとわかっているチケットがすべて残ってしまう。当然バーンダウンチャートはバーンダウンしない。
一方でこれまでマイルストーンこそ設定していなかったものの、様々な理由でスプリントでやる予定だったチケットが遅延することは度々あった。それはデイリースクラムで遅れますとか、予想外のタスクが出てきましたとか、そういう報告をもって実運用では次のスプリントに持ち越ししていた。実運用では持ち越ししているのに、マイルストーンを変えるのは計画の変更だからやってはいけないという話しになって、見える化したのにバーンダウンしないチャートがあって、この運用に何の意味があるのだろう？わからなくなった。</description><content>&lt;p>0時に寝て4時に起きてドラクエタクトしたり twtter 眺めたりして金朝ツメトギで &lt;a href="https://www.ipa.go.jp/files/000094497.pdf">DX 実践手引書&lt;/a> を読んでた。&lt;/p>
&lt;h2 id="スプリントの残チケット">スプリントの残チケット&lt;/h2>
&lt;p>スクラム開発でバックログのバーンダウンチャートを表示させるために、スプリントに対して、同じ期間のマイルストーンを設定するように運用が変わった。運用変更に伴い、バーンダウンチャートも表示されるようになり、スプリントの進捗状況の見える化が進められた。そのバーンダウンチャートの運用について SM と話していて、私の過去の開発とスプリントの考え方の大きな違いを発見した。&lt;/p>
&lt;p>私がこれまでやってきた開発はマイルストーンの日には残チケットがゼロになるように開発していた。開発が遅延してそのマイルストーンで完了しそうにないチケットはどこかのタイミングで次のマイルストーンに先送りさせることで、いまやっているマイルストーンの開発が計画通りに完了するよう調整していた。作業が期限までに間に合わないチケットは早めに検知して報告して対応を検討する。一般論として、遅延したときは期限を延期するか、次のマイルストーンに先送りするかのどちらかしかない。&lt;/p>
&lt;p>スクラムの場合、PO はスプリントを中止する権限をもっているが、基本的にスプリントの計画は変更しない。スプリント内でマイルストーンに間に合わないチケットがわかっていても、マイルストーンは変更せず、次のスプリントプランニングまで放置して、次のスプリントプランニングで遅れたチケットの作業を中止するか、引き続きやるかを検討するという。このやり方だと、スプリント終了日 (マイルストーンの日) に遅延して完了できないとわかっているチケットがすべて残ってしまう。当然バーンダウンチャートはバーンダウンしない。&lt;/p>
&lt;p>一方でこれまでマイルストーンこそ設定していなかったものの、様々な理由でスプリントでやる予定だったチケットが遅延することは度々あった。それはデイリースクラムで遅れますとか、予想外のタスクが出てきましたとか、そういう報告をもって実運用では次のスプリントに持ち越ししていた。実運用では持ち越ししているのに、マイルストーンを変えるのは計画の変更だからやってはいけないという話しになって、見える化したのにバーンダウンしないチャートがあって、この運用に何の意味があるのだろう？わからなくなった。&lt;/p></content></item><item><title>datadog のログ管理</title><link>/diary/posts/2022/0105/</link><pubDate>Wed, 05 Jan 2022 07:41:18 +0900</pubDate><guid>/diary/posts/2022/0105/</guid><description>0時に寝て5時に起きた。昨日は早く寝たので早く起きた。
ふりかえり お仕事でのスクラムのふりかえり。課題管理システムの一本化 や slack のマルチチャンネルゲスト移行 について、メンバーのよかったコメントがいくつか出た。私は経験者なので、これらの結果がどうなるかは最初からわかっていて、移行中に運用面からもあれこれプラクティスを提案しながら結果が出やすいようにサポートしていた。まだまだもっとうまく運用できるけれど、経験則では、他のメンバーの運用がついてくるには半年ぐらいかかるだろう。仕組みを取り入れただけではまだ効果が半分で、適切な運用を継続することでさらにその効果を実感できるようになる。これからも注力していく。
ともあれ、私がお手伝い始めた初日から非効率だと考えていた3大課題のうちの2つは2ヶ月経って対応された。ついでに書いておくと、最後の1つはカレンダー共有の課題がある。お手伝い先の社内で使っているカレンダーを協力会社のメンバーはみることができない。その逆も然り。したがって、正社員と協力会社でカレンダーを共有できない。これがスケジュール調整コストやコミュニケーションコストを高くしている。カレンダーを共有していると、例えば、slack でメンションして予定が入っていないならすぐに返信がくることを期待するけど、会議中だったらその会議が終わってからかな？といった予測が働く。仮に会議が3つ連続していれば、PR のレビューはすぐできないだろうと推測される。プロジェクトメンバーでカレンダーを共有できないと、相手の行動予測の精度が下がり、結果としてコミュニケーションコストが高くつく。
生産性をあげるには特別なことをやらなくても、当たり前のことを当たり前にしていくだけでも効果がある。同じ職場でずっと働いていると、当たり前じゃないことがわからなくなってしまって非効率になってしまうことも多々ある。そういうところは外部の人間が指摘することで改善できる余地となる。
datadog のログ管理 お仕事で datadog の ログ管理 機能を調べている。メトリクスしか使ったことがなかったけど、ログ管理も一通りの機能は揃っていていろいろできる。なぜか私が手伝う会社は datadog を使っていて、他のサービスも試してみたいという気持ちもあるんだけど、やっぱり datadog は優れたサービスということなのだろうか。</description><content>&lt;p>0時に寝て5時に起きた。昨日は早く寝たので早く起きた。&lt;/p>
&lt;h2 id="ふりかえり">ふりかえり&lt;/h2>
&lt;p>お仕事でのスクラムのふりかえり。&lt;a href="/diary/diary/posts/2021/1222/#課題管理システムを一本化する">課題管理システムの一本化&lt;/a> や &lt;a href="/diary/diary/posts/2021/1224/#slack-のマルチチャンネルゲスト">slack のマルチチャンネルゲスト移行&lt;/a> について、メンバーのよかったコメントがいくつか出た。私は経験者なので、これらの結果がどうなるかは最初からわかっていて、移行中に運用面からもあれこれプラクティスを提案しながら結果が出やすいようにサポートしていた。まだまだもっとうまく運用できるけれど、経験則では、他のメンバーの運用がついてくるには半年ぐらいかかるだろう。仕組みを取り入れただけではまだ効果が半分で、適切な運用を継続することでさらにその効果を実感できるようになる。これからも注力していく。&lt;/p>
&lt;p>ともあれ、私がお手伝い始めた初日から非効率だと考えていた3大課題のうちの2つは2ヶ月経って対応された。ついでに書いておくと、最後の1つはカレンダー共有の課題がある。お手伝い先の社内で使っているカレンダーを協力会社のメンバーはみることができない。その逆も然り。したがって、正社員と協力会社でカレンダーを共有できない。これがスケジュール調整コストやコミュニケーションコストを高くしている。カレンダーを共有していると、例えば、slack でメンションして予定が入っていないならすぐに返信がくることを期待するけど、会議中だったらその会議が終わってからかな？といった予測が働く。仮に会議が3つ連続していれば、PR のレビューはすぐできないだろうと推測される。プロジェクトメンバーでカレンダーを共有できないと、相手の行動予測の精度が下がり、結果としてコミュニケーションコストが高くつく。&lt;/p>
&lt;p>生産性をあげるには特別なことをやらなくても、当たり前のことを当たり前にしていくだけでも効果がある。同じ職場でずっと働いていると、当たり前じゃないことがわからなくなってしまって非効率になってしまうことも多々ある。そういうところは外部の人間が指摘することで改善できる余地となる。&lt;/p>
&lt;h2 id="datadog-のログ管理">datadog のログ管理&lt;/h2>
&lt;p>お仕事で datadog の &lt;a href="https://docs.datadoghq.com/ja/logs/">ログ管理&lt;/a> 機能を調べている。メトリクスしか使ったことがなかったけど、ログ管理も一通りの機能は揃っていていろいろできる。なぜか私が手伝う会社は datadog を使っていて、他のサービスも試してみたいという気持ちもあるんだけど、やっぱり datadog は優れたサービスということなのだろうか。&lt;/p></content></item><item><title>課題管理システムの一本化</title><link>/diary/posts/2021/1222/</link><pubDate>Wed, 22 Dec 2021 08:21:13 +0900</pubDate><guid>/diary/posts/2021/1222/</guid><description>0時に寝て4時過ぎに起きて2度寝して6時前に起きた。
朝活: バッタを倒しにアフリカへ 【三宮.dev オンライン】今年最後のリモート朝活もくもく会 に参加した。スクラム本を読み終えたので気分転換に バッタを倒しにアフリカへ を読むことにした。主に雑談してたら序文しか読めなかった。
課題管理システムを一本化する お仕事でスクラム開発を実践している。プロダクトバックログを backlog で管理し、スプリントバックログを GitHub Issues で管理している。課題を複数のプラットフォームで管理することは情報の一元管理という側面からよくないといったことをお手伝いを始めたときから機をみて指摘していた。そういう状態が2ヶ月ほど続いて、GitHub Issues は機能的に厳しいという共通認識が開発者にはあるため、backlog へ一本化されることに決定した。スクラムと課題管理との関係を追究したい私にとっては朗報で、今後は PO も含めて課題管理システムの用途をメンバーにアドバイスしながら課題管理の高みを目指していきたい。但し、backlog は標準で github 連携機能を提供していないため、チケット駆動開発をするには自前で連携機能を作らないといけないらしい。</description><content>&lt;p>0時に寝て4時過ぎに起きて2度寝して6時前に起きた。&lt;/p>
&lt;h2 id="朝活-バッタを倒しにアフリカへ">朝活: バッタを倒しにアフリカへ&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/234405/">【三宮.dev オンライン】今年最後のリモート朝活もくもく会&lt;/a> に参加した。スクラム本を読み終えたので気分転換に &lt;a href="https://www.kobunsha.com/shelf/book/isbn/9784334039899">バッタを倒しにアフリカへ&lt;/a> を読むことにした。主に雑談してたら序文しか読めなかった。&lt;/p>
&lt;h2 id="課題管理システムを一本化する">課題管理システムを一本化する&lt;/h2>
&lt;p>お仕事でスクラム開発を実践している。プロダクトバックログを &lt;a href="https://backlog.com/ja/">backlog&lt;/a> で管理し、スプリントバックログを &lt;a href="https://docs.github.com/ja/issues">GitHub Issues&lt;/a> で管理している。課題を複数のプラットフォームで管理することは情報の一元管理という側面からよくないといったことをお手伝いを始めたときから機をみて指摘していた。そういう状態が2ヶ月ほど続いて、GitHub Issues は機能的に厳しいという共通認識が開発者にはあるため、backlog へ一本化されることに決定した。スクラムと課題管理との関係を追究したい私にとっては朗報で、今後は PO も含めて課題管理システムの用途をメンバーにアドバイスしながら課題管理の高みを目指していきたい。但し、backlog は標準で github 連携機能を提供していないため、チケット駆動開発をするには自前で連携機能を作らないといけないらしい。&lt;/p></content></item><item><title>スクラム開発の所感</title><link>/diary/posts/2021/1219/</link><pubDate>Sun, 19 Dec 2021 12:26:41 +0900</pubDate><guid>/diary/posts/2021/1219/</guid><description>0時に寝て2時過ぎに起きてだらだらして7時に起きてだらだらして8時に起き上がった。休日は自然とだらだらしがち。
log4j2 の脆弱性対応 たまたま sns で新たに脆弱性が発見され 2.17.0 がリリースされたことをみかけた。Apache Log4j Security Vulnerabilities をみて、午前中に対応して pr を作成して dos 攻撃の脆弱性と書いた後に次のツィートをみかけた。私は詳細を理解できていないのでこの内容が 2.17.0 で fix されているのかどうかまでは調査できていない。いずれにしても rce 攻撃はこわいから緊急度が跳ね上がるなとみていた。
【悲報】log4jのRCE脆弱性、2.15で緩和策としてlocalhostにしかlookupできなくしたはずが、127.0.0[.]1#example[.]comのように#を挟むことにより回避可能ということが判明。これにより任意ドメインへのリクエストが可能になり再びリモート実行可能に。みなさん最新版の2.17にアップデートしましょう。 https://t.co/uQhJSnjv7m
&amp;mdash; 暇な女子高専生@1日1食水煮サバ缶ダイエット (@miettal) December 19, 2021 アジャイル開発とスクラム 第2版 昨日の続き。素晴らしい本だったので所感をまとめた。スクラム開発の理解がより進んだ。
アジャイル開発とスクラム 第2版 顧客・技術・経営をつなぐ協調的ソフトウェア開発マネジメント</description><content>&lt;p>0時に寝て2時過ぎに起きてだらだらして7時に起きてだらだらして8時に起き上がった。休日は自然とだらだらしがち。&lt;/p>
&lt;h2 id="log4j2-の脆弱性対応">log4j2 の脆弱性対応&lt;/h2>
&lt;p>たまたま sns で新たに脆弱性が発見され 2.17.0 がリリースされたことをみかけた。&lt;a href="https://logging.apache.org/log4j/2.x/security.html">Apache Log4j Security Vulnerabilities&lt;/a> をみて、午前中に対応して pr を作成して dos 攻撃の脆弱性と書いた後に次のツィートをみかけた。私は詳細を理解できていないのでこの内容が 2.17.0 で fix されているのかどうかまでは調査できていない。いずれにしても rce 攻撃はこわいから緊急度が跳ね上がるなとみていた。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">【悲報】log4jのRCE脆弱性、2.15で緩和策としてlocalhostにしかlookupできなくしたはずが、127.0.0[.]1#example[.]comのように#を挟むことにより回避可能ということが判明。これにより任意ドメインへのリクエストが可能になり再びリモート実行可能に。みなさん最新版の2.17にアップデートしましょう。 &lt;a href="https://t.co/uQhJSnjv7m">https://t.co/uQhJSnjv7m&lt;/a>&lt;/p>&amp;mdash; 暇な女子高専生@1日1食水煮サバ缶ダイエット (@miettal) &lt;a href="https://twitter.com/miettal/status/1472372715281858563?ref_src=twsrc%5Etfw">December 19, 2021&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;h2 id="アジャイル開発とスクラム-第2版">アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>昨日の続き。素晴らしい本だったので所感をまとめた。スクラム開発の理解がより進んだ。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://t2y.hatenablog.jp/entry/2021/12/19/183339">アジャイル開発とスクラム 第2版 顧客・技術・経営をつなぐ協調的ソフトウェア開発マネジメント&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>スクラム本を読了</title><link>/diary/posts/2021/1218/</link><pubDate>Sat, 18 Dec 2021 17:41:18 +0900</pubDate><guid>/diary/posts/2021/1218/</guid><description>0時に寝て6時に起きてだらだらしてて8時に起き上がった。
ストレッチ 今週もお仕事に注力してた。ストレッチは2-3日/週かな。普通ぐらいの頻度。夜は寒くなって外に出掛けるのが億劫で1日ウォーキングしたかなぐらい。今日の開脚幅は開始前169cmで、ストレッチ後170cmで、久しぶりに170cm台に戻した。いい感じ。右股関節の不可動領域がよくなっているのが実感できるようになってきているので調子はよさそう。今日は全体的に右半身 (太もも後ろ、腰、大胸筋) と張りがあって疲労もやや溜まってそうに思えた。基本的に週末もなにかしら作業していて疲労が蓄積していないのは毎週のストレッチの効果も大きいと考えている。
次の bizpy 勉強会 1月の bizpy 勉強会のイベント、Python で機械学習をやってみる勉強会 を公開した。次回はわたなべさんに講師をやってもらう。このイベントページも作っていただいた。運営が2人になったのでお互いの忙しいときは分担しながらコミュニティを運営していける。本当にありがたい。わたなべさんが担当している間に私も次のネタの下調べや仕込みをする余裕がもてる。メタバースの勉強会やってもいいなとは考えているけど、私だけではコンテンツが弱くて、よそから詳しい人を招いてこないといけない。どうしたものか。
アジャイル開発とスクラム 第2版 読了した。全12章の後にもコラムと対談があって、この内容も読み応えがあっていくつも示唆を与えられるものだった。
コラム 野中理論とスクラム スペシャルトーク 野中氏と平鍋氏の対談 イノベーションに必要なのは、対話を通じて共振・共感・共鳴する実践知リーダーシップであり、それがスクラムの心だ おわりに 12章で出てきた実践知について、実践知とは何か、実践知リーダーシップとはどういうことかというのが対談の中でも繰り返し出てきてその理解が深まった。私の中では暗黙知と実践知の境界が曖昧だったが、暗黙知と形式知を行ったり来たりすること、そして身体性を伴っているというのが実践知であること。そこには「もの」や「こと」の目に見えない関係性を洞察しながら判断し、本質を考え抜く知力が必要であると述べられていた。昔は 知行合一 と言ったらしいが、90年代以降の日本は分析過多、計画過多、コンプライアンス過多になってしまったという。また時間のあるときに所感をまとめようと思う。</description><content>&lt;p>0時に寝て6時に起きてだらだらしてて8時に起き上がった。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週もお仕事に注力してた。ストレッチは2-3日/週かな。普通ぐらいの頻度。夜は寒くなって外に出掛けるのが億劫で1日ウォーキングしたかなぐらい。今日の開脚幅は開始前169cmで、ストレッチ後170cmで、久しぶりに170cm台に戻した。いい感じ。右股関節の不可動領域がよくなっているのが実感できるようになってきているので調子はよさそう。今日は全体的に右半身 (太もも後ろ、腰、大胸筋) と張りがあって疲労もやや溜まってそうに思えた。基本的に週末もなにかしら作業していて疲労が蓄積していないのは毎週のストレッチの効果も大きいと考えている。&lt;/p>
&lt;h2 id="次の-bizpy-勉強会">次の bizpy 勉強会&lt;/h2>
&lt;p>1月の bizpy 勉強会のイベント、&lt;a href="https://bizpy.connpass.com/event/234387/">Python で機械学習をやってみる勉強会&lt;/a> を公開した。次回はわたなべさんに講師をやってもらう。このイベントページも作っていただいた。運営が2人になったのでお互いの忙しいときは分担しながらコミュニティを運営していける。本当にありがたい。わたなべさんが担当している間に私も次のネタの下調べや仕込みをする余裕がもてる。メタバースの勉強会やってもいいなとは考えているけど、私だけではコンテンツが弱くて、よそから詳しい人を招いてこないといけない。どうしたものか。&lt;/p>
&lt;h2 id="アジャイル開発とスクラム-第2版">アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>読了した。全12章の後にもコラムと対談があって、この内容も読み応えがあっていくつも示唆を与えられるものだった。&lt;/p>
&lt;ul>
&lt;li>コラム 野中理論とスクラム&lt;/li>
&lt;li>スペシャルトーク 野中氏と平鍋氏の対談
&lt;ul>
&lt;li>イノベーションに必要なのは、対話を通じて共振・共感・共鳴する実践知リーダーシップであり、それがスクラムの心だ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>おわりに&lt;/li>
&lt;/ul>
&lt;p>12章で出てきた実践知について、実践知とは何か、実践知リーダーシップとはどういうことかというのが対談の中でも繰り返し出てきてその理解が深まった。私の中では暗黙知と実践知の境界が曖昧だったが、暗黙知と形式知を行ったり来たりすること、そして身体性を伴っているというのが実践知であること。そこには「もの」や「こと」の目に見えない関係性を洞察しながら判断し、本質を考え抜く知力が必要であると述べられていた。昔は &lt;a href="https://ja.wikipedia.org/wiki/%E7%9F%A5%E8%A1%8C%E5%90%88%E4%B8%80">知行合一&lt;/a> と言ったらしいが、90年代以降の日本は分析過多、計画過多、コンプライアンス過多になってしまったという。また時間のあるときに所感をまとめようと思う。&lt;/p></content></item><item><title>知識創造と実践知の考察</title><link>/diary/posts/2021/1217/</link><pubDate>Fri, 17 Dec 2021 09:03:56 +0900</pubDate><guid>/diary/posts/2021/1217/</guid><description>0時に寝て6時に起きた。ここ最近は晩ご飯作って食べてアイスクリーム食べてドラクエタクトやって寝るみたいな業後の過ごし方が多い。
朝活: アジャイル開発とスクラム 第2版 金朝ツメトギ 2021-12-17 AM 6 金曜朝6時開催のもくもく会 で第11章スクラムと知識創造と第12章スクラムと実践知リーダーを読んだ。
第11章では知識想像モデルとして SECI モデルが紹介されている。ふと読んでいて、私が課題管理システムでやっていたのはこの「表出化」の活動で、多くのスクラムをやっているチームは「共同化」を主にやっているように思えた。ソフトウェア開発方法論の歴史的に、チケット駆動開発 → イテレーション開発 → アジャイル開発/スクラムの時系列に発展してきた経緯から、私のようなチケット駆動開発をがっつりやってきた開発者が言う対話が重要だと言うことと、最初からスクラム開発で「共同化」しかやらず「表出化」していない開発者が言う対話が重要だと言うことは、背景事情からして根本的に指している内容が違うのではないか？という仮説を思いついた。対話が重要だと言う開発者がドキュメントや文章を書くことをなおざりにするのを見かけて違和感を感じていた。チケット駆動開発をがっつりやってきた開発者は文章を書いた上でそれだけでは解決できなかった問題を解決するために対話が必要だと言っているわけであり、文章すら書けない開発者は対話だけで開発を進められるわけではないと考えると、これまでスクラム開発に抱いていた私の違和感の正体に近づいたように思えた。
第12章では実践知という概念とそのリーダーシップが紹介されている。以前 実践知 — エキスパートの知性 という本を読んで、メタ認知も含めた認知心理学の知見を踏まえた知識創造や実践知を獲得するに至る背景や教育と課題管理との間にある関係性を考えていたことがあった。スクラムにおいても実践知という概念を扱っているのを読んで、ここにはなにかしらの関係性を見出したり体系化を行う余地があるように考えている。やや哲学的な話題も出てくるので人によって賛否がわかれるかもしれないが、私は自分の考えている中長期的な思考や教育への考え方の価値観が合致していて、これが日本的な経営スタイルの鍵だという意見には一定の同意ができる。自分自身も中長期的な展望を大事にしながら課題解決していきたいという想いもあるからだ。
ワーケーション準備 ワーケーション準備 の残タスクを少しずつやっていく。宿泊先の きのいえ に電話してチェックイン前に駐車場にレンタカーをとめさせてもらえないかを問い合わせた。当日に宿泊客がいれば13時以降、いなければそれよりも早めにとめてもよいとのこと。スタッフがいれば声をかけていなくても勝手にとめてよいと教えてもらった。先方からも ふるさと応援！ひょうごを旅しようキャンペーン が本来は12月末で終了だったのが2月28日まで延長されたため、宿泊者が兵庫県在住であればその手続きをしたいとのこと。一旦、オンラインで決済済みの予約をキャンセルして、現地決済で兵庫県の割り引きの手続きをしてくれるという。メンバーは4人中3人が兵庫県在住なので4,000円/人の割り引きで合計12,000円の割り引きになった。</description><content>&lt;p>0時に寝て6時に起きた。ここ最近は晩ご飯作って食べてアイスクリーム食べてドラクエタクトやって寝るみたいな業後の過ごし方が多い。&lt;/p>
&lt;h2 id="朝活-アジャイル開発とスクラム-第2版">朝活: アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>&lt;a href="https://t.co/0erAzQpDzk">金朝ツメトギ 2021-12-17 AM 6 金曜朝6時開催のもくもく会&lt;/a> で第11章スクラムと知識創造と第12章スクラムと実践知リーダーを読んだ。&lt;/p>
&lt;p>第11章では知識想像モデルとして SECI モデルが紹介されている。ふと読んでいて、私が課題管理システムでやっていたのはこの「表出化」の活動で、多くのスクラムをやっているチームは「共同化」を主にやっているように思えた。ソフトウェア開発方法論の歴史的に、チケット駆動開発 → イテレーション開発 → アジャイル開発/スクラムの時系列に発展してきた経緯から、私のようなチケット駆動開発をがっつりやってきた開発者が言う対話が重要だと言うことと、最初からスクラム開発で「共同化」しかやらず「表出化」していない開発者が言う対話が重要だと言うことは、背景事情からして根本的に指している内容が違うのではないか？という仮説を思いついた。対話が重要だと言う開発者がドキュメントや文章を書くことをなおざりにするのを見かけて違和感を感じていた。チケット駆動開発をがっつりやってきた開発者は文章を書いた上でそれだけでは解決できなかった問題を解決するために対話が必要だと言っているわけであり、文章すら書けない開発者は対話だけで開発を進められるわけではないと考えると、これまでスクラム開発に抱いていた私の違和感の正体に近づいたように思えた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2021/1217_seci-model.png"/>
&lt;/figure>
&lt;p>第12章では実践知という概念とそのリーダーシップが紹介されている。以前 &lt;a href="https://b.kobe-u.ac.jp/books/b007/">実践知 — エキスパートの知性&lt;/a> という本を読んで、メタ認知も含めた認知心理学の知見を踏まえた知識創造や実践知を獲得するに至る背景や教育と課題管理との間にある関係性を考えていたことがあった。スクラムにおいても実践知という概念を扱っているのを読んで、ここにはなにかしらの関係性を見出したり体系化を行う余地があるように考えている。やや哲学的な話題も出てくるので人によって賛否がわかれるかもしれないが、私は自分の考えている中長期的な思考や教育への考え方の価値観が合致していて、これが日本的な経営スタイルの鍵だという意見には一定の同意ができる。自分自身も中長期的な展望を大事にしながら課題解決していきたいという想いもあるからだ。&lt;/p>
&lt;h2 id="ワーケーション準備">ワーケーション準備&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2021/1212/#ワーケーション予約">ワーケーション準備&lt;/a> の残タスクを少しずつやっていく。宿泊先の &lt;a href="https://kinosaki-kinoie.com/">きのいえ&lt;/a> に電話してチェックイン前に駐車場にレンタカーをとめさせてもらえないかを問い合わせた。当日に宿泊客がいれば13時以降、いなければそれよりも早めにとめてもよいとのこと。スタッフがいれば声をかけていなくても勝手にとめてよいと教えてもらった。先方からも &lt;a href="https://www.hyogo-tourism.jp/furusato-ouen/">ふるさと応援！ひょうごを旅しようキャンペーン&lt;/a> が本来は12月末で終了だったのが2月28日まで延長されたため、宿泊者が兵庫県在住であればその手続きをしたいとのこと。一旦、オンラインで決済済みの予約をキャンセルして、現地決済で兵庫県の割り引きの手続きをしてくれるという。メンバーは4人中3人が兵庫県在住なので4,000円/人の割り引きで合計12,000円の割り引きになった。&lt;/p></content></item><item><title>データと業務の変遷</title><link>/diary/posts/2021/1215/</link><pubDate>Wed, 15 Dec 2021 09:21:52 +0900</pubDate><guid>/diary/posts/2021/1215/</guid><description>23時に寝てこわい夢をみて1時半に起きて、そのまま寝たのか寝てないのかよくわからない仮眠状態で5時半に起きた。
朝活: アジャイル開発とスクラム 第2版 【三宮.dev オンライン】リモート朝活もくもく会 で第10章 竹内・野中のスクラム論文再考を読んだ。1986年に竹内氏と野中氏によって書かれた The New New Product Development Game から得た概念や理論的背景をスクラム創設者のジェフ・サザーランド氏がソフトウェア開発の方法論として体系化したものがスクラムになる。そのため、原点はこの論文にある。第10章ではオリジナルに書かれている内容とスクラム開発を比較している。オリジナルの論文にある TypeC (キヤノンやホンダの新製品開発) のようなチームの特徴として次の6つをあげている。
不安定な状態を保つ
最初に綿密な計画や指示があるわけではない、チームは自由な裁量と同時に困難なゴールを目指す
プロジェクトチームは自ら組織化する
チームは不安定な状態から自己組織化し、対話の中で自律状態を作り出す
開発フェーズを重複させる
開発フェーズを重複させることで、メンバーは専門分野を超えてプロジェクト全体で責任をもつようになる
「マルチ学習」
メンバーはグループ全体として学習し、専門を超えて学習する
柔らかなマネジメント
無管理でも強い管理でもない自主性を尊重した柔らかなマネジメントが重要である
学びを組織で共有する
過去の成功を組織に伝える、もしくは意識的に捨て去る
オリジナルの論文の解説を読んでいると、古きよき日本の家族ぐるみの職場やチームの働き方のように思えてくる。時代が違うのでいまからこういった働き方に戻るのは現実的ではないだろうが、その中で重要だった概念や要素を、いまソフトウェア開発方法論としてのスクラムで実践できるのはいろいろと私の中でも思うことがある。私の考える課題管理の方法論にも竹内・野中氏のオリジナルの論文の概念は影響を受けるように思えた。章末にコラムとしてジェフ・サザーランド氏のインタビュー記事もあった。マイクロファイナンスのプロジェクトを通して、小さなグループに小さくお金を貸し出すことが、貧困から抜けすための小さなきっかけ (ブートストラップ) になるという体験からスクラム開発の動機づけになったという話しは哲学として印象に残った。なにかを成すには哲学が大事だと思う。
データがあると同期したくなる お仕事でスクラムのふりかえりをやっていて miro と backlog のデータ同期という話題が出た。業務チームはブレインストーミングで要件を洗い出したりする作業のときに miro を使っていて、miro ベースでメモを記述した後でバックログアイテムとして backlog に登録する。このとき backlog に登録した後で miro を捨てるならいいが、残したまま次の展望や要件の洗い出しにも再利用したりしていると、miro と backlog のバックログアイテムの内容が乖離したり不整合が発生したりする。チームとしてはバックログアイテムに書いてある内容が正という運用をしているため、miro のみに最新の情報がある状態が続くと課題になる。私の知る限り、miro と課題管理システムのデータ連携のツールはないと思う。
私からみたら最初からすべてバックログアイテムに文章で書けばいいやんで話が終わってしまうが、人によって使い慣れたツールは異なるため、そんな単純な話しでもない。一方で昔は miro や backlog がなかった時代もあって、そのときは物理的な付箋紙をホワイトボードに張りながら作業をしていたから、本来は同期したいという概念もなかったはずという意見も出た。たしかにツールがデジタルになって電子データとなった瞬間からデータの再利用を考えるようになるんだなと私も思えた。あと付箋紙をホワイトボードに貼り付けていた時代は何週間もその状態のまま放置するといったこともなかったのではないか？という気もした。</description><content>&lt;p>23時に寝てこわい夢をみて1時半に起きて、そのまま寝たのか寝てないのかよくわからない仮眠状態で5時半に起きた。&lt;/p>
&lt;h2 id="朝活-アジャイル開発とスクラム-第2版">朝活: アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/233922/">【三宮.dev オンライン】リモート朝活もくもく会&lt;/a> で第10章 竹内・野中のスクラム論文再考を読んだ。1986年に竹内氏と野中氏によって書かれた &lt;a href="https://hbr.org/1986/01/the-new-new-product-development-game">The New New Product Development Game&lt;/a> から得た概念や理論的背景をスクラム創設者のジェフ・サザーランド氏がソフトウェア開発の方法論として体系化したものがスクラムになる。そのため、原点はこの論文にある。第10章ではオリジナルに書かれている内容とスクラム開発を比較している。オリジナルの論文にある TypeC (キヤノンやホンダの新製品開発) のようなチームの特徴として次の6つをあげている。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>不安定な状態を保つ&lt;/p>
&lt;p>最初に綿密な計画や指示があるわけではない、チームは自由な裁量と同時に困難なゴールを目指す&lt;/p>
&lt;/li>
&lt;li>
&lt;p>プロジェクトチームは自ら組織化する&lt;/p>
&lt;p>チームは不安定な状態から自己組織化し、対話の中で自律状態を作り出す&lt;/p>
&lt;/li>
&lt;li>
&lt;p>開発フェーズを重複させる&lt;/p>
&lt;p>開発フェーズを重複させることで、メンバーは専門分野を超えてプロジェクト全体で責任をもつようになる&lt;/p>
&lt;/li>
&lt;li>
&lt;p>「マルチ学習」&lt;/p>
&lt;p>メンバーはグループ全体として学習し、専門を超えて学習する&lt;/p>
&lt;/li>
&lt;li>
&lt;p>柔らかなマネジメント&lt;/p>
&lt;p>無管理でも強い管理でもない自主性を尊重した柔らかなマネジメントが重要である&lt;/p>
&lt;/li>
&lt;li>
&lt;p>学びを組織で共有する&lt;/p>
&lt;p>過去の成功を組織に伝える、もしくは意識的に捨て去る&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>オリジナルの論文の解説を読んでいると、古きよき日本の家族ぐるみの職場やチームの働き方のように思えてくる。時代が違うのでいまからこういった働き方に戻るのは現実的ではないだろうが、その中で重要だった概念や要素を、いまソフトウェア開発方法論としてのスクラムで実践できるのはいろいろと私の中でも思うことがある。私の考える課題管理の方法論にも竹内・野中氏のオリジナルの論文の概念は影響を受けるように思えた。章末にコラムとしてジェフ・サザーランド氏のインタビュー記事もあった。マイクロファイナンスのプロジェクトを通して、小さなグループに小さくお金を貸し出すことが、貧困から抜けすための小さなきっかけ (ブートストラップ) になるという体験からスクラム開発の動機づけになったという話しは哲学として印象に残った。なにかを成すには哲学が大事だと思う。&lt;/p>
&lt;h2 id="データがあると同期したくなる">データがあると同期したくなる&lt;/h2>
&lt;p>お仕事でスクラムのふりかえりをやっていて &lt;a href="https://miro.com/">miro&lt;/a> と &lt;a href="https://backlog.com/ja/">backlog&lt;/a> のデータ同期という話題が出た。業務チームはブレインストーミングで要件を洗い出したりする作業のときに miro を使っていて、miro ベースでメモを記述した後でバックログアイテムとして backlog に登録する。このとき backlog に登録した後で miro を捨てるならいいが、残したまま次の展望や要件の洗い出しにも再利用したりしていると、miro と backlog のバックログアイテムの内容が乖離したり不整合が発生したりする。チームとしてはバックログアイテムに書いてある内容が正という運用をしているため、miro のみに最新の情報がある状態が続くと課題になる。私の知る限り、miro と課題管理システムのデータ連携のツールはないと思う。&lt;/p>
&lt;p>私からみたら最初からすべてバックログアイテムに文章で書けばいいやんで話が終わってしまうが、人によって使い慣れたツールは異なるため、そんな単純な話しでもない。一方で昔は miro や backlog がなかった時代もあって、そのときは物理的な付箋紙をホワイトボードに張りながら作業をしていたから、本来は同期したいという概念もなかったはずという意見も出た。たしかにツールがデジタルになって電子データとなった瞬間からデータの再利用を考えるようになるんだなと私も思えた。あと付箋紙をホワイトボードに貼り付けていた時代は何週間もその状態のまま放置するといったこともなかったのではないか？という気もした。&lt;/p></content></item><item><title>ワーケーションの思いつき</title><link>/diary/posts/2021/1210/</link><pubDate>Fri, 10 Dec 2021 08:43:04 +0900</pubDate><guid>/diary/posts/2021/1210/</guid><description>0時に寝て6時に起きた。
朝活: アジャイル開発とスクラム 第2版 金朝ツメトギ 2021-12-10 AM 6 金曜朝6時開催のもくもく会 に参加した。今回はてらださんも来られていた。第9章を読んだ。KDDI さんの事例紹介で2013年から取り組みしているらしい。フラクタルスプリント を実際の業務で実践している稀な事例としておもしろかった。1週間のスプリントの中に1日のスプリントが4回あるといったフラクタル構造のスプリント。また金曜日は「仕事をしない日」としてレトロスペクティブと OST (オープンスペーステクノロジー、自由な発表と議論の時間) に割当てている。20%ルールに近いものと言えるかもしれないが、自己研鑽のための時間をスプリントの中に組み込むという、組織の理解があってこそできる取り組みを実践していてすごいなと感心した。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。スクラムの話題として だいくしーのスクラム Bar #1 や Scrum Masters Night! Online 〜第10夜〜 に参加してやり取りした内容や考察したことなどをいろいろ話してた。そのうちの話題の1つに、スクラムマスターの役割とは何だろうかがある。スクラムマスターはプロダクトをよくすることに責任をもち、メンバーが働きやすいように支えるような役割である。ここまでは共通認識として、その範囲がどこまでかは人によって意見が異なるように思えた。あくまでプロダクトやチームの範囲内で行動するスクラムマスターと、スクラムを組織全体に広めたり、人事・評価制度や経営にも参加していくスクラムマスターがある。スクラムマスターは社外の人間でもできるという考え方があるが、必然的に後者の役割も担うなら社内の人間に限定される。後者の役割は越権行為ではないか、いやいや、チームのために働いたメンバーの評価が下がってしまえば現場でよりよいプロダクト開発はできないから大事ではないかという意見も出た。便宜上、前者を (普通の) スクラムマスター、後者を「意識の高い」スクラムマスターと呼ぶ。私の考えでは、意識の高いスクラムマスターの言わんとしていることはわかるが、それをやりたいなら部長や役員などになってから職責とともに改善すべきであり、スクラムマスターという組織におけるラインではない人が経営に口出ししたりすることによる、組織の歪みはまた別の問題を引き起こすのではないかとも思えた。私も経営をやっていて経営側の視点でみるとやはりおかしい。
その後にワーケーションについて相談した。城崎温泉にある きのいえ でワーケーションをやってみようかと考えている。参加のお誘いややり方についていくつか相談しながら前向きに検討しようということになった。
忘年会 【初参加大歓迎】三宮.dev＆bizpy 合同忘年会 に参加してきた。忘年会の前に運営に入ってもらった、わたなべさんと軽く bizpy の運営について話してきた。1月はわたなべさんに機械学習の勉強会をやってもらう。私は昨年も三宮.devの忘年会に出てた。昨年は3人だったのが今年は4人になった。名物の大きなポークカツレツ。4人とも勉強会の常連みたいな人たちなのでお酒を飲みながらわいわいやって、コロナ禍になる前のコミュニティの勉強会の飲み会を思い出したりしてた。ワーケーションの話をしたら2人は興味を示してくれて、メンバーが4人集まったので開発合宿の企画をしてみることに決めた。</description><content>&lt;p>0時に寝て6時に起きた。&lt;/p>
&lt;h2 id="朝活-アジャイル開発とスクラム-第2版">朝活: アジャイル開発とスクラム 第2版&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=MbpX1LF1fto">金朝ツメトギ 2021-12-10 AM 6 金曜朝6時開催のもくもく会&lt;/a> に参加した。今回はてらださんも来られていた。第9章を読んだ。KDDI さんの事例紹介で2013年から取り組みしているらしい。&lt;a href="/diary/diary/posts/2021/1029/#フラクタルスプリント">フラクタルスプリント&lt;/a> を実際の業務で実践している稀な事例としておもしろかった。1週間のスプリントの中に1日のスプリントが4回あるといったフラクタル構造のスプリント。また金曜日は「仕事をしない日」としてレトロスペクティブと OST (オープンスペーステクノロジー、自由な発表と議論の時間) に割当てている。20%ルールに近いものと言えるかもしれないが、自己研鑽のための時間をスプリントの中に組み込むという、組織の理解があってこそできる取り組みを実践していてすごいなと感心した。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2021/1210-weekly-sprint.png"/>
&lt;/figure>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。スクラムの話題として &lt;a href="https://chatwork.connpass.com/event/231183/">だいくしーのスクラム Bar #1&lt;/a> や &lt;a href="https://smn.connpass.com/event/226002/">Scrum Masters Night! Online 〜第10夜〜&lt;/a> に参加してやり取りした内容や考察したことなどをいろいろ話してた。そのうちの話題の1つに、スクラムマスターの役割とは何だろうかがある。スクラムマスターはプロダクトをよくすることに責任をもち、メンバーが働きやすいように支えるような役割である。ここまでは共通認識として、その範囲がどこまでかは人によって意見が異なるように思えた。あくまでプロダクトやチームの範囲内で行動するスクラムマスターと、スクラムを組織全体に広めたり、人事・評価制度や経営にも参加していくスクラムマスターがある。スクラムマスターは社外の人間でもできるという考え方があるが、必然的に後者の役割も担うなら社内の人間に限定される。後者の役割は越権行為ではないか、いやいや、チームのために働いたメンバーの評価が下がってしまえば現場でよりよいプロダクト開発はできないから大事ではないかという意見も出た。便宜上、前者を (普通の) スクラムマスター、後者を「意識の高い」スクラムマスターと呼ぶ。私の考えでは、意識の高いスクラムマスターの言わんとしていることはわかるが、それをやりたいなら部長や役員などになってから職責とともに改善すべきであり、スクラムマスターという組織におけるラインではない人が経営に口出ししたりすることによる、組織の歪みはまた別の問題を引き起こすのではないかとも思えた。私も経営をやっていて経営側の視点でみるとやはりおかしい。&lt;/p>
&lt;p>その後にワーケーションについて相談した。城崎温泉にある &lt;a href="https://kinosaki-kinoie.com/">きのいえ&lt;/a> でワーケーションをやってみようかと考えている。参加のお誘いややり方についていくつか相談しながら前向きに検討しようということになった。&lt;/p>
&lt;h2 id="忘年会">忘年会&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/231602/">【初参加大歓迎】三宮.dev＆bizpy 合同忘年会&lt;/a> に参加してきた。忘年会の前に運営に入ってもらった、わたなべさんと軽く bizpy の運営について話してきた。1月はわたなべさんに機械学習の勉強会をやってもらう。私は昨年も三宮.devの忘年会に出てた。昨年は3人だったのが今年は4人になった。名物の大きなポークカツレツ。4人とも勉強会の常連みたいな人たちなのでお酒を飲みながらわいわいやって、コロナ禍になる前のコミュニティの勉強会の飲み会を思い出したりしてた。ワーケーションの話をしたら2人は興味を示してくれて、メンバーが4人集まったので開発合宿の企画をしてみることに決めた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2021/1210-katsu.jpg"/>
&lt;/figure></content></item><item><title>整理・整頓・清掃・清潔・躾</title><link>/diary/posts/2021/1208/</link><pubDate>Wed, 08 Dec 2021 07:01:44 +0900</pubDate><guid>/diary/posts/2021/1208/</guid><description>0時に寝て5時に起きた。今日はがんばって起きた！久しぶりに7時半から始業してた。
トヨタの5S スクラムイベントのふりかえりをしていて トヨタの5S の話題が出た。聞いたことがあるようないような、スクラムを勉強しているいま見返すとじわじわ聞いてくる。玄人ぶって「そうそう、こういうのが大事なんだよ」とか言いたくなりそうな雰囲気がある。普通にやっていたら当たり前のことなのに、忙しかったり複雑な問題に対応してたりすると、普通の状態を維持できなくなって混沌がもたらされる気がする。そういう状況のときに初心に戻るにはこういった原則や標榜を使って啓蒙することに意義があるんだと、いまは思うようになってきた。これ自体をよいとかわるいとか言うのは適切ではなくて、うまくいっていない状態からより戻すときに活用するといった考え方の方が正しいのかもしれない。</description><content>&lt;p>0時に寝て5時に起きた。今日はがんばって起きた！久しぶりに7時半から始業してた。&lt;/p>
&lt;h2 id="トヨタの5s">トヨタの5S&lt;/h2>
&lt;p>スクラムイベントのふりかえりをしていて &lt;a href="https://circu.co.jp/pro-sharing/mag/article/2964/">トヨタの5S&lt;/a> の話題が出た。聞いたことがあるようないような、スクラムを勉強しているいま見返すとじわじわ聞いてくる。玄人ぶって「そうそう、こういうのが大事なんだよ」とか言いたくなりそうな雰囲気がある。普通にやっていたら当たり前のことなのに、忙しかったり複雑な問題に対応してたりすると、普通の状態を維持できなくなって混沌がもたらされる気がする。そういう状況のときに初心に戻るにはこういった原則や標榜を使って啓蒙することに意義があるんだと、いまは思うようになってきた。これ自体をよいとかわるいとか言うのは適切ではなくて、うまくいっていない状態からより戻すときに活用するといった考え方の方が正しいのかもしれない。&lt;/p></content></item><item><title>スクラムイベントにもの思い</title><link>/diary/posts/2021/1202/</link><pubDate>Thu, 02 Dec 2021 07:43:21 +0900</pubDate><guid>/diary/posts/2021/1202/</guid><description>23時に寝て6時半に起きた。昨日は疲労困憊だったのでなんもせずすぐ寝た。
スクラムイベント お仕事のスクラム開発で木曜日はスプリントレビューとプロダクトバックログリファインメントを行う。主にステークホルダーとプロジェクトオーナーがプロダクトバックログアイテムの優先度を議論したり、タスクに細分化されていない課題をタスクにしていくための作業に当てたりしている。本当はタスク化されたイシューをさらにリファイメントするイベントなのだろうだけど、まだそこまで業務やチームの体制が成熟していないため、タスクの細分化のための時間になっていたりしている。
これらのイベントで開発者がイニシアティブをとることはないけど、プロダクトオーナーやその業務チームにいるメンバーたちがどうやって業務をタスク化しているかのやり取りもみえたりする。開発者にとってそのやり取りをみていることに意味があるかどうかはまだ私にはわからないが、業務チームのメンバーがどういった働き方をしているかを知るきっかけにはなる。業務チームは miro を使ってメンバーみんなで同時編集しながら課題を付箋代わりのメモに落としていく。その個々のメモがタスクに近いものになるのだろうけど、私からみたら業務すべてを知っている人がまとめて細分化してドキュメントに書き記して2-3回みんなでレビューすれば終わるようなものを、みんなで付箋紙に書いていって整合性が取れているのかどうかわからないメモの固まりを作っているようにみえる。この作業はみんなでやらないと進捗しないので1週間に1回とかになる。
チームが扱うすべての業務を知っているメンバーはいない 業務に必要な機能の優先順位や優先度を決める権限をもっていない 情報が足りないと思ったときにメンバーが自律的に動いて補う体制が整っていない あとステークホルダーが話す要件や仕様に関わってくる話の大半が口頭で行われていてドキュメントや課題管理に文章として書き記されていない。だから同じ話しを何度も繰り返し聞くようなケースも発生する。わからないことを聞くことも、繰り返し聞くことも問題ではないが、議事録以外にそこで話す内容がドキュメント化されないのはどうしてだろう？という気もした。もっともっと文章を書かないと情報共有やノウハウをためることにはつながっていかないだろうということも垣間みえる。
総括すれば、どんな開発方法論を使っても、リーダーやマネージャークラスが圧倒的に文章を書けないと、その配下のメンバーは自律的に行動できないというだけの話しでしかないが、どうやったら解消できるか？はまだまだこれからの私の課題でもある。</description><content>&lt;p>23時に寝て6時半に起きた。昨日は疲労困憊だったのでなんもせずすぐ寝た。&lt;/p>
&lt;h2 id="スクラムイベント">スクラムイベント&lt;/h2>
&lt;p>お仕事のスクラム開発で木曜日はスプリントレビューとプロダクトバックログリファインメントを行う。主にステークホルダーとプロジェクトオーナーがプロダクトバックログアイテムの優先度を議論したり、タスクに細分化されていない課題をタスクにしていくための作業に当てたりしている。本当はタスク化されたイシューをさらにリファイメントするイベントなのだろうだけど、まだそこまで業務やチームの体制が成熟していないため、タスクの細分化のための時間になっていたりしている。&lt;/p>
&lt;p>これらのイベントで開発者がイニシアティブをとることはないけど、プロダクトオーナーやその業務チームにいるメンバーたちがどうやって業務をタスク化しているかのやり取りもみえたりする。開発者にとってそのやり取りをみていることに意味があるかどうかはまだ私にはわからないが、業務チームのメンバーがどういった働き方をしているかを知るきっかけにはなる。業務チームは &lt;a href="https://miro.com/">miro&lt;/a> を使ってメンバーみんなで同時編集しながら課題を付箋代わりのメモに落としていく。その個々のメモがタスクに近いものになるのだろうけど、私からみたら業務すべてを知っている人がまとめて細分化してドキュメントに書き記して2-3回みんなでレビューすれば終わるようなものを、みんなで付箋紙に書いていって整合性が取れているのかどうかわからないメモの固まりを作っているようにみえる。この作業はみんなでやらないと進捗しないので1週間に1回とかになる。&lt;/p>
&lt;ul>
&lt;li>チームが扱うすべての業務を知っているメンバーはいない&lt;/li>
&lt;li>業務に必要な機能の優先順位や優先度を決める権限をもっていない&lt;/li>
&lt;li>情報が足りないと思ったときにメンバーが自律的に動いて補う体制が整っていない&lt;/li>
&lt;/ul>
&lt;p>あとステークホルダーが話す要件や仕様に関わってくる話の大半が口頭で行われていてドキュメントや課題管理に文章として書き記されていない。だから同じ話しを何度も繰り返し聞くようなケースも発生する。わからないことを聞くことも、繰り返し聞くことも問題ではないが、議事録以外にそこで話す内容がドキュメント化されないのはどうしてだろう？という気もした。もっともっと文章を書かないと情報共有やノウハウをためることにはつながっていかないだろうということも垣間みえる。&lt;/p>
&lt;p>総括すれば、どんな開発方法論を使っても、リーダーやマネージャークラスが圧倒的に文章を書けないと、その配下のメンバーは自律的に行動できないというだけの話しでしかないが、どうやったら解消できるか？はまだまだこれからの私の課題でもある。&lt;/p></content></item><item><title>eLTAX 触ってみた</title><link>/diary/posts/2021/1124/</link><pubDate>Wed, 24 Nov 2021 08:02:59 +0900</pubDate><guid>/diary/posts/2021/1124/</guid><description>0時半に寝て6時半に起きた。水曜日は朝活の日だったけど、申し込み忘れてカレンダーに入ってなかったから忘れてた。カレンダーの予定に従って生活していることがわかる。
ふりかえり 今日はお仕事でスクラムイベントのレトロスペクティブがあった。最近は日本語でそのまま「ふりかえり」と呼ぶみたいやね。他の用語が英語なのであわせて英語で読んでたけど、ふりかえりの方が日本人的にはしっくりくるのでそれでいいと思う。
開発の情報共有のやり取りが活発になったという意見が出た。私は11月から働き始めてまだ3週間ほどなので以前がどうだったのかわからない。2週間前に本格的にスクラム開発に移行して、POや開発者のリーダーが新任したり、開発者に新規メンバー (私のこと) が追加したりと、いろんな状況が変わっている。なにか特別なことをしたというわけではないけど、自然にコミュニケーションがよい方に改善されているなら全体としてよい傾向に思える。私はまだ業務のことが全くわからないのでインフラやテストなどの非機能要件のタスクをやっているだけ。開発者からみて負債というほど大きなものではないが、やった方がよい技術的な残タスクのようなものを私がどんどん fix しているので開発環境がよくなっている気がするといったコメントを名指しでいただいた。スクラムマスターによると、ふりかえりでは、個人名で問題を指摘するのはよくないが、個人名で感謝を伝えるのはよいという。なので、よいことには個人名が前面に出る。褒められて悪い気がする人はそうそういないので、このプラクティスはチームの雰囲気をよくすることに寄与するのだろうと思えた。
続: 年末調整と住民税の納付 昨日 の続き。eLTAX のソフト版をダウンロードして年末調整の給与支払報告書の申請、住民税の特別徴収の納付も行った。アプリケーションの操作方法と手続きのドキュメントは懇切丁寧な内容なので、アプリケーションそのものの使い勝手はいまいちだけど、とくに手続きに迷うこともなく、順番に操作していけば問題なく申請や納付を完了できた。この2つの手続きは、昨年は紙で申請したり納付したりしていたのが、今年は電子申告になったのでちょっとクラスチェンジしたような感覚で気分がよかった。定期的な行政手続きを毎年やりながら少しずつやり方を洗練させていったり、異なる手続きに挑戦してみたり、制度の仕組みを理解したり、そういう少しずつ改善して学びを深めていくことそのものに幸せ感がある。人に依るんだろうけど、わりと私はマイクロ法人の行政手続きを楽しんでいる。</description><content>&lt;p>0時半に寝て6時半に起きた。水曜日は朝活の日だったけど、申し込み忘れてカレンダーに入ってなかったから忘れてた。カレンダーの予定に従って生活していることがわかる。&lt;/p>
&lt;h2 id="ふりかえり">ふりかえり&lt;/h2>
&lt;p>今日はお仕事でスクラムイベントのレトロスペクティブがあった。最近は日本語でそのまま「ふりかえり」と呼ぶみたいやね。他の用語が英語なのであわせて英語で読んでたけど、ふりかえりの方が日本人的にはしっくりくるのでそれでいいと思う。&lt;/p>
&lt;p>開発の情報共有のやり取りが活発になったという意見が出た。私は11月から働き始めてまだ3週間ほどなので以前がどうだったのかわからない。2週間前に本格的にスクラム開発に移行して、POや開発者のリーダーが新任したり、開発者に新規メンバー (私のこと) が追加したりと、いろんな状況が変わっている。なにか特別なことをしたというわけではないけど、自然にコミュニケーションがよい方に改善されているなら全体としてよい傾向に思える。私はまだ業務のことが全くわからないのでインフラやテストなどの非機能要件のタスクをやっているだけ。開発者からみて負債というほど大きなものではないが、やった方がよい技術的な残タスクのようなものを私がどんどん fix しているので開発環境がよくなっている気がするといったコメントを名指しでいただいた。スクラムマスターによると、ふりかえりでは、個人名で問題を指摘するのはよくないが、個人名で感謝を伝えるのはよいという。なので、よいことには個人名が前面に出る。褒められて悪い気がする人はそうそういないので、このプラクティスはチームの雰囲気をよくすることに寄与するのだろうと思えた。&lt;/p>
&lt;h2 id="続-年末調整と住民税の納付">続: 年末調整と住民税の納付&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2021/1123/#年末調整と住民税の納付">昨日&lt;/a> の続き。eLTAX のソフト版をダウンロードして年末調整の給与支払報告書の申請、住民税の特別徴収の納付も行った。アプリケーションの操作方法と手続きのドキュメントは懇切丁寧な内容なので、アプリケーションそのものの使い勝手はいまいちだけど、とくに手続きに迷うこともなく、順番に操作していけば問題なく申請や納付を完了できた。この2つの手続きは、昨年は紙で申請したり納付したりしていたのが、今年は電子申告になったのでちょっとクラスチェンジしたような感覚で気分がよかった。定期的な行政手続きを毎年やりながら少しずつやり方を洗練させていったり、異なる手続きに挑戦してみたり、制度の仕組みを理解したり、そういう少しずつ改善して学びを深めていくことそのものに幸せ感がある。人に依るんだろうけど、わりと私はマイクロ法人の行政手続きを楽しんでいる。&lt;/p></content></item><item><title>PMBOK セミナー</title><link>/diary/posts/2021/1111/</link><pubDate>Thu, 11 Nov 2021 07:56:49 +0900</pubDate><guid>/diary/posts/2021/1111/</guid><description>22時に寝て4時半に起きた。昨日は勉強会を連日でやって疲れ果ててからバテてすぐに寝た。久しぶりによく眠れた。起きてから1時間ほどドラクエタクトやって、ストレッチやって、7時半にはオフィスに行って8時からお仕事してた。
スクラム談義 お仕事で本格的なスクラム開発に参加することになった。スクラムマスターのかわのさんと少しスクラムで雑談した。アジャイル、スクラム、チケット駆動、課題管理などの話題であれこれ話してた。かわのさんはスクラムやアジャイルのアーリーアダプターのようで、かなり昔からやっているから経験や実績が多そうなので私の疑問や懸念に的確に返答をくれた。実際の現場でどう応用するかは別の話題としても、スクラムはそもそも「良い結果」を出すためのものではく「現状をありのままに見る」ものらしい。うまくやろうと思ったらスクラムにプラクティスや開発方法論を組み合わせないといけないし、そのための軽量フレームワークになっているのに、スクラムだけ実践すればうまくいくと誤解している人たちもいるといった話題もあった。私がスクラムうまくいってなさそうなチームをみていて微妙だと感じたのは、自分たちの課題に向き合ったプラクティスや改善に取り組んでなくて、スクラムの方法論を守ることに注力しているようにみえたからかもしれない。
紙の契約書に挑戦 新しいお仕事の契約は紙の契約で結ぶ。実はこれまで クラウドサイン で電子契約しかしたことなくて、紙の契約書は初めてでどきどきした。言うても印鑑を押すだけなんやけどな。でも、印鑑押すのってきれいに押したいという気持ちが出てちょっと緊張するからあまり好きではない。
PMBOK セミナー PMBOK®ガイド第7版 Quick Review に参加した。
参加者は60人で、すでに PMBOK ガイド第7版を購入またはダウンロードした人が十数人だったらしい。 PMBOK ガイドは4-5年ごとに更新されるものらしい。 本セミナーでは第6版と第7版の違いがどういったものかの概要を説明していた。第7版は第6版の拡張であり、実務で PMBOK ガイドが必要な人は依然として第6版も購入した方がよいと話されていた。
というのは、第7版は過去のガイドを更新したものではなく、PMP 試験は第6版の時点でアジャイルな要素も取り入れているため、第7版のために変更を加えるといった予定は現時点ではない。 つまり、少なくとも PMP 試験やプロジェクトマネジメントの国際規格である ISO 21500 は第6版をベースにした内容があるため、それらが急になくなったりすることはないらしい。第6版と第7版の違いとして次のような話しをされていた。
プロジェクトマネジメントの節目の切り口が変わった？ 第6版: プロセスベース 第7版: 原理原則 第7版でガイドに チーム が登場するようになった 主語がチームとなり、チームが○○するための原理原則はこうであるといった内容に変わった 主役はプロセスではなくチーム プロジェクトにチームが寄り添うようになった これらの違いは、第6版と第7版をテキストマイニングして、共起ネットワークを構築して比較してみるとよくわかると分析されていた。あとおもしろかったのが、第6版と第7版ではページ数は半減したものの、文字数は3割減程度となっており、箇条書きが多かった内容が説明ベースの文章に変わったためだろうといった話しもあった。</description><content>&lt;p>22時に寝て4時半に起きた。昨日は勉強会を連日でやって疲れ果ててからバテてすぐに寝た。久しぶりによく眠れた。起きてから1時間ほどドラクエタクトやって、ストレッチやって、7時半にはオフィスに行って8時からお仕事してた。&lt;/p>
&lt;h2 id="スクラム談義">スクラム談義&lt;/h2>
&lt;p>お仕事で本格的なスクラム開発に参加することになった。スクラムマスターのかわのさんと少しスクラムで雑談した。アジャイル、スクラム、チケット駆動、課題管理などの話題であれこれ話してた。かわのさんはスクラムやアジャイルのアーリーアダプターのようで、かなり昔からやっているから経験や実績が多そうなので私の疑問や懸念に的確に返答をくれた。実際の現場でどう応用するかは別の話題としても、スクラムはそもそも「良い結果」を出すためのものではく「現状をありのままに見る」ものらしい。うまくやろうと思ったらスクラムにプラクティスや開発方法論を組み合わせないといけないし、そのための軽量フレームワークになっているのに、スクラムだけ実践すればうまくいくと誤解している人たちもいるといった話題もあった。私がスクラムうまくいってなさそうなチームをみていて微妙だと感じたのは、自分たちの課題に向き合ったプラクティスや改善に取り組んでなくて、スクラムの方法論を守ることに注力しているようにみえたからかもしれない。&lt;/p>
&lt;h2 id="紙の契約書に挑戦">紙の契約書に挑戦&lt;/h2>
&lt;p>新しいお仕事の契約は紙の契約で結ぶ。実はこれまで &lt;a href="https://www.cloudsign.jp/">クラウドサイン&lt;/a> で電子契約しかしたことなくて、紙の契約書は初めてでどきどきした。言うても印鑑を押すだけなんやけどな。でも、印鑑押すのってきれいに押したいという気持ちが出てちょっと緊張するからあまり好きではない。&lt;/p>
&lt;h2 id="pmbok-セミナー">PMBOK セミナー&lt;/h2>
&lt;p>&lt;a href="https://aitrainingcenter.axis-ing.com/pmbok-quick">PMBOK®ガイド第7版 Quick Review&lt;/a> に参加した。&lt;/p>
&lt;p>参加者は60人で、すでに PMBOK ガイド第7版を購入またはダウンロードした人が十数人だったらしい。
PMBOK ガイドは4-5年ごとに更新されるものらしい。
本セミナーでは第6版と第7版の違いがどういったものかの概要を説明していた。第7版は第6版の拡張であり、実務で PMBOK ガイドが必要な人は依然として第6版も購入した方がよいと話されていた。&lt;/p>
&lt;p>というのは、第7版は過去のガイドを更新したものではなく、PMP 試験は第6版の時点でアジャイルな要素も取り入れているため、第7版のために変更を加えるといった予定は現時点ではない。
つまり、少なくとも PMP 試験やプロジェクトマネジメントの国際規格である ISO 21500 は第6版をベースにした内容があるため、それらが急になくなったりすることはないらしい。第6版と第7版の違いとして次のような話しをされていた。&lt;/p>
&lt;ul>
&lt;li>プロジェクトマネジメントの節目の切り口が変わった？
&lt;ul>
&lt;li>第6版: プロセスベース&lt;/li>
&lt;li>第7版: 原理原則&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第7版でガイドに &lt;strong>チーム&lt;/strong> が登場するようになった
&lt;ul>
&lt;li>主語がチームとなり、チームが○○するための原理原則はこうであるといった内容に変わった
&lt;ul>
&lt;li>主役はプロセスではなくチーム&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プロジェクトにチームが寄り添うようになった&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>これらの違いは、第6版と第7版をテキストマイニングして、共起ネットワークを構築して比較してみるとよくわかると分析されていた。あとおもしろかったのが、第6版と第7版ではページ数は半減したものの、文字数は3割減程度となっており、箇条書きが多かった内容が説明ベースの文章に変わったためだろうといった話しもあった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2021/1111_pmbok-text-mining.png"/>
&lt;/figure></content></item><item><title>フラクタルスプリントの調査</title><link>/diary/posts/2021/1029/</link><pubDate>Fri, 29 Oct 2021 01:40:10 +0900</pubDate><guid>/diary/posts/2021/1029/</guid><description>2時から Connect 2021 のイベントをみてた。3時過ぎぐらいには眠くて耐えられなくなってそのまま寝落ちしたら7時に起きた。本当は6時から金朝ツメトギの朝活の日だったのに寝坊して参加できなかった。なんか疲れて家に帰って13時から17時まで寝てた。生活のリズムを崩すと大きく集中力がなくなる。その後、またオフィスに行って作業してた。
Connect 2021 マーク・ザッカーバーグの基調講演を聞いていると、機械学習の次のテックの波はメタバースなのかなぁとか思ったりもしたけど、あとで メタバースはディストピアの悪夢です。より良い現実の構築に焦点を当てましょう。 を読んでいて、やっぱり違うよなぁとも思った。自分がメタバースの世界で活動したり、アプリケーション開発をやってないから他人の意見に引っ張らられる。いずれにしても自分でちょっとやってみて、メタバースとの今後の付き合い方を考えないといけないということだけは理解した。今日の時点ではこのツィートがおもしろかった。
pic.twitter.com/4UHSycJ9HR
&amp;mdash; seya (@sekikazu01) October 29, 2021 みんなの Python 勉強会 あべさんから依頼がきて みんなのPython勉強会#75 で発表することになった。いつだったか忘れたけど、コロナ禍になる前だったと思うけど、いつか発表してほしいみたいな話しをしたりしながら機会がなくていまに至るというのもあって、内容があうならいっかという感じで引き受けた。20-30分程度でできるPyとエキPy第3版の話しを半々ずつみたいな内容でやるつもり。週末に内容を詰めて資料を作るつもり。Python は普段使いのツールとして使っているものの、お仕事で Go や Java で開発するようになってからあまり深く関わらないようになってしまった。ずっと Python コミュニティの勉強会に行ってたから、いまでも Python の人とみられるのは仕方ないかなとも思う。
フラクタルスプリント ある記事で フラクタルスプリント というキーワードをみかけて、なんのことか分からなかったので調べてみた。47機関というチームが実践しているスクラムをベースにした開発方法論と言えるのかな？次の発表動画をみて雰囲気は理解できた。
15分スプリントの具体的な進め方について動画で話した #15min_sprint フラクタルスプリントのやり方はこんな感じ。
基本はスクラムのイベントをそれぞれのスプリントで行う スプリントの中にスプリントを含めるという入れ子構造をとる 1ヶ月 → 1週間 → 1日 → 1時間 → 15分の入れ子 それぞれのスプリントの20%程度の時間は自由時間にしてバッファをとる 例えば、1時間のスプリントに含むのは 15分 x 3 のスプリントと残り時間は自由なスプリントの時間にする 15分スプリントは10分タスクを1つだけやるスプリントと言える 残りの5分をスクラムイベントにあてる 極端にイテレーション期間の短いスプリントをすることで、通常のスクラムの開発方法論になかったイノベーションが起きるのではないか？といったところを狙いに47機関さんが業務で実践的にやっているプラクティスと言えるみたい。実際にやってみてうまくいったことなどを話しているので、ある種の学習コストを要求するものの、よいところもあるようには思える。おそらくは意図的に悪いところを話してなかったようには思える。例えば、それぞれのスプリントのイベントにおけるオーバーヘッドは大きくなるので作業時間が減るとか、10分タスクですべてチケット化すると、チケット数が増えるので必然的に過程の記録はチケットに残ってないはず。スプリントバックログを付箋の代わりに使うだけというのはスクラム開発一般の話ではあるけど、このやり方では開発者が何をやっているかを書く場所としてチケットは適切な場所ではなくなる。代わりに wiki にまとめるとは話してた。wiki だとフロー情報を監視するのが難しくなるが、その分、短いスプリントでのイベント (プランニング、レビュー、レトロスペクティブ) が頻繁にあるのでそれをフロー情報の監視の代替として機能するようにみえる。いわば強制で。</description><content>&lt;p>2時から &lt;a href="https://www.facebookconnect.com/ja-jp/">Connect 2021&lt;/a> のイベントをみてた。3時過ぎぐらいには眠くて耐えられなくなってそのまま寝落ちしたら7時に起きた。本当は6時から金朝ツメトギの朝活の日だったのに寝坊して参加できなかった。なんか疲れて家に帰って13時から17時まで寝てた。生活のリズムを崩すと大きく集中力がなくなる。その後、またオフィスに行って作業してた。&lt;/p>
&lt;h2 id="connect-2021">Connect 2021&lt;/h2>
&lt;p>マーク・ザッカーバーグの基調講演を聞いていると、機械学習の次のテックの波はメタバースなのかなぁとか思ったりもしたけど、あとで &lt;a href="https://nianticlabs.com/blog/real-world-metaverse/">メタバースはディストピアの悪夢です。より良い現実の構築に焦点を当てましょう。&lt;/a> を読んでいて、やっぱり違うよなぁとも思った。自分がメタバースの世界で活動したり、アプリケーション開発をやってないから他人の意見に引っ張らられる。いずれにしても自分でちょっとやってみて、メタバースとの今後の付き合い方を考えないといけないということだけは理解した。今日の時点ではこのツィートがおもしろかった。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="und" dir="ltr">&lt;a href="https://t.co/4UHSycJ9HR">pic.twitter.com/4UHSycJ9HR&lt;/a>&lt;/p>&amp;mdash; seya (@sekikazu01) &lt;a href="https://twitter.com/sekikazu01/status/1453963389420531714?ref_src=twsrc%5Etfw">October 29, 2021&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;h2 id="みんなの-python-勉強会">みんなの Python 勉強会&lt;/h2>
&lt;p>あべさんから依頼がきて &lt;a href="https://startpython.connpass.com/event/228136/">みんなのPython勉強会#75&lt;/a> で発表することになった。いつだったか忘れたけど、コロナ禍になる前だったと思うけど、いつか発表してほしいみたいな話しをしたりしながら機会がなくていまに至るというのもあって、内容があうならいっかという感じで引き受けた。20-30分程度でできるPyとエキPy第3版の話しを半々ずつみたいな内容でやるつもり。週末に内容を詰めて資料を作るつもり。Python は普段使いのツールとして使っているものの、お仕事で Go や Java で開発するようになってからあまり深く関わらないようになってしまった。ずっと Python コミュニティの勉強会に行ってたから、いまでも Python の人とみられるのは仕方ないかなとも思う。&lt;/p>
&lt;h2 id="フラクタルスプリント">フラクタルスプリント&lt;/h2>
&lt;p>ある記事で &lt;strong>フラクタルスプリント&lt;/strong> というキーワードをみかけて、なんのことか分からなかったので調べてみた。47機関というチームが実践しているスクラムをベースにした開発方法論と言えるのかな？次の発表動画をみて雰囲気は理解できた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kyon-mm.hatenablog.com/entry/2020/10/18/171650">15分スプリントの具体的な進め方について動画で話した #15min_sprint&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>フラクタルスプリントのやり方はこんな感じ。&lt;/p>
&lt;ul>
&lt;li>基本はスクラムのイベントをそれぞれのスプリントで行う&lt;/li>
&lt;li>スプリントの中にスプリントを含めるという入れ子構造をとる
&lt;ul>
&lt;li>1ヶ月 → 1週間 → 1日 → 1時間 → 15分の入れ子&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>それぞれのスプリントの20%程度の時間は自由時間にしてバッファをとる
&lt;ul>
&lt;li>例えば、1時間のスプリントに含むのは 15分 x 3 のスプリントと残り時間は自由なスプリントの時間にする&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>15分スプリントは10分タスクを1つだけやるスプリントと言える
&lt;ul>
&lt;li>残りの5分をスクラムイベントにあてる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>極端にイテレーション期間の短いスプリントをすることで、通常のスクラムの開発方法論になかったイノベーションが起きるのではないか？といったところを狙いに47機関さんが業務で実践的にやっているプラクティスと言えるみたい。実際にやってみてうまくいったことなどを話しているので、ある種の学習コストを要求するものの、よいところもあるようには思える。おそらくは意図的に悪いところを話してなかったようには思える。例えば、それぞれのスプリントのイベントにおけるオーバーヘッドは大きくなるので作業時間が減るとか、10分タスクですべてチケット化すると、チケット数が増えるので必然的に過程の記録はチケットに残ってないはず。スプリントバックログを付箋の代わりに使うだけというのはスクラム開発一般の話ではあるけど、このやり方では開発者が何をやっているかを書く場所としてチケットは適切な場所ではなくなる。代わりに wiki にまとめるとは話してた。wiki だとフロー情報を監視するのが難しくなるが、その分、短いスプリントでのイベント (プランニング、レビュー、レトロスペクティブ) が頻繁にあるのでそれをフロー情報の監視の代替として機能するようにみえる。いわば強制で。&lt;/p>
&lt;p>15分スプリントと聞いて先入観でイメージするよりも、合理的なところも理解できたのでチームの学習コストとスプリントイベントのオーバーヘッドを受け入れるなら悪くない開発方法論かもしれない。良い・悪いといった是非ではなく、47機関さんが大事にしているチームの価値観や文化、そしてチームをよくするための実践的な方法論と一緒に理解することでこの開発方法論は活きてくる。開発方法論だけをみてあれこれ言うのは適切ではないとも思えた。自分たちの業務や働き方にあった開発方法論を開発チームはずっと考え続けていくべきだと私は考えていて、47機関というチームはフラクタルスプリントという手法を編み出して、それ自体が素晴らしいなと思えた。&lt;/p></content></item></channel></rss>