<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>information exchange on forest nook</title><link>/diary/tags/information-exchange/</link><description>Recent content in information exchange on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Sat, 09 Apr 2022 08:31:11 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/information-exchange/index.xml" rel="self" type="application/rss+xml"/><item><title>開発が遅れる空気</title><link>/diary/posts/2022/0409/</link><pubDate>Sat, 09 Apr 2022 08:31:11 +0900</pubDate><guid>/diary/posts/2022/0409/</guid><description>昨日は0時過ぎまでオンライン飲み会で雑談していて、それから1時に寝て6時過ぎに起きた。
ストレッチ 今日の開脚幅は開始前161cmで、ストレッチ後162cmだった。今週はインフラエンジニアを始め、深夜と早朝に作業するため、生活が不規則になってしまった。そのせいか、腰と右股関節の張りが強いように感じた。1日は散歩に行ったり、深夜に一駅離れたスーパーに買いものに行ったり、すこし運動っぽいことも生活に取り入れるようにはしている。今週疲弊した身体をストレッチでほぐせたのでまた一週間がんばろうという気持ちになった。
インフラ作業 昨日からの仕掛り中の作業をテスト環境に反映させた。昼間は環境を壊してしまうとテストや検証作業を止めてしまうリスクがあるため、開発者や業務の人たちが使っていない時間を見計らって環境変更の反映や cdk の検証などをやりたい。必然的に土日も都合がよくて気付いたら2時間半ほど作業してた。
開発が遅れる空気 私は勘と経験で納期の1-2ヶ月前に開発が完了しないとわかるときがある。これまでなぜわかるのか自分でもよくわかっていなかった。便宜上「遅れる空気を読む」とでも言おう。私だけわかっても他者に伝えられない、もしくは伝えても無視されることが多かったので必要以上に指摘しないようにはしている。伝えて意図がわからない人たちにそれ以上言っても無駄だから。なにかしら条件があるのではないかと思い当たるところを書き出してみる。
チームメンバー (開発者) にタスクが遅れているという認識がない 経験が浅いと見積もりの精度が低いため、全体像に対する進捗を正確に把握できない シニア開発者がアドバイスしてもその内容を理解できなくて役に立たないこともある 遅れている開発者が遅れを取り戻すための施策 (たとえば残業) をしない 認識していないなら残業しないから当然に遅れる 認識していても残業を嫌う開発者は一切残業しない 未知の問題や状況に対して「わからない」「困っている」といった報告があがらない 心理的安全性が低いと、無能だと思われたくなくて開発者が助けを求められない マネージャーやリーダーといったスケジュール管理に影響力のある担当者が上位の意思決定者に事実ではなく自身の解釈を述べる 例「このタスクは8割程度完了していて、あともう少しで終わりそうです」 遅れているタスクはこういう報告が何度もあがる 「いつ完了しますか？」と尋ねると予定日時を回答できない マネージャーやリーダーが技術に疎く、実務担当者の言うことをそのまま受け入れる 経験が浅い開発者の見積もり精度は低いため、大きく計画が狂うことがある 上位の意思決定者と現場のリーダーとの人間関係が希薄だと建前の報告になる 心理的安全性が低いと、現場の機微やもやっとしたことが共有されない こういう空気を私は読んでいて、あるとき「この開発はもう間に合わないですね。」といきなり上長に言い始める。周りはまだ日程に余裕があるのになぜ？とびっくりする。開発って日々の積み重ねなので、日々の活動が正しい努力になっていないと1-2ヶ月後に成果が出ないというのは私からみたら自明だという話し。</description><content>&lt;p>昨日は0時過ぎまでオンライン飲み会で雑談していて、それから1時に寝て6時過ぎに起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今日の開脚幅は開始前161cmで、ストレッチ後162cmだった。今週はインフラエンジニアを始め、深夜と早朝に作業するため、生活が不規則になってしまった。そのせいか、腰と右股関節の張りが強いように感じた。1日は散歩に行ったり、深夜に一駅離れたスーパーに買いものに行ったり、すこし運動っぽいことも生活に取り入れるようにはしている。今週疲弊した身体をストレッチでほぐせたのでまた一週間がんばろうという気持ちになった。&lt;/p>
&lt;h2 id="インフラ作業">インフラ作業&lt;/h2>
&lt;p>昨日からの仕掛り中の作業をテスト環境に反映させた。昼間は環境を壊してしまうとテストや検証作業を止めてしまうリスクがあるため、開発者や業務の人たちが使っていない時間を見計らって環境変更の反映や cdk の検証などをやりたい。必然的に土日も都合がよくて気付いたら2時間半ほど作業してた。&lt;/p>
&lt;h2 id="開発が遅れる空気">開発が遅れる空気&lt;/h2>
&lt;p>私は勘と経験で納期の1-2ヶ月前に開発が完了しないとわかるときがある。これまでなぜわかるのか自分でもよくわかっていなかった。便宜上「遅れる空気を読む」とでも言おう。私だけわかっても他者に伝えられない、もしくは伝えても無視されることが多かったので必要以上に指摘しないようにはしている。伝えて意図がわからない人たちにそれ以上言っても無駄だから。なにかしら条件があるのではないかと思い当たるところを書き出してみる。&lt;/p>
&lt;ul>
&lt;li>チームメンバー (開発者) にタスクが遅れているという認識がない
&lt;ul>
&lt;li>経験が浅いと見積もりの精度が低いため、全体像に対する進捗を正確に把握できない&lt;/li>
&lt;li>シニア開発者がアドバイスしてもその内容を理解できなくて役に立たないこともある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>遅れている開発者が遅れを取り戻すための施策 (たとえば残業) をしない
&lt;ul>
&lt;li>認識していないなら残業しないから当然に遅れる&lt;/li>
&lt;li>認識していても残業を嫌う開発者は一切残業しない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>未知の問題や状況に対して「わからない」「困っている」といった報告があがらない
&lt;ul>
&lt;li>心理的安全性が低いと、無能だと思われたくなくて開発者が助けを求められない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>マネージャーやリーダーといったスケジュール管理に影響力のある担当者が上位の意思決定者に事実ではなく自身の解釈を述べる
&lt;ul>
&lt;li>例「このタスクは8割程度完了していて、あともう少しで終わりそうです」
&lt;ul>
&lt;li>遅れているタスクはこういう報告が何度もあがる&lt;/li>
&lt;li>「いつ完了しますか？」と尋ねると予定日時を回答できない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>マネージャーやリーダーが技術に疎く、実務担当者の言うことをそのまま受け入れる
&lt;ul>
&lt;li>経験が浅い開発者の見積もり精度は低いため、大きく計画が狂うことがある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>上位の意思決定者と現場のリーダーとの人間関係が希薄だと建前の報告になる
&lt;ul>
&lt;li>心理的安全性が低いと、現場の機微やもやっとしたことが共有されない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>こういう空気を私は読んでいて、あるとき「この開発はもう間に合わないですね。」といきなり上長に言い始める。周りはまだ日程に余裕があるのになぜ？とびっくりする。開発って日々の積み重ねなので、日々の活動が正しい努力になっていないと1-2ヶ月後に成果が出ないというのは私からみたら自明だという話し。&lt;/p></content></item><item><title>「聞かなくてもわかる」という価値観</title><link>/diary/posts/2022/0107/</link><pubDate>Fri, 07 Jan 2022 08:10:05 +0900</pubDate><guid>/diary/posts/2022/0107/</guid><description>0時に寝て3時に起きた。4時までドラクエタクトしたりもしてたけど、夕方に PoC のデモ打ち合わせがあるのになにも準備できてなくて不安で起きて5時からお仕事してた。久しぶりに早起きしたせいか、打ち合わせ終えたら眠いからすぐに帰って、夜はオンライン飲み会しつつくつろいでいた。
情報共有とコミュニケーションコスト 課題管理システムのことを考えていてふと思いついたことを書き出す。私からみると、多くの人たちは「聞かなくてもわかる」という価値を過小評価しがちである。というのは、その価値を定量化するのは難しいので評価されにくい。そうすると、評価されないことはやらないといった合理的な働き方をすればそうなるのは理解できる。しかし、私はその価値を理解しているので軽く考察してみる。
聞けない 聞けばわかる 聞いてもわからない 聞かないとわからない 聞かなくてもわかる 情報共有の過程でパッと思いつくことを段階ごとに書いてみた。1に近い方が容易で5に近い方が難しいという難易度を表しているとも言えるし、組織の情報共有のレベルを表しているとも言える。少し言葉を補うと次のように解釈してもよいだろう。
(メンターが気難しくて/メンターに無能だと思われたくなくて) 聞けない (メンターに余裕があって) 聞けばわかる (メンターのスキル不足で/担当者が退職してて) 聞いてもわからない (背景が文書化されていなくて) 聞かないとわからない (課題管理システムを検索すれば) 聞かなくてもわかる 昔は1のような状況を発生させる人もちょくちょく職場にいた気がするけど、いまは淘汰されてあまりみかけない。多くの組織は3か4ぐらいのレベルだろう。5まで達している組織は少ない。課題管理システムについて議論していると、たまに「知っている人に聞けばいいじゃない？」という意見があがる。この質問をしている時点で目指している働き方のレベルや生産性が大きく異なっていることがわかる。というのは、他人に聞くというのはコミュニケーションコストが非常に高い。これは他人に聞くなと言っているわけではない。他人に聞かないといけないことを減らすことで生産性を上げるという話しをしているだけだ。他者へ同じ情報を伝えるのに1時間の打ち合わせが済むのか、3時間の打ち合わせを要するのかという比較をしている。当然、打ち合わせ時間を減らしても伝えられる情報量が同じであれば打ち合わせ時間は少ない方が望ましい。そういう話しをしている。
5のレベルに達していれば、例えば、いまのシステムの仕様はなぜこのようになっているのか？変更するとしたら影響範囲はどのぐらいか？どういったモジュールに注意して改修すればいいか。もちろん前任者やリーダーに聞けばわかるだろう。聞くために打ち合わせの予定を調整するかもしれない。するとリーダーは忙しくて時間を調整できるのは来週になるという。もし課題管理システムにそういった情報が残っていれば、来週まで待つ必要がなくなる。理想的にはリーダーとの打ち合わせも必要なくなる。リーダーは他に重要な業務に時間を割ける。これが「聞かなくてもわかる」という価値である。
昔はなんらかの理由で1の状態にあった組織において、職場の風通しがよくなると、コミュニケーションコストを軽視しがちになる。職場の風通しがよいことは重要だが、打ち合わせや会議ばかりするようになると、キーパーソンの時間を湯水のように使う。キーパーソンはすぐに会議だらけになって物理的に実務ができなくなって、結果的に生産性や品質が下がる。ここで重要なのは権限委譲だが、この話しは長くなるのでここで筆をおく。</description><content>&lt;p>0時に寝て3時に起きた。4時までドラクエタクトしたりもしてたけど、夕方に PoC のデモ打ち合わせがあるのになにも準備できてなくて不安で起きて5時からお仕事してた。久しぶりに早起きしたせいか、打ち合わせ終えたら眠いからすぐに帰って、夜はオンライン飲み会しつつくつろいでいた。&lt;/p>
&lt;h2 id="情報共有とコミュニケーションコスト">情報共有とコミュニケーションコスト&lt;/h2>
&lt;p>課題管理システムのことを考えていてふと思いついたことを書き出す。私からみると、多くの人たちは「聞かなくてもわかる」という価値を過小評価しがちである。というのは、その価値を定量化するのは難しいので評価されにくい。そうすると、評価されないことはやらないといった合理的な働き方をすればそうなるのは理解できる。しかし、私はその価値を理解しているので軽く考察してみる。&lt;/p>
&lt;ol>
&lt;li>聞けない&lt;/li>
&lt;li>聞けばわかる&lt;/li>
&lt;li>聞いてもわからない&lt;/li>
&lt;li>聞かないとわからない&lt;/li>
&lt;li>聞かなくてもわかる&lt;/li>
&lt;/ol>
&lt;p>情報共有の過程でパッと思いつくことを段階ごとに書いてみた。1に近い方が容易で5に近い方が難しいという難易度を表しているとも言えるし、組織の情報共有のレベルを表しているとも言える。少し言葉を補うと次のように解釈してもよいだろう。&lt;/p>
&lt;ol>
&lt;li>(メンターが気難しくて/メンターに無能だと思われたくなくて) 聞けない&lt;/li>
&lt;li>(メンターに余裕があって) 聞けばわかる&lt;/li>
&lt;li>(メンターのスキル不足で/担当者が退職してて) 聞いてもわからない&lt;/li>
&lt;li>(背景が文書化されていなくて) 聞かないとわからない&lt;/li>
&lt;li>(課題管理システムを検索すれば) 聞かなくてもわかる&lt;/li>
&lt;/ol>
&lt;p>昔は1のような状況を発生させる人もちょくちょく職場にいた気がするけど、いまは淘汰されてあまりみかけない。多くの組織は3か4ぐらいのレベルだろう。5まで達している組織は少ない。課題管理システムについて議論していると、たまに「知っている人に聞けばいいじゃない？」という意見があがる。この質問をしている時点で目指している働き方のレベルや生産性が大きく異なっていることがわかる。というのは、他人に聞くというのはコミュニケーションコストが非常に高い。これは他人に聞くなと言っているわけではない。他人に聞かないといけないことを減らすことで生産性を上げるという話しをしているだけだ。他者へ同じ情報を伝えるのに1時間の打ち合わせが済むのか、3時間の打ち合わせを要するのかという比較をしている。当然、打ち合わせ時間を減らしても伝えられる情報量が同じであれば打ち合わせ時間は少ない方が望ましい。そういう話しをしている。&lt;/p>
&lt;p>5のレベルに達していれば、例えば、いまのシステムの仕様はなぜこのようになっているのか？変更するとしたら影響範囲はどのぐらいか？どういったモジュールに注意して改修すればいいか。もちろん前任者やリーダーに聞けばわかるだろう。聞くために打ち合わせの予定を調整するかもしれない。するとリーダーは忙しくて時間を調整できるのは来週になるという。もし課題管理システムにそういった情報が残っていれば、来週まで待つ必要がなくなる。理想的にはリーダーとの打ち合わせも必要なくなる。リーダーは他に重要な業務に時間を割ける。これが「聞かなくてもわかる」という価値である。&lt;/p>
&lt;p>昔はなんらかの理由で1の状態にあった組織において、職場の風通しがよくなると、コミュニケーションコストを軽視しがちになる。職場の風通しがよいことは重要だが、打ち合わせや会議ばかりするようになると、キーパーソンの時間を湯水のように使う。キーパーソンはすぐに会議だらけになって物理的に実務ができなくなって、結果的に生産性や品質が下がる。ここで重要なのは権限委譲だが、この話しは長くなるのでここで筆をおく。&lt;/p></content></item></channel></rss>