<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on forest nook</title><link>/diary/tags/security/</link><description>Recent content in security on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Mon, 13 Feb 2023 19:40:54 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>cookie の secure 属性と localhost</title><link>/diary/posts/2023/0213/</link><pubDate>Mon, 13 Feb 2023 19:40:54 +0900</pubDate><guid>/diary/posts/2023/0213/</guid><description>0時に寝て6時半に起きて7時半に起きて9時過ぎに起きた。普通は明け方に2度寝して起きるのになぜか3度寝して寝坊した。慌てて準備してオフィス行って業務開始が9時半をまわってしまった。年に1回ぐらい意味なく寝坊することもある。こういうことがあるから他人がなにか意図しない失敗しても寛容になれる。
cookie の secure 属性 以前たまたま Meety脆弱性 2022-11 をみたときに認証 cookie に secure 属性が使われていないという指摘をみかけた。http でログインするときに cookie にセッション情報を保存してしまうと、平文でセッション情報が流れてしまうのでセキュリティ的によくない。具体的な攻撃方法としては wifi の通信をパケットキャプチャするとか、ルーター (カフェの無料 wifi とか) で中間者攻撃 (man in the middle) などのセキュリティ上の懸念がある。その対策としては cookie の secure 属性を付けておくと、http のときはセッション情報をブラウザに保存しなくなるのでログインできなくなる代わりにそういった攻撃から守れるようになる。フロントエンドのセキュリティのお作法みたいなものにみえたので覚えていた。
ちょうど管理画面のログイン機能をメンバーに実装してもらったところなのでその対応をしているかどうかをメンバーに確認していた。メンバーもその認識はもっていて環境変数の設定で切り替えられるように実装していた。テスト環境にデプロイするときにその設定を有効にしてもらって、私が意図した振る舞いをしているかどうか、テスト環境にアクセスして検証していた。しかし、secure 属性が付いていることは確認したものの、http でもセッション情報がブラウザに保存されていて、あれー？って感じで検証していた。メンバーは保存されないという。
localhost は例外
ブラウザによっては localhost だと httpsの要件が無視されるとのことでした。
CookieのSameSite属性とSecure属性について
この記事によると localhost だと適用外になるブラウザがあるんだと気付いた。たまたま私が ssh の port-forwarding 経由でテスト環境にアクセスしていたので localhost 経由のアクセスになっていた。これは開発時は http でも動くようにすることで環境変数で切り替えるといった、それ自体がセキュリティインシデントになり得る設定をもたないようにするための、ブラウザベンダーの配慮だろう。chrome はそういう振る舞いをしていることを私は確認できた。</description><content>&lt;p>0時に寝て6時半に起きて7時半に起きて9時過ぎに起きた。普通は明け方に2度寝して起きるのになぜか3度寝して寝坊した。慌てて準備してオフィス行って業務開始が9時半をまわってしまった。年に1回ぐらい意味なく寝坊することもある。こういうことがあるから他人がなにか意図しない失敗しても寛容になれる。&lt;/p>
&lt;h2 id="cookie-の-secure-属性">cookie の secure 属性&lt;/h2>
&lt;p>以前たまたま &lt;a href="https://gist.github.com/mala/39650fd9cb41bf58d305a8b311b31ff1">Meety脆弱性 2022-11&lt;/a> をみたときに認証 cookie に secure 属性が使われていないという指摘をみかけた。http でログインするときに cookie にセッション情報を保存してしまうと、平文でセッション情報が流れてしまうのでセキュリティ的によくない。具体的な攻撃方法としては wifi の通信をパケットキャプチャするとか、ルーター (カフェの無料 wifi とか) で中間者攻撃 (man in the middle) などのセキュリティ上の懸念がある。その対策としては cookie の secure 属性を付けておくと、http のときはセッション情報をブラウザに保存しなくなるのでログインできなくなる代わりにそういった攻撃から守れるようになる。フロントエンドのセキュリティのお作法みたいなものにみえたので覚えていた。&lt;/p>
&lt;p>ちょうど管理画面のログイン機能をメンバーに実装してもらったところなのでその対応をしているかどうかをメンバーに確認していた。メンバーもその認識はもっていて環境変数の設定で切り替えられるように実装していた。テスト環境にデプロイするときにその設定を有効にしてもらって、私が意図した振る舞いをしているかどうか、テスト環境にアクセスして検証していた。しかし、secure 属性が付いていることは確認したものの、http でもセッション情報がブラウザに保存されていて、あれー？って感じで検証していた。メンバーは保存されないという。&lt;/p>
&lt;blockquote>
&lt;p>localhost は例外&lt;/p>
&lt;p>ブラウザによっては localhost だと httpsの要件が無視されるとのことでした。&lt;/p>
&lt;p>&lt;a href="https://blog.prevent.co.jp/entry/2022/05/20/094427">CookieのSameSite属性とSecure属性について&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>この記事によると localhost だと適用外になるブラウザがあるんだと気付いた。たまたま私が ssh の port-forwarding 経由でテスト環境にアクセスしていたので localhost 経由のアクセスになっていた。これは開発時は http でも動くようにすることで環境変数で切り替えるといった、それ自体がセキュリティインシデントになり得る設定をもたないようにするための、ブラウザベンダーの配慮だろう。chrome はそういう振る舞いをしていることを私は確認できた。&lt;/p></content></item><item><title>v-html は使わなくてもよい</title><link>/diary/posts/2022/0829/</link><pubDate>Mon, 29 Aug 2022 15:01:09 +0900</pubDate><guid>/diary/posts/2022/0829/</guid><description>0時に寝て7時に起きた。また日曜日は寝てた。
任意のカラムの書き換え v-data-table の、あるセルが複雑なデータをもっていて、単純にその値を表示するのではなく、一定の構造化やレイアウトを調整した状態で表示したい。セル内の構造を書き換える方法を私は知らなかったので v-html という api を使って書き換えればよいのだと思った。しかし、これは間違いだった。間違いの訂正は翌日にやるとして仮に v-html を使うとしても xss の懸念があるのでスクリプトをエスケープしてあげないといけない。Sanitize v-html #6333 でも議論されていて vue3 はデフォルトでエスケープする仕組みが入るのかな？vue2 だと sanitize-html を使って次のようにラップすればいいと書いてあった。実際に動かしてみるとスクリプトを実行できたので v-html は危険だというのはわかった。
&amp;lt;div v-html=&amp;#34;$sanitize(value)&amp;#34; /&amp;gt; この仕組みを作って pr でレビューしてもらっていたら、カラムの構造を書き換えたいだけなら slots を使えば普通にできると教えてもらった。また明日へ。</description><content>&lt;p>0時に寝て7時に起きた。また日曜日は寝てた。&lt;/p>
&lt;h2 id="任意のカラムの書き換え">任意のカラムの書き換え&lt;/h2>
&lt;p>v-data-table の、あるセルが複雑なデータをもっていて、単純にその値を表示するのではなく、一定の構造化やレイアウトを調整した状態で表示したい。セル内の構造を書き換える方法を私は知らなかったので &lt;a href="https://v2.vuejs.org/v2/api/#v-html">v-html&lt;/a> という api を使って書き換えればよいのだと思った。しかし、これは間違いだった。間違いの訂正は翌日にやるとして仮に v-html を使うとしても xss の懸念があるのでスクリプトをエスケープしてあげないといけない。&lt;a href="https://github.com/vuejs/vue/issues/6333">Sanitize v-html #6333&lt;/a> でも議論されていて vue3 はデフォルトでエスケープする仕組みが入るのかな？vue2 だと &lt;a href="https://www.npmjs.com/package/sanitize-html">sanitize-html&lt;/a> を使って次のようにラップすればいいと書いてあった。実際に動かしてみるとスクリプトを実行できたので v-html は危険だというのはわかった。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;div&lt;/span> &lt;span style="color:#a6e22e">v-html=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;$sanitize(value)&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>この仕組みを作って pr でレビューしてもらっていたら、カラムの構造を書き換えたいだけなら &lt;a href="https://v2.vuejs.org/v2/guide/components-slots.html">slots&lt;/a> を使えば普通にできると教えてもらった。また明日へ。&lt;/p></content></item><item><title>jvm の脆弱性対応</title><link>/diary/posts/2022/0428/</link><pubDate>Thu, 28 Apr 2022 09:58:20 +0900</pubDate><guid>/diary/posts/2022/0428/</guid><description>23時に寝て3時に起きて5時に起きて7時に起きた。なんか調子が微妙。
jvm の脆弱性対応 少し前だけど、jvm のセキュリティアナウンスがあった。
OpenJDK Vulnerability Advisory: 2022/04/19 java 11 向けの docker イメージのビルドはあまり緊急度が高くなかったせいか、17よりは優先度が低かったようにみえる。docker イメージビルドの作業状況は次の issue で管理されている。
April 2022 Release Status per Platform, Version &amp;amp; Binary Type #140 これまで adoptopenjdk/openjdk11:alpine-jre という docker イメージを使っていた。Transition to Eclipse - An Update によると、Eclipse Temurin という組織が管理する Adoptium というプロジェクトに移管されたらしい。この機会に docker イメージも eclipse-temurin:11-jre-alpine に移行した。</description><content>&lt;p>23時に寝て3時に起きて5時に起きて7時に起きた。なんか調子が微妙。&lt;/p>
&lt;h2 id="jvm-の脆弱性対応">jvm の脆弱性対応&lt;/h2>
&lt;p>少し前だけど、jvm のセキュリティアナウンスがあった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://openjdk.java.net/groups/vulnerability/advisories/2022-04-19">OpenJDK Vulnerability Advisory: 2022/04/19&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>java 11 向けの docker イメージのビルドはあまり緊急度が高くなかったせいか、17よりは優先度が低かったようにみえる。docker イメージビルドの作業状況は次の issue で管理されている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/adoptium/adoptium/issues/140">April 2022 Release Status per Platform, Version &amp;amp; Binary Type #140&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これまで &lt;a href="https://hub.docker.com/r/adoptopenjdk/openjdk11/tags?page=1&amp;amp;name=alpine-jre">adoptopenjdk/openjdk11:alpine-jre&lt;/a> という docker イメージを使っていた。&lt;a href="https://blog.adoptopenjdk.net/2021/03/transition-to-eclipse-an-update/">Transition to Eclipse - An Update&lt;/a> によると、Eclipse Temurin という組織が管理する &lt;a href="https://adoptium.net/">Adoptium&lt;/a> というプロジェクトに移管されたらしい。この機会に docker イメージも &lt;a href="https://hub.docker.com/_/eclipse-temurin?tab=tags&amp;amp;page=1&amp;amp;name=11-jre-alpine">eclipse-temurin:11-jre-alpine&lt;/a> に移行した。&lt;/p></content></item><item><title>お花見の場所探し</title><link>/diary/posts/2022/0401/</link><pubDate>Fri, 01 Apr 2022 15:55:25 +0900</pubDate><guid>/diary/posts/2022/0401/</guid><description>0時に寝て5時過ぎに起きた。
spring framework の脆弱性対応 起きてタイムライン眺めてたら spring framework の脆弱性の公式アナウンスが出ていたのですぐに準備してオフィス行って7時前から脆弱性対応の作業をしてた。
Spring Framework RCE, Early Announcement 大学の研究室にいた頃、root staff と呼ばれるシステム管理者をやっていた。研究室のネットワークをすべて freebsd で自分たちで構築していたので os の脆弱性が公表されると研究室のすべての os のパッチ適用をやっていた。具体的にはパッチの当たった kernel をビルドして再起動するといった作業。
それを2年間やっていたせいか、脆弱性情報が公開されるとすぐに対応する癖みたいなものがついた。7時前から作業して検証して7時11分に PR を作成した。レビューアは誰も作業を始めてないけど。金曜日は非稼働日なので私が作業しなくてもよいのだけど、ここまでやったら安心して他の作業に移ることができた。
生田川公園の桜 地元のコミュニティでオミクロン株の感染が落ち着いてきたのでリアルお花見をしたいねという話題があがっている。私自身、お花見に毎年参加するような人間でもないけれど、たしかにコロナ禍になってからはお花見やってないだろうし、個人的にも数年はお花見やってないからやってもいいかなという気持ちにはなった。近場だと 生田川公園 という場所があり、特筆するほど桜がとてもきれいという場所ではないが、一応は桜があって、お花見するスペースもあって、形としては成り立つようなところ。お仕事を終えてから自転車で開花状況を見に行った。19時頃に行って寒くても何組かはお花見している集団はいた。開花状況は7-8割といったところかな。今週末から来週にかけてぐらいが見頃だと思う。</description><content>&lt;p>0時に寝て5時過ぎに起きた。&lt;/p>
&lt;h2 id="spring-framework-の脆弱性対応">spring framework の脆弱性対応&lt;/h2>
&lt;p>起きてタイムライン眺めてたら spring framework の脆弱性の公式アナウンスが出ていたのですぐに準備してオフィス行って7時前から脆弱性対応の作業をしてた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement">Spring Framework RCE, Early Announcement&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>大学の研究室にいた頃、root staff と呼ばれるシステム管理者をやっていた。研究室のネットワークをすべて freebsd で自分たちで構築していたので os の脆弱性が公表されると研究室のすべての os のパッチ適用をやっていた。具体的にはパッチの当たった kernel をビルドして再起動するといった作業。&lt;/p>
&lt;p>それを2年間やっていたせいか、脆弱性情報が公開されるとすぐに対応する癖みたいなものがついた。7時前から作業して検証して7時11分に PR を作成した。レビューアは誰も作業を始めてないけど。金曜日は非稼働日なので私が作業しなくてもよいのだけど、ここまでやったら安心して他の作業に移ることができた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2022/0401_springframework.png"/>
&lt;/figure>
&lt;h2 id="生田川公園の桜">生田川公園の桜&lt;/h2>
&lt;p>地元のコミュニティでオミクロン株の感染が落ち着いてきたのでリアルお花見をしたいねという話題があがっている。私自身、お花見に毎年参加するような人間でもないけれど、たしかにコロナ禍になってからはお花見やってないだろうし、個人的にも数年はお花見やってないからやってもいいかなという気持ちにはなった。近場だと &lt;a href="https://www.kobe-park.or.jp/kouen_keikaku/2018/11/05/%E7%94%9F%E7%94%B0%E5%B7%9D%E5%85%AC%E5%9C%92/">生田川公園&lt;/a> という場所があり、特筆するほど桜がとてもきれいという場所ではないが、一応は桜があって、お花見するスペースもあって、形としては成り立つようなところ。お仕事を終えてから自転車で開花状況を見に行った。19時頃に行って寒くても何組かはお花見している集団はいた。開花状況は7-8割といったところかな。今週末から来週にかけてぐらいが見頃だと思う。&lt;/p>
&lt;p>&lt;figure>&lt;img src="/diary/diary/img/2022/0401_park1.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2022/0401_park2.jpg"/>
&lt;/figure>
&lt;/p></content></item><item><title>log4j2 セキュリティ対応</title><link>/diary/posts/2021/1213/</link><pubDate>Mon, 13 Dec 2021 08:21:13 +0900</pubDate><guid>/diary/posts/2021/1213/</guid><description>23時に寝て5時に起きたが、だらだらしているうちに2度寝して6時半に起きた。
log4j2 セキュリティ対応 CVE-2021-44228 が金曜日のお昼から私のタイムラインを賑わしている。私がお手伝いしているお仕事はイントラのシステムなのでやや余裕をもって情報を眺めていた。issue のコメント をみても log4j 1.x にも影響があると書かれて、その後に実際には影響ないと書かれて、さらにその後に条件付きだけど影響はあると二転三転してた。自分で実際に試してなくて世の中の開発者の情報をみているだけ。そのため、公式の情報を信頼するといったポジションでしかない。関係者の方々には敬意を払いたい。私は spring の公式ブログで公開されている Log4J2 Vulnerability and Spring Boot を読みながら対応した。
ターコイズ ふとしたきっかけで ターコイズ の記事を読んだ。12月の誕生石らしく、それでいまの時期に紹介されることも多いのだと推測する。別の記事でターコイズは喉によいと書かれていて、以前 喉に違和感がある ことを書いた。日常生活に困るほどではないけど、もうこの歳だから体調が良くなることはなく悪くなる一方だろうという見通しも含めて験担ぎのような感覚で喉というキーワードでつながったから購入してみた。
近所の原石屋さんに行って尋ねてみたら1-2cmぐらいのサイズ1個240円ほどで売っていたので3個買って、近所のダイソーで入れものを買って、それっぽくオフィスに置いておくことにした。うちのコーポレートカラーはグリーンとブルーなんだけど、ターコイズも ターコイズグリーン と ターコイズブルー の2種類の色がある。創業も12月なので誕生石としても合致する。共通点があって相性がよさそうなのでうちのコーポレートストーン (そんな言葉ない) はターコイズでいいや。</description><content>&lt;p>23時に寝て5時に起きたが、だらだらしているうちに2度寝して6時半に起きた。&lt;/p>
&lt;h2 id="log4j2-セキュリティ対応">log4j2 セキュリティ対応&lt;/h2>
&lt;p>&lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228">CVE-2021-44228&lt;/a> が金曜日のお昼から私のタイムラインを賑わしている。私がお手伝いしているお仕事はイントラのシステムなのでやや余裕をもって情報を眺めていた。&lt;a href="https://github.com/apache/logging-log4j2/pull/608#issuecomment-990494126">issue のコメント&lt;/a> をみても log4j 1.x にも影響があると書かれて、その後に実際には影響ないと書かれて、さらにその後に条件付きだけど影響はあると二転三転してた。自分で実際に試してなくて世の中の開発者の情報をみているだけ。そのため、公式の情報を信頼するといったポジションでしかない。関係者の方々には敬意を払いたい。私は spring の公式ブログで公開されている &lt;a href="https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot">Log4J2 Vulnerability and Spring Boot&lt;/a> を読みながら対応した。&lt;/p>
&lt;h2 id="ターコイズ">ターコイズ&lt;/h2>
&lt;p>ふとしたきっかけで &lt;a href="https://www.fu-stone.com/blog/turquoise/">ターコイズ&lt;/a> の記事を読んだ。12月の誕生石らしく、それでいまの時期に紹介されることも多いのだと推測する。別の記事でターコイズは喉によいと書かれていて、以前 &lt;a href="/diary/diary/posts/2021/1114/#傾斜枕">喉に違和感がある&lt;/a> ことを書いた。日常生活に困るほどではないけど、もうこの歳だから体調が良くなることはなく悪くなる一方だろうという見通しも含めて験担ぎのような感覚で喉というキーワードでつながったから購入してみた。&lt;/p>
&lt;p>近所の原石屋さんに行って尋ねてみたら1-2cmぐらいのサイズ1個240円ほどで売っていたので3個買って、近所のダイソーで入れものを買って、それっぽくオフィスに置いておくことにした。うちのコーポレートカラーはグリーンとブルーなんだけど、ターコイズも &lt;a href="https://www.colordic.org/colorscheme/4115">ターコイズグリーン&lt;/a> と &lt;a href="https://www.colordic.org/colorscheme/4129">ターコイズブルー&lt;/a> の2種類の色がある。創業も12月なので誕生石としても合致する。共通点があって相性がよさそうなのでうちのコーポレートストーン (そんな言葉ない) はターコイズでいいや。&lt;/p></content></item></channel></rss>