<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Microsoft Entra Id on</title><link>/diary/tags/microsoft-entra-id/</link><description>Recent content in Microsoft Entra Id on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 May 2024 13:24:27 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/microsoft-entra-id/index.xml" rel="self" type="application/rss+xml"/><item><title>2024年度の変更登記第一弾</title><link>/diary/posts/2024/0523/</link><pubDate>Thu, 23 May 2024 13:24:27 +0900</pubDate><guid>/diary/posts/2024/0523/</guid><description>今日の運動は腹筋ローラー,背筋,縄跳び(両足跳),散歩,ジョギング,ハンドグリップ,ダンベルをした。統計を 運動の記録 にまとめる。
変更登記の申請1 昨日 資本金の入金 を行ったので変更登記を申請する。法律では変更後2週間以内に申請しないといけない。9時過ぎに法務局へ行って申請した。オフィスから徒歩10分以内に法務局があるので気軽に行ける。
申請書を提出する手順は次になる。滅多に行かないからいつも忘れてしまっているが。
登録免許税の金額分の収入印紙を購入する 申請書の台紙に収入印紙を貼り付ける 法人登記専用受付へ行って申請書を提出する 受付スタッフが簡単に書類チェックして不備がなければ受付となる 書類の内容は後日に別途審査される 4営業日以内に法務局から連絡がなければ変更登記は完了しているとみなせる。問題があれば提出して翌日か翌々日ぐらいには電話がかかってくる。
me-id 調査 選手からの me-id の調査の続き 。Microsoft Graph API の delta query という仕組みで entra id のユーザー／グループ情報に変更があったときにその差分を検出できる。ドキュメントはおそらく次の2つを参照すればよいはず。
Use delta query to track changes in Microsoft Graph data Get incremental changes for groups もっとも API としての設計が開発者にとって直感的なものではないから、自分で動かしてデバッグしないとドキュメントだけで振る舞いを理解するのは至難だと思う。msgraph-sdk-go を使ったアプリケーションのデバッグをしていたときも実感したけど、azure のプラットフォームとしての品質は低い。ドキュメントがたまに間違っているし、仕様も振る舞いも論理的に説明がつかないこともある。開発者がちょっと触っただけで気付くというのは中身の品質はもっと低いと推測される。google や amazon の方が品質が高い。
実際に sdk を使って entra id のユーザーやグループの変更を行いながら、リクエストしてデバッグしてわかったことを書く。
nextLink と deltaLink は排他的な関係にある nextLink が返される場合は、実際に差分データがなかったとしてもそのセッション内で次のデータがあることを意図している。nextLink が返され続けている限り、その情報を使ってリクエストし続ける必要がある。実際にはなにもデータが取得されないということもある。基本的には変更がなければ1回で終わるが、数十回ぐらいリクエストし続ける場合もある deltaLink は rdbms でいうところの cursor のような概念になる。ldap プロトコルで言うところの cookie に相当する。その時点以降の差分のみを取得するためのトークンになる。deltaLink を使ったリクエストのときに新しい変更の差分情報を取得できる 毎秒リクエストするような頻繁なリクエストだと、同じ変更差分を複数回取得することがある (at least once) 30秒ごとに取得するようにしたら再現しなかったのでデータストアが eventual consistency な振る舞いをしている 削除やメンバーの差分のような情報は sdk の api では additional data と呼ばれる領域に map で格納されている ドキュメントではこれらをアノテーションと呼んでいた気がする 削除は @removed というデータが含まれる { &amp;#34;@removed&amp;#34;: {&amp;#34;reason&amp;#34;: &amp;#34;changed&amp;#34;} } メンバーの変更は members@delta というデータに含まれる ユーザーとグループの関係を表すようなものは propertyName@delta というフィールドで additional data に含まれる { &amp;#34;members@delta&amp;#34;: [ { &amp;#34;@odata.</description><content>&lt;p>今日の運動は腹筋ローラー,背筋,縄跳び(両足跳),散歩,ジョギング,ハンドグリップ,ダンベルをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="変更登記の申請1">変更登記の申請1&lt;/h2>
&lt;p>昨日 &lt;a href="/diary/diary/posts/2024/0522/#資本金の増資">資本金の入金&lt;/a> を行ったので変更登記を申請する。法律では変更後2週間以内に申請しないといけない。9時過ぎに法務局へ行って申請した。オフィスから徒歩10分以内に法務局があるので気軽に行ける。&lt;/p>
&lt;p>申請書を提出する手順は次になる。滅多に行かないからいつも忘れてしまっているが。&lt;/p>
&lt;ol>
&lt;li>登録免許税の金額分の収入印紙を購入する&lt;/li>
&lt;li>申請書の台紙に収入印紙を貼り付ける&lt;/li>
&lt;li>法人登記専用受付へ行って申請書を提出する&lt;/li>
&lt;li>受付スタッフが簡単に書類チェックして不備がなければ受付となる
&lt;ul>
&lt;li>書類の内容は後日に別途審査される&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>4営業日以内に法務局から連絡がなければ変更登記は完了しているとみなせる。問題があれば提出して翌日か翌々日ぐらいには電話がかかってくる。&lt;/p>
&lt;h2 id="me-id-調査">me-id 調査&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0520/#me-id-調査">選手からの me-id の調査の続き&lt;/a> 。Microsoft Graph API の delta query という仕組みで entra id のユーザー／グループ情報に変更があったときにその差分を検出できる。ドキュメントはおそらく次の2つを参照すればよいはず。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/graph/delta-query-overview">Use delta query to track changes in Microsoft Graph data&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/graph/delta-query-groups?tabs=http">Get incremental changes for groups&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>もっとも API としての設計が開発者にとって直感的なものではないから、自分で動かしてデバッグしないとドキュメントだけで振る舞いを理解するのは至難だと思う。&lt;a href="https://github.com/microsoftgraph/msgraph-sdk-go">msgraph-sdk-go&lt;/a> を使ったアプリケーションのデバッグをしていたときも実感したけど、azure のプラットフォームとしての品質は低い。ドキュメントがたまに間違っているし、仕様も振る舞いも論理的に説明がつかないこともある。開発者がちょっと触っただけで気付くというのは中身の品質はもっと低いと推測される。google や amazon の方が品質が高い。&lt;/p>
&lt;p>実際に sdk を使って entra id のユーザーやグループの変更を行いながら、リクエストしてデバッグしてわかったことを書く。&lt;/p>
&lt;ul>
&lt;li>nextLink と deltaLink は排他的な関係にある
&lt;ul>
&lt;li>nextLink が返される場合は、実際に差分データがなかったとしてもそのセッション内で次のデータがあることを意図している。nextLink が返され続けている限り、その情報を使ってリクエストし続ける必要がある。実際にはなにもデータが取得されないということもある。基本的には変更がなければ1回で終わるが、数十回ぐらいリクエストし続ける場合もある&lt;/li>
&lt;li>deltaLink は rdbms でいうところの cursor のような概念になる。ldap プロトコルで言うところの cookie に相当する。その時点以降の差分のみを取得するためのトークンになる。deltaLink を使ったリクエストのときに新しい変更の差分情報を取得できる&lt;/li>
&lt;li>毎秒リクエストするような頻繁なリクエストだと、同じ変更差分を複数回取得することがある (at least once)
&lt;ul>
&lt;li>30秒ごとに取得するようにしたら再現しなかったのでデータストアが eventual consistency な振る舞いをしている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>削除やメンバーの差分のような情報は sdk の api では additional data と呼ばれる領域に map で格納されている
&lt;ul>
&lt;li>ドキュメントではこれらをアノテーションと呼んでいた気がする&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>削除は &lt;code>@removed&lt;/code> というデータが含まれる&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;@removed&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;reason&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;changed&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>メンバーの変更は &lt;code>members@delta&lt;/code> というデータに含まれる
&lt;ul>
&lt;li>ユーザーとグループの関係を表すようなものは &lt;code>propertyName@delta&lt;/code> というフィールドで additional data に含まれる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;members@delta&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;@odata.type&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;#microsoft.graph.user&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;693acd06-2877-4339-8ade-b704261fe7a0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;@odata.type&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;#microsoft.graph.user&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;49320844-be99-4164-8167-87ff5d047ace&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>たとえば、グループの変更とグループメンバーの変更を検出するには次のようなコードになる。これは振る舞いを検証するためのデバッグのために書いた検証コードなので実際のアプリケーションに使うようなものではない。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">groups&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">defaultOptions&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">azidentity&lt;/span>.&lt;span style="color:#a6e22e">ClientSecretCredentialOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ClientOptions&lt;/span>: &lt;span style="color:#a6e22e">azcore&lt;/span>.&lt;span style="color:#a6e22e">ClientOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Retry&lt;/span>: &lt;span style="color:#a6e22e">policy&lt;/span>.&lt;span style="color:#a6e22e">RetryOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">MaxRetries&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">TryTimeout&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">RetryDelay&lt;/span>: &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">MaxRetryDelay&lt;/span>: &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">credential&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">azidentity&lt;/span>.&lt;span style="color:#a6e22e">NewClientSecretCredential&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tenantID&lt;/span>, &lt;span style="color:#a6e22e">clientID&lt;/span>, &lt;span style="color:#a6e22e">secret&lt;/span>, &lt;span style="color:#a6e22e">defaultOptions&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">client&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">msgraphsdk&lt;/span>.&lt;span style="color:#a6e22e">NewGraphServiceClientWithCredentials&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">credential&lt;/span>, &lt;span style="color:#a6e22e">defaultScopes&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Background&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">headers&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">abstractions&lt;/span>.&lt;span style="color:#a6e22e">NewRequestHeaders&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">headers&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Prefer&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;return=minimal&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">conf&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">graphgroups&lt;/span>.&lt;span style="color:#a6e22e">DeltaRequestBuilderGetRequestConfiguration&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Headers&lt;/span>: &lt;span style="color:#a6e22e">headers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">delta&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Groups&lt;/span>().&lt;span style="color:#a6e22e">Delta&lt;/span>().&lt;span style="color:#a6e22e">GetAsDeltaGetResponse&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">conf&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;delta AdditionalData&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ad&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span>.&lt;span style="color:#a6e22e">GetAdditionalData&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">ad&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;@odata.context&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">string&lt;/span>); &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;------------------------&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span>.&lt;span style="color:#a6e22e">GetValue&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">id&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>.&lt;span style="color:#a6e22e">GetId&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;group AdditionalData&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">dad&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>.&lt;span style="color:#a6e22e">GetAdditionalData&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">dad&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;@removed&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">removed&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">removed&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">removed&lt;/span>.(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">reason&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">string&lt;/span>); &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">reason&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;------------------------&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;members@delta&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;members@delta&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ms&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.([]&lt;span style="color:#a6e22e">any&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">mi&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">ms&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">mi&lt;/span>.(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">m&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">vv&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.(&lt;span style="color:#66d9ef">type&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">string&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; - %+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">vv&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#a6e22e">any&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; - %+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">vv&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;---------&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%+v: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">dispName&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>.&lt;span style="color:#a6e22e">GetDisplayName&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">dispName&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;dispName: %+v\n&amp;#34;&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">dispName&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">nextLink&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span>.&lt;span style="color:#a6e22e">GetOdataNextLink&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">deltaLink&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span>.&lt;span style="color:#a6e22e">GetOdataDeltaLink&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">deltaLink&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hasNextLink: %t, use deltaLink to request\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">nextLink&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">delta&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Groups&lt;/span>().&lt;span style="color:#a6e22e">Delta&lt;/span>().&lt;span style="color:#a6e22e">WithUrl&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">deltaLink&lt;/span>).&lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">conf&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span>&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">After&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">delta&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Groups&lt;/span>().&lt;span style="color:#a6e22e">Delta&lt;/span>().&lt;span style="color:#a6e22e">WithUrl&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">nextLink&lt;/span>).&lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">conf&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span>&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">After&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="みなとのもりの運動">みなとのもりの運動&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0522/#みなとのもりの運動">前回の所感&lt;/a> 。いつも通りのメニューをこなす。19時頃に公園へ通うのも習慣になりつつある。今日もよい場所を陣取ったものの、後からフライングディスクのサークルの人たちが近くに来て練習を始めた。他が空いているのだからもう少し余裕をもって場所をとってくれたらよいのに、微妙に視界に入って気になる距離感のところで練習を始める。接触するわけではないから問題はないのだけど、フライングディスクというスポーツの特性上、ディスクが飛んできたら走ってくるから十分に離れていないと、たまたまディスクがそれたときに危なくないかが気になってしまう。だいたいストレッチと縄跳びとジョギングと筋トレとストレッチでだいたい1時間ぐらいかかる。だいぶ慣れてきたので、負荷を増やすためにもう少しメニューを追加してもよい時期かもしれない。&lt;/p></content></item><item><title>淡々と週明け</title><link>/diary/posts/2024/0520/</link><pubDate>Mon, 20 May 2024 08:32:55 +0900</pubDate><guid>/diary/posts/2024/0520/</guid><description>今日の運動は腹筋ローラー,背筋,縄跳び(駆け足跳),ジョギング,ハンドグリップ,ダンベルをした。統計を 運動の記録 にまとめる。
me-id 調査 先週から me-id の調査 をずっとやっている。ちょうど明日にチームの定例会議があるので、現時点で調査した内容を整理してメンバーに共有するために資料を作ってみた。運用におけるシステム構成として考えられるパターンがいくつかあって、それらにすべて対応するのか、一部の用途だけに対応するのか、そういった要件の取捨選択や優先度も決めないといけないことがわかってきた。me-id が柔軟なシステム構成をとれるよう設計されているため、私が想定していたよりもちゃんと対応するのは大変なのかもしれない。調査内容の共有のためにスライドを作ったら20枚ほどになった。システム構成を議論するための資料が20枚になってしまうぐらいの、me-id の複雑さ、もしくは柔軟さが伺える。
みなとのもりの運動 前回の所感 。昨日は雨降りでお休みしていた。今朝はよい天気で気持ちよかったので今日からまた再開しようと、カレンダーに月-金まで公園運動の予定を入れた。予定を入れて運動部のチャンネルにコメントした。それで後にひけなくなって運動することへのモチベーションや勢いになる。今日も縄跳びしてから軽くジョギングも入れてみた。土曜日よりは足の疲労が残っていたから控えめにした。あと周りが暗くなるとジョギングしていても寂しい気持ちになるから昼間の方が走るモチベーションになる気はした。
運動のためのグッズを運ぶバッグを買ってみた。ダンベルとか重いので、ちょっと大きめの、帆布で頑丈なバッグにしてみた。普通のトートバッグだと紐が切れないか心配だったのでこれは頑丈そうで満足。</description><content>&lt;p>今日の運動は腹筋ローラー,背筋,縄跳び(駆け足跳),ジョギング,ハンドグリップ,ダンベルをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="me-id-調査">me-id 調査&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0516/#me-id-調査">先週から me-id の調査&lt;/a> をずっとやっている。ちょうど明日にチームの定例会議があるので、現時点で調査した内容を整理してメンバーに共有するために資料を作ってみた。運用におけるシステム構成として考えられるパターンがいくつかあって、それらにすべて対応するのか、一部の用途だけに対応するのか、そういった要件の取捨選択や優先度も決めないといけないことがわかってきた。me-id が柔軟なシステム構成をとれるよう設計されているため、私が想定していたよりもちゃんと対応するのは大変なのかもしれない。調査内容の共有のためにスライドを作ったら20枚ほどになった。システム構成を議論するための資料が20枚になってしまうぐらいの、me-id の複雑さ、もしくは柔軟さが伺える。&lt;/p>
&lt;h2 id="みなとのもりの運動">みなとのもりの運動&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0518/#みなとのもりの運動">前回の所感&lt;/a> 。昨日は雨降りでお休みしていた。今朝はよい天気で気持ちよかったので今日からまた再開しようと、カレンダーに月-金まで公園運動の予定を入れた。予定を入れて運動部のチャンネルにコメントした。それで後にひけなくなって運動することへのモチベーションや勢いになる。今日も縄跳びしてから軽くジョギングも入れてみた。土曜日よりは足の疲労が残っていたから控えめにした。あと周りが暗くなるとジョギングしていても寂しい気持ちになるから昼間の方が走るモチベーションになる気はした。&lt;/p>
&lt;p>運動のためのグッズを運ぶバッグを買ってみた。ダンベルとか重いので、ちょっと大きめの、帆布で頑丈なバッグにしてみた。普通のトートバッグだと紐が切れないか心配だったのでこれは頑丈そうで満足。&lt;/p>
&lt;p>&lt;a href="https://amzn.to/3UMI8tS" target="_blank">&lt;img src="https://m.media-amazon.com/images/I/71JasUbK5tL._AC_SX679_.jpg" width="200" />&lt;/a>&lt;/p></content></item><item><title>entra id のエンタープライズアプリケーションの正体</title><link>/diary/posts/2024/0516/</link><pubDate>Thu, 16 May 2024 10:16:45 +0900</pubDate><guid>/diary/posts/2024/0516/</guid><description>今日の運動は腹筋ローラー,縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を 運動の記録 にまとめる。
me-id 調査 昨日の続き。システム構成をどうするか分かってきた。entra id に対するエンドポイントは基本的には Microsoft Graph API になる。これとは別に、自動プロビジョニングするには、entra id から scim 2.0 のプロトコルを用いてサードパーティサーバーに対してリクエストが送られる。entra id のエンタープライズアプリケーションという設定項目に google だったり slack だったりといったサードパーティのクラウド向けのアプリケーションが登録されている。それらが何をしているかというと、entra id から自動プロビジョニングによってリクエストされる scim 2.0 のエンドポイントの設定を提供している。そのエンタープライズアプリケーションにそれぞれのサードパーティサービスのエンドポイントの uri や credentials を設定する。entra id からリクエストを受け取って多少の加工などもしているかもしれない。
そこまで理解できたときにちょうどチーム勉強会があったので調査内容の中間報告のようなことをしていたら、オンプレミス AD にプロビジョニングするエンタープライズアプリケーションは microsoft 社が提供している。azure 上に windows サーバーを構築してオンプレミス AD を設定して自動プロビジョニングしたら、既存の agent から dirsync で id 連携できるんじゃないか？というコメントがあって、確かにその方がネットワークも考慮したシステム構成として理にかなっているし、うちらの開発コストが減って、すでに運用で使われている他社のアプリケーションも再利用できてよいかもしれないと思えてきた。明日はその検証をやってみる。
みなとのもりの運動 前回の所感 。オフィスから出掛けるすこし前に夕立が降ったらしく路面が濡れていた。天気予報をみたら降水確率は0%だったので一時的にざざーっと降ったようにみえる。この状態だと公園の芝生の上で縄跳びすると靴がずぶ濡れになるのでコンクリートの乾いているところの上で縄跳びをした。ひざに負担はかかるけど、コンクリート面の方が回数はたくさん跳べる。土の地面よりもコンクリート面の方が体力の消費も少ない。したがって休憩を挟まずに長く跳び続けられる。とはいえ、コンクリート面の縄跳びはひざへの負担が気になるから、今日は駆け足跳びをやめてジョギングしてみた。公園のトラック1周は約500mある。すこし前にジョギングできた ことから体重が減って股関節への負担が減ってジョギングも軽くならやってもよさそうな雰囲気が出てきた。休みながら2.5周走ってみた。</description><content>&lt;p>今日の運動は腹筋ローラー,縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="me-id-調査">me-id 調査&lt;/h2>
&lt;p>昨日の続き。システム構成をどうするか分かってきた。entra id に対するエンドポイントは基本的には &lt;a href="https://learn.microsoft.com/ja-jp/graph/use-the-api">Microsoft Graph API&lt;/a> になる。これとは別に、自動プロビジョニングするには、entra id から scim 2.0 のプロトコルを用いてサードパーティサーバーに対してリクエストが送られる。entra id のエンタープライズアプリケーションという設定項目に google だったり slack だったりといったサードパーティのクラウド向けのアプリケーションが登録されている。それらが何をしているかというと、entra id から自動プロビジョニングによってリクエストされる scim 2.0 のエンドポイントの設定を提供している。そのエンタープライズアプリケーションにそれぞれのサードパーティサービスのエンドポイントの uri や credentials を設定する。entra id からリクエストを受け取って多少の加工などもしているかもしれない。&lt;/p>
&lt;p>そこまで理解できたときにちょうどチーム勉強会があったので調査内容の中間報告のようなことをしていたら、オンプレミス AD にプロビジョニングするエンタープライズアプリケーションは microsoft 社が提供している。azure 上に windows サーバーを構築してオンプレミス AD を設定して自動プロビジョニングしたら、既存の agent から dirsync で id 連携できるんじゃないか？というコメントがあって、確かにその方がネットワークも考慮したシステム構成として理にかなっているし、うちらの開発コストが減って、すでに運用で使われている他社のアプリケーションも再利用できてよいかもしれないと思えてきた。明日はその検証をやってみる。&lt;/p>
&lt;h2 id="みなとのもりの運動">みなとのもりの運動&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0515/#みなとのもりの運動">前回の所感&lt;/a> 。オフィスから出掛けるすこし前に夕立が降ったらしく路面が濡れていた。天気予報をみたら降水確率は0%だったので一時的にざざーっと降ったようにみえる。この状態だと公園の芝生の上で縄跳びすると靴がずぶ濡れになるのでコンクリートの乾いているところの上で縄跳びをした。ひざに負担はかかるけど、コンクリート面の方が回数はたくさん跳べる。土の地面よりもコンクリート面の方が体力の消費も少ない。したがって休憩を挟まずに長く跳び続けられる。とはいえ、コンクリート面の縄跳びはひざへの負担が気になるから、今日は駆け足跳びをやめてジョギングしてみた。公園のトラック1周は約500mある。&lt;a href="/diary/diary/posts/2024/0510/#メリケンパークジョギング">すこし前にジョギングできた&lt;/a> ことから体重が減って股関節への負担が減ってジョギングも軽くならやってもよさそうな雰囲気が出てきた。休みながら2.5周走ってみた。&lt;/p></content></item><item><title>今週は me-id 調査と scim client のサンプル実装</title><link>/diary/posts/2024/0515/</link><pubDate>Wed, 15 May 2024 01:08:04 +0900</pubDate><guid>/diary/posts/2024/0515/</guid><description>今日の運動は腕立て,縄跳び(両足跳,駆け足跳),散歩,ハンドグリップ,ダンベルをした。統計を 運動の記録 にまとめる。
me-id 調査 今週から Microsoft Entra ID (省略名は me-id) の調査をしている。ドキュメントはたくさんあるものの、機能や提供形態が多いために私がやりたいことを説明しているドキュメントがどこにあるのかを探すのが面倒だった。me-id から id 連携をするためのプロビジョニングを自分たちで実装したい。どうやらその説明のドキュメントは次のようにみえる。
チュートリアル: Microsoft Entra ID の SCIM エンドポイントのプロビジョニングを開発および計画する me-id としては sicm でプロビジョニングを行う api を提供していて、watermark と呼ばれる、rdbms で言うところの cursor のような仕組みで更新差分を取得する仕組みを提供している。scim client は microsoft 社も提供しているが、クローズドソースで windows 向けアプリケーションしか提供されていないため、自前で scim client を実装する必要があるということを月・火の2日間かかって理解できてきたといった進捗。なかなか難しい。
駐車場の契約 昨日の続き 。昨日の夜にオンラインで申し込みしたものの、いくつかフォームの記載事項に訂正を求めるメールが届いた。修正した内容を返信して数時間で審査を完了したから契約書を締結する連絡が届いた。普通に拒否されるわけはないのだけど、1度マンションのオーナー審査で拒否されてから法人契約の審査はわりとどきどきする。そして審査に落ちるとヘコむ。契約書や車庫証明関連の書類などは後日、郵送されることにはなるが、丸1日経たない時間で駐車場の契約自体はできてしまった。効率がよい。
みなとのもりの運動 前回の所感 。運動部のチャンネルにこの火曜日から木曜日までは 18:30 - 19:30 に公園へ行くと宣言して通うようにしている。こうやって公けに言ってしまうと引けなくなるので無理やりでも行くようになる。今日は18時半に雑用していたら出掛けるのが19時半になった。遅い時間に公園へ行った分、スペースは空いていた。いつも通り、シートを広げて場所取りしてストレッチをしていた。すると、短距離走のチームが近くに来て、ややパーソナルスペースに引っかかるといった所感をもった。向こうのチームもシートを広げてストレッチをしていた。同じようなことを考える人たちもいるもんや。今日は普通にストレッチして、縄跳びして、歩いてきて、ストレッチして、筋トレして、といつも通りのメニューをゆっくりこなしてきて満足した。</description><content>&lt;p>今日の運動は腕立て,縄跳び(両足跳,駆け足跳),散歩,ハンドグリップ,ダンベルをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="me-id-調査">me-id 調査&lt;/h2>
&lt;p>今週から &lt;a href="https://www.microsoft.com/ja-jp/security/business/identity-access/microsoft-entra-id">Microsoft Entra ID&lt;/a> (省略名は me-id) の調査をしている。ドキュメントはたくさんあるものの、機能や提供形態が多いために私がやりたいことを説明しているドキュメントがどこにあるのかを探すのが面倒だった。me-id から id 連携をするためのプロビジョニングを自分たちで実装したい。どうやらその説明のドキュメントは次のようにみえる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/ja-jp/entra/identity/app-provisioning/use-scim-to-provision-users-and-groups">チュートリアル: Microsoft Entra ID の SCIM エンドポイントのプロビジョニングを開発および計画する&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>me-id としては sicm でプロビジョニングを行う api を提供していて、watermark と呼ばれる、rdbms で言うところの cursor のような仕組みで更新差分を取得する仕組みを提供している。scim client は microsoft 社も提供しているが、クローズドソースで windows 向けアプリケーションしか提供されていないため、自前で scim client を実装する必要があるということを月・火の2日間かかって理解できてきたといった進捗。なかなか難しい。&lt;/p>
&lt;h2 id="駐車場の契約">駐車場の契約&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0514/#駐車場散策">昨日の続き&lt;/a> 。昨日の夜にオンラインで申し込みしたものの、いくつかフォームの記載事項に訂正を求めるメールが届いた。修正した内容を返信して数時間で審査を完了したから契約書を締結する連絡が届いた。普通に拒否されるわけはないのだけど、1度マンションのオーナー審査で拒否されてから法人契約の審査はわりとどきどきする。そして審査に落ちるとヘコむ。契約書や車庫証明関連の書類などは後日、郵送されることにはなるが、丸1日経たない時間で駐車場の契約自体はできてしまった。効率がよい。&lt;/p>
&lt;h2 id="みなとのもりの運動">みなとのもりの運動&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0514/#みなとのもりの運動">前回の所感&lt;/a> 。運動部のチャンネルにこの火曜日から木曜日までは 18:30 - 19:30 に公園へ行くと宣言して通うようにしている。こうやって公けに言ってしまうと引けなくなるので無理やりでも行くようになる。今日は18時半に雑用していたら出掛けるのが19時半になった。遅い時間に公園へ行った分、スペースは空いていた。いつも通り、シートを広げて場所取りしてストレッチをしていた。すると、短距離走のチームが近くに来て、ややパーソナルスペースに引っかかるといった所感をもった。向こうのチームもシートを広げてストレッチをしていた。同じようなことを考える人たちもいるもんや。今日は普通にストレッチして、縄跳びして、歩いてきて、ストレッチして、筋トレして、といつも通りのメニューをゆっくりこなしてきて満足した。&lt;/p></content></item></channel></rss>