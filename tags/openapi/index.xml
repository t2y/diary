<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openapi on forest nook</title><link>/diary/tags/openapi/</link><description>Recent content in openapi on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Mon, 27 Jun 2022 07:39:39 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/openapi/index.xml" rel="self" type="application/rss+xml"/><item><title>openapi generator の設定</title><link>/diary/posts/2022/0627/</link><pubDate>Mon, 27 Jun 2022 07:39:39 +0900</pubDate><guid>/diary/posts/2022/0627/</guid><description>3時に寝て6時半に起きた。昨日は夕方に昼寝したので夜は眠れなかった。
openapi generator の x-implements 機能 外部ベンダーの api client の wrapper を実装していて、api client が扱うリクエストやレスポンスを型 (インターフェース) で抽象化できるとよさそうと思って openapi generator の設定を調べていた。maven-plugin の設定と openapi-generator の設定の2つがあるので両方のドキュメントを確認しないといけない。
https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-maven-plugin https://openapi-generator.tech/docs/generators/java/ そんなに都合よくインターフェースを指定できるような仕組みがなければ、最悪は mustache テンプレートをカスタマイズするしかないかなぁとか考えていた。テンプレートを操作すると、今後の保守コストが上がってしまうのでそのメリット・デメリットを比較して考えないといけない。諦めかけていたときに so でこの issue をみつけた。
Feature x-implements is not supported #11636 ちょうどこの5月末にリリースされたばかりの 6.0.0 に x-implements と指定すれば、任意のインターフェースを implements できる機能が追加された。これはスキーマに対する設定なのでテンプレートをカスタマイズするよりずっと保守コストは小さくて済む。
例えば、openapi schema の json で設定すると、コード生成したときにそんな風にインターフェースが付く。
&amp;#34;SomethingApiResponse&amp;#34;: { + &amp;#34;x-implements&amp;#34;: &amp;#34;com.example.app.MyResponse&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;SomethingApiResponse&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;object&amp;#34;, &amp;#34;properties&amp;#34;: { -public class SomethingApiResponse { +public class SomethingApiResponse implements com.example.app.MyResponse { あまりにも意図していた機能をみつけて嬉しくてツィートしてしまった。</description><content>&lt;p>3時に寝て6時半に起きた。昨日は夕方に昼寝したので夜は眠れなかった。&lt;/p>
&lt;h2 id="openapi-generator-の-x-implements-機能">openapi generator の x-implements 機能&lt;/h2>
&lt;p>外部ベンダーの api client の wrapper を実装していて、api client が扱うリクエストやレスポンスを型 (インターフェース) で抽象化できるとよさそうと思って openapi generator の設定を調べていた。maven-plugin の設定と openapi-generator の設定の2つがあるので両方のドキュメントを確認しないといけない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-maven-plugin">https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-maven-plugin&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://openapi-generator.tech/docs/generators/java/">https://openapi-generator.tech/docs/generators/java/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>そんなに都合よくインターフェースを指定できるような仕組みがなければ、最悪は &lt;a href="https://mustache.github.io/">mustache&lt;/a> テンプレートをカスタマイズするしかないかなぁとか考えていた。テンプレートを操作すると、今後の保守コストが上がってしまうのでそのメリット・デメリットを比較して考えないといけない。諦めかけていたときに so でこの issue をみつけた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/OpenAPITools/openapi-generator/issues/11636">Feature x-implements is not supported #11636&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ちょうどこの5月末にリリースされたばかりの 6.0.0 に &lt;code>x-implements&lt;/code> と指定すれば、任意のインターフェースを implements できる機能が追加された。これはスキーマに対する設定なのでテンプレートをカスタマイズするよりずっと保守コストは小さくて済む。&lt;/p>
&lt;p>例えば、openapi schema の json で設定すると、コード生成したときにそんな風にインターフェースが付く。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span> &amp;#34;SomethingApiResponse&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ &amp;#34;x-implements&amp;#34;: &amp;#34;com.example.app.MyResponse&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> &amp;#34;title&amp;#34;: &amp;#34;SomethingApiResponse&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;object&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-public class SomethingApiResponse {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+public class SomethingApiResponse implements com.example.app.MyResponse {
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>あまりにも意図していた機能をみつけて嬉しくてツィートしてしまった。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">openapi generator で生成するコードに任意の interface を指定するのはテンプレートをカスタマイズするしかないかなぁと思っていたら、最新の 6.0.0 でスキーマ定義に x-implements で指定できるようになっている。これはすごい。&lt;a href="https://t.co/bT0fQxSrGz">https://t.co/bT0fQxSrGz&lt;/a>&lt;/p>&amp;mdash; Tetsuya Morimoto (@t2y) &lt;a href="https://twitter.com/t2y/status/1541238905953226753?ref_src=twsrc%5Etfw">June 27, 2022&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></content></item></channel></rss>