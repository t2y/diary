<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Issue Management on</title><link>/diary/tags/issue-management/</link><description>Recent content in Issue Management on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 11 Nov 2024 08:23:37 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/issue-management/index.xml" rel="self" type="application/rss+xml"/><item><title>部屋の片付けへの趣き</title><link>/diary/posts/2024/1111/</link><pubDate>Mon, 11 Nov 2024 08:23:37 +0900</pubDate><guid>/diary/posts/2024/1111/</guid><description>今日のバドミントン練習はエアシャトルでリフティングを10分、連続最大回数は322回だった。その後にショートサーブ30回、フットワーク10分の練習をした。リフティングは連続回数よりもラケットコントロールの質を求める練習に変えていく。昨日と同様、みなとのもり公園をジョギングで4週走った。fitbit によると 1.8km 走ったそうな。
プロジェクトマネージャーが手を動かすことの功罪 朝からお手伝い先の社内インフラサーバーが落ちていて待ち時間があったのでふと思い返してつらつら考えごとをしていた。
お客さんが選ばなければ、逡巡と葛藤の結果、最終的に私は品質を優先する
開発合宿の課題管理の雑談から引用
私はもっと仕組みを作るところに注力すべきだった。私自身がコンサル嫌いの、実務をやっている姿勢をみせてメンバーが参考にしてほしいという意識が強過ぎた。また開発は楽しいことから必要以上に手を動かし過ぎてコアな開発に入り過ぎたことで、自分がやらないと他のメンバーが担当しにくい体制になってしまった。「任せる」はずが「任される」ことになってしまった。バックエンドの品質は大事だから責任感もあった。もしかしたらお客さんが求める以上の過剰品質なモノづくりをしてしまったのかもしれない。そして、仕組みづくりの後はメンバーへ委譲すべきだった。いまメンバーへマネージャーを委譲しているが、マネージャーという業務はもともと得意でもなくこだわりもなかったがためにすんなりと委譲できた。
しかし、開発の方は得意分野、且つ好きであるために品質にこだわってしまう傾向があることを認識できた。そのことが裏目に出てしまった。これが自社プロダクトの開発ならばすべて自社の資産になるためにそれでもよかったかもしれないが、他社プロダクトでやってしまうと、自分の時間を必要以上に注ぎ込むことになってしまった。その結果、お客さんの信頼を得られてはいるものの、自社プロダクトの開発に着手できず、クロージングの時期が遅れて微妙な状況になってしまった。もしかしたら、お客さんもうちの会社との契約を終了できなくなってしまって困っているという考え方もできる。
rabbitmq の autoAck (noAck) の振る舞い 先週の続き 。id 連携のリクエストをし続けながら compose サービスを down させたときの振る舞いを検証する。理想的にはそれぞれのモジュールのサービスが graceful に振る舞って、それぞれの永続化する場所でデータが溜まってくれることを期待している。その1つがメッセージキューでもある。Persistence Configuration によると、rabbitmq のメッセージを永続化するには queue に対して durable の設定を行い、producer が送信するメッセージに対しても persistent の属性を付与すればよい。しかし、実際に検証してみると、サービスの再起動時にメッセージキューからメッセージが消失していることがわかった。consume メソッドに渡す仮引数に autoAck というパラメーターがある。コメントにもそれっぽいことが書いてある。
When autoAck (also known as noAck) is true, the server will acknowledge deliveries to this consumer prior to writing the delivery to the network. When autoAck is true, the consumer should not call Delivery.</description><content>&lt;p>今日のバドミントン練習はエアシャトルでリフティングを10分、連続最大回数は322回だった。その後にショートサーブ30回、フットワーク10分の練習をした。リフティングは連続回数よりもラケットコントロールの質を求める練習に変えていく。昨日と同様、みなとのもり公園をジョギングで4週走った。fitbit によると 1.8km 走ったそうな。&lt;/p>
&lt;h2 id="プロジェクトマネージャーが手を動かすことの功罪">プロジェクトマネージャーが手を動かすことの功罪&lt;/h2>
&lt;p>朝からお手伝い先の社内インフラサーバーが落ちていて待ち時間があったのでふと思い返してつらつら考えごとをしていた。&lt;/p>
&lt;blockquote>
&lt;p>お客さんが選ばなければ、逡巡と葛藤の結果、最終的に私は品質を優先する&lt;/p>
&lt;p>&lt;a href="/diary/diary/posts/2024/1102/">開発合宿の課題管理の雑談から引用&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>私はもっと仕組みを作るところに注力すべきだった。私自身がコンサル嫌いの、実務をやっている姿勢をみせてメンバーが参考にしてほしいという意識が強過ぎた。また開発は楽しいことから必要以上に手を動かし過ぎてコアな開発に入り過ぎたことで、自分がやらないと他のメンバーが担当しにくい体制になってしまった。「任せる」はずが「任される」ことになってしまった。バックエンドの品質は大事だから責任感もあった。もしかしたらお客さんが求める以上の過剰品質なモノづくりをしてしまったのかもしれない。そして、仕組みづくりの後はメンバーへ委譲すべきだった。いまメンバーへマネージャーを委譲しているが、マネージャーという業務はもともと得意でもなくこだわりもなかったがためにすんなりと委譲できた。&lt;/p>
&lt;p>しかし、開発の方は得意分野、且つ好きであるために品質にこだわってしまう傾向があることを認識できた。そのことが裏目に出てしまった。これが自社プロダクトの開発ならばすべて自社の資産になるためにそれでもよかったかもしれないが、他社プロダクトでやってしまうと、自分の時間を必要以上に注ぎ込むことになってしまった。その結果、お客さんの信頼を得られてはいるものの、自社プロダクトの開発に着手できず、クロージングの時期が遅れて微妙な状況になってしまった。もしかしたら、お客さんもうちの会社との契約を終了できなくなってしまって困っているという考え方もできる。&lt;/p>
&lt;h2 id="rabbitmq-の-autoack-noack-の振る舞い">rabbitmq の autoAck (noAck) の振る舞い&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/1108/#compose-サービスの停止の振る舞い">先週の続き&lt;/a> 。id 連携のリクエストをし続けながら compose サービスを down させたときの振る舞いを検証する。理想的にはそれぞれのモジュールのサービスが graceful に振る舞って、それぞれの永続化する場所でデータが溜まってくれることを期待している。その1つがメッセージキューでもある。&lt;a href="https://www.rabbitmq.com/docs/persistence-conf">Persistence Configuration&lt;/a> によると、rabbitmq のメッセージを永続化するには queue に対して durable の設定を行い、producer が送信するメッセージに対しても persistent の属性を付与すればよい。しかし、実際に検証してみると、サービスの再起動時にメッセージキューからメッセージが消失していることがわかった。consume メソッドに渡す仮引数に autoAck というパラメーターがある。コメントにもそれっぽいことが書いてある。&lt;/p>
&lt;blockquote>
&lt;p>When autoAck (also known as noAck) is true, the server will acknowledge deliveries to this consumer prior to writing the delivery to the network. When autoAck is true, the consumer should not call Delivery.Ack. Automatically acknowledging deliveries means that some deliveries may get lost if the consumer is unable to process them after the server delivers them. See &lt;a href="http://www.rabbitmq.com/confirms.html">http://www.rabbitmq.com/confirms.html&lt;/a> for more details.&lt;/p>
&lt;p>&lt;a href="https://pkg.go.dev/github.com/rabbitmq/amqp091-go#Channel.ConsumeWithContext">ConsumeWithContext&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>autoAck という名前からメッセージを取得したら自動的にそのメッセージに対して ack を返すようなイメージで私は考えていた。しかし、どうやら consumer が subscribe して接続した時点で consume 扱いとなり、consumer がメッセージを実際に取得したかどうかに関係なく consumer の終了時にそのときに溜まっているすべてのメッセージが消失しているようにみえる。余談だが、rabbitmq のドキュメントにも noAck と autoAck という2つの用語が存在する。どうやらもともと noAck という名前だったのを autoAck という用語に変更したようにみえる。メッセージを永続化するには autoAck=false にしてメッセージに対する処理を完了した後に consumer が必ず ack を返すという実装にしないといけないことがわかった。このパラメーターは2年前から同じ設定だったので私がいま検証するまで誰もこの振る舞いに気付かなかったんやと驚いた。&lt;/p>
&lt;h2 id="部屋の掃除">部屋の掃除&lt;/h2>
&lt;p>19時に閉まる業務スーパーへ買いものへ行くために18時過ぎにお仕事を終えて、移動して買いものをして、炊飯開始して、ジョギングして、戻って晩ごはんを食べて、バドミントン練習をして、お風呂に入って、ストレッチして、なんとなくベッドに入って休もうとした。ここで22時半ぐらい。まったく眠れなくて寝室の掃除を始めたら、これが捗ってやる気が出てきて、部屋のレイアウト変更したりして少し片付けもできた。引っ越してからまったく進めていなかった部屋づくりが突発的に急に少しできた。これまでも時間がなかったわけではないが、まったくやる気がなくて手をつけられていなかった。それがなぜできたのかはわからないが、手をつけられていなかったことに手を入れられたことで心理的に楽になった気がした。明日も帰ったら少しだけ部屋づくりの作業をしようと思う。&lt;/p></content></item><item><title>秋の城崎温泉の中日</title><link>/diary/posts/2024/1102/</link><pubDate>Sat, 02 Nov 2024 14:39:38 +0900</pubDate><guid>/diary/posts/2024/1102/</guid><description>居間で1時半から6時頃まで寝てた。今日のバドミントンは雨天中止。朝から大雨、河川洪水、土砂災害警報と出ていた。雨も夜までずっと降り続いていた。
起きてから昨日、移動途中のサービスエリアで買っておいた丹波黒枝豆を茹でてみる。大粒で少し甘みがあっておいしい枝豆だった。普通の枝豆とは少し趣が違うようなのでお土産にもよさそうに思えた。おやつ代わりに茹でた枝豆を食べていた。
その後、午前中に雑談しながら発表資料を作り終えた。今回の開発合宿は余裕がなくてすべてにおいて準備不足だったが、そのうちの大きな反省として発表資料を事前に作らなかったことがあげられる。きのいえにいると、なんやらかんやら周りと雑談して盛り上がるので自分の作業がまったく進まない。ワーケーションは「余白」が大事になる。普段話さない人たちと雑談するためのイベントでもある。
お昼頃に マルサン精肉店 ですき焼き用の但馬牛を買いに行く。店員さんと話しながら1人200gを基準に購入する。但馬牛のリブロースを200g、鹿児島産の赤身肉を100gとした。但馬牛はとてもおいしかったが、リブロースの霜降りの脂身があるため、量は食べられない。実際に食べてみた所感としてはリブロースを150g、赤身肉を100gでよかったと思える。足りないよりは余る方がよいのでこのぐらいは許容範囲と言える。お店では陳列棚にお肉を並べていなかったため、100gの単価がわからなかった。私の先入観でお肉はそう高くないだろうと考えていた。実際に買ってみたらリブロースが3000円/100g、赤身肉が1900円/100gだった。先に値段を聞いてから他の部位とも調整して買うべきだった。インフレしているのもあると思うが、5人分のお肉の料金が8人でカニを購入したのと同じぐらいの金額になってしまった。失敗。
午後からまた別のお風呂へ入りにいったついでに かみや民藝店 さんの前を通りかかって入ってみた。陳列されている麦わら細工を見学してからオーナーさんに話しかけてみた。この麦わら細工を作っているのは日本で城崎温泉と伊勢の2箇所しかないらしい。昨年、お土産に麦わら細工のストラップを購入してから気になっていた。
お土産を買ってきてから、うちの会社のロゴは幾何学模様だからこの麦わら細工で作れないかと考えていた。うまくできればオリジナルな会社のノベルティになるのではないかと。オーナーさんに聞いてみたところ、うまくできるかどうかは実際に作ってみないと分からないものの、特注のようなものも引き受けているという。基本的にすべて手作りで作るため、既成品を作るのも特注品を作るのも手間暇はあまり変わらないらしい。
カスタムメイドの追加費用はない 最低発注数のようなものはない 納期は急いでいないからいつでもよい 1つ2500円前後で作ってくれるという。まず試作品としてうちのロゴの色違いで2つを作ってもらうことにした。それをみてから実際にノベルティとして発注するかどうかを決める。麦わら細工でノベルティの試作品交渉がうまくいった。
晩ごはんに関西風のすき焼きを作って食べる。まず肉を焼いて溶き卵でそのまま食べる。焼いて食べるときのインパクトは大きい。よいお肉だったのもあっておいしかったと思う。焼いて食べた後は普通に煮込むすき焼きを作る。最初に焼いて食べるお肉のインパクトが大きかった分、煮込んで食べたときの印象が薄くなってしまう感じがした。2回に分けて鍋を作ったが、最初は野菜が足りなくてすき焼きに煮込む水分が少なかったように思えた。鍋いっぱいの野菜を多めに入れてから煮込むとよさそう。
晩ごはんを食べ終えてから2日目の親睦会に入る。3人で発表していく。私はこの10ヶ月間の運動や体重減やバドミントンを始めた話しをまとめてみた。準備不足もあって単体と経緯をまとめただけでなにを伝えたいか、よくわからない発表になってしまった。はらさんは「ロールモデルを歩く」という主題で自分がなりたい人に、自分がなっていけるような生き方をしていくという話しをされた。それを聞いていて参加者からこれからは「風の時代」になっていくとか、経済的な価値よりも精神的なつながりを大事にする価値観が重要視されるのではないかといったコメントもあった。60歳になってものづくりをしている人は周りからみて迷惑になっているのではないか？若い人たちからみて年配の作る人は迷惑ではないか？50代になると受託開発の単価が下がる問題への対応。40代のうちから単価をあげず最初から高くないから下がらないという戦略もある。
私がいま独立して会社をやっている理由を端的に表すと「組織に馴染めない」ということがあげられる。それについても聞いてみた。
ai を相手に話せば、若い人に迷惑をかけずにやり取りできるのではないか？ 老化しないための研究が発展して不老不死のような状況もみえてくるのではないか？ 50代になると選択肢がなくなっていく サラリーマンとして我慢してやっていく その生き方も強いと言える 組織と折り合いをつけられているならそれは能力の1つと言える 50代で潜伏していた人はあまりいない 発表を終えて、0時ぐらいから知人のトラブルプロジェクトの話しを聞いていた。自身の経験則から私ならどう考えてどう行動するかと考えながら雑談していた。抜本的に改善しないといけない状況だが、プロジェクトの状況からどうにもならない、かなり高い確率で失敗の未来がみえている。雑談をしていて課題管理や業務の教え方について思うことが出てきたのを、忘れないように書き殴っておいた。この話しをできただけでもこの開発合宿は価値があった。
若いメンバーは「わからない」「できない」が言えた時点で正しいとする
そこから先の問題を表現する練習を積み重ねる これは文章でやり取りするよりも、口頭で話しながらできるようになってもらう 専門用語が出てくれば、なにが／どうわからないかを短文で説明してもらう その後に具体的に論理を説明しながらわからない内容を長文で説明してもらう 問題の本質を理解するための問答ではなく、私が言ったことを理解するための問答になっていた
文章で指摘した方が後で読み返せて調べられるし、証拠も残ってよいだろうと考えていたが、人によってはそのやり方が最善でもなかった 口頭で問題の本質を確認したり、相手が何を理解出来ているかを質問して考えてもらう時間をもっと取るべきだった 教え方・教わり方に個人差がある 文章だからわかりやすいとか、口頭だから曖昧になるというわけでもないことを学んだ プロダクト開発のコアな役割を担ってしまうと品質をとるか、成長を促すかのトレードオフに直面する
私の価値観ではプロダクトの品質をあげる方を選んでしまった プロジェクトに入る前にお客さんにどちらかの2択を決めてもらう メンバーの成長を優先か、プロダクト/プロジェクトの品質を優先するか お客さんが選ばなければ、逡巡と葛藤の結果、最終的に私は品質を優先する 業務の進め方が一定水準に満たないメンバーをどう対応するかa
コードレビューならマージしない、やり直しをしてもらうスキームを作るべきだった 最初からうまくできるわけはないから、やりながら慣れていってもらうことを優先して導入を甘めにしてしまった 問題の本質を理解できていないようにみえても指摘したことを修正したらマージしていた 問題の本質を理解するよう促したり、モブプロしたりしてもっと時間をかけて基本を指導して最低水準を設けるべきだった もっと話して時間をかけてゆっくりしっかり指導していくべきだった 最初に業務を遂行する上でのスキルの基準を示すべきだった リーダークラスのできる人、チームを相手に課題管理を教えるのか、新人や経験の浅い人たちも含めて課題管理を教えるのかでやり方が異なる
前者はみて学んでくれる 実践しながら勝手にできるようになっていくのでプロジェクトが進む 後者は成長を主目的とする 品質や機能開発を停滞させても業務の進め方をしっかり指導することが中長期的に大事になる 課題管理のビジネスをする上でマネージャーとして実践的に入るのはよい
終わりのスキームを最初から作っておく必要があった マネージャー (&amp;amp;遊撃) でプロダクト開発のコアな役割を担ってしまうと抜けられなくなる クロージングをどうすればよいかを悩み始めた 課題管理の OJT を実践的に1ヶ月で終えられるようなコンテンツづくりやノウハウのパッケージングをしていく必要がある 現状ではうまくいけば半年、そうじゃなかったら1年ぐらいかかる プロダクト開発の初期で私からメンバーにマネージャーを移行するスキームを作っておく マネージャーは厳しいことを指摘しないといけない
なぜ厳しいことを指摘するのかの背景や理由を説明できるようになる 厳しいことを言っても人間関係を崩さないだけの人間力も必要になる</description><content>&lt;p>居間で1時半から6時頃まで寝てた。今日のバドミントンは雨天中止。朝から大雨、河川洪水、土砂災害警報と出ていた。雨も夜までずっと降り続いていた。&lt;/p>
&lt;p>起きてから昨日、移動途中のサービスエリアで買っておいた丹波黒枝豆を茹でてみる。大粒で少し甘みがあっておいしい枝豆だった。普通の枝豆とは少し趣が違うようなのでお土産にもよさそうに思えた。おやつ代わりに茹でた枝豆を食べていた。&lt;/p>
&lt;p>その後、午前中に雑談しながら発表資料を作り終えた。今回の開発合宿は余裕がなくてすべてにおいて準備不足だったが、そのうちの大きな反省として発表資料を事前に作らなかったことがあげられる。きのいえにいると、なんやらかんやら周りと雑談して盛り上がるので自分の作業がまったく進まない。ワーケーションは「余白」が大事になる。普段話さない人たちと雑談するためのイベントでもある。&lt;/p>
&lt;p>お昼頃に &lt;a href="https://kinosaki-spa.gr.jp/directory/marusan-seiniku/">マルサン精肉店&lt;/a> ですき焼き用の但馬牛を買いに行く。店員さんと話しながら1人200gを基準に購入する。但馬牛のリブロースを200g、鹿児島産の赤身肉を100gとした。但馬牛はとてもおいしかったが、リブロースの霜降りの脂身があるため、量は食べられない。実際に食べてみた所感としてはリブロースを150g、赤身肉を100gでよかったと思える。足りないよりは余る方がよいのでこのぐらいは許容範囲と言える。お店では陳列棚にお肉を並べていなかったため、100gの単価がわからなかった。私の先入観でお肉はそう高くないだろうと考えていた。実際に買ってみたらリブロースが3000円/100g、赤身肉が1900円/100gだった。先に値段を聞いてから他の部位とも調整して買うべきだった。インフレしているのもあると思うが、5人分のお肉の料金が8人でカニを購入したのと同じぐらいの金額になってしまった。失敗。&lt;/p>
&lt;p>午後からまた別のお風呂へ入りにいったついでに &lt;a href="https://kamiya-mingei.com/shop/">かみや民藝店&lt;/a> さんの前を通りかかって入ってみた。陳列されている麦わら細工を見学してからオーナーさんに話しかけてみた。この麦わら細工を作っているのは日本で城崎温泉と伊勢の2箇所しかないらしい。昨年、お土産に麦わら細工のストラップを購入してから気になっていた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/1102_mugiwara.jpg"/>
&lt;/figure>
&lt;p>お土産を買ってきてから、うちの会社のロゴは幾何学模様だからこの麦わら細工で作れないかと考えていた。うまくできればオリジナルな会社のノベルティになるのではないかと。オーナーさんに聞いてみたところ、うまくできるかどうかは実際に作ってみないと分からないものの、特注のようなものも引き受けているという。基本的にすべて手作りで作るため、既成品を作るのも特注品を作るのも手間暇はあまり変わらないらしい。&lt;/p>
&lt;ul>
&lt;li>カスタムメイドの追加費用はない&lt;/li>
&lt;li>最低発注数のようなものはない&lt;/li>
&lt;li>納期は急いでいないからいつでもよい&lt;/li>
&lt;/ul>
&lt;p>1つ2500円前後で作ってくれるという。まず試作品としてうちのロゴの色違いで2つを作ってもらうことにした。それをみてから実際にノベルティとして発注するかどうかを決める。麦わら細工でノベルティの試作品交渉がうまくいった。&lt;/p>
&lt;p>晩ごはんに関西風のすき焼きを作って食べる。まず肉を焼いて溶き卵でそのまま食べる。焼いて食べるときのインパクトは大きい。よいお肉だったのもあっておいしかったと思う。焼いて食べた後は普通に煮込むすき焼きを作る。最初に焼いて食べるお肉のインパクトが大きかった分、煮込んで食べたときの印象が薄くなってしまう感じがした。2回に分けて鍋を作ったが、最初は野菜が足りなくてすき焼きに煮込む水分が少なかったように思えた。鍋いっぱいの野菜を多めに入れてから煮込むとよさそう。&lt;/p>
&lt;p>晩ごはんを食べ終えてから2日目の親睦会に入る。3人で発表していく。私はこの10ヶ月間の運動や体重減やバドミントンを始めた話しをまとめてみた。準備不足もあって単体と経緯をまとめただけでなにを伝えたいか、よくわからない発表になってしまった。はらさんは「ロールモデルを歩く」という主題で自分がなりたい人に、自分がなっていけるような生き方をしていくという話しをされた。それを聞いていて参加者からこれからは「風の時代」になっていくとか、経済的な価値よりも精神的なつながりを大事にする価値観が重要視されるのではないかといったコメントもあった。60歳になってものづくりをしている人は周りからみて迷惑になっているのではないか？若い人たちからみて年配の作る人は迷惑ではないか？50代になると受託開発の単価が下がる問題への対応。40代のうちから単価をあげず最初から高くないから下がらないという戦略もある。&lt;/p>
&lt;p>私がいま独立して会社をやっている理由を端的に表すと「組織に馴染めない」ということがあげられる。それについても聞いてみた。&lt;/p>
&lt;ul>
&lt;li>ai を相手に話せば、若い人に迷惑をかけずにやり取りできるのではないか？&lt;/li>
&lt;li>老化しないための研究が発展して不老不死のような状況もみえてくるのではないか？&lt;/li>
&lt;li>50代になると選択肢がなくなっていく
&lt;ul>
&lt;li>サラリーマンとして我慢してやっていく
&lt;ul>
&lt;li>その生き方も強いと言える&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>組織と折り合いをつけられているならそれは能力の1つと言える&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>50代で潜伏していた人はあまりいない&lt;/li>
&lt;/ul>
&lt;p>発表を終えて、0時ぐらいから知人のトラブルプロジェクトの話しを聞いていた。自身の経験則から私ならどう考えてどう行動するかと考えながら雑談していた。抜本的に改善しないといけない状況だが、プロジェクトの状況からどうにもならない、かなり高い確率で失敗の未来がみえている。雑談をしていて課題管理や業務の教え方について思うことが出てきたのを、忘れないように書き殴っておいた。この話しをできただけでもこの開発合宿は価値があった。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>若いメンバーは「わからない」「できない」が言えた時点で正しいとする&lt;/p>
&lt;ul>
&lt;li>そこから先の問題を表現する練習を積み重ねる&lt;/li>
&lt;li>これは文章でやり取りするよりも、口頭で話しながらできるようになってもらう&lt;/li>
&lt;li>専門用語が出てくれば、なにが／どうわからないかを短文で説明してもらう
&lt;ul>
&lt;li>その後に具体的に論理を説明しながらわからない内容を長文で説明してもらう&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>問題の本質を理解するための問答ではなく、私が言ったことを理解するための問答になっていた&lt;/p>
&lt;ul>
&lt;li>文章で指摘した方が後で読み返せて調べられるし、証拠も残ってよいだろうと考えていたが、人によってはそのやり方が最善でもなかった&lt;/li>
&lt;li>口頭で問題の本質を確認したり、相手が何を理解出来ているかを質問して考えてもらう時間をもっと取るべきだった
&lt;ul>
&lt;li>教え方・教わり方に個人差がある
&lt;ul>
&lt;li>文章だからわかりやすいとか、口頭だから曖昧になるというわけでもないことを学んだ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>プロダクト開発のコアな役割を担ってしまうと品質をとるか、成長を促すかのトレードオフに直面する&lt;/p>
&lt;ul>
&lt;li>私の価値観ではプロダクトの品質をあげる方を選んでしまった
&lt;ul>
&lt;li>プロジェクトに入る前にお客さんにどちらかの2択を決めてもらう
&lt;ul>
&lt;li>メンバーの成長を優先か、プロダクト/プロジェクトの品質を優先するか
&lt;ul>
&lt;li>お客さんが選ばなければ、逡巡と葛藤の結果、最終的に私は品質を優先する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>業務の進め方が一定水準に満たないメンバーをどう対応するかa&lt;/p>
&lt;ul>
&lt;li>コードレビューならマージしない、やり直しをしてもらうスキームを作るべきだった&lt;/li>
&lt;li>最初からうまくできるわけはないから、やりながら慣れていってもらうことを優先して導入を甘めにしてしまった
&lt;ul>
&lt;li>問題の本質を理解できていないようにみえても指摘したことを修正したらマージしていた
&lt;ul>
&lt;li>問題の本質を理解するよう促したり、モブプロしたりしてもっと時間をかけて基本を指導して最低水準を設けるべきだった&lt;/li>
&lt;li>もっと話して時間をかけてゆっくりしっかり指導していくべきだった
&lt;ul>
&lt;li>最初に業務を遂行する上でのスキルの基準を示すべきだった&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>リーダークラスのできる人、チームを相手に課題管理を教えるのか、新人や経験の浅い人たちも含めて課題管理を教えるのかでやり方が異なる&lt;/p>
&lt;ul>
&lt;li>前者はみて学んでくれる
&lt;ul>
&lt;li>実践しながら勝手にできるようになっていくのでプロジェクトが進む&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>後者は成長を主目的とする
&lt;ul>
&lt;li>品質や機能開発を停滞させても業務の進め方をしっかり指導することが中長期的に大事になる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>課題管理のビジネスをする上でマネージャーとして実践的に入るのはよい&lt;/p>
&lt;ul>
&lt;li>終わりのスキームを最初から作っておく必要があった&lt;/li>
&lt;li>マネージャー (&amp;amp;遊撃) でプロダクト開発のコアな役割を担ってしまうと抜けられなくなる
&lt;ul>
&lt;li>クロージングをどうすればよいかを悩み始めた&lt;/li>
&lt;li>課題管理の OJT を実践的に1ヶ月で終えられるようなコンテンツづくりやノウハウのパッケージングをしていく必要がある
&lt;ul>
&lt;li>現状ではうまくいけば半年、そうじゃなかったら1年ぐらいかかる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プロダクト開発の初期で私からメンバーにマネージャーを移行するスキームを作っておく&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>マネージャーは厳しいことを指摘しないといけない&lt;/p>
&lt;ul>
&lt;li>なぜ厳しいことを指摘するのかの背景や理由を説明できるようになる&lt;/li>
&lt;li>厳しいことを言っても人間関係を崩さないだけの人間力も必要になる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>ひとりではできないこと</title><link>/diary/posts/2024/1011/</link><pubDate>Fri, 11 Oct 2024 10:15:44 +0900</pubDate><guid>/diary/posts/2024/1011/</guid><description>今日のバドミントン練習はエアシャトルでリフティングを30分した。連続最大回数は80回だが、ほとんどの試行は20回も続かずに失敗してしまう。難しい。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
課題管理と adr の関係の考察 数年前から adr の話題や導入した会社の記事などをみかけるようになった。私はこれまで課題管理をうまくやっていれば adr はそれほど重要ではないとあまり重視してこなかった。しかし、世の中的に認知されて流行っているものはなにかしら意義があるのだろうと最近は少し見直してきているところもある。このスライドによると2017年から流行り始めたらしい。
開発に関する情報を一元管理する、または全文検索ことにビジネスチャンスはある 検索のニーズや要件は多様で言語によっても違い、技術もまだまだ発展的でもあるからずっとビジネスの種になる気はする gitlab issues のコメントの全文検索は有料機能なので slack 通知したチャンネルを全文検索している 課題管理システムのプラグインでテキストをシステム間連携することで検索システムを別途構築できる可能性がある 検索できなくてもデータのアーカイブをするという視点でもビジネスニーズに応える？ ベクトル検索 を検索がまだ一般的にはなっていない？ テックブログを読む会でメンバーが 医薬品検索にベクトル検索を導入したら、デフォで検索ニーズをほぼ満たせそうだった話 を紹介していた いまや rdb でも全文検索機能はあるが、実運用だと rdb の i/o がボトルネックになることは多いだろうから全文検索用途に使うモチベーションが低いと想定される 普通の全文検索とベクトル検索の違いを実際に触ってみて評価してみたい wiki と adr の違いの1つとして wiki になにを書いてよいかわからない問題がある 文章を書けるようになるのは経験や習熟を必要とする adr のようなテンプレートがあることで経験の浅い開発者も書きやすくなる狙いはある 課題管理システムの wiki に adr のラッピングをして別機能としてみせるのはよいかもしれない 業務の引き継ぎにも adr は役に立つのではないか？ adr 一覧をみたり、そこから検索することで検索効率や精度は上がるという想定 大きい会社でも巨大な課題管理システムと wiki が1つだけあって一元管理しているという噂は聞く ある会社では wiki は誤っている可能性があるから信用するなという教訓があった wiki の情報は更新されていない可能性があるから参考にしながら必ず裏をとって業務をしなさいという話し wiki を編集したら必ずレビューが必要になるプロセス notion のプロジェクト管理の使い勝手はどうか？ テンプレートを使ってガントチャートやカンバンを作れる 基本的に自分でカスタマイズできることの良し悪しがある db をどんどん改良できるが、それだけに魔改造してしまう 時間とともに複数人が改良すると保守できなくなっていく懸念がある 中核機能をパッケージ側で提供することは堅牢性を担保する上で重要ではないか タスク管理と wiki がシームレスなところはよい、はらさんは日報を書いてリンクしている 会社のインフラに日々の開発情報を書いていくと退職後に参照できない フリーランスのような働き方をするにはナレッジデータベースをローカルに作りたいという欲求がある 組み込みの課題管理システムにより、自身のナレッジデータベースをローカルに残すという目的はよいかもしれない 仕事は楽しいかね？ の考察 まとめを見返しながら、だいたいの項目は理解または支持できる。1つだけ次の項目が私には欠けていることに気付いた。</description><content>&lt;p>今日のバドミントン練習はエアシャトルでリフティングを30分した。連続最大回数は80回だが、ほとんどの試行は20回も続かずに失敗してしまう。難しい。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;h3 id="課題管理と-adr-の関係の考察">課題管理と adr の関係の考察&lt;/h3>
&lt;iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/1d21876659d244a8b6c121255e2fbce9" title="ADRを運用して3年経った僕らの現在地" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 600px; height: auto; aspect-ratio: 560 / 315;" data-ratio="1.7777777777777777">&lt;/iframe>
&lt;p>数年前から adr の話題や導入した会社の記事などをみかけるようになった。私はこれまで課題管理をうまくやっていれば adr はそれほど重要ではないとあまり重視してこなかった。しかし、世の中的に認知されて流行っているものはなにかしら意義があるのだろうと最近は少し見直してきているところもある。このスライドによると2017年から流行り始めたらしい。&lt;/p>
&lt;ul>
&lt;li>開発に関する情報を一元管理する、または全文検索ことにビジネスチャンスはある
&lt;ul>
&lt;li>検索のニーズや要件は多様で言語によっても違い、技術もまだまだ発展的でもあるからずっとビジネスの種になる気はする&lt;/li>
&lt;li>gitlab issues のコメントの全文検索は有料機能なので slack 通知したチャンネルを全文検索している
&lt;ul>
&lt;li>課題管理システムのプラグインでテキストをシステム間連携することで検索システムを別途構築できる可能性がある&lt;/li>
&lt;li>検索できなくてもデータのアーカイブをするという視点でもビジネスニーズに応える？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.elastic.co/jp/what-is/vector-search">ベクトル検索&lt;/a> を検索がまだ一般的にはなっていない？
&lt;ul>
&lt;li>テックブログを読む会でメンバーが &lt;a href="https://zenn.dev/minedia/articles/d9f01aa05bc880">医薬品検索にベクトル検索を導入したら、デフォで検索ニーズをほぼ満たせそうだった話&lt;/a> を紹介していた&lt;/li>
&lt;li>いまや rdb でも全文検索機能はあるが、実運用だと rdb の i/o がボトルネックになることは多いだろうから全文検索用途に使うモチベーションが低いと想定される&lt;/li>
&lt;li>普通の全文検索とベクトル検索の違いを実際に触ってみて評価してみたい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>wiki と adr の違いの1つとして wiki になにを書いてよいかわからない問題がある
&lt;ul>
&lt;li>文章を書けるようになるのは経験や習熟を必要とする&lt;/li>
&lt;li>adr のようなテンプレートがあることで経験の浅い開発者も書きやすくなる狙いはある&lt;/li>
&lt;li>課題管理システムの wiki に adr のラッピングをして別機能としてみせるのはよいかもしれない&lt;/li>
&lt;li>業務の引き継ぎにも adr は役に立つのではないか？&lt;/li>
&lt;li>adr 一覧をみたり、そこから検索することで検索効率や精度は上がるという想定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大きい会社でも巨大な課題管理システムと wiki が1つだけあって一元管理しているという噂は聞く
&lt;ul>
&lt;li>ある会社では wiki は誤っている可能性があるから信用するなという教訓があった
&lt;ul>
&lt;li>wiki の情報は更新されていない可能性があるから参考にしながら必ず裏をとって業務をしなさいという話し&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>wiki を編集したら必ずレビューが必要になるプロセス&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>notion のプロジェクト管理の使い勝手はどうか？
&lt;ul>
&lt;li>テンプレートを使ってガントチャートやカンバンを作れる
&lt;ul>
&lt;li>基本的に自分でカスタマイズできることの良し悪しがある
&lt;ul>
&lt;li>db をどんどん改良できるが、それだけに魔改造してしまう&lt;/li>
&lt;li>時間とともに複数人が改良すると保守できなくなっていく懸念がある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>中核機能をパッケージ側で提供することは堅牢性を担保する上で重要ではないか&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>タスク管理と wiki がシームレスなところはよい、はらさんは日報を書いてリンクしている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>会社のインフラに日々の開発情報を書いていくと退職後に参照できない
&lt;ul>
&lt;li>フリーランスのような働き方をするにはナレッジデータベースをローカルに作りたいという欲求がある&lt;/li>
&lt;li>組み込みの課題管理システムにより、自身のナレッジデータベースをローカルに残すという目的はよいかもしれない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="仕事は楽しいかねhahahugoshortcode1113s0hbhb-の考察">&lt;a href="/diary/diary/posts/2024/1008/">仕事は楽しいかね？&lt;/a> の考察&lt;/h3>
&lt;p>まとめを見返しながら、だいたいの項目は理解または支持できる。1つだけ次の項目が私には欠けていることに気付いた。&lt;/p>
&lt;blockquote>
&lt;p>毎日1つ試し続ければ必ず上達や進歩ができる&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>新しいことを始めると、いまやっていることを継続する時間がなくなったりしないか？&lt;/li>
&lt;li>プロダクト開発ではがんばってもあまり成果が出ないような時期もある
&lt;ul>
&lt;li>リファクタリングやテスト追加などはまさにそう&lt;/li>
&lt;li>そういったときも1つでも変化をもたらせれば日々の生活が変わるのか？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>はらさんのお奨めは梅原さんの &lt;a href="https://www.kadokawa.co.jp/product/301305000020/">１日ひとつだけ、強くなる。 世界一プロ・ゲーマーの勝ち続ける６４の流儀&lt;/a>&lt;/li>
&lt;li>本書を読んではらさんのよかったところは「試してみることに失敗はない」
&lt;ul>
&lt;li>それまでも試すことはやっていたはずなのに躊躇してしまう理由として失敗したら時間の無駄だと考えてしまっていた&lt;/li>
&lt;li>失敗したら嫌だと考えてしまうところがあったが、この考え方があるから vision pro を購入できる
&lt;ul>
&lt;li>最近は vision pro の話題を聞かなくなったがどうか？
&lt;ul>
&lt;li>&lt;a href="https://internet.watch.impress.co.jp/docs/yajiuma/1630679.html">ロードマップに影響は？ Appleに26年間在籍した「Vision Pro」の開発責任者が退職へ&lt;/a>&lt;/li>
&lt;li>仕事にはならないのではないか？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>やりたいことをすぐやってみるという思考につながった&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>面倒くさいときもなるべくパソコンを使うようにしてなにかしら調べる&lt;/li>
&lt;li>私はオフィスにいれば、家よりはなにかしら作業するモチベーションになる&lt;/li>
&lt;li>目標達成や成果をあげるには環境がもっとも大事
&lt;ul>
&lt;li>個人の感情を信頼しない
&lt;ul>
&lt;li>人間は面倒だとすぐ怠けてやめてしまう&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>環境を整えることでワークフローを洗練させて習慣化する
&lt;ul>
&lt;li>日記になにか書かないといけないから調べものをする&lt;/li>
&lt;li>嫌々ながらでもやっているうちに習慣になってくるとワークフローが洗練していく&lt;/li>
&lt;li>人間の運用を変えていくなにかは普遍的な価値またはビジネスチャンスがある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>調子の悪いときにどうやって早く脱却するかが大事
&lt;ul>
&lt;li>ひとりでは言い訳を作ったり怠けてしまう&lt;/li>
&lt;li>このときに他人の助けがいるのではないか？
&lt;ul>
&lt;li>話しを聞いてもらうだけでも前へ進むきっかけになる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="go-の結合テスト向けカバレッジ計測の考察">go の結合テスト向けカバレッジ計測の考察&lt;/h2>
&lt;p>以前リリースパーティーで go 1.20 で結合テスト向けのカバレッジ計測の機能が入ったことを聞いていた。次のブログ記事でやり方が紹介されている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://go.dev/blog/integration-test-coverage">Code coverage for Go integration tests&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://netdevops.me/2023/test-coverage-for-go-integration-tests/">Test coverage for Go integration tests&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>将来的に結合テストを作るときにカバレッジ計測のカスタマイズを施したバイナリを使って api server を起動する仕組みにすればこの機能を使えることに気付いた。&lt;/p>
&lt;p>まずは単体テストを実行して任意のディレクトリ (&lt;code>tests/coverage&lt;/code>) にカバレッジ計測のための中間データを生成する。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ mkdir -p tests/coverage
$ go test -cover ./... -covermode atomic -args -test.gocoverdir=&amp;#34;$PWD/tests/coverage&amp;#34;
$ go tool covdata textfmt -i=./tests/coverage -o coverage.out
&lt;/code>&lt;/pre>&lt;p>coverage.out がさまざまなツールの入力となる統計情報となる。例えば、このファイルを使って次のようにしてソースコードのヒートマップの html を作成できる。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ go tool cover -html coverage.out -o coverage.html
&lt;/code>&lt;/pre>&lt;p>&lt;a href="https://github.com/nikolaydubina/go-cover-treemap">nikolaydubina/go-cover-treemap&lt;/a> を使うと treemap でカバレッジのヒートマップを確認できる。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ go-cover-treemap -coverprofile coverage.out &amp;gt; treemap.svg
&lt;/code>&lt;/pre>&lt;p>カバレッジ計測向けのバイナリをビルドする。そのバイナリを起動するときに環境変数 GOCOVERDIR に単体テストのカバレッジの中間データが含まれるディレクトリを指定する。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ go build -cover -covermode atomic -o bin/api ./cmd/api/...
$ GOCOVERDIR=&amp;#34;$PWD/tests/coverage&amp;#34; ./bin/api -verbose
&lt;/code>&lt;/pre>&lt;p>このバイナリを使って起動した api server に対してリクエストを呼び出すことでカバレッジを計測してくれる。結合テストからバイナリ起動した api server に対してリクエストしたときに GOCOVERDIR に中間データが追加されていく。結合テストを完了したら最終的なカバレッジの統計情報を生成する。
￼&lt;/p>
&lt;pre tabindex="0">&lt;code>$ go tool covdata textfmt -i=./tests/coverage -o coverage.out
&lt;/code>&lt;/pre>&lt;p>textfmt のヘルプをみたら同じディレクトリじゃなくてもよいみたい。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ go tool covdata textfmt -help
...
Examples:
go tool covdata textfmt -i=dir1,dir2 -o=out.txt
merges data from input directories dir1+dir2
and emits text format into file &amp;#39;out.txt&amp;#39;
&lt;/code>&lt;/pre></content></item><item><title>責任を扱うコミュニケーションの在り方</title><link>/diary/posts/2024/0913/</link><pubDate>Fri, 13 Sep 2024 13:10:44 +0900</pubDate><guid>/diary/posts/2024/0913/</guid><description>水曜日から継続していたメンバーのコードレビューをお昼頃に完了して、それからは自分の時間に集中して開発に取り組めた。途中、晩ご飯休憩もしながら翌2時頃までコードを書いていて issue を2つ fix した。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。ここ1-2ヶ月はあまり議題がなくて近況について雑談した。いまの開発フェーズが終わらないと、私が開発以外にリソースを割いていないので他のことに取り組む余裕はないかもしれない。開発プロジェクトにおける、議題の1つで次のインタビュー記事の内容について雑談した。
責任をすぐに相手に投げてしまわないこと。責任をこちらで負えるように日頃から信頼貯金を貯めていくことが大事です。責任を負うこと自体はたいへんだけど、仕事は楽になるんです。
でも、人は責任を負いたくないと考えてしまうんですね。気持ちは分かりますよ、責任を負うのには胆力が必要ですから。そして責任を負いたくないから「いつまでですか？」と聞いてしまう。その途端、スケジュールを決めるのは相手の裁量になる。責任から降りて、自分から立場を下にして、受発注の関係にしてしまっています。
何が事業貢献なのか分からなくなっていた伊藤直也さんが再認識したユーザーエクスペリエンスへのコミット
私自身、このインタビュー記事を読むまで相手に仕様や納期を決めてもらうことを、相手に責任を負わせるという視点をもっていないかった。しかし、その通りでもあると新たな気付きを得た記事でもあった。うちらはプログラマーという、システムを作る専門家なのでビジネス課題や解決したい業務課題について、その課題意識をもっている人 (ビジネスオーナー) から教えてもらうのを至極当然のように考えてしまう。そして、それ自体はいまの業務の在り方としてそうならざるを得ないところもある。
システム開発はそれぞれの専門職が分業によって行う。とくに規模が大きくなればそうなる。この構造そのものは一般的といえる。しかし、一緒にプロジェクトをやっていく働き方や考え方によってはその責任を分散させられるというのがこの記事に書いてあることだとわかる。そして、私自身これまで意識せずにそういった行動をいくらか取ってきているところもあり、それは「気付き」のレベルによって起こるものだとずっと考えていた。気付くからより多くの、より本質的な、より優れた改善のための行動ができる。そして、私の考え方も間違ってはいないと思うが、私は他人よりリスクを取りがちな性格があるから責任をこちらで負うという意識をあまりもっていなかった。つまり、私は自分の価値観でこうしたいと思って勝手にやっていたことを、別の見方では相手から責任を受け取って進めているという解釈もできる。
ちょうど 兵庫県知事の百条委員会の答弁 もみていて感じたことだが、私はこういったコミュニケーションを本質的に好んでいない。自分の責任ではないという議論をしても、モノゴトは前に進まない。世間では百条委員会の後も知事の説明は十分ではなかったとみられている。その所以である。誰かが責任をもってモノゴトに取り組む必要がある。その責任の所在を明確にすることも大事ではあるが、自身の責任ではないという主張だけでは物足りなさを感じる。普段の業務においてもそういう姿勢やコミュニケーションを取る人が少なからずいる。はらさんの経験でもその点においては同意していた。よくある状況だと思える。自身に責任を負うことをためらわないコミュニケーションを取る人とそうではない人の2通りがあるのだと気付いた。そして、私は後者の人とコミュニケーションを続けていると疲弊したり苛々したりすることがある。それゆえに私自身も結果に対して潔くあろうと努めるし、潔い人たちとウマがあうのだろうともわかってきた。
課題管理の文脈においては、コミュニケーションのやり取りから責任の綱引きがどのような場所でどのぐらい起きるのか。人間であれば読み取れるが、ai はその意図を解釈できるか。そういった業務の責任という概念を見える化することに意味はあるかもしれない。責任の押し付け合い、または責任分散、本質的にどうあるべきだったかをなんらかの指標をもって数値化できればおもしろいのではないかと思えた。
go における簡単な式の評価 テスト自動化のツールを作っていて、テストデータでちょっとした式の評価をやりたくて調べたらまさに次の記事で解決した。
もっと楽して式の評価器を作る この記事では go/types パッケージに定数や式の評価を行う機能がその使い方が紹介されている。簡単に使える。ふとサードパーティのパッケージならどうなるんだろう？とインターネットを検索したものの、自分ではみつけられなかった。chatgpt に問い合わせたら次のようなコードを紹介してくれた。そして、たしかにほとんどは正しくて意図したように動いた。次のコードでは http フレームワークの echo の定数を参照している。types.Package を生成するためのモジュールの読み込み方法について標準ライブラリはそのためのユーティリティが用意されているが、サードパーティのパッケージは用意されていなかった。
import ( &amp;#34;fmt&amp;#34; &amp;#34;go/token&amp;#34; &amp;#34;go/types&amp;#34; &amp;#34;golang.org/x/tools/go/packages&amp;#34; ) func eval(expr string) (types.TypeAndValue, error) { cfg := &amp;amp;packages.Config{ Mode: packages.NeedTypes | packages.NeedImports, Fset: token.NewFileSet(), } pkgs, err := packages.Load(cfg, &amp;#34;github.com/labstack/echo/v4&amp;#34;) if err != nil { return types.TypeAndValue{}, err } if len(pkgs) == 0 || pkgs[0].</description><content>&lt;p>水曜日から継続していたメンバーのコードレビューをお昼頃に完了して、それからは自分の時間に集中して開発に取り組めた。途中、晩ご飯休憩もしながら翌2時頃までコードを書いていて issue を2つ fix した。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。ここ1-2ヶ月はあまり議題がなくて近況について雑談した。いまの開発フェーズが終わらないと、私が開発以外にリソースを割いていないので他のことに取り組む余裕はないかもしれない。開発プロジェクトにおける、議題の1つで次のインタビュー記事の内容について雑談した。&lt;/p>
&lt;blockquote>
&lt;p>責任をすぐに相手に投げてしまわないこと。責任をこちらで負えるように日頃から信頼貯金を貯めていくことが大事です。責任を負うこと自体はたいへんだけど、仕事は楽になるんです。&lt;/p>
&lt;p>でも、人は責任を負いたくないと考えてしまうんですね。気持ちは分かりますよ、責任を負うのには胆力が必要ですから。そして責任を負いたくないから「いつまでですか？」と聞いてしまう。その途端、スケジュールを決めるのは相手の裁量になる。責任から降りて、自分から立場を下にして、受発注の関係にしてしまっています。&lt;/p>
&lt;p>&lt;a href="https://findy-code.io/engineer-lab/naoya_ito">何が事業貢献なのか分からなくなっていた伊藤直也さんが再認識したユーザーエクスペリエンスへのコミット&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>私自身、このインタビュー記事を読むまで相手に仕様や納期を決めてもらうことを、相手に責任を負わせるという視点をもっていないかった。しかし、その通りでもあると新たな気付きを得た記事でもあった。うちらはプログラマーという、システムを作る専門家なのでビジネス課題や解決したい業務課題について、その課題意識をもっている人 (ビジネスオーナー) から教えてもらうのを至極当然のように考えてしまう。そして、それ自体はいまの業務の在り方としてそうならざるを得ないところもある。&lt;/p>
&lt;p>システム開発はそれぞれの専門職が分業によって行う。とくに規模が大きくなればそうなる。この構造そのものは一般的といえる。しかし、一緒にプロジェクトをやっていく働き方や考え方によってはその責任を分散させられるというのがこの記事に書いてあることだとわかる。そして、私自身これまで意識せずにそういった行動をいくらか取ってきているところもあり、それは「気付き」のレベルによって起こるものだとずっと考えていた。気付くからより多くの、より本質的な、より優れた改善のための行動ができる。そして、私の考え方も間違ってはいないと思うが、私は他人よりリスクを取りがちな性格があるから責任をこちらで負うという意識をあまりもっていなかった。つまり、私は自分の価値観でこうしたいと思って勝手にやっていたことを、別の見方では相手から責任を受け取って進めているという解釈もできる。&lt;/p>
&lt;p>ちょうど &lt;a href="/diary/diary/posts/2024/0910/">兵庫県知事の百条委員会の答弁&lt;/a> もみていて感じたことだが、私はこういったコミュニケーションを本質的に好んでいない。自分の責任ではないという議論をしても、モノゴトは前に進まない。世間では百条委員会の後も知事の説明は十分ではなかったとみられている。その所以である。誰かが責任をもってモノゴトに取り組む必要がある。その責任の所在を明確にすることも大事ではあるが、自身の責任ではないという主張だけでは物足りなさを感じる。普段の業務においてもそういう姿勢やコミュニケーションを取る人が少なからずいる。はらさんの経験でもその点においては同意していた。よくある状況だと思える。自身に責任を負うことをためらわないコミュニケーションを取る人とそうではない人の2通りがあるのだと気付いた。そして、私は後者の人とコミュニケーションを続けていると疲弊したり苛々したりすることがある。それゆえに私自身も結果に対して潔くあろうと努めるし、潔い人たちとウマがあうのだろうともわかってきた。&lt;/p>
&lt;p>課題管理の文脈においては、コミュニケーションのやり取りから責任の綱引きがどのような場所でどのぐらい起きるのか。人間であれば読み取れるが、ai はその意図を解釈できるか。そういった業務の責任という概念を見える化することに意味はあるかもしれない。責任の押し付け合い、または責任分散、本質的にどうあるべきだったかをなんらかの指標をもって数値化できればおもしろいのではないかと思えた。&lt;/p>
&lt;h2 id="go-における簡単な式の評価">go における簡単な式の評価&lt;/h2>
&lt;p>テスト自動化のツールを作っていて、テストデータでちょっとした式の評価をやりたくて調べたらまさに次の記事で解決した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tenntenn/items/590caa61b9701d2ada23">もっと楽して式の評価器を作る&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この記事では &lt;code>go/types&lt;/code> パッケージに定数や式の評価を行う機能がその使い方が紹介されている。簡単に使える。ふとサードパーティのパッケージならどうなるんだろう？とインターネットを検索したものの、自分ではみつけられなかった。chatgpt に問い合わせたら次のようなコードを紹介してくれた。そして、たしかにほとんどは正しくて意図したように動いた。次のコードでは http フレームワークの echo の定数を参照している。types.Package を生成するためのモジュールの読み込み方法について標準ライブラリはそのためのユーティリティが用意されているが、サードパーティのパッケージは用意されていなかった。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;go/token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;go/types&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;golang.org/x/tools/go/packages&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">eval&lt;/span>(&lt;span style="color:#a6e22e">expr&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) (&lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">TypeAndValue&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cfg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">packages&lt;/span>.&lt;span style="color:#a6e22e">Config&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Mode&lt;/span>: &lt;span style="color:#a6e22e">packages&lt;/span>.&lt;span style="color:#a6e22e">NeedTypes&lt;/span> | &lt;span style="color:#a6e22e">packages&lt;/span>.&lt;span style="color:#a6e22e">NeedImports&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Fset&lt;/span>: &lt;span style="color:#a6e22e">token&lt;/span>.&lt;span style="color:#a6e22e">NewFileSet&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pkgs&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">packages&lt;/span>.&lt;span style="color:#a6e22e">Load&lt;/span>(&lt;span style="color:#a6e22e">cfg&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;github.com/labstack/echo/v4&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">TypeAndValue&lt;/span>{}, &lt;span style="color:#a6e22e">err&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(&lt;span style="color:#a6e22e">pkgs&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">pkgs&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>].&lt;span style="color:#a6e22e">Types&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">TypeAndValue&lt;/span>{}, &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to load echo package&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mainPkg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">NewPackage&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mainPkg&lt;/span>.&lt;span style="color:#a6e22e">Scope&lt;/span>().&lt;span style="color:#a6e22e">Insert&lt;/span>(&lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">NewPkgName&lt;/span>(&lt;span style="color:#a6e22e">token&lt;/span>.&lt;span style="color:#a6e22e">NoPos&lt;/span>, &lt;span style="color:#a6e22e">mainPkg&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;echo&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">pkgs&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>].&lt;span style="color:#a6e22e">Types&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">types&lt;/span>.&lt;span style="color:#a6e22e">Eval&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cfg&lt;/span>.&lt;span style="color:#a6e22e">Fset&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mainPkg&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">token&lt;/span>.&lt;span style="color:#a6e22e">NoPos&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">expr&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>このコードで expr に次のように echo の定数を指定するとその値を参照できる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">echo&lt;/span>.&lt;span style="color:#a6e22e">MIMEApplicationJSON&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>動的型付けのノリで関数も実行できたりするのかな？と試してみたら (当たり前だが) できなかった。chatgpt になぜ関数実行できないかを尋ねたら次であるとのこと。静的型付けのコードを実行するには、本来コンパイルしないといけないのだから式の評価よりもずっとやることがある。&lt;/p>
&lt;blockquote>
&lt;p>packages.Load を使用してサードパーティパッケージをインポートできているにもかかわらず、expr からそのパッケージの関数を呼び出しても結果が取得できない原因は、go/types パッケージがサポートしているのは、型や定数のチェック、構文解析、式の評価であって、関数の実行そのものはサポートされていないためです。&lt;/p>
&lt;p>go/types の Eval 関数はあくまでコンパイル時の型検査や式の評価を行うもので &lt;strong>関数の実行や実行時の評価 (ランタイムの処理)&lt;/strong> は行いません。これは、Eval が式を評価して型と値を返すだけであり、動的な関数の実行などはできないためです。&lt;/p>
&lt;/blockquote></content></item><item><title>集中開発の1ヶ月間</title><link>/diary/posts/2024/0828/</link><pubDate>Wed, 28 Aug 2024 10:50:47 +0900</pubDate><guid>/diary/posts/2024/0828/</guid><description>プロジェクトの進捗報告 出張したときの月例報告の19回目。前回の進捗報告はこちら 。この開発フェーズは私が経営陣へ進捗報告するものの、引き継いだマネージャーにも同席してもらって、こんな打ち合わせをしているというのを知ってもらう機会にしている。この1ヶ月間の進捗やこの開発フェーズでやろうとしていることを一通り説明して、あとはざっくばらんに経営陣と雑談するといった機会にもなった。最低限、開発のボトルネックになりそうなところは私が集中開発して解消したので見た目上はよいペースで進捗している。
進捗報告して雑談しているうちに、もうこれ以上は私がお手伝い先へ提供できる新たな価値はなさそうに思えてきた。ここからは課題管理できている issue を優先度順にひたすら fix していく、よくないところはリファクタリングする、開発の負債やボトルネックを解消していくといった、より実践的な実務が求められる。課題管理を含むプロジェクトマネジメントやチームの情報共有を改善することで開発をうまくまわしていくフェーズは十分にメンバーが実践できるようになったと思える。自身の引き出しの中身を払い出してしまって、なにも残っていないような寂しさを感じるようになった。
いまマルチブラウザ／デバイスのテストの自動化のために BrowserStack というプラットフォームを評価している。まだ評価中なので採用の可否はこれから判断するところだが、採用したらコストがかかるのでその話題も経営陣に伝えてその場で議論したりしていた。おそらくこのサービスは Selenium Grid を使っているのではないか？と推測される。うちのプロジェクトだけでなく、社内インフラとして全社共通のテスト基盤を作るという施策もあるかもしれないと話しが発散したりもした。開発においてプラットフォーム的な投資も大事だと考えられている。うちのプロダクトで作る課題管理のメトリクスに、プラットフォーム投資のための見える化ができる機能もあるとよいのかもしれないと思ったりしていた。</description><content>&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の19回目。&lt;a href="/diary/diary/posts/2024/0731/">前回の進捗報告はこちら&lt;/a> 。この開発フェーズは私が経営陣へ進捗報告するものの、引き継いだマネージャーにも同席してもらって、こんな打ち合わせをしているというのを知ってもらう機会にしている。この1ヶ月間の進捗やこの開発フェーズでやろうとしていることを一通り説明して、あとはざっくばらんに経営陣と雑談するといった機会にもなった。最低限、開発のボトルネックになりそうなところは私が集中開発して解消したので見た目上はよいペースで進捗している。&lt;/p>
&lt;p>進捗報告して雑談しているうちに、もうこれ以上は私がお手伝い先へ提供できる新たな価値はなさそうに思えてきた。ここからは課題管理できている issue を優先度順にひたすら fix していく、よくないところはリファクタリングする、開発の負債やボトルネックを解消していくといった、より実践的な実務が求められる。課題管理を含むプロジェクトマネジメントやチームの情報共有を改善することで開発をうまくまわしていくフェーズは十分にメンバーが実践できるようになったと思える。自身の引き出しの中身を払い出してしまって、なにも残っていないような寂しさを感じるようになった。&lt;/p>
&lt;p>いまマルチブラウザ／デバイスのテストの自動化のために &lt;a href="https://www.browserstack.com/">BrowserStack&lt;/a> というプラットフォームを評価している。まだ評価中なので採用の可否はこれから判断するところだが、採用したらコストがかかるのでその話題も経営陣に伝えてその場で議論したりしていた。おそらくこのサービスは &lt;a href="https://www.selenium.dev/ja/documentation/grid/">Selenium Grid&lt;/a> を使っているのではないか？と推測される。うちのプロジェクトだけでなく、社内インフラとして全社共通のテスト基盤を作るという施策もあるかもしれないと話しが発散したりもした。開発においてプラットフォーム的な投資も大事だと考えられている。うちのプロダクトで作る課題管理のメトリクスに、プラットフォーム投資のための見える化ができる機能もあるとよいのかもしれないと思ったりしていた。&lt;/p></content></item><item><title>寝ている間に再設計</title><link>/diary/posts/2024/0821/</link><pubDate>Wed, 21 Aug 2024 20:01:17 +0900</pubDate><guid>/diary/posts/2024/0821/</guid><description>昨日のもやもやは寝ている間に整理され、今日は標準的な開発者としての過ごし方になった感じがする。
マネージャーとの 1on1 これまでは私がマネージャーとして 1on1 をしてきたが、今後は交代したメンバーがマネージャーを務める。この開発フェーズでは私は開発者 (メンバー) として 1on1 をしてもらうといった感じかな。自分が開発者側だと思うと、いま私が取り組んでいることの話しをしやすかったりした。立場によって 1on1 のやり方は変わることを実感した。マネージャーはメンバーの話しを聞く方に注力したり、プロジェクト全体の話しをしがちになる。開発者として臨むと、自分の抱えている issue に集中して話せるといった違いがあった。
CPAP の中断 夜に睡眠外来へ行ってきた。以前に CPAP 装置 を借りて3ヶ月ぐらいやっていたものの、ここ2ヶ月ほどやらなくなってしまっていた。もともとは体脂肪コントロールの疲労回復のために始めたものだった。体脂肪コントロールがうまくいって目標達成したことで睡眠改善を行う目的もなくなってしまって関心を失ってしまった。借りているだけで毎月5千円ほどかかるので中断して機器を返却することにした。旅行のときなど、一時的に借りられないかを聞いてみたら、それは不可とのこと。また再開したくなったらいつでも言えばよいとのこと。
ツールの再設計 昨日の続き 。睡眠外来から帰ってきて、晩ごはん食べて、軽く飲みながら24時過ぎまでコードを書いていた。今日もまる一日ツールの再設計をしていた。昨日のノーアイディアな状況から少しずつ好転していって、ある処理で歯車が噛み合ってからはいつも通り着実に進捗していく様がみられた。意図的にやっていることではあるけど、課題について考えながら一晩寝ると、寝ている間に無意識に刷り込まれて脳が考えてくれる。それで徐々によい設計が現れてくるようになって明確な実装に落ち着いたのではないかと推測する。今日はよい感じに集中できた。</description><content>&lt;p>昨日のもやもやは寝ている間に整理され、今日は標準的な開発者としての過ごし方になった感じがする。&lt;/p>
&lt;h2 id="マネージャーとの-1on1">マネージャーとの 1on1&lt;/h2>
&lt;p>これまでは私がマネージャーとして 1on1 をしてきたが、今後は交代したメンバーがマネージャーを務める。この開発フェーズでは私は開発者 (メンバー) として 1on1 をしてもらうといった感じかな。自分が開発者側だと思うと、いま私が取り組んでいることの話しをしやすかったりした。立場によって 1on1 のやり方は変わることを実感した。マネージャーはメンバーの話しを聞く方に注力したり、プロジェクト全体の話しをしがちになる。開発者として臨むと、自分の抱えている issue に集中して話せるといった違いがあった。&lt;/p>
&lt;h2 id="cpap-の中断">CPAP の中断&lt;/h2>
&lt;p>夜に睡眠外来へ行ってきた。以前に &lt;a href="/diary/diary/posts/2024/0314/">CPAP 装置&lt;/a> を借りて3ヶ月ぐらいやっていたものの、ここ2ヶ月ほどやらなくなってしまっていた。もともとは体脂肪コントロールの疲労回復のために始めたものだった。体脂肪コントロールがうまくいって目標達成したことで睡眠改善を行う目的もなくなってしまって関心を失ってしまった。借りているだけで毎月5千円ほどかかるので中断して機器を返却することにした。旅行のときなど、一時的に借りられないかを聞いてみたら、それは不可とのこと。また再開したくなったらいつでも言えばよいとのこと。&lt;/p>
&lt;h2 id="ツールの再設計">ツールの再設計&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0820/">昨日の続き&lt;/a> 。睡眠外来から帰ってきて、晩ごはん食べて、軽く飲みながら24時過ぎまでコードを書いていた。今日もまる一日ツールの再設計をしていた。昨日のノーアイディアな状況から少しずつ好転していって、ある処理で歯車が噛み合ってからはいつも通り着実に進捗していく様がみられた。意図的にやっていることではあるけど、課題について考えながら一晩寝ると、寝ている間に無意識に刷り込まれて脳が考えてくれる。それで徐々によい設計が現れてくるようになって明確な実装に落ち着いたのではないかと推測する。今日はよい感じに集中できた。&lt;/p></content></item><item><title>1週間遅れの実家帰り</title><link>/diary/posts/2024/0817/</link><pubDate>Sat, 17 Aug 2024 11:27:40 +0900</pubDate><guid>/diary/posts/2024/0817/</guid><description>昨日も遅めの時間までコードを書いたら帰ってバテてしまい、朝から実家へ帰るつもりがお昼からになってしまった。本当は先週、帰るつもりだったのが1週間遅れになってしまった。それでも帰れてよかった。こうやっておかんが連絡してこなかったら、実家や田んぼのことを放置してしまうのではないかとふと思った。11時から軽くオフィスで作業して13時から三宮を出発して14時過ぎには実家へ着いた。1ヶ月ぶりぐらいに車を運転するのもあって気分転換にもなった。それからトラクターで田んぼを耕すことにした。晴れた日がずっと続いていると、地面がよく乾いてしまい、掘り返すと砂煙だらけになっていた。また地面も硬くてトラクターにも負荷がかかっているように思えた。一度耕した後も砂地になってしまって繰り返し耕せているかもわからなくなっていた。本当は一度耕した後に水はけがよいように畝を作るところを今回はその作業はやめた。また近いうちに雨が降った後に帰ってトラクターで畝作りをする。
ある会社の課題管理の考察 社内 slack で知人がその会社の、あるチームのメンバーについてコメントしていた。いま5年目の開発者で、課題管理的なことがうまくできなくて、これまでも何度も同じことを注意しているのに改善がみられないという。いくつか、私も自身の経験でコメントしてみていたが、どうやらアドバイスできるような状況ではないらしく、お手上げのような雰囲気だった。チームの他のメンバーはうまく課題管理できているし、毎日朝会もしているのに注意した内容に関する報告や相談をしてくれないという悩みもあるそうだ。もし業務委託社員なら解約しているとまで言うのだから問題社員なのだろう。そういった社員向けにアドバイスだったり、改善のための施策だったり、みえる化の指標を提供していくというのがうちの会社のビジネスになる。それでも出来ない人はどうするか？ということを知人とやり取りしながら考えるきっかけになった。多様性の文脈で向いていない業務はやめて、他の (相対的に向いている) 業務を担当すればよいのだろうけど、現実の会社ではそんな都合よく配置転換はできないかもしれない。</description><content>&lt;p>昨日も遅めの時間までコードを書いたら帰ってバテてしまい、朝から実家へ帰るつもりがお昼からになってしまった。本当は先週、帰るつもりだったのが1週間遅れになってしまった。それでも帰れてよかった。こうやっておかんが連絡してこなかったら、実家や田んぼのことを放置してしまうのではないかとふと思った。11時から軽くオフィスで作業して13時から三宮を出発して14時過ぎには実家へ着いた。1ヶ月ぶりぐらいに車を運転するのもあって気分転換にもなった。それからトラクターで田んぼを耕すことにした。晴れた日がずっと続いていると、地面がよく乾いてしまい、掘り返すと砂煙だらけになっていた。また地面も硬くてトラクターにも負荷がかかっているように思えた。一度耕した後も砂地になってしまって繰り返し耕せているかもわからなくなっていた。本当は一度耕した後に水はけがよいように畝を作るところを今回はその作業はやめた。また近いうちに雨が降った後に帰ってトラクターで畝作りをする。&lt;/p>
&lt;h2 id="ある会社の課題管理の考察">ある会社の課題管理の考察&lt;/h2>
&lt;p>社内 slack で知人がその会社の、あるチームのメンバーについてコメントしていた。いま5年目の開発者で、課題管理的なことがうまくできなくて、これまでも何度も同じことを注意しているのに改善がみられないという。いくつか、私も自身の経験でコメントしてみていたが、どうやらアドバイスできるような状況ではないらしく、お手上げのような雰囲気だった。チームの他のメンバーはうまく課題管理できているし、毎日朝会もしているのに注意した内容に関する報告や相談をしてくれないという悩みもあるそうだ。もし業務委託社員なら解約しているとまで言うのだから問題社員なのだろう。そういった社員向けにアドバイスだったり、改善のための施策だったり、みえる化の指標を提供していくというのがうちの会社のビジネスになる。それでも出来ない人はどうするか？ということを知人とやり取りしながら考えるきっかけになった。多様性の文脈で向いていない業務はやめて、他の (相対的に向いている) 業務を担当すればよいのだろうけど、現実の会社ではそんな都合よく配置転換はできないかもしれない。&lt;/p></content></item><item><title>次開発は開発者として専念</title><link>/diary/posts/2024/0801/</link><pubDate>Thu, 01 Aug 2024 21:30:29 +0900</pubDate><guid>/diary/posts/2024/0801/</guid><description>今日も出張戻りで運動はおやすみ。帰ってから運動をする余裕もあったけれど、日銀の追加利上げ決定から為替が円高に動いて、日経平均先物が急落しているのをみかけて、帰りの新幹線内から経済系の関連記事を読んだりしていた。景気が悪化すると経営に影響するから、こういった転換点に敏感になった。
5次開発の要件打ち合わせ 前回の所感 。これまでは2時間をとって要件の発散会議をしてきた。今回は残課題の issue が溜まっていて、まずはそれらを fix してから最低限の機能開発をするといった段取りで進めることを出席者に共有した。そのため、要件を発散させるような話しはほとんどしなかった。主には残課題の共有をしながら、11月頃から最初のお客さん導入を想定して、それまでにやらないといけない要件の機能の再確認を行った。ちょうど2時間ぐらいでおさまった。優先順位なども改めて確認する必要もなさそうに考えている。お手伝い先のプロダクト開発において課題管理が普通になってきたので、特別な確認や打ち合わせをしなくてもどの課題をやらないといけないかは明示されるようになった。これはこれで課題管理の方法論の成果でもある。一方でメンバーからはどの issue を担当すればよいか、開発始めの段階は担当者を割り当ててほしいという意見もあったので、私がいくつか残課題をそれぞれのメンバーに割り振っていった。これも開発が進むうちに、自分が関心のある issue を取ったり、やらないといけないものを自分で割り当てるようになっていけば自律的な開発へ向けてさらに進展していく。
これまでは機能開発を3ヶ月、QA を1ヶ月としてきた。今回は機能開発を2ヶ月、テスト／QA 期間を2ヶ月とる。自動テストや QA 工数の削減のための取り組みに時間を割いて、人間が QA 検証する工数を削減していく。私自身やらないといけない残課題がいくつかあるので早め早めに fix していって集中力をもって取り組む必要がある。今回はマネージャー業をメンバーに移行した分、久しぶりに開発に専念してコードを書ければいいなとも思う。どうなるかな。</description><content>&lt;p>今日も出張戻りで運動はおやすみ。帰ってから運動をする余裕もあったけれど、日銀の追加利上げ決定から為替が円高に動いて、日経平均先物が急落しているのをみかけて、帰りの新幹線内から経済系の関連記事を読んだりしていた。景気が悪化すると経営に影響するから、こういった転換点に敏感になった。&lt;/p>
&lt;h2 id="5次開発の要件打ち合わせ">5次開発の要件打ち合わせ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0307/">前回の所感&lt;/a> 。これまでは2時間をとって要件の発散会議をしてきた。今回は残課題の issue が溜まっていて、まずはそれらを fix してから最低限の機能開発をするといった段取りで進めることを出席者に共有した。そのため、要件を発散させるような話しはほとんどしなかった。主には残課題の共有をしながら、11月頃から最初のお客さん導入を想定して、それまでにやらないといけない要件の機能の再確認を行った。ちょうど2時間ぐらいでおさまった。優先順位なども改めて確認する必要もなさそうに考えている。お手伝い先のプロダクト開発において課題管理が普通になってきたので、特別な確認や打ち合わせをしなくてもどの課題をやらないといけないかは明示されるようになった。これはこれで課題管理の方法論の成果でもある。一方でメンバーからはどの issue を担当すればよいか、開発始めの段階は担当者を割り当ててほしいという意見もあったので、私がいくつか残課題をそれぞれのメンバーに割り振っていった。これも開発が進むうちに、自分が関心のある issue を取ったり、やらないといけないものを自分で割り当てるようになっていけば自律的な開発へ向けてさらに進展していく。&lt;/p>
&lt;p>これまでは機能開発を3ヶ月、QA を1ヶ月としてきた。今回は機能開発を2ヶ月、テスト／QA 期間を2ヶ月とる。自動テストや QA 工数の削減のための取り組みに時間を割いて、人間が QA 検証する工数を削減していく。私自身やらないといけない残課題がいくつかあるので早め早めに fix していって集中力をもって取り組む必要がある。今回はマネージャー業をメンバーに移行した分、久しぶりに開発に専念してコードを書ければいいなとも思う。どうなるかな。&lt;/p></content></item><item><title>落ち着いた開発とふりかえり</title><link>/diary/posts/2024/0730/</link><pubDate>Tue, 30 Jul 2024 08:10:33 +0900</pubDate><guid>/diary/posts/2024/0730/</guid><description>今日は出張中で飲み会があったので運動はおやすみした。
4次開発の大きなふりかえり 前回の大きなふりかえり 。約4ヶ月の開発フェーズが終わってからの大きなふりかえり。もう4回目なのでメンバーも慣れてきたし、過去の知見もたまってきた。そして、私がいまあまり調子がよくないのもあってなにか目新しさがなくなってきたところでもある。今回の開発は2つの大きな失敗があった。
想定していた開発機能を1つ落とした QA 検証を網羅的に進めることができなかった これらは私のマネジメントの失敗になる。これまでうまく進み過ぎていたと言えるのかもしれない。プロジェクトマネジメントは毎回うまくいくとは限らない。スクラムガイドにもある見積もりより経験主義の重要性を認識する開発期間でもあった。これまでの順調な進捗に、私自身マネジメントの驕りがあったのだとも思う。次の開発フェーズでまた気を引き締めてプロダクトの品質を担保していく。
いつも通り gitlab の統計情報を眺めながら定例イベントのふりかえりなどもやっていった。UI 周りのふりかえりを口頭での報告や文章で表現するのが難しくなってきたという意見があった。UI は画面の操作をみないと本当の意味で理解するのは難しい。テックブログを読む会も、自分が読みたい記事をすぐにみつけるのが難しいから事前に読みたい記事を探しておくといった「準備」をするメンバーもいる。実は私もたまにその準備をしているのでその気持ちはわかる。記事を探すという作業には一定の時間を取られるという事実がわかってきた。
記事を読んだ後に軽く雑談する時間があってもよいのではないかという意見もあった。これはこれであってもよいとは思う。ふりかえりは隔週でもよいが、メンバー間での確認事項は毎週やった方がよいのではないか？という意見も出た。これは話す必要があるときにハドルすればいいでしょうというところで一旦は見送った。みんなで集まる会議時間はコストが大きいので慎重に判断する。1on1 の隔週30分もそろそろ調整や見直しがあるかな？とも考えていたけど、逆にメンバーからはなんやかんやで30分話すことはあるからこのまま継続した方がよいといった意見も出ていた。
開発のやり方がだいぶ定着してきて、大きなふりかえりも1つの型ができて落ち着いてきた感じはある。よくもわるくも。
同期との飲み会 たまたま新卒で入った会社の同期から連絡がきて、関西で働いている同期が2年ほど単身赴任で東京出張になるらしく、久しぶりなので飲みにいこうという話しになった。本当は4人で飲む予定だったのが、1人がお仕事でドタキャンになって3人で飲んできた。10年以上会っていなかった同期だから近況を話すだけでもおもしろかった。今日会った3人に見た目は昔とあまり変わってなかった。私は体脂肪コントロールした後でよかった。ある同期は課長になっていて、単身赴任である省庁へ出向になった。外からみたら国家公務員やね。本当は話したらダメなんだろうけど、同期というよしみもあって飲みながらいろいろと話しを聞いてた。ここには書けないが、おもしろかった。飲み過ぎた。
私は最初の会社を3年でやめたものの、飲んだ同期たちはもう20年以上、1つの会社で働いているわけで価値観もだいぶ違うだろうと思う。同期って本当によいもので、価値観が違っても会社が違っても未だに仲良く気軽に話しができる。私はたまたま新卒で入った会社が大企業のグループ企業だったから100人ほど同期がいて、5つのクラスに分かれて30人ぐらいのクラスで4ヶ月ほど研修を受けた。いまとなってはその頃の同期とはほとんど会わないし、みんながいま何をしているのかも知らない。おそらく半分以上はその会社をやめてしまっていると推測する。やめた同期とも会う機会があれば楽しく話せるとは思う。</description><content>&lt;p>今日は出張中で飲み会があったので運動はおやすみした。&lt;/p>
&lt;h2 id="4次開発の大きなふりかえり">4次開発の大きなふりかえり&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0305/#3次開発の大きなふりかえり">前回の大きなふりかえり&lt;/a> 。約4ヶ月の開発フェーズが終わってからの大きなふりかえり。もう4回目なのでメンバーも慣れてきたし、過去の知見もたまってきた。そして、私がいまあまり調子がよくないのもあってなにか目新しさがなくなってきたところでもある。今回の開発は2つの大きな失敗があった。&lt;/p>
&lt;ul>
&lt;li>想定していた開発機能を1つ落とした&lt;/li>
&lt;li>QA 検証を網羅的に進めることができなかった&lt;/li>
&lt;/ul>
&lt;p>これらは私のマネジメントの失敗になる。これまでうまく進み過ぎていたと言えるのかもしれない。プロジェクトマネジメントは毎回うまくいくとは限らない。スクラムガイドにもある見積もりより経験主義の重要性を認識する開発期間でもあった。これまでの順調な進捗に、私自身マネジメントの驕りがあったのだとも思う。次の開発フェーズでまた気を引き締めてプロダクトの品質を担保していく。&lt;/p>
&lt;p>いつも通り gitlab の統計情報を眺めながら定例イベントのふりかえりなどもやっていった。UI 周りのふりかえりを口頭での報告や文章で表現するのが難しくなってきたという意見があった。UI は画面の操作をみないと本当の意味で理解するのは難しい。テックブログを読む会も、自分が読みたい記事をすぐにみつけるのが難しいから事前に読みたい記事を探しておくといった「準備」をするメンバーもいる。実は私もたまにその準備をしているのでその気持ちはわかる。記事を探すという作業には一定の時間を取られるという事実がわかってきた。&lt;/p>
&lt;p>記事を読んだ後に軽く雑談する時間があってもよいのではないかという意見もあった。これはこれであってもよいとは思う。ふりかえりは隔週でもよいが、メンバー間での確認事項は毎週やった方がよいのではないか？という意見も出た。これは話す必要があるときにハドルすればいいでしょうというところで一旦は見送った。みんなで集まる会議時間はコストが大きいので慎重に判断する。1on1 の隔週30分もそろそろ調整や見直しがあるかな？とも考えていたけど、逆にメンバーからはなんやかんやで30分話すことはあるからこのまま継続した方がよいといった意見も出ていた。&lt;/p>
&lt;p>開発のやり方がだいぶ定着してきて、大きなふりかえりも1つの型ができて落ち着いてきた感じはある。よくもわるくも。&lt;/p>
&lt;h2 id="同期との飲み会">同期との飲み会&lt;/h2>
&lt;p>たまたま新卒で入った会社の同期から連絡がきて、関西で働いている同期が2年ほど単身赴任で東京出張になるらしく、久しぶりなので飲みにいこうという話しになった。本当は4人で飲む予定だったのが、1人がお仕事でドタキャンになって3人で飲んできた。10年以上会っていなかった同期だから近況を話すだけでもおもしろかった。今日会った3人に見た目は昔とあまり変わってなかった。私は体脂肪コントロールした後でよかった。ある同期は課長になっていて、単身赴任である省庁へ出向になった。外からみたら国家公務員やね。本当は話したらダメなんだろうけど、同期というよしみもあって飲みながらいろいろと話しを聞いてた。ここには書けないが、おもしろかった。飲み過ぎた。&lt;/p>
&lt;p>私は最初の会社を3年でやめたものの、飲んだ同期たちはもう20年以上、1つの会社で働いているわけで価値観もだいぶ違うだろうと思う。同期って本当によいもので、価値観が違っても会社が違っても未だに仲良く気軽に話しができる。私はたまたま新卒で入った会社が大企業のグループ企業だったから100人ほど同期がいて、5つのクラスに分かれて30人ぐらいのクラスで4ヶ月ほど研修を受けた。いまとなってはその頃の同期とはほとんど会わないし、みんながいま何をしているのかも知らない。おそらく半分以上はその会社をやめてしまっていると推測する。やめた同期とも会う機会があれば楽しく話せるとは思う。&lt;/p></content></item><item><title>マネージャーがメンバーの代わりにしてあげられること</title><link>/diary/posts/2024/0614/</link><pubDate>Fri, 14 Jun 2024 18:52:33 +0900</pubDate><guid>/diary/posts/2024/0614/</guid><description>昨日に引き続き、回復を優先して運動はお休み。
発熱2日目 朝起きたら昨日の夜は少し改善がみえていた喉がかなり痛くなっていて、寝汗もいっぱいかいてて、明らかにまた熱が出ているだろって雰囲気になっていた。たぶん6時頃。さすがにこれはお仕事休むかなぁと、諦めて寝ているうちに少しよくなったから、行けるところまでは行くかとオフィスへ向かうことにした。そしたら、その後、どんどん改善していって、今日は37度前後まで熱が下がった。結果的にしんどいピークは起きたときだった。明日には治っていることを期待したい。
昨日の夜は早く帰ってベッドに入って安静にしていた。熱があるとはいえ、家に帰ってもやることがないし、いつも起きている時間に眠れるわけもなく、暇なので 忘却バッテリー の電子漫画を買って読み始めたらおもしろくて、昨日だけで数巻を一気に読んでしまった。今日もまだ発熱が続いているから早めに帰って、昨日の続きで一気に18巻まですべて読んでしまった。完全にこの漫画にはまってしまった。おもしろい。
決断というストレス 忘却バッテリーを読んでいて、思うところが1つあったので備忘録に書いておく。
名門ではない都立高校の野球部に、なぜか一流選手が数人集まっただけの野球部だったが、本当の強豪高校と戦うには総合力が足りない。当然、監督もいない。そこで監督を探す文脈で出てきたのが佐古さん。佐古さんはもと野球をやっていた経験者だが、いまはニートで指導者としての経験もなくて、そんな実績で監督がやれるのかということに対して、自分は「決断」のストレスを負担するという。
忘却バッテリー 12巻
これは本当にうまい売り込みで、ある心理学者によると、人間が一日に決断できる回数はそのものごとの重要度や難易度に関係なく一定であるという説がある。より重要なことに心理的な決断能力を使いたい。もしくは自分が判断しなくてもよい決断を他人へ委譲することで効率的にそういった状況も作れる。
以前 102. A Philosophy of Software Design (3/3) w/ twada で twada さんが認知負荷の話しをされていた。プログラミングにおける文脈の、ある課題に向き合うときの認知負荷を次の2つに分類して説明している。
課題内在性負荷 課題外在性負荷 課題内在性負荷が高いのは、本質的な難しさも含まれるため、高くても仕方がない。脳のリソースは有限だから、なるべく課題内在性負荷の解決にリソースを使いたいところが、それとは関係のない課題外在性負荷にリソースを浪費してしまうと集中力を欠いたり、効率が悪くなったりする。なぜソースコードに誤った名前が付けてはいけないか、フォーマットがおかしかったりするとダメなのかを脳のリソース活用の視点から説明している。脳のリソースは希少なのでより大事なことに使わないと、考えるエネルギーが枯渇して足りなくなる。
私もいまチームのマネージャーをやっていて、自分自身は大したプログラマーでもなく、マネージャーとしての指導経験もない。そうであってもチームにとってどのような貢献ができるかを考えたとき、唯一の強みが「課題管理」のノウハウだった。しかし、そういう強みだけでなく、メンバーが目の前の業務により集中できるよう、誰でもできることではあっても、その認知負荷 (この文脈では「決断」) を代わってあげるという概念もあることにたったいま気付いた。私はこれまでずっとこのことを責任を肩代りしてあげるのだと思い込んでいた。日本人は歴史的に責任を取りたくないというメンタリティをもっているから、責任をこちらで引き受けることで安心して作業できるだろうと考えていた。一般論として、業務では、多くの文脈で意思決定 ≒ 責任を伴うものではあるけれど、開発の文脈で言えば、必ずしも決断 ≠ 責任ではない。メンバーの認知負荷を下げるためにマネージャーが決断するという役割分担も合理性があるように思える。自身が若い頃の、決断しない管理職やマネージャーへの苛立ちのようなものも、その心理的なストレスや認知負荷を私が感じていたということだったのかもしれない。
実践知リーダーシップの概念の1つに覚えておこうと思ったヒトコマだった。</description><content>&lt;p>昨日に引き続き、回復を優先して運動はお休み。&lt;/p>
&lt;h2 id="発熱2日目">発熱2日目&lt;/h2>
&lt;p>朝起きたら昨日の夜は少し改善がみえていた喉がかなり痛くなっていて、寝汗もいっぱいかいてて、明らかにまた熱が出ているだろって雰囲気になっていた。たぶん6時頃。さすがにこれはお仕事休むかなぁと、諦めて寝ているうちに少しよくなったから、行けるところまでは行くかとオフィスへ向かうことにした。そしたら、その後、どんどん改善していって、今日は37度前後まで熱が下がった。結果的にしんどいピークは起きたときだった。明日には治っていることを期待したい。&lt;/p>
&lt;p>昨日の夜は早く帰ってベッドに入って安静にしていた。熱があるとはいえ、家に帰ってもやることがないし、いつも起きている時間に眠れるわけもなく、暇なので &lt;a href="https://ja.wikipedia.org/wiki/%E5%BF%98%E5%8D%B4%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC">忘却バッテリー&lt;/a> の電子漫画を買って読み始めたらおもしろくて、昨日だけで数巻を一気に読んでしまった。今日もまだ発熱が続いているから早めに帰って、昨日の続きで一気に18巻まですべて読んでしまった。完全にこの漫画にはまってしまった。おもしろい。&lt;/p>
&lt;h2 id="決断というストレス">決断というストレス&lt;/h2>
&lt;p>忘却バッテリーを読んでいて、思うところが1つあったので備忘録に書いておく。&lt;/p>
&lt;p>名門ではない都立高校の野球部に、なぜか一流選手が数人集まっただけの野球部だったが、本当の強豪高校と戦うには総合力が足りない。当然、監督もいない。そこで監督を探す文脈で出てきたのが佐古さん。佐古さんはもと野球をやっていた経験者だが、いまはニートで指導者としての経験もなくて、そんな実績で監督がやれるのかということに対して、自分は「決断」のストレスを負担するという。&lt;/p>
&lt;p>&lt;figure>&lt;img src="/diary/diary/img/2024/0614_boukyaku1.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2024/0614_boukyaku2.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2024/0614_boukyaku3.jpg"
alt="忘却バッテリー 12巻"/>&lt;figcaption>
&lt;p>忘却バッテリー 12巻&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;p>これは本当にうまい売り込みで、ある心理学者によると、人間が一日に決断できる回数はそのものごとの重要度や難易度に関係なく一定であるという説がある。より重要なことに心理的な決断能力を使いたい。もしくは自分が判断しなくてもよい決断を他人へ委譲することで効率的にそういった状況も作れる。&lt;/p>
&lt;p>以前 &lt;a href="https://fukabori.fm/episode/102">102. A Philosophy of Software Design (3/3) w/ twada&lt;/a> で twada さんが認知負荷の話しをされていた。プログラミングにおける文脈の、ある課題に向き合うときの認知負荷を次の2つに分類して説明している。&lt;/p>
&lt;ul>
&lt;li>課題内在性負荷&lt;/li>
&lt;li>課題外在性負荷&lt;/li>
&lt;/ul>
&lt;p>課題内在性負荷が高いのは、本質的な難しさも含まれるため、高くても仕方がない。脳のリソースは有限だから、なるべく課題内在性負荷の解決にリソースを使いたいところが、それとは関係のない課題外在性負荷にリソースを浪費してしまうと集中力を欠いたり、効率が悪くなったりする。なぜソースコードに誤った名前が付けてはいけないか、フォーマットがおかしかったりするとダメなのかを脳のリソース活用の視点から説明している。脳のリソースは希少なのでより大事なことに使わないと、考えるエネルギーが枯渇して足りなくなる。&lt;/p>
&lt;p>私もいまチームのマネージャーをやっていて、自分自身は大したプログラマーでもなく、マネージャーとしての指導経験もない。そうであってもチームにとってどのような貢献ができるかを考えたとき、唯一の強みが「課題管理」のノウハウだった。しかし、そういう強みだけでなく、メンバーが目の前の業務により集中できるよう、誰でもできることではあっても、その認知負荷 (この文脈では「決断」) を代わってあげるという概念もあることにたったいま気付いた。私はこれまでずっとこのことを責任を肩代りしてあげるのだと思い込んでいた。日本人は歴史的に責任を取りたくないというメンタリティをもっているから、責任をこちらで引き受けることで安心して作業できるだろうと考えていた。一般論として、業務では、多くの文脈で意思決定 ≒ 責任を伴うものではあるけれど、開発の文脈で言えば、必ずしも決断 ≠ 責任ではない。メンバーの認知負荷を下げるためにマネージャーが決断するという役割分担も合理性があるように思える。自身が若い頃の、決断しない管理職やマネージャーへの苛立ちのようなものも、その心理的なストレスや認知負荷を私が感じていたということだったのかもしれない。&lt;/p>
&lt;p>実践知リーダーシップの概念の1つに覚えておこうと思ったヒトコマだった。&lt;/p></content></item><item><title>ベテランはレガシーを保守するべき？</title><link>/diary/posts/2024/0612/</link><pubDate>Wed, 12 Jun 2024 08:21:27 +0900</pubDate><guid>/diary/posts/2024/0612/</guid><description>今日の運動は縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を 運動の記録 にまとめる。夕方から疲労が腰にきて熱が37.1度あって、公園で軽く運動して帰ってきて測ったら38.2度になってた。珍しく熱が出ている。熱はあるけれど、とくにしんどくはない。
問題だらけのプロダクト お手伝い先のうちのチームに春から入っている若者がいる。いま私が作っているプロダクトは、その若者がこれまで保守してきた旧プロダクトからのリプレースになる。一方で旧プロダクトも顧客に広く提供していることからお客さんが新プロダクトへ移行するまでは保守していかないといけない。たまたま旧プロダクトの保守をやってパッケージングしたら致命的な不具合が発生しているらしい。その issue をみて、今後はその若者が独りで保守するのではなく、うちのチームとして他のメンバーも保守していく体制に変えていくつもりではある。
そこでたまたま issue をみたので私が介入して少し調査した。驚くほどひどいプロダクトで xhr リクエストが失敗したときにまったく無関係なライブラリのワーニングダイアログが表示される。社内のコンサルタントが検証したらそのワーニングダイアログが出ましたと issue 登録していて、アプリケーションのエラーの情報はなにもない。実運用で xhr リクエストが失敗する可能性があるのは当たり前の話しなのに ui のカスタムエラーハンドラーは未定義という状況だった。こんなレベルのプロダクトをよく顧客に提供できるなと呆れてしまった。
ローカルの開発環境の構築方法などもヒアリングして、私が整理して他のメンバーでも開発できるようにしていこうと考えている。そのヒアリングをしていても、その若ものも自分しか環境構築できないレベルらしく、ドキュメントも更新していないと話していた。いくら保守するだけと言っても最低限の品質に達していない。旧プロダクトも保守できる体制を作らないといけないと私は考えていて、いまの新プロダクトの開発が落ち着いたら私が積極的に介入して整理整頓をしていきたいという意志を固めた。
「清潔感」の身につけ方 私はこれまでに服装や身だしなみなどに気をつかったことは一度もない。基本的にはユニクロの服を着ていてそれで十分に満足している。最近は業後にすぐ運動へ行けるよう、ヒートテックとジャージでオフィスで働いている。社交的でもないし、人と会うのもコミュニティイベントや勉強会ぐらいしかないのだからそれでなんの問題もなかった。しかし、今後は経営者としてマーケティングをしていかないといけない。ピッチで話す機会もあるかもしれないし、金融機関へ行って融資のお願いをする機会もあるかもしれない。そのときに最低限の「清潔感」のようなものがないと相手に不快感を与えてしまうのかもしれない。
中年男性というのは、ただいるだけで鬱陶しい存在になりがちで、当然ながら自分もその例にもれない。それでこの数年は、おしゃれでなくても「清潔感」はできる限り維持したいと思っている。そういう消極的な動機で、ファッションに関する実践が続いているのである。
2024年6月12日
たまたまあんちぽさんの日記を読んでいて、私も中年男性は存在そのものが忌避される対象だと認識している。そして経営者としての振る舞いを考えたらこういう視点ももつ必要があるかもなと再認識した。以前、あるイベントで日本酒コミュニティのメンバー募集をしていて対象年齢を40歳未満としていた。主催者がその理由をおっさんがくるとうんちく語って鬱陶しいと赤裸々に話していて、まったくその通りだと同意するものの、40代のおっさんがその場にいて直接的に年齢で言及されると気分がよくない気持ちもあるなと思った。その話題についてただ話したい動機であっても、おっさんは若い人に長話をしてはならない。これは私も常々気をつけていることではある。一方で話しを聞いてほしいという相反する気持ちもある。
閑話休題。おっさんは存在そのものがネガティブとなるため、そのネガティブさを少しでも緩和する努力をおっさん自身がしないといけない。そういうスキルやプラクティスを学んでいく姿勢も経営者としては求められるように日記を読んでいて感じた。</description><content>&lt;p>今日の運動は縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。夕方から疲労が腰にきて熱が37.1度あって、公園で軽く運動して帰ってきて測ったら38.2度になってた。珍しく熱が出ている。熱はあるけれど、とくにしんどくはない。&lt;/p>
&lt;h2 id="問題だらけのプロダクト">問題だらけのプロダクト&lt;/h2>
&lt;p>お手伝い先のうちのチームに春から入っている若者がいる。いま私が作っているプロダクトは、その若者がこれまで保守してきた旧プロダクトからのリプレースになる。一方で旧プロダクトも顧客に広く提供していることからお客さんが新プロダクトへ移行するまでは保守していかないといけない。たまたま旧プロダクトの保守をやってパッケージングしたら致命的な不具合が発生しているらしい。その issue をみて、今後はその若者が独りで保守するのではなく、うちのチームとして他のメンバーも保守していく体制に変えていくつもりではある。&lt;/p>
&lt;p>そこでたまたま issue をみたので私が介入して少し調査した。驚くほどひどいプロダクトで xhr リクエストが失敗したときにまったく無関係なライブラリのワーニングダイアログが表示される。社内のコンサルタントが検証したらそのワーニングダイアログが出ましたと issue 登録していて、アプリケーションのエラーの情報はなにもない。実運用で xhr リクエストが失敗する可能性があるのは当たり前の話しなのに ui のカスタムエラーハンドラーは未定義という状況だった。こんなレベルのプロダクトをよく顧客に提供できるなと呆れてしまった。&lt;/p>
&lt;p>ローカルの開発環境の構築方法などもヒアリングして、私が整理して他のメンバーでも開発できるようにしていこうと考えている。そのヒアリングをしていても、その若ものも自分しか環境構築できないレベルらしく、ドキュメントも更新していないと話していた。いくら保守するだけと言っても最低限の品質に達していない。旧プロダクトも保守できる体制を作らないといけないと私は考えていて、いまの新プロダクトの開発が落ち着いたら私が積極的に介入して整理整頓をしていきたいという意志を固めた。&lt;/p>
&lt;h2 id="清潔感の身につけ方">「清潔感」の身につけ方&lt;/h2>
&lt;p>私はこれまでに服装や身だしなみなどに気をつかったことは一度もない。基本的にはユニクロの服を着ていてそれで十分に満足している。最近は業後にすぐ運動へ行けるよう、ヒートテックとジャージでオフィスで働いている。社交的でもないし、人と会うのもコミュニティイベントや勉強会ぐらいしかないのだからそれでなんの問題もなかった。しかし、今後は経営者としてマーケティングをしていかないといけない。ピッチで話す機会もあるかもしれないし、金融機関へ行って融資のお願いをする機会もあるかもしれない。そのときに最低限の「清潔感」のようなものがないと相手に不快感を与えてしまうのかもしれない。&lt;/p>
&lt;blockquote>
&lt;p>中年男性というのは、ただいるだけで鬱陶しい存在になりがちで、当然ながら自分もその例にもれない。それでこの数年は、おしゃれでなくても「清潔感」はできる限り維持したいと思っている。そういう消極的な動機で、ファッションに関する実践が続いているのである。&lt;/p>
&lt;p>&lt;a href="https://note.com/kentarok/n/na8ea89548855">2024年6月12日&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>たまたまあんちぽさんの日記を読んでいて、私も中年男性は存在そのものが忌避される対象だと認識している。そして経営者としての振る舞いを考えたらこういう視点ももつ必要があるかもなと再認識した。以前、あるイベントで日本酒コミュニティのメンバー募集をしていて対象年齢を40歳未満としていた。主催者がその理由をおっさんがくるとうんちく語って鬱陶しいと赤裸々に話していて、まったくその通りだと同意するものの、40代のおっさんがその場にいて直接的に年齢で言及されると気分がよくない気持ちもあるなと思った。その話題についてただ話したい動機であっても、おっさんは若い人に長話をしてはならない。これは私も常々気をつけていることではある。一方で話しを聞いてほしいという相反する気持ちもある。&lt;/p>
&lt;p>閑話休題。おっさんは存在そのものがネガティブとなるため、そのネガティブさを少しでも緩和する努力をおっさん自身がしないといけない。そういうスキルやプラクティスを学んでいく姿勢も経営者としては求められるように日記を読んでいて感じた。&lt;/p></content></item><item><title>テストの依存関係をステージで表現する</title><link>/diary/posts/2024/0610/</link><pubDate>Mon, 10 Jun 2024 09:38:48 +0900</pubDate><guid>/diary/posts/2024/0610/</guid><description>今日の運動は腹筋ローラー,腕立て,縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を 運動の記録 にまとめる。
qa テストの設計 システムや機能が複雑になった後の qa テストをどう設計するか。先日 Full Stack Testing を読んで考察 したりしていた。テストでもっとも工数がかかるのはデータや設定も含めてテストできる環境を構築すること。gitlab ci/cd で3つのテスト環境を構築しているものの、それらと qa テストのテストケースとどうやって関連させるか、またはテストの依存関係をどのように表現するかといったことを設計の重要事項として考察していた。
これまで google sheets の1ファイルですべてのテストケースを管理していた。しかし、機能が増え、テストケースが増えていくにあたり、この1ファイルにより管理は破綻しかけていた。id 連携という、複数のシステムまたはモジュールを介してデータをやり取りするというアプリケーションの特性上、テストの依存関係は google sheets の1ファイルでは表現できない。そこで「ステージ」という概念を導入し、google drive のフォルダや階層構造で依存関係を表現することにした。ステージ1のテストが成功しない限り、ステージ2のテストが成功することはない。業務における本質的な難しさである依存関係を人間にとってどう管理していくかが重要になる。急にこれらの qa テストをすべてできるわけではないが、ステージを3つまで定義した。最後の手動探索テストを issue の創発という、課題管理にとって重要な位置づけにおさめたのが個人的にお気に入り。実際に手動探索テストをどのように実施できるか？というのはまだまだこれからの課題ではあるが。
ステージ1 2つのシステム間におけるテスト 特定モジュールの振る舞いの検証 ui 周りのテスト ステージ2 複数のシステムをまたがるテスト 機能横断的な要求テスト 可用性に関するテスト エラー制御に関するテスト アプリケーションの機能が動作した次にある高度な要件 セキュリティテスト パフォーマンステスト アクセシビリティテスト ステージ3 手動探索テスト issue の創発</description><content>&lt;p>今日の運動は腹筋ローラー,腕立て,縄跳び(両足跳),散歩,ジョギング,ハンドグリップをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="qa-テストの設計">qa テストの設計&lt;/h2>
&lt;p>システムや機能が複雑になった後の qa テストをどう設計するか。先日 &lt;a href="/diary/diary/posts/2024/0607/#qa-テストのテスト設計">Full Stack Testing を読んで考察&lt;/a> したりしていた。テストでもっとも工数がかかるのはデータや設定も含めてテストできる環境を構築すること。gitlab ci/cd で3つのテスト環境を構築しているものの、それらと qa テストのテストケースとどうやって関連させるか、またはテストの依存関係をどのように表現するかといったことを設計の重要事項として考察していた。&lt;/p>
&lt;p>これまで google sheets の1ファイルですべてのテストケースを管理していた。しかし、機能が増え、テストケースが増えていくにあたり、この1ファイルにより管理は破綻しかけていた。id 連携という、複数のシステムまたはモジュールを介してデータをやり取りするというアプリケーションの特性上、テストの依存関係は google sheets の1ファイルでは表現できない。そこで「ステージ」という概念を導入し、google drive のフォルダや階層構造で依存関係を表現することにした。ステージ1のテストが成功しない限り、ステージ2のテストが成功することはない。業務における本質的な難しさである依存関係を人間にとってどう管理していくかが重要になる。急にこれらの qa テストをすべてできるわけではないが、ステージを3つまで定義した。最後の手動探索テストを issue の創発という、課題管理にとって重要な位置づけにおさめたのが個人的にお気に入り。実際に手動探索テストをどのように実施できるか？というのはまだまだこれからの課題ではあるが。&lt;/p>
&lt;ul>
&lt;li>ステージ1
&lt;ul>
&lt;li>2つのシステム間におけるテスト&lt;/li>
&lt;li>特定モジュールの振る舞いの検証&lt;/li>
&lt;li>ui 周りのテスト&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ステージ2
&lt;ul>
&lt;li>複数のシステムをまたがるテスト&lt;/li>
&lt;li>機能横断的な要求テスト
&lt;ul>
&lt;li>可用性に関するテスト&lt;/li>
&lt;li>エラー制御に関するテスト&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>アプリケーションの機能が動作した次にある高度な要件
&lt;ul>
&lt;li>セキュリティテスト&lt;/li>
&lt;li>パフォーマンステスト&lt;/li>
&lt;li>アクセシビリティテスト&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ステージ3
&lt;ul>
&lt;li>手動探索テスト
&lt;ul>
&lt;li>issue の創発&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>今期の予算づくり</title><link>/diary/posts/2024/0412/</link><pubDate>Fri, 12 Apr 2024 08:37:09 +0900</pubDate><guid>/diary/posts/2024/0412/</guid><description>今日の運動は腹筋ローラー,散歩,バスケットボールをした。統計を 運動の記録 にまとめる。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
税理士さんの変更に伴ういろいろな共有 第6期の予算共有 課題管理の働き方についての認定証を個人に与えるなにか (時間があれば) 社宅の契約のいろいろ まだ本格的にスタートするのは半年ほど先になる予定だが、先月から顧問を1人増やしている。はらさんは ui/ux の専門家であり、1人で20年以上会社を経営してきた個人経営の専門家としても私は評価していて、うちのようなマイクロ法人の経営についてアドバイスしてもらうのは最適だと考えている。先月に追加した顧問はさらに技術寄りの、一般的に言えば技術顧問に相当する。その方はある sier の cto を何年も務めているので実績も十分にある。本格的に始動するのがもう少し先なのはよいとして、技術顧問から課題管理ビジネスについて、いまから準備してやっていけることもあるのではないか？という意見が出た。
それは正しくはあるのだけど、私の時間がないというのが現状になる。
課題管理に関する情報収集も、現実の開発における poc も、この3-4年ずっとやってきたことの累積があるから十分にインプットを蓄積できている。これからやらないといけないのは、そういった溜め込んだ1次情報を見直し、整理し、体系化し、会社の戦略として練り直せないといけない。資料を読み、考え、フィードバックを得て洗練させる。地道で時間のかかる作業が必要になる。この時間が私にはいまない。体重を減らすために運動に時間を費やしているのもある。もう一つ、いまのお手伝い先の受託開発で私が開発の実務もやってしまっているというのがある。開発の実務をやると途端に時間がなくなる。なぜならば、プログラミングというのは製造業における設計に相当する業務なので、開発に終わりはないし、無限に品質を上げるための取り組みに注力してしまえるから。お手伝い先の受託開発で実務から離れない限りは課題管理のビジネス作りに時間を割く余裕がないというのが現状になる。
スクラムという開発方法論について調査した issue はいくつもある。そして、たとえば「スクラムのよくないところ」といった話題ではらさんと軽く話し始めたら20分は議論が尽きない。この話題で私はいくらでも話せるが、やらないといけないことは、そこからさらに洗練させて言語化しないといけない。そういったノウハウや概念の体系化や整理には得てして時間がかかる。
今期の予算を策定して現時点ではざっと500万円弱の赤字を見込む。今期から投資フェーズへ移行したいと考えている。役員報酬はすべて役員借入金にして会社のキャッシュアウトをなくせば、ほぼとんとんで会社は維持できる見込みで想定している。他社の実務は受けないけど、付加価値の高いコンサル案件なら多少は受けて赤字を減らすための施策はできないか？と思ったりもするけれど、なかなか難しいかなとも考えている。
バスケットボール 近所にある みなとのもり公園 でバスケットボールをしてきた。先日購入したバスケットボール をもって行った。幸いコートが1つ空いていて自由にドリブルやシュートの練習をしてみた。個別に自由練習できるからボールを2個買っておいてよかった。2人で練習していたら、途中から3人グループがやってきて、混ざって練習していた。私は別に独占する意図はないから人数少なかったらこうやって一緒に混ざって練習するのもいいかもなと思えた。それなら3つのコートが空いていなくても、人数の少ないコートに行って入れてもらってもよいかもしれない。もしくはミニゲームを申し込んでやってもよいのかもしれない。
1時間ほど練習したり1on1したりした。相手がわざわざ西明石から出てきてくれたので晩ご飯も食べにいった。夜に行ったことのない ISOGAMI餃子バル TOMAKO へ行ってみた。お客さんよく入っているし、お店の雰囲気もおしゃれだし、女性客も多い。よいところなのだろう？と勝手に思っていたけれど、実際に行ってみるとそれほど特別とも感じなかった。もちろん個々の単品はおいしかったし、十分に平均以上のお店ではあるのだけど、なにか小さくまとまった感があって、前を通る度に外からみて人気店なのだろうと上がっていた私の期待値に応えるほどではなかった。でも、軽く晩ご飯を食べて1-2時間ですぐ帰るといった用途にはよさそうに思えた。</description><content>&lt;p>今日の運動は腹筋ローラー,散歩,バスケットボールをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;ul>
&lt;li>税理士さんの変更に伴ういろいろな共有&lt;/li>
&lt;li>第6期の予算共有&lt;/li>
&lt;li>課題管理の働き方についての認定証を個人に与えるなにか&lt;/li>
&lt;li>(時間があれば) 社宅の契約のいろいろ&lt;/li>
&lt;/ul>
&lt;p>まだ本格的にスタートするのは半年ほど先になる予定だが、先月から顧問を1人増やしている。はらさんは ui/ux の専門家であり、1人で20年以上会社を経営してきた個人経営の専門家としても私は評価していて、うちのようなマイクロ法人の経営についてアドバイスしてもらうのは最適だと考えている。先月に追加した顧問はさらに技術寄りの、一般的に言えば技術顧問に相当する。その方はある sier の cto を何年も務めているので実績も十分にある。本格的に始動するのがもう少し先なのはよいとして、技術顧問から課題管理ビジネスについて、いまから準備してやっていけることもあるのではないか？という意見が出た。&lt;/p>
&lt;p>それは正しくはあるのだけど、私の時間がないというのが現状になる。&lt;/p>
&lt;p>課題管理に関する情報収集も、現実の開発における poc も、この3-4年ずっとやってきたことの累積があるから十分にインプットを蓄積できている。これからやらないといけないのは、そういった溜め込んだ1次情報を見直し、整理し、体系化し、会社の戦略として練り直せないといけない。資料を読み、考え、フィードバックを得て洗練させる。地道で時間のかかる作業が必要になる。この時間が私にはいまない。体重を減らすために運動に時間を費やしているのもある。もう一つ、いまのお手伝い先の受託開発で私が開発の実務もやってしまっているというのがある。開発の実務をやると途端に時間がなくなる。なぜならば、プログラミングというのは製造業における設計に相当する業務なので、開発に終わりはないし、無限に品質を上げるための取り組みに注力してしまえるから。お手伝い先の受託開発で実務から離れない限りは課題管理のビジネス作りに時間を割く余裕がないというのが現状になる。&lt;/p>
&lt;p>スクラムという開発方法論について調査した issue はいくつもある。そして、たとえば「スクラムのよくないところ」といった話題ではらさんと軽く話し始めたら20分は議論が尽きない。この話題で私はいくらでも話せるが、やらないといけないことは、そこからさらに洗練させて言語化しないといけない。そういったノウハウや概念の体系化や整理には得てして時間がかかる。&lt;/p>
&lt;p>今期の予算を策定して現時点ではざっと500万円弱の赤字を見込む。今期から投資フェーズへ移行したいと考えている。役員報酬はすべて役員借入金にして会社のキャッシュアウトをなくせば、ほぼとんとんで会社は維持できる見込みで想定している。他社の実務は受けないけど、付加価値の高いコンサル案件なら多少は受けて赤字を減らすための施策はできないか？と思ったりもするけれど、なかなか難しいかなとも考えている。&lt;/p>
&lt;h2 id="バスケットボール">バスケットボール&lt;/h2>
&lt;p>近所にある &lt;a href="https://kobe-machiguide.com/park/minatonomori-park/">みなとのもり公園&lt;/a> でバスケットボールをしてきた。&lt;a href="/diary/diary/posts/2024/0404/#バスケットボール受け取り">先日購入したバスケットボール&lt;/a> をもって行った。幸いコートが1つ空いていて自由にドリブルやシュートの練習をしてみた。個別に自由練習できるからボールを2個買っておいてよかった。2人で練習していたら、途中から3人グループがやってきて、混ざって練習していた。私は別に独占する意図はないから人数少なかったらこうやって一緒に混ざって練習するのもいいかもなと思えた。それなら3つのコートが空いていなくても、人数の少ないコートに行って入れてもらってもよいかもしれない。もしくはミニゲームを申し込んでやってもよいのかもしれない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0412_ball.jpg"/>
&lt;/figure>
&lt;p>1時間ほど練習したり1on1したりした。相手がわざわざ西明石から出てきてくれたので晩ご飯も食べにいった。夜に行ったことのない &lt;a href="https://tabelog.com/hyogo/A2801/A280101/28049335/">ISOGAMI餃子バル TOMAKO&lt;/a> へ行ってみた。お客さんよく入っているし、お店の雰囲気もおしゃれだし、女性客も多い。よいところなのだろう？と勝手に思っていたけれど、実際に行ってみるとそれほど特別とも感じなかった。もちろん個々の単品はおいしかったし、十分に平均以上のお店ではあるのだけど、なにか小さくまとまった感があって、前を通る度に外からみて人気店なのだろうと上がっていた私の期待値に応えるほどではなかった。でも、軽く晩ご飯を食べて1-2時間ですぐ帰るといった用途にはよさそうに思えた。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/A26OpOoQCTU" allowfullscreen title="燃える餃子">&lt;/iframe>
&lt;/div></content></item><item><title>やさしさという残酷の事例</title><link>/diary/posts/2024/0405/</link><pubDate>Fri, 05 Apr 2024 08:11:31 +0900</pubDate><guid>/diary/posts/2024/0405/</guid><description>1時に寝て4時に起きて6時半に起きた。昨日は出張帰りで疲れてしまって、朝からお風呂入ってのんびりしてた。
今日の運動は腹筋ローラー,スクワット,散歩をした。統計を 運動の記録 にまとめる。
キャリア面談 アウトプットがない開発者の状況 について 月例の進捗報告 の場で経営陣に共有した。これは知識やスキルの多寡といった個人差以前の問題で本人のキャリアの意向を確認すべきだという判断を私は下して、経営陣もその意見を取り入れて対応したらしい。キャリア面談が実施されて本人としては開発者としてやっていきたいという意志を確認したようだ。
経営陣から厳しい評価を伝えられて本人はそれなりにショックを受けていると思う。そのショックをきっかけにその人が成長するのか、ダメになってしまうのかは本人次第だ。やる気があれば私はいくらでも指導するが、そうじゃなければこのまま放置して、開発から外すという最終判断も辞さない。そういう覚悟をもってこの開発フェーズには臨む。イチローが指摘している次の記事の内容がよくわかる。最近の若い子は基本的に優秀だが、優秀な子と優秀じゃない子の格差が大きくなってしまっている。それは働き方改革やハラスメント防止の視点から叱ってもらえない若い子が増えているからだと推測される。
イチローも警鐘を鳴らした…「大人に叱ってもらえない」Z世代が直面する「やさしさという残酷」 私も若い子に叱ったりはしないが、実力不足であれば厳しい判断を下さないといけないとは考えている。経営陣からのキャリア面談というワンクッションを入れた上で次の 1on1 で本人とも話してみようと思う。
夜桜通り抜け 夜に 王子動物園の夜桜通り抜け へ行ってきた。近所で軽く見に行くにはよいスポットだと思う。遠方からわざわざ来るほどの規模でもないのでなかなか評価が難しい。入場まで30分かかって、必要以上に行ったり来たり歩かされて、その割に入場後の園内が15分ほどで通り抜けできる規模しかない。なにか誘導の仕掛けが大げさになっているような気がした。あと園内は立ち止まらずに歩いてくださいとアナウンスしているが、みんな写真を撮るために立ち止まるわけで、立ち止まってもよいスポットをところどころに作ってあげるのがよさそうに思えた。夜桜をみにきて写真を撮るなというのは無理がある。行きは阪急電車で行って、帰りは1時間弱ぐらいかけて歩いて帰ってきた。</description><content>&lt;p>1時に寝て4時に起きて6時半に起きた。昨日は出張帰りで疲れてしまって、朝からお風呂入ってのんびりしてた。&lt;/p>
&lt;p>今日の運動は腹筋ローラー,スクワット,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="キャリア面談">キャリア面談&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0401/#アウトプットがない開発者への対応">アウトプットがない開発者の状況&lt;/a> について &lt;a href="/diary/diary/posts/2024/0404/#プロジェクトの進捗報告">月例の進捗報告&lt;/a> の場で経営陣に共有した。これは知識やスキルの多寡といった個人差以前の問題で本人のキャリアの意向を確認すべきだという判断を私は下して、経営陣もその意見を取り入れて対応したらしい。キャリア面談が実施されて本人としては開発者としてやっていきたいという意志を確認したようだ。&lt;/p>
&lt;p>経営陣から厳しい評価を伝えられて本人はそれなりにショックを受けていると思う。そのショックをきっかけにその人が成長するのか、ダメになってしまうのかは本人次第だ。やる気があれば私はいくらでも指導するが、そうじゃなければこのまま放置して、開発から外すという最終判断も辞さない。そういう覚悟をもってこの開発フェーズには臨む。イチローが指摘している次の記事の内容がよくわかる。最近の若い子は基本的に優秀だが、優秀な子と優秀じゃない子の格差が大きくなってしまっている。それは働き方改革やハラスメント防止の視点から叱ってもらえない若い子が増えているからだと推測される。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gendai.media/articles/-/119371">イチローも警鐘を鳴らした…「大人に叱ってもらえない」Z世代が直面する「やさしさという残酷」&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>私も若い子に叱ったりはしないが、実力不足であれば厳しい判断を下さないといけないとは考えている。経営陣からのキャリア面談というワンクッションを入れた上で次の 1on1 で本人とも話してみようと思う。&lt;/p>
&lt;h2 id="夜桜通り抜け">夜桜通り抜け&lt;/h2>
&lt;p>夜に &lt;a href="https://www.kobe-ojizoo.jp/event/detail/?id=520">王子動物園の夜桜通り抜け&lt;/a> へ行ってきた。近所で軽く見に行くにはよいスポットだと思う。遠方からわざわざ来るほどの規模でもないのでなかなか評価が難しい。入場まで30分かかって、必要以上に行ったり来たり歩かされて、その割に入場後の園内が15分ほどで通り抜けできる規模しかない。なにか誘導の仕掛けが大げさになっているような気がした。あと園内は立ち止まらずに歩いてくださいとアナウンスしているが、みんな写真を撮るために立ち止まるわけで、立ち止まってもよいスポットをところどころに作ってあげるのがよさそうに思えた。夜桜をみにきて写真を撮るなというのは無理がある。行きは阪急電車で行って、帰りは1時間弱ぐらいかけて歩いて帰ってきた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0405_yozakura.jpg"/>
&lt;/figure></content></item><item><title>podcast での鼎談企画</title><link>/diary/posts/2024/0404/</link><pubDate>Thu, 04 Apr 2024 09:48:56 +0900</pubDate><guid>/diary/posts/2024/0404/</guid><description>23時過ぎに寝て何度か起きて6時半に起きた。CPAP 装置を使わずにそのまま寝てしまった。
今回は出張中の運動はおやすみして疲労回復に努めてみることにした。
プロジェクトの進捗報告 出張したときの月例報告の15回目。前回の進捗報告はこちら 。
今回は 事前に資料作り もしていたので余裕をもって臨めた。podcast 企画について、本当は前回の打ち合わせ時に確認するつもりが、シンプルに私が聞くのを忘れていて1ヶ月過ぎた。今回は忘れないよう、資料のスライドに書いていったので確認することができた。課題管理の文脈で、サービスの提供側、そのサービスを受けた顧客側、第3者としてのファシリテーターという3者で鼎談を行う。早いうちに課題管理のコンテンツをテックブログで公開したい。
今回はメンバーに関して重たい話題も扱った。マネージャーとして然るべきタイミングで厳しい判断を下すことも重要になる。私が観察してきての事実や見立てを経営陣と共有し、今後の対応について協議した。あまり詳細を書くことはできないけれど、また時期がきて、このときの判断が次の行動のなにかにつながっていけば未来のどこかで書くかもしれない。
バスケットボール受け取り 近所の みなとのもり公園 にバスケットコートが3つある。三宮.dev の運動部でバスケットボールやろうといった話題が出て、屋外でよければ近所にあるよと話していて、その流れで amazon でバスケットボールを2個購入してみた。近いうちにイベントを企画してやってみようと思う。私の目的はスポーツはなんであれ、カラダを動かすならなんでもいいやというノリ。</description><content>&lt;p>23時過ぎに寝て何度か起きて6時半に起きた。CPAP 装置を使わずにそのまま寝てしまった。&lt;/p>
&lt;p>今回は出張中の運動はおやすみして疲労回復に努めてみることにした。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の15回目。&lt;a href="/diary/diary/posts/2024/0306/">前回の進捗報告はこちら&lt;/a> 。&lt;/p>
&lt;p>今回は &lt;a href="/diary/diary/posts/2024/0331/#近況報告の資料作り">事前に資料作り&lt;/a> もしていたので余裕をもって臨めた。podcast 企画について、本当は前回の打ち合わせ時に確認するつもりが、シンプルに私が聞くのを忘れていて1ヶ月過ぎた。今回は忘れないよう、資料のスライドに書いていったので確認することができた。課題管理の文脈で、サービスの提供側、そのサービスを受けた顧客側、第3者としてのファシリテーターという3者で鼎談を行う。早いうちに課題管理のコンテンツをテックブログで公開したい。&lt;/p>
&lt;p>今回はメンバーに関して重たい話題も扱った。マネージャーとして然るべきタイミングで厳しい判断を下すことも重要になる。私が観察してきての事実や見立てを経営陣と共有し、今後の対応について協議した。あまり詳細を書くことはできないけれど、また時期がきて、このときの判断が次の行動のなにかにつながっていけば未来のどこかで書くかもしれない。&lt;/p>
&lt;h2 id="バスケットボール受け取り">バスケットボール受け取り&lt;/h2>
&lt;p>近所の &lt;a href="https://ossan-basketball.com/minatonomorikouen/">みなとのもり公園&lt;/a> にバスケットコートが3つある。三宮.dev の運動部でバスケットボールやろうといった話題が出て、屋外でよければ近所にあるよと話していて、その流れで amazon でバスケットボールを2個購入してみた。近いうちにイベントを企画してやってみようと思う。私の目的はスポーツはなんであれ、カラダを動かすならなんでもいいやというノリ。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0404_ball.jpg"/>
&lt;/figure></content></item><item><title>4月1日の月曜日</title><link>/diary/posts/2024/0401/</link><pubDate>Mon, 01 Apr 2024 19:18:21 +0900</pubDate><guid>/diary/posts/2024/0401/</guid><description>23時頃に寝て4時に起きて6時に起きた。変な寝方した。私はわりと月曜日は好き。休み明けで元気だから、世の中的には逆かもしれないが。月曜日に加えて、今日は4月1日で新年度とあってさらに新鮮な気持ちになって晴れ晴れしい。
今日の運動は腹筋ローラー,腕立て,縄跳び(両足跳)をした。統計を 運動の記録 にまとめる。
go-ldap のコントリビュート 過去に私がコントリビュートした非同期検索の機能のなかで context によるキャンセルと channel の操作のところで効率のよい方法を提案してくれた方がいた。私が開発していて気付かなかったところをリファクタリングした。指摘されればその通りだと思う。開発していて non-blocking な select 文を書くことに気を取られているとその認識が漏れていたといった程度のリファクタリングになる。ちょうどいま go-ldap ライブラリを使うアプリケーションのデバッグをやっていて、特定のケースにおいてブロックしてしまう現象に遭遇していて、この context と channel の select 文の扱いが参考になった。issue をあげてくれた方に感謝。
Refactor the context handling with receiving an ldap response in searchAsync() #496 アウトプットがない開発者への対応 お手伝い先でフルタイムの新規開発者が1ヶ月たっても機能開発の issue を1つも fix できていない。svelte で新規の一覧画面を作ってもらう、相対的に簡単な issue なのだけども1ヶ月かけてマージリクエストを出せるレベルにはなっていない。そして今日は休暇をとっている。普通の開発者の感覚として、どんな理由があろうと1ヶ月で issue を1つも fix できていない状況は異常だと思う。ほかメンバーだとそれぞれ16と8つの issue を fix している。もちろん開発者によってやっていることや取り組んでいることの複雑さが異なるため、単純に数が多ければよいというわけでもない。そして内容については私が課題管理を介して把握しているので他のメンバーの働き方になんの問題もない。どんな issue に取り組んでいても1週間に1つも fix できないという状況にはなっていない。1ヶ月かけて開発の issue を1つも fix できないというのがどれだけ異常な状況かはわかると思う。明日から出張で経営陣と進捗について話すときに大きな問題の1つとして共有して対策を検討する必要がある。</description><content>&lt;p>23時頃に寝て4時に起きて6時に起きた。変な寝方した。私はわりと月曜日は好き。休み明けで元気だから、世の中的には逆かもしれないが。月曜日に加えて、今日は4月1日で新年度とあってさらに新鮮な気持ちになって晴れ晴れしい。&lt;/p>
&lt;p>今日の運動は腹筋ローラー,腕立て,縄跳び(両足跳)をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="go-ldap-のコントリビュート">go-ldap のコントリビュート&lt;/h2>
&lt;p>過去に私がコントリビュートした非同期検索の機能のなかで context によるキャンセルと channel の操作のところで効率のよい方法を提案してくれた方がいた。私が開発していて気付かなかったところをリファクタリングした。指摘されればその通りだと思う。開発していて non-blocking な select 文を書くことに気を取られているとその認識が漏れていたといった程度のリファクタリングになる。ちょうどいま go-ldap ライブラリを使うアプリケーションのデバッグをやっていて、特定のケースにおいてブロックしてしまう現象に遭遇していて、この context と channel の select 文の扱いが参考になった。issue をあげてくれた方に感謝。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/496">Refactor the context handling with receiving an ldap response in searchAsync() #496&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="アウトプットがない開発者への対応">アウトプットがない開発者への対応&lt;/h2>
&lt;p>お手伝い先でフルタイムの新規開発者が1ヶ月たっても機能開発の issue を1つも fix できていない。svelte で新規の一覧画面を作ってもらう、相対的に簡単な issue なのだけども1ヶ月かけてマージリクエストを出せるレベルにはなっていない。そして今日は休暇をとっている。普通の開発者の感覚として、どんな理由があろうと1ヶ月で issue を1つも fix できていない状況は異常だと思う。ほかメンバーだとそれぞれ16と8つの issue を fix している。もちろん開発者によってやっていることや取り組んでいることの複雑さが異なるため、単純に数が多ければよいというわけでもない。そして内容については私が課題管理を介して把握しているので他のメンバーの働き方になんの問題もない。どんな issue に取り組んでいても1週間に1つも fix できないという状況にはなっていない。1ヶ月かけて開発の issue を1つも fix できないというのがどれだけ異常な状況かはわかると思う。明日から出張で経営陣と進捗について話すときに大きな問題の1つとして共有して対策を検討する必要がある。&lt;/p></content></item><item><title>出張前の休日はたいてい資料作り</title><link>/diary/posts/2024/0331/</link><pubDate>Sun, 31 Mar 2024 11:10:46 +0900</pubDate><guid>/diary/posts/2024/0331/</guid><description>1時半に寝て6時半に起きた。精霊の守り人 をみながら寝落ちした。
今日の運動は腹筋ローラー,スクワットをした。統計を 運動の記録 にまとめる。
近況報告の資料作り 来週の出張に向けて進捗報告の資料作り。だいたい出張前の休日にやっていて、この作業も1年半続けているなと、なにか感慨深い。今回は開発が始まったばかりの序盤なのであまり大きな話題はなくて、優先順位付けした機能一覧とメンバーの役割分担、進捗状況を俯瞰して伝えるぐらい。あと課題管理のコンテンツ作りも並行して進めていて、お手伝い先のお客さんと一緒に podcast に出て、課題管理の提供側と実際のそのサービスを受けたお客さんで事例の公開インタビューのようなことをやりたいと企画している。その可否や条件などを検討してもらうための議論もしてこようと思う。
ホットクックのレシピ作り 鶏肉のオイスター煮は木曜日から挑戦していた。今日さらにサバ昆布炊き込みご飯を作ってみた。思いの外、サバ昆布炊き込みご飯がうまくできておいしかった。さば缶 の調査をしているときにみつけた サヴァ缶 国産サバのオリーブオイル漬け はいろんな料理に応用できると思っていた。今回これを使って炊き込みご飯を作ったら想像した雰囲気のしっとりまろやかな風味になって私の好みだった。
さばと塩こんぶの炊き込みご飯 大根たっぷり鶏肉のオイスター煮 徐々に作ったものが増えてきて、過去に作ったものも増えてきたのであとで見返せるよう レシピ一覧 も作ってみた。</description><content>&lt;p>1時半に寝て6時半に起きた。&lt;a href="https://www.production-ig.co.jp/works/moribito/">精霊の守り人&lt;/a> をみながら寝落ちした。&lt;/p>
&lt;p>今日の運動は腹筋ローラー,スクワットをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="近況報告の資料作り">近況報告の資料作り&lt;/h2>
&lt;p>来週の出張に向けて進捗報告の資料作り。だいたい出張前の休日にやっていて、この作業も1年半続けているなと、なにか感慨深い。今回は開発が始まったばかりの序盤なのであまり大きな話題はなくて、優先順位付けした機能一覧とメンバーの役割分担、進捗状況を俯瞰して伝えるぐらい。あと課題管理のコンテンツ作りも並行して進めていて、お手伝い先のお客さんと一緒に podcast に出て、課題管理の提供側と実際のそのサービスを受けたお客さんで事例の公開インタビューのようなことをやりたいと企画している。その可否や条件などを検討してもらうための議論もしてこようと思う。&lt;/p>
&lt;h2 id="ホットクックのレシピ作り">ホットクックのレシピ作り&lt;/h2>
&lt;p>鶏肉のオイスター煮は木曜日から挑戦していた。今日さらにサバ昆布炊き込みご飯を作ってみた。思いの外、サバ昆布炊き込みご飯がうまくできておいしかった。&lt;a href="https://getupnote.com/share/notes/3ztcTpBat7RA2IpEjuoFzq1JKMf2/e39adf45-a075-4202-b919-91aadb09f68c">さば缶&lt;/a> の調査をしているときにみつけた &lt;a href="https://iwate-ginpla-webshop.net/item-detail/459197">サヴァ缶 国産サバのオリーブオイル漬け&lt;/a> はいろんな料理に応用できると思っていた。今回これを使って炊き込みご飯を作ったら想像した雰囲気のしっとりまろやかな風味になって私の好みだった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://getupnote.com/share/notes/3ztcTpBat7RA2IpEjuoFzq1JKMf2/47ab5d48-48a8-4103-9b49-b8f9ec74088f">さばと塩こんぶの炊き込みご飯&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://getupnote.com/share/notes/3ztcTpBat7RA2IpEjuoFzq1JKMf2/4e8f280c-c21f-4776-8665-21ec14ec8364">大根たっぷり鶏肉のオイスター煮&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>徐々に作ったものが増えてきて、過去に作ったものも増えてきたのであとで見返せるよう &lt;a href="https://getupnote.com/share/notes/3ztcTpBat7RA2IpEjuoFzq1JKMf2/fbe3cbc9-14b4-4873-84dc-86efe7b20c84">レシピ一覧&lt;/a> も作ってみた。&lt;/p></content></item><item><title>4次開発の仕掛り</title><link>/diary/posts/2024/0319/</link><pubDate>Tue, 19 Mar 2024 16:35:11 +0900</pubDate><guid>/diary/posts/2024/0319/</guid><description>2時半に寝て6時過ぎに起きた。
今日の運動は腕立て,スクワットをした。統計を 運動の記録 にまとめる。
定例会議 4次開発が始まって最初のマイルストーンを終えた。私はプロジェクトマネジメントの業務が残っていて、いくつか調整やドキュメント作成にも時間を割いた。プロジェクト初期からのメンバーは順調に新しい機能開発へ遷移できたように思える。この2人は放っておいても自律的に仮説を組み立てて業務を遂行できるだろう。そして、前の3次開発から参加した新規メンバーのサポートが、今回の開発フェーズにおける私のメイン業務になると考えている。いまのところ、まだプロジェクトや開発に貢献できる状態にはない。お手伝い先の経営陣にお願いして開発以外の業務はすべて剥がしてもらうようにした。これで言い訳ができない状況になったので開発に専念してほしい。
ハニカムさんと飲み会 先日 ハニカムさんの社長とランチ へ行ってきた。今回は社長と cto と一緒に飲みに行ってきた。18時半から始めて3軒はしごして23時半まで飲んできた。楽しかった。精霊の守り人 がおもしろいと教えてもらったのでまた時間のあるときに観てみる。
魚介酒場 魚つばき スタンド GONTa2 二代目串勝家 ざっくばらんにいろんな話しをして、同じ世代なので話しも共感しやすい。いくつかの話題があった中で教育の話しがもっとも盛り上がったように思う。みんな、よいおっさんなので後進を育てることに関心が向く。私もチームの若い子を指導しているのでその経験からの考え方を共有した。教育という分野は政治同様、誰でも一家言あって発散しやすい。飲み会のネタとしては鉄板に思える。縁があればハニカムさんとビジネスで協業する機会があるかもしれない。</description><content>&lt;p>2時半に寝て6時過ぎに起きた。&lt;/p>
&lt;p>今日の運動は腕立て,スクワットをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>4次開発が始まって最初のマイルストーンを終えた。私はプロジェクトマネジメントの業務が残っていて、いくつか調整やドキュメント作成にも時間を割いた。プロジェクト初期からのメンバーは順調に新しい機能開発へ遷移できたように思える。この2人は放っておいても自律的に仮説を組み立てて業務を遂行できるだろう。そして、前の3次開発から参加した新規メンバーのサポートが、今回の開発フェーズにおける私のメイン業務になると考えている。いまのところ、まだプロジェクトや開発に貢献できる状態にはない。お手伝い先の経営陣にお願いして開発以外の業務はすべて剥がしてもらうようにした。これで言い訳ができない状況になったので開発に専念してほしい。&lt;/p>
&lt;h2 id="ハニカムさんと飲み会">ハニカムさんと飲み会&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2024/0304/#ハニカムさんとパワーランチ">ハニカムさんの社長とランチ&lt;/a> へ行ってきた。今回は社長と cto と一緒に飲みに行ってきた。18時半から始めて3軒はしごして23時半まで飲んできた。楽しかった。&lt;a href="https://www.production-ig.co.jp/works/moribito/">精霊の守り人&lt;/a> がおもしろいと教えてもらったのでまた時間のあるときに観てみる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tabelog.com/hyogo/A2801/A280101/28068291/">魚介酒場 魚つばき&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tabelog.com/hyogo/A2801/A280101/28041447/">スタンド GONTa2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tabelog.com/hyogo/A2801/A280101/28017457/">二代目串勝家&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ざっくばらんにいろんな話しをして、同じ世代なので話しも共感しやすい。いくつかの話題があった中で教育の話しがもっとも盛り上がったように思う。みんな、よいおっさんなので後進を育てることに関心が向く。私もチームの若い子を指導しているのでその経験からの考え方を共有した。教育という分野は政治同様、誰でも一家言あって発散しやすい。飲み会のネタとしては鉄板に思える。縁があればハニカムさんとビジネスで協業する機会があるかもしれない。&lt;/p></content></item><item><title>Fun/Give/Learn のふりかえりを miro で行う</title><link>/diary/posts/2024/0313/</link><pubDate>Wed, 13 Mar 2024 17:46:37 +0900</pubDate><guid>/diary/posts/2024/0313/</guid><description>fitbit の日々の目標の1万歩と2900カロリーの消費を達成するため、23時過ぎから散歩に言って0時前に達成して戻ってきて、CPAP のセットアップする前に疲れてそのまま寝てしまった。
今日の運動は水中ウォーキング,散歩をした。統計を 運動の記録 にまとめる。
google jamboard の移行先 サービス終了するので移行しないといけない。
Google Jamboard の提供終了について 前にお手伝いしていた会社でよく使っていた Miro でいいんじゃないかと思って実際に評価して、機能性と使い勝手がとてもよかったので、やっぱり miro でいいんじゃないかと結論付けた。お手伝い先では miro を使っていない。偉い人に miro の管理者になってもらって、私のアカウントを招待してもらって、開発メンバーのチームを作ってもらうことにした。
付箋に絵文字を付けられる 付箋の作成者を表示、確認できる 付箋にコメントを付けられる この3点だけでも jamboard ではできなかったことを実現できて好感触。今後の fun/give/learn のふりかえり は miro のボードを使う。
プール 前に行ったのが2月16日なので約1ヶ月経ってしまっていた。最近は週の半分ぐらいは夜に予定が入っている。打ち合わせや勉強会が入ったり、ちょっとお仕事を残業していたりすると全然余裕がない。プールに入った後に時計をみたら19時19分だった。1時間は運動しようと思って途中に5分休憩があるので20時25分で引き上げてきた。歩いたり平泳ぎしたりを1時間ずっとやってた。プールは空いていたのでほぼ1コースを貸し切りで自分のペースで歩いたり泳いだりできて快適だった。しかし、プールでは fitbit を外しているのでこの1時間のアクティビティは記録されない。これだけが残念。
隣のコースで外国人がバタフライで泳いでいて、すごいダイナミックで迫力があってカッコよかった。バタフライとかどうやって泳ぐのだろう？と軽く真似してみたけど泳げる気がしない。4泳法の中では一番難しいみたい。
バタフライは、クロールや平泳ぎ、背泳ぎと並んで、水泳の「4泳法」のひとつです。両手を回すように動かしたり、両足を揃えて上下にうねらせたり、非常にダイナミックなフォームで泳ぎます。4泳法の中ではクロールの次に速く泳げる一方で、泳ぎ方にコツが必要なため、最も泳げない人が多い泳法といわれています。
【水泳】バタフライを上手に泳ぐコツは？ 泳ぎ方の基本を押さえよう
プールを終えて晩ご飯を食べて歩数が9000歩を超えてたり、消費カロリーが2700カロリーぐらいだった。プールのアクティビティを含めると実際は軽く超えているけれど、データ上の目標を達成していないのが気に食わないと思えたので夜に散歩に出掛けて、データ上も日々の目標値を達成した。しんどかったけど、余分に運動したのでよしとしておく。</description><content>&lt;p>fitbit の日々の目標の1万歩と2900カロリーの消費を達成するため、23時過ぎから散歩に言って0時前に達成して戻ってきて、CPAP のセットアップする前に疲れてそのまま寝てしまった。&lt;/p>
&lt;p>今日の運動は水中ウォーキング,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="google-jamboard-の移行先">google jamboard の移行先&lt;/h2>
&lt;p>サービス終了するので移行しないといけない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://support.google.com/jamboard/answer/14084927?hl=ja">Google Jamboard の提供終了について&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>前にお手伝いしていた会社でよく使っていた &lt;a href="https://miro.com/">Miro&lt;/a> でいいんじゃないかと思って実際に評価して、機能性と使い勝手がとてもよかったので、やっぱり miro でいいんじゃないかと結論付けた。お手伝い先では miro を使っていない。偉い人に miro の管理者になってもらって、私のアカウントを招待してもらって、開発メンバーのチームを作ってもらうことにした。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0313_miro1.png"/>
&lt;/figure>
&lt;ul>
&lt;li>付箋に絵文字を付けられる&lt;/li>
&lt;li>付箋の作成者を表示、確認できる&lt;/li>
&lt;li>付箋にコメントを付けられる&lt;/li>
&lt;/ul>
&lt;p>この3点だけでも jamboard ではできなかったことを実現できて好感触。今後の &lt;a href="/diary/diary/posts/2023/0926/#fundonelearn-のカスタマイズ">fun/give/learn のふりかえり&lt;/a> は miro のボードを使う。&lt;/p>
&lt;h2 id="プール">プール&lt;/h2>
&lt;p>前に行ったのが2月16日なので約1ヶ月経ってしまっていた。最近は週の半分ぐらいは夜に予定が入っている。打ち合わせや勉強会が入ったり、ちょっとお仕事を残業していたりすると全然余裕がない。プールに入った後に時計をみたら19時19分だった。1時間は運動しようと思って途中に5分休憩があるので20時25分で引き上げてきた。歩いたり平泳ぎしたりを1時間ずっとやってた。プールは空いていたのでほぼ1コースを貸し切りで自分のペースで歩いたり泳いだりできて快適だった。しかし、プールでは fitbit を外しているのでこの1時間のアクティビティは記録されない。これだけが残念。&lt;/p>
&lt;p>隣のコースで外国人がバタフライで泳いでいて、すごいダイナミックで迫力があってカッコよかった。バタフライとかどうやって泳ぐのだろう？と軽く真似してみたけど泳げる気がしない。4泳法の中では一番難しいみたい。&lt;/p>
&lt;blockquote>
&lt;p>バタフライは、クロールや平泳ぎ、背泳ぎと並んで、水泳の「4泳法」のひとつです。両手を回すように動かしたり、両足を揃えて上下にうねらせたり、非常にダイナミックなフォームで泳ぎます。4泳法の中ではクロールの次に速く泳げる一方で、泳ぎ方にコツが必要なため、最も泳げない人が多い泳法といわれています。&lt;/p>
&lt;p>&lt;a href="https://media.alpen-group.jp/media/detail/other_230629_01.html">【水泳】バタフライを上手に泳ぐコツは？ 泳ぎ方の基本を押さえよう&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>プールを終えて晩ご飯を食べて歩数が9000歩を超えてたり、消費カロリーが2700カロリーぐらいだった。プールのアクティビティを含めると実際は軽く超えているけれど、データ上の目標を達成していないのが気に食わないと思えたので夜に散歩に出掛けて、データ上も日々の目標値を達成した。しんどかったけど、余分に運動したのでよしとしておく。&lt;/p></content></item><item><title>睡眠時無呼吸症候群認定された</title><link>/diary/posts/2024/0312/</link><pubDate>Tue, 12 Mar 2024 09:43:59 +0900</pubDate><guid>/diary/posts/2024/0312/</guid><description>1時半に寝て4時に起きて6時半に起きた。7時までおふとんでだらだらしてた。
今日の運動はレッグレイズ(椅子),腹筋ローラー,腕立て,スクワット,背筋,水中ウォーキング,縄跳び(両足跳),散歩をした。統計を 運動の記録 にまとめる。
開発課題の優先順位付け 昨日の続き 。エイヤで優先順位付けして次の開発の課題を整理する。
1つ厄介、且つ難しい大きめの機能があって、これはどうしようか？と懸念に思っていた機能が、その要件の詳細をヒアリングしている過程で既存の運用は他の機能で代替できる可能性も出てきて、その大きな機能の優先度を下げて後回しにすることができた。このことによって開発課題全般のバランスがよくなって、メンバーの役割分担の適正になって、機能開発3ヶ月 + QA1ヶ月の4ヶ月のイテレーションにおさまりそうな開発規模に調整できた。自画自賛だけれども、プロジェクトマネージャーとして適正な課題設定とスケジュール調整に成功したと実感できた。もちろんお手伝い先の偉い人はめちゃくちゃことを言わないというのも大きい。
今回はクラウド版として helm パッケージを作って k8s クラスターで Persistent Volumes を使う。これは私のキャリアにとっても大きな挑戦になるので高い集中力をもってこのイテレーションに臨むことになる。コンテナアプリケーションでオンプレ向けには docker compose を、クラウド向けには helm パッケージを、まったく同じソースコードでアプリケーションを開発し、コンテナイメージを提供するという、私が描いたグランドデザインの集大成となる取り組みの片鱗がみえてくる。上手くいけば自社プロダクトの開発手法としても使っていく。
睡眠外来 睡眠外来へ行った。前回の所感はここ 。2つの検査を行っていて、その結果を確認してきた。
採血の結果 私はもう健康診断を5年行っていない。採血でどんな結果が出るのかやや不安でもあったけれど、ほぼ健康だった。唯一、尿酸だけが基準値を少しだけ上回った。他に30ほどの項目があるが、すべて基準値の範囲内におさまっている。肥満が尿酸値を上げるそうなのでこれはいま行っている筋トレと運動で脂肪燃焼が進めば解消されるかもしれない。お医者さんも健康だと太鼓判を押す内容だった。
肝機能、腎機能ともに良好 (最近はお酒飲まないし)、血液の指標もよい、さらに HbA1c (ヘモグロビンエーワンシー) (NGSP) という値が 5.7% だった。HbA1c はお医者さんがこれは代謝に関係のある数値と説明されたので注目して聞いていた。基準値は 4.6〜6.2% とあるので正常の範囲内におさまっている。一方で学会によっては5.6%未満がよいと推奨しているという記事もみかけた。これも測定した日が1ヶ月前なのでいま測ったらもう少し低い数値が出るのではないか？と推測する。今年いっぱい運動して終えたらまた健康診断を受け直してみてどんな結果になるか比べてみようと思う。
HbA1ｃの正常範囲値は、糖尿病治療ガイドライン（日本糖尿病学会）によりますと「4.6～6.2％」です。特定保健指導の基準値によりますと、「5.6％未満」になります。日本糖尿病学会によると、6.0～6.4％：糖尿病の可能性が否定できない、6.5％以上：糖尿病が強く疑われると定義されています。
HbA1cが高い
ＨｂＡ1ｃ（ヘモグロビンエーワンシー）ってなに？ 一方で5年、健康診断を受けなくても血液検査で異常はほぼなかった。うちの一族は祖父、父、私ともにまったく穏やかな生活を送っていないにも関わらずほとんど病気をせず、カラダは頑強にみえる。これであと5年は健康診断を受けなくてもよいという自信をもてた (違
睡眠時無呼吸症候群 (SAS) 睡眠時無呼吸症候群の検査キット による診断結果が出た。検査当日あまりうまく眠れなかったのでちゃんと測定できなかったんじゃないか？と不安に思っていたんだけど、ちゃんと測定できていたようだ。
pAHI という数値が5より少ない人が正常、私は64.8という数値で重症のかなり悪い方になるらしい。このままだと死にますというわけではないのだけど、酸素飽和度が正常な人は98-95%あるところが、私は95-60%程度でブレが大きく、それは心臓や肺に負担がかかっているという。この状態でも自覚症状はまったくなく (あまり眠れないのはこのせい？)、日々の業務でも疲れたりしていない。fitbit の睡眠スコアもそれほど悪くない。お医者さんによると、その状態に慣れてしまっているからいますぐ日常生活に支障はないかもしれないけれど、カラダに負担を強いていることは確実であることから、寿命は確実に縮めているのではないかという話しだった。
肥満はいびきや睡眠時無呼吸症候群の原因の1つではあるけれど、痩せている人でもこれらの症状をもっているケースもある。肥満を解消したからといっていびきや睡眠時無呼吸症候群が治るとは限らないという。この測定結果から CPAP という治療をいますぐした方がよいということになった。酸素マスクのようなものを付けて機械が定期的に空気を送り込む。この治療をしても睡眠時無呼吸症候群が治るわけではない。酸素飽和度が増えることでカラダの負担は減るのだろう。機器はリースで貸してくれて、もう準備も整っていてその機器を持って帰ってきた。今晩から試してみる。睡眠時無呼吸症候群が治らないのは仕方ないとして、これで疲労回復できて代謝がよくなって脂肪燃焼の効率が上がるのであれば取り組む価値はあると思う。
Q32 CPAP（シーパップ）とはどのような治療法ですか？</description><content>&lt;p>1時半に寝て4時に起きて6時半に起きた。7時までおふとんでだらだらしてた。&lt;/p>
&lt;p>今日の運動はレッグレイズ(椅子),腹筋ローラー,腕立て,スクワット,背筋,水中ウォーキング,縄跳び(両足跳),散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="開発課題の優先順位付け">開発課題の優先順位付け&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0311/#要件一覧と優先順位付けの資料作り">昨日の続き&lt;/a> 。エイヤで優先順位付けして次の開発の課題を整理する。&lt;/p>
&lt;p>1つ厄介、且つ難しい大きめの機能があって、これはどうしようか？と懸念に思っていた機能が、その要件の詳細をヒアリングしている過程で既存の運用は他の機能で代替できる可能性も出てきて、その大きな機能の優先度を下げて後回しにすることができた。このことによって開発課題全般のバランスがよくなって、メンバーの役割分担の適正になって、機能開発3ヶ月 + QA1ヶ月の4ヶ月のイテレーションにおさまりそうな開発規模に調整できた。自画自賛だけれども、プロジェクトマネージャーとして適正な課題設定とスケジュール調整に成功したと実感できた。もちろんお手伝い先の偉い人はめちゃくちゃことを言わないというのも大きい。&lt;/p>
&lt;p>今回はクラウド版として helm パッケージを作って k8s クラスターで &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">Persistent Volumes&lt;/a> を使う。これは私のキャリアにとっても大きな挑戦になるので高い集中力をもってこのイテレーションに臨むことになる。コンテナアプリケーションでオンプレ向けには docker compose を、クラウド向けには helm パッケージを、まったく同じソースコードでアプリケーションを開発し、コンテナイメージを提供するという、私が描いたグランドデザインの集大成となる取り組みの片鱗がみえてくる。上手くいけば自社プロダクトの開発手法としても使っていく。&lt;/p>
&lt;h2 id="睡眠外来">睡眠外来&lt;/h2>
&lt;p>睡眠外来へ行った。&lt;a href="/diary/diary/posts/2024/0213/#睡眠外来に行く">前回の所感はここ&lt;/a> 。2つの検査を行っていて、その結果を確認してきた。&lt;/p>
&lt;h3 id="採血の結果">採血の結果&lt;/h3>
&lt;p>私はもう健康診断を5年行っていない。採血でどんな結果が出るのかやや不安でもあったけれど、ほぼ健康だった。唯一、尿酸だけが基準値を少しだけ上回った。他に30ほどの項目があるが、すべて基準値の範囲内におさまっている。肥満が尿酸値を上げるそうなのでこれはいま行っている筋トレと運動で脂肪燃焼が進めば解消されるかもしれない。お医者さんも健康だと太鼓判を押す内容だった。&lt;/p>
&lt;p>肝機能、腎機能ともに良好 (最近はお酒飲まないし)、血液の指標もよい、さらに HbA1c (ヘモグロビンエーワンシー) (NGSP) という値が 5.7% だった。HbA1c はお医者さんがこれは代謝に関係のある数値と説明されたので注目して聞いていた。基準値は 4.6〜6.2% とあるので正常の範囲内におさまっている。一方で学会によっては5.6%未満がよいと推奨しているという記事もみかけた。これも測定した日が1ヶ月前なのでいま測ったらもう少し低い数値が出るのではないか？と推測する。今年いっぱい運動して終えたらまた健康診断を受け直してみてどんな結果になるか比べてみようと思う。&lt;/p>
&lt;blockquote>
&lt;p>HbA1ｃの正常範囲値は、糖尿病治療ガイドライン（日本糖尿病学会）によりますと「4.6～6.2％」です。特定保健指導の基準値によりますと、「5.6％未満」になります。日本糖尿病学会によると、6.0～6.4％：糖尿病の可能性が否定できない、6.5％以上：糖尿病が強く疑われると定義されています。&lt;/p>
&lt;p>&lt;a href="https://www.mitaka-dm.com/hba1c/">HbA1cが高い&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://www.ncvc.go.jp/hospital/section/ld/endocrinology/hba1c/">ＨｂＡ1ｃ（ヘモグロビンエーワンシー）ってなに？&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>一方で5年、健康診断を受けなくても血液検査で異常はほぼなかった。うちの一族は祖父、父、私ともにまったく穏やかな生活を送っていないにも関わらずほとんど病気をせず、カラダは頑強にみえる。これであと5年は健康診断を受けなくてもよいという自信をもてた (違&lt;/p>
&lt;h3 id="睡眠時無呼吸症候群-sas">睡眠時無呼吸症候群 (SAS)&lt;/h3>
&lt;p>&lt;a href="/diary/diary/posts/2024/0218/#睡眠時無呼吸症候群の検査キット">睡眠時無呼吸症候群の検査キット&lt;/a> による診断結果が出た。検査当日あまりうまく眠れなかったのでちゃんと測定できなかったんじゃないか？と不安に思っていたんだけど、ちゃんと測定できていたようだ。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0312_sas.jpg"/>
&lt;/figure>
&lt;p>pAHI という数値が5より少ない人が正常、私は64.8という数値で重症のかなり悪い方になるらしい。このままだと死にますというわけではないのだけど、酸素飽和度が正常な人は98-95%あるところが、私は95-60%程度でブレが大きく、それは心臓や肺に負担がかかっているという。この状態でも自覚症状はまったくなく (あまり眠れないのはこのせい？)、日々の業務でも疲れたりしていない。fitbit の睡眠スコアもそれほど悪くない。お医者さんによると、その状態に慣れてしまっているからいますぐ日常生活に支障はないかもしれないけれど、カラダに負担を強いていることは確実であることから、寿命は確実に縮めているのではないかという話しだった。&lt;/p>
&lt;p>肥満はいびきや睡眠時無呼吸症候群の原因の1つではあるけれど、痩せている人でもこれらの症状をもっているケースもある。肥満を解消したからといっていびきや睡眠時無呼吸症候群が治るとは限らないという。この測定結果から CPAP という治療をいますぐした方がよいということになった。酸素マスクのようなものを付けて機械が定期的に空気を送り込む。この治療をしても睡眠時無呼吸症候群が治るわけではない。酸素飽和度が増えることでカラダの負担は減るのだろう。機器はリースで貸してくれて、もう準備も整っていてその機器を持って帰ってきた。今晩から試してみる。睡眠時無呼吸症候群が治らないのは仕方ないとして、これで疲労回復できて代謝がよくなって脂肪燃焼の効率が上がるのであれば取り組む価値はあると思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.jrs.or.jp/citizen/faq/q32.html">Q32 CPAP（シーパップ）とはどのような治療法ですか？&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>セラミックの詰めもの</title><link>/diary/posts/2024/0311/</link><pubDate>Mon, 11 Mar 2024 11:02:47 +0900</pubDate><guid>/diary/posts/2024/0311/</guid><description>2時半に寝て6時半に起きた。fitbit を充電してそのまま付けるのを忘れて寝てしまった。
今日の運動は腹筋ローラー,腕立て,スクワット,縄跳び(両足跳),散歩をした。統計を 運動の記録 にまとめる。
要件一覧と優先順位付けの資料作り 先週の要件洗い出し の続き。要件は一通り洗い出せたのでその優先順位付けをするための資料を作っていた。要件が高度になったり、プロダクトの複雑性があがったりで開発の難易度はこれまでより着実にあがっている。アプリケーションの基本機能であれば要件の詳細を把握していなくても過去の経験則やプラクティスを応用するだけで実装できた。私がレビューしてもしなくても概要の推測はできた。しかし、これからは複雑な要件と既存のシステムの設計もしくは実装との依存関係も考慮して開発していかないといけない。そろそろ私がみれるところと、みれないところはメンバーへ委譲してやっていってもらう段階にきたような気がする。それでも、いまのチームのメンバーならそれなりにうまくやるんじゃないかという期待もある。
歯医者で詰めもの 前回の治療 の続き。17時から歯医者さんで治療。前回の虫歯の治療で削った後に詰めものをする。歯医者さん曰く、もう銀歯はやっていないらしい。たしかにググって記事を読んでみると、銀歯にはデメリットが多いとある。世界的には廃れた手法にみえる。私も虫歯を再発していたのでまさに記事に書いてある通りだった。
銀歯って日本だけ？古い歯の治療跡にしのびよるリスク 代わりの素材として、保険適用外の自由診療となるが、セラミックかゴールドのどちらかを選択するように歯医者さんから促された。歯医者さんはゴールドの方が硬くて安定していて1度入れたら死ぬまで使えるとお奨めしていた。それでも私はなんとなく金歯って奥歯であっても見た目が嫌だなと思ってセラミックを選択した。セラミックでも10-20年はもつらしい。そのぐらいの期間ならまた劣化したときに再度詰め直すのでもよいと思う。セラミックの詰めものの値段は93,500円だった。
詰め物・被せ物の材料はセラミックとゴールドどっちがおすすめ？ 今日は詰めものだけで痛くないと思っていたら、詰める前のいろいろな作業で「しみる」と伝えたら麻酔を打たれて、嫌な予感がしたんだけど、やっぱり一部しか麻酔が効かなくて、一部のところだけすごく痛くて、また麻酔を打ち直したりしながら、ちょこちょこ痛いのに耐えてた。また毒耐性を発揮してしまった。詰めものを終えて治療は完了したので一安心。</description><content>&lt;p>2時半に寝て6時半に起きた。fitbit を充電してそのまま付けるのを忘れて寝てしまった。&lt;/p>
&lt;p>今日の運動は腹筋ローラー,腕立て,スクワット,縄跳び(両足跳),散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="要件一覧と優先順位付けの資料作り">要件一覧と優先順位付けの資料作り&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0307/#4次開発の要件打ち合わせ">先週の要件洗い出し&lt;/a> の続き。要件は一通り洗い出せたのでその優先順位付けをするための資料を作っていた。要件が高度になったり、プロダクトの複雑性があがったりで開発の難易度はこれまでより着実にあがっている。アプリケーションの基本機能であれば要件の詳細を把握していなくても過去の経験則やプラクティスを応用するだけで実装できた。私がレビューしてもしなくても概要の推測はできた。しかし、これからは複雑な要件と既存のシステムの設計もしくは実装との依存関係も考慮して開発していかないといけない。そろそろ私がみれるところと、みれないところはメンバーへ委譲してやっていってもらう段階にきたような気がする。それでも、いまのチームのメンバーならそれなりにうまくやるんじゃないかという期待もある。&lt;/p>
&lt;h2 id="歯医者で詰めもの">歯医者で詰めもの&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0214/#歯医者で治療">前回の治療&lt;/a> の続き。17時から歯医者さんで治療。前回の虫歯の治療で削った後に詰めものをする。歯医者さん曰く、もう銀歯はやっていないらしい。たしかにググって記事を読んでみると、銀歯にはデメリットが多いとある。世界的には廃れた手法にみえる。私も虫歯を再発していたのでまさに記事に書いてある通りだった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.wisteria-dental-office.com/column/%E9%8A%80%E6%AD%AF%E3%81%A3%E3%81%A6%E6%97%A5%E6%9C%AC%E3%81%A0%E3%81%91%EF%BC%9F%E5%8F%A4%E3%81%84%E6%AD%AF%E3%81%AE%E6%B2%BB%E7%99%82%E8%B7%A1%E3%81%AB%E3%81%97%E3%81%AE%E3%81%B3%E3%82%88%E3%82%8B/">銀歯って日本だけ？古い歯の治療跡にしのびよるリスク&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>代わりの素材として、保険適用外の自由診療となるが、セラミックかゴールドのどちらかを選択するように歯医者さんから促された。歯医者さんはゴールドの方が硬くて安定していて1度入れたら死ぬまで使えるとお奨めしていた。それでも私はなんとなく金歯って奥歯であっても見た目が嫌だなと思ってセラミックを選択した。セラミックでも10-20年はもつらしい。そのぐらいの期間ならまた劣化したときに再度詰め直すのでもよいと思う。セラミックの詰めものの値段は93,500円だった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.sakurai-dental.net/blog/2022/05/post-6-805426.html">詰め物・被せ物の材料はセラミックとゴールドどっちがおすすめ？&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>今日は詰めものだけで痛くないと思っていたら、詰める前のいろいろな作業で「しみる」と伝えたら麻酔を打たれて、嫌な予感がしたんだけど、やっぱり一部しか麻酔が効かなくて、一部のところだけすごく痛くて、また麻酔を打ち直したりしながら、ちょこちょこ痛いのに耐えてた。また毒耐性を発揮してしまった。詰めものを終えて治療は完了したので一安心。&lt;/p></content></item><item><title>本業以外のことはやらない宣言</title><link>/diary/posts/2024/0307/</link><pubDate>Thu, 07 Mar 2024 17:12:41 +0900</pubDate><guid>/diary/posts/2024/0307/</guid><description>23時に寝て4時に起きて少し起きていて2度寝して7時に起きた。
今日の運動は腹筋ローラー,腕立て,散歩をした。統計を 運動の記録 にまとめる。
4次開発の要件打ち合わせ 前回の所感 。この打ち合わせは2時間とってがっつりやった。前週に別チームのトップの方と雑談して顧客要件に近い方の要件の洗い出しをしていた。プロダクトに必要な基本的な機能はほとんど作ってしまった。残っているのは高度な機能や、顧客要件への対応、運用上起こり得る厄介な問題への対応、競合製品との差別化になりそうな課題の検討など、チーム全体でいろいろな話題を話せた。打ち合わせそのものにも2時間を割いて、この打ち合わせの議事録を書くのにも2時間ほどかかってしまった。累積疲労でしんどいから普段よりも時間がかかってしまった。合間にメンバーから尋ねられた開発の相談や質問に答えたりしていると、議事録をまとめるだけで業務時間の大半を終えてしまった。残っている課題の内容をまとめるだけでも、背景が複雑だったり機能が難しくなってきたりしていて時間がかかるようになってしまっている。
チームランチ 久しぶりにチームのメンバー3人がオフィスに揃ったのでチームランチしてきた。たまたま前日に五反田周辺を散歩で歩いていて とん清 というとんかつ屋さんをみつけた。とてもよかったのでまた機会をみて行ってみようと思う。
精神的な疲労 ここ数年あまりこういうことを思うことはなかったのだけど、今回の東京出張はプロジェクトを始めて1.5年で最も疲れた。出張の打ち合わせが大変だったわけではなく、開発合宿前から準備で通常業務よりも高い負荷がかかっていたのに加えて、たまたま私がイニシアティブを取らないといけない打ち合わせをたくさん入れてしまったことで資料作りに疲弊した。さらに自社の新しい人間関係が出来つつあってそれ自体は悪いことではないけれど、新しい人間関係を築くところにも時間と集中力を使って普段よりも疲れた。この先1-2ヶ月は本業以外の余分な労力を必要とすることは一切受けないようにしようと思う。今週あるイベントの登壇依頼があったけれど、イベントの趣旨と私の直近のキャリアとあわないことから丁重にお断りした。
いまは物理的にはハードな生活をしているわけではないが、ここ2-3週間で責任を伴う意思決定が多かったせいか、精神的にかなり疲れた。いまはビジネスの土台作りの大事な時期だし、経営判断を誤ると取り返しがつかないことを過去に働いた会社でもよくみてきた。疲れて誤った判断をしないよう、少しペースを落としてゆっくりと進む。</description><content>&lt;p>23時に寝て4時に起きて少し起きていて2度寝して7時に起きた。&lt;/p>
&lt;p>今日の運動は腹筋ローラー,腕立て,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="4次開発の要件打ち合わせ">4次開発の要件打ち合わせ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0921/">前回の所感&lt;/a> 。この打ち合わせは2時間とってがっつりやった。前週に別チームのトップの方と雑談して顧客要件に近い方の要件の洗い出しをしていた。プロダクトに必要な基本的な機能はほとんど作ってしまった。残っているのは高度な機能や、顧客要件への対応、運用上起こり得る厄介な問題への対応、競合製品との差別化になりそうな課題の検討など、チーム全体でいろいろな話題を話せた。打ち合わせそのものにも2時間を割いて、この打ち合わせの議事録を書くのにも2時間ほどかかってしまった。累積疲労でしんどいから普段よりも時間がかかってしまった。合間にメンバーから尋ねられた開発の相談や質問に答えたりしていると、議事録をまとめるだけで業務時間の大半を終えてしまった。残っている課題の内容をまとめるだけでも、背景が複雑だったり機能が難しくなってきたりしていて時間がかかるようになってしまっている。&lt;/p>
&lt;h2 id="チームランチ">チームランチ&lt;/h2>
&lt;p>久しぶりにチームのメンバー3人がオフィスに揃ったのでチームランチしてきた。たまたま前日に五反田周辺を散歩で歩いていて &lt;a href="https://tabelog.com/tokyo/A1316/A131603/13080630/">とん清&lt;/a> というとんかつ屋さんをみつけた。とてもよかったのでまた機会をみて行ってみようと思う。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0307_tonkatsu.jpg"/>
&lt;/figure>
&lt;h2 id="精神的な疲労">精神的な疲労&lt;/h2>
&lt;p>ここ数年あまりこういうことを思うことはなかったのだけど、今回の東京出張はプロジェクトを始めて1.5年で最も疲れた。出張の打ち合わせが大変だったわけではなく、開発合宿前から準備で通常業務よりも高い負荷がかかっていたのに加えて、たまたま私がイニシアティブを取らないといけない打ち合わせをたくさん入れてしまったことで資料作りに疲弊した。さらに自社の新しい人間関係が出来つつあってそれ自体は悪いことではないけれど、新しい人間関係を築くところにも時間と集中力を使って普段よりも疲れた。この先1-2ヶ月は本業以外の余分な労力を必要とすることは一切受けないようにしようと思う。今週あるイベントの登壇依頼があったけれど、イベントの趣旨と私の直近のキャリアとあわないことから丁重にお断りした。&lt;/p>
&lt;p>いまは物理的にはハードな生活をしているわけではないが、ここ2-3週間で責任を伴う意思決定が多かったせいか、精神的にかなり疲れた。いまはビジネスの土台作りの大事な時期だし、経営判断を誤ると取り返しがつかないことを過去に働いた会社でもよくみてきた。疲れて誤った判断をしないよう、少しペースを落としてゆっくりと進む。&lt;/p></content></item><item><title>提案の説得力</title><link>/diary/posts/2024/0306/</link><pubDate>Wed, 06 Mar 2024 09:25:07 +0900</pubDate><guid>/diary/posts/2024/0306/</guid><description>21時半から寝始めて何度か起きながら6時に起きた。昨日は雨降り、且つ移動疲れでしんどくてたくさん寝ることにした。
今日の運動はスクワット,散歩をした。統計を 運動の記録 にまとめる。
会議の準備 6時に起きてシャワーを浴びてから今日の打ち合わせの資料作り。ある程度は作ってあったものの、最終チェックしながら修正していく。9時前まで資料作りをしてオフィスへ出掛けた。
プロジェクトの進捗報告 出張したときの月例報告の14回目。前回の進捗報告はこちら 。
今回は3次開発を無事完了させたこと、昨日の 大きなふりかえり からみえることの、経営陣向けの私なりの見解や視点を報告していた。プロジェクトの状況について報告した後は、私の気付きや視点の共有、チームの新たな取り組みとしてテックブログを読む会の狙い、今後の予定などを共有した。少し前からメンバーの指導や育成についても経営陣へ向けて私の考えを述べるようになった。その1つとして運用と開発の兼任は不可能だと明確に提案した。その結果、新規メンバーのお手伝い先の組織体制や業務の分担なども大きく変更されて、新規メンバーがフルタイムで開発に参加できるようになった。私は組織を変更したり他業務を見直すことはできないため、これには経営陣の協力が不可欠となる。プロダクト開発はチーム開発をしながら適正な実績を示しつつあるので、私の意見も説得力をもって伝わるようになっていると推測する。そして、私自身も独り善がりや見当違いの施策に陥らないよう、月例のタイミングで私の気付きや考えを経営陣と共有するようにしている。どんな状況であっても、私の目的はプロダクト開発を成功させること、そのために必要なことは何でもやる。自身の保身も見栄もなにもないから自然体で共有している。そうしているうちに、私の雑談から組織も変えていくような話題へ発展したりもしている。
開発完了後の社内向け報告とデモ いつも開発のイテレーションを完了したタイミングでお手伝い先の全社員向けに新機能の紹介やデモをしている。他チームと連携したり営業さんに向けにプロダクトの現状がどのようなものかを知ってもらうことをこのイベントの目的としている。どんな新機能があるのか、何が出来るのかを社内に伝えないと、チーム外の社員さんがお客さんと話すときに話題にもならない。多くのケースで質問がくるのは開発者からの技術的なものではあるけれど、コンサルや営業さんからお客さんの要件にあうかといった質問も歓迎している。今回は新たに作った一般ユーザー向けの画面の UI や機能などを紹介した。</description><content>&lt;p>21時半から寝始めて何度か起きながら6時に起きた。昨日は雨降り、且つ移動疲れでしんどくてたくさん寝ることにした。&lt;/p>
&lt;p>今日の運動はスクワット,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="会議の準備">会議の準備&lt;/h2>
&lt;p>6時に起きてシャワーを浴びてから今日の打ち合わせの資料作り。ある程度は作ってあったものの、最終チェックしながら修正していく。9時前まで資料作りをしてオフィスへ出掛けた。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の14回目。&lt;a href="/diary/diary/posts/2024/0207/">前回の進捗報告はこちら&lt;/a> 。&lt;/p>
&lt;p>今回は3次開発を無事完了させたこと、昨日の &lt;a href="/diary/diary/posts/2024/0305/#3次開発の大きなふりかえり">大きなふりかえり&lt;/a> からみえることの、経営陣向けの私なりの見解や視点を報告していた。プロジェクトの状況について報告した後は、私の気付きや視点の共有、チームの新たな取り組みとしてテックブログを読む会の狙い、今後の予定などを共有した。少し前からメンバーの指導や育成についても経営陣へ向けて私の考えを述べるようになった。その1つとして運用と開発の兼任は不可能だと明確に提案した。その結果、新規メンバーのお手伝い先の組織体制や業務の分担なども大きく変更されて、新規メンバーがフルタイムで開発に参加できるようになった。私は組織を変更したり他業務を見直すことはできないため、これには経営陣の協力が不可欠となる。プロダクト開発はチーム開発をしながら適正な実績を示しつつあるので、私の意見も説得力をもって伝わるようになっていると推測する。そして、私自身も独り善がりや見当違いの施策に陥らないよう、月例のタイミングで私の気付きや考えを経営陣と共有するようにしている。どんな状況であっても、私の目的はプロダクト開発を成功させること、そのために必要なことは何でもやる。自身の保身も見栄もなにもないから自然体で共有している。そうしているうちに、私の雑談から組織も変えていくような話題へ発展したりもしている。&lt;/p>
&lt;h2 id="開発完了後の社内向け報告とデモ">開発完了後の社内向け報告とデモ&lt;/h2>
&lt;p>いつも開発のイテレーションを完了したタイミングでお手伝い先の全社員向けに新機能の紹介やデモをしている。他チームと連携したり営業さんに向けにプロダクトの現状がどのようなものかを知ってもらうことをこのイベントの目的としている。どんな新機能があるのか、何が出来るのかを社内に伝えないと、チーム外の社員さんがお客さんと話すときに話題にもならない。多くのケースで質問がくるのは開発者からの技術的なものではあるけれど、コンサルや営業さんからお客さんの要件にあうかといった質問も歓迎している。今回は新たに作った一般ユーザー向けの画面の UI や機能などを紹介した。&lt;/p></content></item><item><title>よい開発文化をもつチーム</title><link>/diary/posts/2024/0305/</link><pubDate>Tue, 05 Mar 2024 09:25:05 +0900</pubDate><guid>/diary/posts/2024/0305/</guid><description>今回は寝台列車であまり寝付けなかったのか、fitbit に睡眠時間が記録されていなかった。おそらく2-3時間は寝たと思う。
今日の運動は合宿明けと移動疲れがあるのでお休みにした。統計を 運動の記録 にまとめる。
会議の準備 この3日間で私が主催の打ち合わせが5つある。主題だからそのすべてに私が資料を作らないといけない。もちろん先週から準備はしていたものの、完全ではなく、週末には城崎温泉でいっぱいいぱいになっていて余裕がない状態のまま出張になってしまった。打ち合わせの成否はそれまでにかけた準備時間に比例する。私の持論だ。最低限このぐらいの資料や段取りを組んでやらないといけないという私なりの基準がある。今回はぎりぎりまで資料を作ったり、打ち合わせ内容を練ったりして自身の基準すら満たすのにとてもしんどかった。
定例会議 いつものマイルストーン単位の定例会議。
特定の path 配下の web api にミドルウェアで認証や認可を適用している。こうしておけば認証しなければいけない web api の認証設定を実装し忘れるということが絶対に起きない。一方で未認証の web api もある。/auth/login や /status/ping といったものだ。これらは未認証で呼び出せるのでトップレベルの path をわけたい。そうすると、既存のトップレベルに設定してある /api/xxx という名前が論理的におかしい。web api は他にもあるのに認証を要するものだけ api というトップレベルの path を付けるのは奇妙に思えてくる。
/api/ping チームで話し合ったり、私が思いついた最終結論としては1文字の path を設けることにした。ミドルウェアを適用したいという目的なので path さえあればよい。認証を要することを表す単語をつけると path が長くなってそれはそれで違和感を感じるし、開発者はタイプ量が増えることを嫌う。そこで一文字にしようと提案した。
/p/ping permit, private, protected の意図で p という文字を使う。
3次開発の大きなふりかえり 事前に資料を作っておいた 開発の大きなふりかえり。2時間を使ってふりかえりを行う。前回の大きなふりかえり を経て、今回も若手のメンバーが大きく成長してくれて、その成長度合いが課題管理システムの統計からみてとれた。私がプロダクト開発に参加してチームを組んで1.5年経った。初期からのメンバー2人はどちらも十分に課題管理をうまくできるようになった。その結果、チームがよい開発文化を形成するようになった。
今回は新たに入りかけた若いメンバーはうまく立ち上がらなかったという反省があるだけで、その他のことについては開発全般うまくいっているし、プロダクトの品質も上がっているし、バックログの課題もたくさん自分たちで見つけられるようになってきた。私からみてもこのチームは十分によい開発チームに育ったと思う。マネージャーとしての私にとっての次の課題は途中からチームに参加するメンバーをいかに早く開発に馴染んでもらうか、よい開発文化を形成するようになってもらうかという取り組みになる。
スライドのあちこちに次の文言を埋め込んである。
ふりかえりなくして成長 (改善) なし
初期から課題管理に取り組んでいる2人のメンバーはどちらも成長が著しいし、ふりかえりの効果を実際の業務で体感してもらえていると思う。私自身も初めてのマネージャー経験、初めての課題管理をプロジェクトマネジメントとして導入するという経験、それらの PoC としての答えは出たと思う。間違いなく、課題管理は開発プロジェクトをよりよくするものだし、適切に課題管理すればプロダクトの品質も高くなっていく。今回のふりかえりは課題管理をビジネスにすることへの確信につながった。</description><content>&lt;p>今回は寝台列車であまり寝付けなかったのか、fitbit に睡眠時間が記録されていなかった。おそらく2-3時間は寝たと思う。&lt;/p>
&lt;p>今日の運動は合宿明けと移動疲れがあるのでお休みにした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="会議の準備">会議の準備&lt;/h2>
&lt;p>この3日間で私が主催の打ち合わせが5つある。主題だからそのすべてに私が資料を作らないといけない。もちろん先週から準備はしていたものの、完全ではなく、週末には城崎温泉でいっぱいいぱいになっていて余裕がない状態のまま出張になってしまった。打ち合わせの成否はそれまでにかけた準備時間に比例する。私の持論だ。最低限このぐらいの資料や段取りを組んでやらないといけないという私なりの基準がある。今回はぎりぎりまで資料を作ったり、打ち合わせ内容を練ったりして自身の基準すら満たすのにとてもしんどかった。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>いつものマイルストーン単位の定例会議。&lt;/p>
&lt;p>特定の path 配下の web api にミドルウェアで認証や認可を適用している。こうしておけば認証しなければいけない web api の認証設定を実装し忘れるということが絶対に起きない。一方で未認証の web api もある。&lt;code>/auth/login&lt;/code> や &lt;code>/status/ping&lt;/code> といったものだ。これらは未認証で呼び出せるのでトップレベルの path をわけたい。そうすると、既存のトップレベルに設定してある &lt;code>/api/xxx&lt;/code> という名前が論理的におかしい。web api は他にもあるのに認証を要するものだけ &lt;code>api&lt;/code> というトップレベルの path を付けるのは奇妙に思えてくる。&lt;/p>
&lt;pre tabindex="0">&lt;code>/api/ping
&lt;/code>&lt;/pre>&lt;p>チームで話し合ったり、私が思いついた最終結論としては1文字の path を設けることにした。ミドルウェアを適用したいという目的なので path さえあればよい。認証を要することを表す単語をつけると path が長くなってそれはそれで違和感を感じるし、開発者はタイプ量が増えることを嫌う。そこで一文字にしようと提案した。&lt;/p>
&lt;pre tabindex="0">&lt;code>/p/ping
&lt;/code>&lt;/pre>&lt;p>permit, private, protected の意図で &lt;code>p&lt;/code> という文字を使う。&lt;/p>
&lt;h2 id="3次開発の大きなふりかえり">3次開発の大きなふりかえり&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0229/#3次開発のふりかえり資料作り">事前に資料を作っておいた&lt;/a> 開発の大きなふりかえり。2時間を使ってふりかえりを行う。&lt;a href="/diary/diary/posts/2023/0919/">前回の大きなふりかえり&lt;/a> を経て、今回も若手のメンバーが大きく成長してくれて、その成長度合いが課題管理システムの統計からみてとれた。私がプロダクト開発に参加してチームを組んで1.5年経った。初期からのメンバー2人はどちらも十分に課題管理をうまくできるようになった。その結果、チームがよい開発文化を形成するようになった。&lt;/p>
&lt;p>今回は新たに入りかけた若いメンバーはうまく立ち上がらなかったという反省があるだけで、その他のことについては開発全般うまくいっているし、プロダクトの品質も上がっているし、バックログの課題もたくさん自分たちで見つけられるようになってきた。私からみてもこのチームは十分によい開発チームに育ったと思う。マネージャーとしての私にとっての次の課題は途中からチームに参加するメンバーをいかに早く開発に馴染んでもらうか、よい開発文化を形成するようになってもらうかという取り組みになる。&lt;/p>
&lt;p>スライドのあちこちに次の文言を埋め込んである。&lt;/p>
&lt;blockquote>
&lt;p>ふりかえりなくして成長 (改善) なし&lt;/p>
&lt;/blockquote>
&lt;p>初期から課題管理に取り組んでいる2人のメンバーはどちらも成長が著しいし、ふりかえりの効果を実際の業務で体感してもらえていると思う。私自身も初めてのマネージャー経験、初めての課題管理をプロジェクトマネジメントとして導入するという経験、それらの &lt;a href="https://ja.wikipedia.org/wiki/%E6%A6%82%E5%BF%B5%E5%AE%9F%E8%A8%BC">PoC&lt;/a> としての答えは出たと思う。間違いなく、課題管理は開発プロジェクトをよりよくするものだし、適切に課題管理すればプロダクトの品質も高くなっていく。今回のふりかえりは課題管理をビジネスにすることへの確信につながった。&lt;/p></content></item><item><title>3次開発の終わりと指導</title><link>/diary/posts/2024/0220/</link><pubDate>Tue, 20 Feb 2024 19:13:07 +0900</pubDate><guid>/diary/posts/2024/0220/</guid><description>2時前に寝て6時半過ぎに起きた。4時間半も眠れたって感じ。今日も雨降りで外に出れなかった。
今日の運動は腕立てとスクワットをした。統計を 運動の記録 にまとめる。
3次開発の完了 3.5ヶ月を機能開発、QA テストを1ヶ月やって3次開発を完了した。新人の受け入れ失敗、2週間の開発遅れといった失敗もあったが、計画を補正して概ね予定調和で完了することができた。よかったところは最初から一緒にやっているメンバーの成長が大きく、私がプロジェクトを去っても彼らだけでプロジェクトを運営していく見通しをもてるようになってきた。お手伝い先の要望次第だが、次の開発フェーズを終えたら私がマネージャーを務めるのを終えてもよいかもしれない。
開発が無事に完了してよかったねという話しとは別に、3ヶ月前に合流した新しいメンバーへはやや厳しく指導した。QA テストをメンバーみんなで役割分担し、そのメンバーには相対的に簡単なタスクを1ヶ月という期間で与えていたにも関わらず、期日になっても4つある issue のうち、1つも完了させていないという体たらくぶりだった。先週の水曜日に 1on1 して4つのうちの2つだけは必ず完了させてほしいと依頼し、本人も了承していた。もっと言えば、1週間もあれば十分にできる程度のタスクでしかない。にも関わらず、期日に完了していないということに「なぜ出来なかったのか？どうすれば完了できたか？」という議題を提起した。
会議が始まる前にプロジェクトオーナーへも今日は厳し目に指導するからメンバーが落ち込むかもしれないので、そのときはフォローしてくださいと伝えておいた。いまの若い人はストレス耐性がないからちょっと厳しく指摘をすると落ち込むことも推測できた。実際に厳しい指摘をしてみて、私自身も相手がショックを受け過ぎないように言葉を選んだり、できるだけ仕組みをもって改善していくという姿勢で議論を進めた。そういった人間関係の配慮そのものがとても疲れることにも気付いた。昔は上司がボロクソにダメ出しできたのは楽だったんだろうなとも思えた。
リリース作業とインストールテストと手戻り 開発と QA テストを完了したのでコンテナイメージやパッケージをリリースする。実際にインストールテストをやりながらインストールドキュメントも修正していく。これがなかなか大変なことに気付いた。機能が増えたり、仕様が変わったりしたところを1つ1つチェックしていく必要があって、個々の変更は軽微でもそれがいくつも数が多くなると覚えてなくて見逃してしまったりもする。そのことに気付いたら修正は容易だが、インストールテストをやっていて気付いたらパッケージングをやり直すこともいくつか出てくる。新機能追加や仕様変更とドキュメント／パッケージングをつなげるための仕組みがいまない。それも考えていかないといけない。</description><content>&lt;p>2時前に寝て6時半過ぎに起きた。4時間半も眠れたって感じ。今日も雨降りで外に出れなかった。&lt;/p>
&lt;p>今日の運動は腕立てとスクワットをした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="3次開発の完了">3次開発の完了&lt;/h2>
&lt;p>3.5ヶ月を機能開発、QA テストを1ヶ月やって3次開発を完了した。新人の受け入れ失敗、2週間の開発遅れといった失敗もあったが、計画を補正して概ね予定調和で完了することができた。よかったところは最初から一緒にやっているメンバーの成長が大きく、私がプロジェクトを去っても彼らだけでプロジェクトを運営していく見通しをもてるようになってきた。お手伝い先の要望次第だが、次の開発フェーズを終えたら私がマネージャーを務めるのを終えてもよいかもしれない。&lt;/p>
&lt;p>開発が無事に完了してよかったねという話しとは別に、3ヶ月前に合流した新しいメンバーへはやや厳しく指導した。QA テストをメンバーみんなで役割分担し、そのメンバーには相対的に簡単なタスクを1ヶ月という期間で与えていたにも関わらず、期日になっても4つある issue のうち、1つも完了させていないという体たらくぶりだった。先週の水曜日に 1on1 して4つのうちの2つだけは必ず完了させてほしいと依頼し、本人も了承していた。もっと言えば、1週間もあれば十分にできる程度のタスクでしかない。にも関わらず、期日に完了していないということに「なぜ出来なかったのか？どうすれば完了できたか？」という議題を提起した。&lt;/p>
&lt;p>会議が始まる前にプロジェクトオーナーへも今日は厳し目に指導するからメンバーが落ち込むかもしれないので、そのときはフォローしてくださいと伝えておいた。いまの若い人はストレス耐性がないからちょっと厳しく指摘をすると落ち込むことも推測できた。実際に厳しい指摘をしてみて、私自身も相手がショックを受け過ぎないように言葉を選んだり、できるだけ仕組みをもって改善していくという姿勢で議論を進めた。そういった人間関係の配慮そのものがとても疲れることにも気付いた。昔は上司がボロクソにダメ出しできたのは楽だったんだろうなとも思えた。&lt;/p>
&lt;h2 id="リリース作業とインストールテストと手戻り">リリース作業とインストールテストと手戻り&lt;/h2>
&lt;p>開発と QA テストを完了したのでコンテナイメージやパッケージをリリースする。実際にインストールテストをやりながらインストールドキュメントも修正していく。これがなかなか大変なことに気付いた。機能が増えたり、仕様が変わったりしたところを1つ1つチェックしていく必要があって、個々の変更は軽微でもそれがいくつも数が多くなると覚えてなくて見逃してしまったりもする。そのことに気付いたら修正は容易だが、インストールテストをやっていて気付いたらパッケージングをやり直すこともいくつか出てくる。新機能追加や仕様変更とドキュメント／パッケージングをつなげるための仕組みがいまない。それも考えていかないといけない。&lt;/p></content></item><item><title>テストと個人の気付き = issue</title><link>/diary/posts/2024/0209/</link><pubDate>Fri, 09 Feb 2024 07:04:14 +0900</pubDate><guid>/diary/posts/2024/0209/</guid><description>0時半に寝て4時に起きて5時過ぎに起きた。起きてからなにをしていたかあまり覚えてないが、気付いたら7時になってた。
今日の運動はレッグレイズ(椅子),腕立て,スクワット,背筋,散歩をした。統計を 運動の記録 にまとめる。
QA テスト これまでは QA 期間中はメンバーに QA テストをお願いして、私は他のことをやっていることが多かった。今回は私も QA テストをやってみて、テストケースの内容の確認やテストをやってみての自分の感覚や所感などをみてみようと、泥臭くテストをコツコツやっている。テストをしていると、いろいろ気付くことがあって、メンバーにヒアリングしたり、issue 登録したり、なかなか思うようにはテストケースを消化できない。QA テストは担当者が重複してもよい。それは人によって視点が異なるから同じテストやっても異なる気付きがあったりする。今回の私はまさにそれで、私なりの気付きを issue 登録している。
同じことをやってもどれだけ issue 登録できるか、これが課題管理において大きな違いになる。アリエル時代でもテスターは issue 登録してなんぼなので本当に細かいことでも気付いたら issue 登録してくる。いくつかは invalid や duplicate で閉じるのだけど、そういう多くの issue の中から開発者も気付きを得ることもある。
街の歩き方 昨日と同じように、今日もホテルに戻ってきて筋トレしてから散歩に出掛ける。大きな公園や神社とかだと散歩しがいがあって楽しいけれど、大崎のような街中にはなさそう。それであちこち歩いていて気付いたのだけど、不動産会社の大きなビルの周りには公園ではないけれど、遊歩道のようなコースがいくつか設けられている。その道をぐるっとひと回りするのが楽しい。今日は 住友不動産大崎ガーデンタワー の周りの遊歩道をぐるっとまわってきた。
かがみの孤城 たまたまテレビをつけたら金曜ロードショーで かがみの孤城 をやっていた。みてたらおもしろかったらそのまま最後までみてしまった。鏡の世界に招かれた7人がリアルで会えないところは、なんとなくそうじゃないかと私が予想していたことがそのまま当たってた。誤った推理で並行世界じゃないかという問いかけが出てくる。その並行世界の概念図が私の解釈とは違っていて、その説明はこの物語の真相かどうかに関係なく、並行世界の概念とも違うんじゃないかと一人ツッコミしていた。d アニメストアならみていなかったかもしれないけど、テレビならストレッチしながらついついみてしまった。そういう視点ではテレビの価値は大きいのかもとも思えた。</description><content>&lt;p>0時半に寝て4時に起きて5時過ぎに起きた。起きてからなにをしていたかあまり覚えてないが、気付いたら7時になってた。&lt;/p>
&lt;p>今日の運動はレッグレイズ(椅子),腕立て,スクワット,背筋,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="qa-テスト">QA テスト&lt;/h2>
&lt;p>これまでは QA 期間中はメンバーに QA テストをお願いして、私は他のことをやっていることが多かった。今回は私も QA テストをやってみて、テストケースの内容の確認やテストをやってみての自分の感覚や所感などをみてみようと、泥臭くテストをコツコツやっている。テストをしていると、いろいろ気付くことがあって、メンバーにヒアリングしたり、issue 登録したり、なかなか思うようにはテストケースを消化できない。QA テストは担当者が重複してもよい。それは人によって視点が異なるから同じテストやっても異なる気付きがあったりする。今回の私はまさにそれで、私なりの気付きを issue 登録している。&lt;/p>
&lt;p>同じことをやってもどれだけ issue 登録できるか、これが課題管理において大きな違いになる。アリエル時代でもテスターは issue 登録してなんぼなので本当に細かいことでも気付いたら issue 登録してくる。いくつかは invalid や duplicate で閉じるのだけど、そういう多くの issue の中から開発者も気付きを得ることもある。&lt;/p>
&lt;h2 id="街の歩き方">街の歩き方&lt;/h2>
&lt;p>昨日と同じように、今日もホテルに戻ってきて筋トレしてから散歩に出掛ける。大きな公園や神社とかだと散歩しがいがあって楽しいけれど、大崎のような街中にはなさそう。それであちこち歩いていて気付いたのだけど、不動産会社の大きなビルの周りには公園ではないけれど、遊歩道のようなコースがいくつか設けられている。その道をぐるっとひと回りするのが楽しい。今日は &lt;a href="https://office-b.sumitomo-rd.co.jp/osaki/floor.html">住友不動産大崎ガーデンタワー&lt;/a> の周りの遊歩道をぐるっとまわってきた。&lt;/p>
&lt;h2 id="かがみの孤城">かがみの孤城&lt;/h2>
&lt;p>たまたまテレビをつけたら金曜ロードショーで &lt;a href="https://movies.shochiku.co.jp/kagaminokojo/">かがみの孤城&lt;/a> をやっていた。みてたらおもしろかったらそのまま最後までみてしまった。鏡の世界に招かれた7人がリアルで会えないところは、なんとなくそうじゃないかと私が予想していたことがそのまま当たってた。誤った推理で並行世界じゃないかという問いかけが出てくる。その並行世界の概念図が私の解釈とは違っていて、その説明はこの物語の真相かどうかに関係なく、並行世界の概念とも違うんじゃないかと一人ツッコミしていた。d アニメストアならみていなかったかもしれないけど、テレビならストレッチしながらついついみてしまった。そういう視点ではテレビの価値は大きいのかもとも思えた。&lt;/p></content></item><item><title>昼も夜も課題管理の話ばかり</title><link>/diary/posts/2024/0207/</link><pubDate>Wed, 07 Feb 2024 09:54:23 +0900</pubDate><guid>/diary/posts/2024/0207/</guid><description>昨日はホテルへ戻って19時に寝て21時過ぎに起きて、23時頃に晩ご飯を食べて、1時に寝て6時半に起きた。
今日の運動は腕立て,スクワット,背筋,散歩をした。統計を 運動の記録 にまとめる。
プロジェクトの進捗報告 出張したときの月例報告の13回目。前回の進捗報告はこちら 。
開発はいま QA テスト期間であと2週間で今フェーズの開発を終える。今回は2週間遅延したけれど、あるメンバーにとってその分の成長も垣間見えたので中長期でみればこの遅延はよいものだったと思うといったことを上申した。優先度の高い要件は満たした上でメンバーの成長を実感したり、プロダクトの品質も上がってきている。私からみて十分に課題管理をうまくこなすチームになってきた。1年以上かかったけれど、よい開発文化をもつチームに成長したと思う。
今フェーズの唯一のよくなかったところとして新規メンバーの受け入れに失敗した。2週間の遅延もそこに起因するものではある。受け入れに失敗した背景や私の所感、今後の対応についていくつかお手伝い先の経営陣とも話し合いをした。開発とは結局のところ、人の問題になってしまう。それはスキルや生産性の個人差が大き過ぎるから。人に向かい合ってその人の価値観や行動を変革して、よりよい開発文化を根付かせていくことがチーム開発には重要。それは一朝一夕ではできなくて、半年とか1年とかそのぐらいの時間がかかる。
お手伝い先の経営陣も私が取り組んでいる課題管理の価値を認めてくれつつあって、開発方法論の手法を学んだことがないというのが最も大きいところだろう。よい開発文化をもつ組織で働いたことがあれば自然に身に付くが、知らない人はまったく知らなくて徒手空拳で戦車と対峙しているようなものになる。課題管理でよい開発文化をつくるという私の PoC はほぼ検証できたと言っていいかもしれない。
筋肉食堂へ行ってみた MIYASHITA PARK に RAYARD というショッピングモールとレストランが合体したような大きな複合施設が出来てた。昔はただの公園だったと思うのだけど、いつの間にか再開発されたらしい。水曜日の夜で外も寒いせいか、施設が大きくて広い割にお客さんはまばらで閑散とした雰囲気だった。それはそれで人混みがなくて私にとっては心地よくはあるけど、施設の真新しさに比べて寂しい感じはした。
RAYARD にある 筋肉食堂 でお仕事のお願いも兼ねて知人と晩ご飯を食べてきた。たまたま渋谷でどこかお店を探していて、いま筋トレしているからちょうどよいんじゃないかと思って店名からエイヤで決めた。接待でもあるので和牛フィレ肉ステーキコースを頼んでみた。ちょっと高めの価格帯だから接待にも使えるのかな？と期待しつつ行ったのだけど、高タンパク低脂肪なメニューがいくつか提供されて、料理自体はおいしかったし、ヘルシーなら言うこともないのだけど、コンセプト的に量は提供されないし、料理の品数も少なかったのでディナーという視点からこのコースのみでは物足りなさもあった。コース料理を食べ終えてからもう1軒行きましょうとそそくさと退出した。本当の意味でトレーニングやっている人たちがご褒美のような晩ご飯を食べにいくところかもしれない。
まん丸のボールみたいなハンバーグが私は一番おいしかった。中心はレアになっていてその食感も楽しめた。これは私の好み。メインの和牛フィレ肉ももちろんおいしかったのだけど、私はもともと牛肉ステーキをそれほど好きでもないのでハンバーグで十分満足できることにも気付いた。
うしとらスタンドで飲んできた 筋肉食堂は RAYARD の SOUTH エリアにあり、同じフロアの NORTH エリアに うしとらSTAND があった。会食前に付近散策で歩いていてたまたま発見した。別店舗のうしとらに何度か行ったことあるのでこんなところにもあるんだと懐かしく思うところもあって2軒目はここに決めた。筋肉食堂でヘルシーな料理を食べて、結局ここでポテサラと餃子とナッツといった、ややジャンクな食べものとクラフトビールを飲んでヘルシーな食事をおじゃんにした。しかし、接待という意味では気張らず、こういうところで飲み食いして雑談するというのもとてもよかった。さすがうしとらさんだ。
おいしいなりんご という名前の、柑橘系ビールがあまり飲んだことのない風味で、おいしかったというよりはモノ珍しかった。なんかいつもとは違うモノを飲んで非日常感を味わうことができて満足した。</description><content>&lt;p>昨日はホテルへ戻って19時に寝て21時過ぎに起きて、23時頃に晩ご飯を食べて、1時に寝て6時半に起きた。&lt;/p>
&lt;p>今日の運動は腕立て,スクワット,背筋,散歩をした。統計を &lt;a href="https://docs.google.com/spreadsheets/d/1bg85QtM-LciUgey8I79uI7vW2PEwsP6TVdeIRVkACBg/edit?usp=sharing">運動の記録&lt;/a> にまとめる。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の13回目。&lt;a href="/diary/diary/posts/2023/1129/">前回の進捗報告はこちら&lt;/a> 。&lt;/p>
&lt;p>開発はいま QA テスト期間であと2週間で今フェーズの開発を終える。今回は2週間遅延したけれど、あるメンバーにとってその分の成長も垣間見えたので中長期でみればこの遅延はよいものだったと思うといったことを上申した。優先度の高い要件は満たした上でメンバーの成長を実感したり、プロダクトの品質も上がってきている。私からみて十分に課題管理をうまくこなすチームになってきた。1年以上かかったけれど、よい開発文化をもつチームに成長したと思う。&lt;/p>
&lt;p>今フェーズの唯一のよくなかったところとして新規メンバーの受け入れに失敗した。2週間の遅延もそこに起因するものではある。受け入れに失敗した背景や私の所感、今後の対応についていくつかお手伝い先の経営陣とも話し合いをした。開発とは結局のところ、人の問題になってしまう。それはスキルや生産性の個人差が大き過ぎるから。人に向かい合ってその人の価値観や行動を変革して、よりよい開発文化を根付かせていくことがチーム開発には重要。それは一朝一夕ではできなくて、半年とか1年とかそのぐらいの時間がかかる。&lt;/p>
&lt;p>お手伝い先の経営陣も私が取り組んでいる課題管理の価値を認めてくれつつあって、開発方法論の手法を学んだことがないというのが最も大きいところだろう。よい開発文化をもつ組織で働いたことがあれば自然に身に付くが、知らない人はまったく知らなくて徒手空拳で戦車と対峙しているようなものになる。課題管理でよい開発文化をつくるという私の PoC はほぼ検証できたと言っていいかもしれない。&lt;/p>
&lt;h2 id="筋肉食堂へ行ってみた">筋肉食堂へ行ってみた&lt;/h2>
&lt;p>&lt;a href="https://www.miyashita-park.tokyo/">MIYASHITA PARK&lt;/a> に RAYARD というショッピングモールとレストランが合体したような大きな複合施設が出来てた。昔はただの公園だったと思うのだけど、いつの間にか再開発されたらしい。水曜日の夜で外も寒いせいか、施設が大きくて広い割にお客さんはまばらで閑散とした雰囲気だった。それはそれで人混みがなくて私にとっては心地よくはあるけど、施設の真新しさに比べて寂しい感じはした。&lt;/p>
&lt;p>RAYARD にある &lt;a href="https://kinnikushokudo.jp/">筋肉食堂&lt;/a> でお仕事のお願いも兼ねて知人と晩ご飯を食べてきた。たまたま渋谷でどこかお店を探していて、いま筋トレしているからちょうどよいんじゃないかと思って店名からエイヤで決めた。接待でもあるので和牛フィレ肉ステーキコースを頼んでみた。ちょっと高めの価格帯だから接待にも使えるのかな？と期待しつつ行ったのだけど、高タンパク低脂肪なメニューがいくつか提供されて、料理自体はおいしかったし、ヘルシーなら言うこともないのだけど、コンセプト的に量は提供されないし、料理の品数も少なかったのでディナーという視点からこのコースのみでは物足りなさもあった。コース料理を食べ終えてからもう1軒行きましょうとそそくさと退出した。本当の意味でトレーニングやっている人たちがご褒美のような晩ご飯を食べにいくところかもしれない。&lt;/p>
&lt;p>まん丸のボールみたいなハンバーグが私は一番おいしかった。中心はレアになっていてその食感も楽しめた。これは私の好み。メインの和牛フィレ肉ももちろんおいしかったのだけど、私はもともと牛肉ステーキをそれほど好きでもないのでハンバーグで十分満足できることにも気付いた。&lt;/p>
&lt;p>&lt;figure>&lt;img src="/diary/diary/img/2024/0207_meat1.jpg"/>
&lt;/figure>
&lt;figure>&lt;img src="/diary/diary/img/2024/0207_meat2.jpg"/>
&lt;/figure>
&lt;/p>
&lt;h2 id="うしとらスタンドで飲んできた">うしとらスタンドで飲んできた&lt;/h2>
&lt;p>筋肉食堂は RAYARD の SOUTH エリアにあり、同じフロアの NORTH エリアに &lt;a href="https://tabelog.com/tokyo/A1303/A130301/13249674/">うしとらSTAND&lt;/a> があった。会食前に付近散策で歩いていてたまたま発見した。別店舗のうしとらに何度か行ったことあるのでこんなところにもあるんだと懐かしく思うところもあって2軒目はここに決めた。筋肉食堂でヘルシーな料理を食べて、結局ここでポテサラと餃子とナッツといった、ややジャンクな食べものとクラフトビールを飲んでヘルシーな食事をおじゃんにした。しかし、接待という意味では気張らず、こういうところで飲み食いして雑談するというのもとてもよかった。さすがうしとらさんだ。&lt;/p>
&lt;p>&lt;a href="https://my-beers.com/beers/22250">おいしいなりんご&lt;/a> という名前の、柑橘系ビールがあまり飲んだことのない風味で、おいしかったというよりはモノ珍しかった。なんかいつもとは違うモノを飲んで非日常感を味わうことができて満足した。&lt;/p></content></item><item><title>言語化能力と仕事のパフォーマンス</title><link>/diary/posts/2024/0201/</link><pubDate>Thu, 01 Feb 2024 10:43:51 +0900</pubDate><guid>/diary/posts/2024/0201/</guid><description>1時に寝て5時前に起きて6時半に起きた。起きてからホットクックで玄米を炊いてみた。2合で40分前後といったところ。
今日の筋トレは腕立て:20x1,スクワット:20x1,背筋:10x2をした。
社内版テックブログを読む会の2回目 新しい取り組みの2回目。前回の所感はここ 。淡々と始めて淡々と終えた。これはそういうイベント。一方でマネージャーの視点からメンバーの取り組みをみていて1つ気付いたことがある。読解力、文章力、言語化力に個人差がある。そんなことは当たり前だが、たまたま最近ある動画をみた。8分20秒ぐらいからみてほしい。
この先輩が後輩に指導している中で日経新聞を題材に、情報処理能力を鍛えることの重要性を説明している。言語化能力を鍛えるために新聞を読む、映画をみる、日記も書く、文章能力を上げなさいと指導している。本当にこの通り。私が働いてきた組織では開発者で半分ぐらいの人しか文章を書けず、ビジネスの人に限ってはもっと多くの割合の人たちが書けない。そして若い人よりも年配の人たちの方ができない割合が多かった。それではビジネスで勝てないよという話し。テックブログを読む会はこの視点からも言語化能力を養うよい練習になるように思えた。
野菜スープのレシピ改改 先日つくった野菜スープ のさらなる改善。前回のレシピをさらにアレンジして今日のレシピはこれ。
にんじん x 1 新玉ねぎ x 1 かぼちゃ 1/4切れ ミディアムトマト x 8 セロリ x 1 の葉っぱ部分 しめじ 1袋 えのき 1袋 鶏肉 ローリエ 1枚 塩コショウ 適当 コンソメ (小さじ4杯) 水 600cc 調理のワークフローもだいぶわかってきて、食材を切って内鍋へ入れるのも次の順番がよいように思う。
水を 600cc を入れる コンソメを小さじ4杯入れる ローリエを入れる 塩コショウを少々入れる にんじんをさいの目に切って入れる 新玉ねぎを細目にくし切りして入れる かぼちゃをさいの目に切って入れる しめじの石づきを切り落として、個々の房を分解しながら入れる えのきの石づきを切り落として、半分のところで切って、ばらかしながら入れる ミディアムトマトを洗って入れる (出来たては熱過ぎて火傷するから半分に切った方がよいかも？) 鶏肉の身と皮を分離して、それぞれをさいの目のサイズに小さく切って入れる セロリの葉っぱ部分を切って、適当なサイズで入れる これで内鍋の水位 MAX の線がちょっと隠れるぐらい。ちょうどいっぱいになる。あとはホットクックの調理ボタンを押すだけ。だいたい40分程度。
スクラムマスターという功罪 QAエンジニアがスクラムマスターに憧れてしくじった話 に参加した。
失敗経験の共有をするという意味で発表そのものはおもしろかった。regional scrum gathering tokyo (rsgt) 2024 の発表の再演だったみたい。開発経験の浅い人がスクラムに馴染んでいない会社に転職していきなりスクラムマスターに挑戦してみて、全然うまくいきませんでしたといった失敗談の共有。その会社では、その後、組織改編されてスクラム導入も断念して、その発表者も結果的に退職してしまったとのこと。いろいろ悲しい。スクラムマスターは組織のライン上もチームの役割としても、実務に対しての責任を負っていない (建前上はチームの成功にコミットとあるけど、スクラムの運営をうまくやるための支援をするといった活動がメインになる) ため、若い人がいきなりスクラムマスターをやるというのは難しいのではないかと感じた。スクラムマスターの役割の1つにファシリテーションをうまくやってチームを誘導するみたいな風潮がある。しかし、私の感覚的には、ファシリテーションをうまくやっただけで開発がうまくいくわけないだろと自分の経験則からの反発もある。
私からみたら、この例は経験不足／実力不足の人が開発のマネジメントに影響力を及ぼそうとして、しかも転職したばかりの組織も開発もよくわかっていないチームで、そんなことそうそうできないってだけの話しにみえた。にもかかわらず、このイベントに参加している人たちはみんな優しくて、どうすればうまくいったか？を親身に相談にのってあげたり、その組織や会社の問題点をあげてフォローしたり、それはそれでやさしい世界ではあるけれど、社会人としての責任感といったところで私は相容れないものがあった。私自身、いろんな組織やチームで課題管理の価値を共有してきたけど、それも半年〜1年、私が実際に現実の開発の中で実践して、その価値が伝わっていく。こういった開発の運用を変えるというのをファシリテーションと啓蒙の (いわば) 口先介入だけで実現するのは相当のスキルや経験がいるのではないかとも思えた。</description><content>&lt;p>1時に寝て5時前に起きて6時半に起きた。起きてからホットクックで玄米を炊いてみた。2合で40分前後といったところ。&lt;/p>
&lt;p>今日の筋トレは腕立て:20x1,スクワット:20x1,背筋:10x2をした。&lt;/p>
&lt;h2 id="社内版テックブログを読む会の2回目">社内版テックブログを読む会の2回目&lt;/h2>
&lt;p>新しい取り組みの2回目。&lt;a href="/diary/diary/posts/2024/0125/#社内版テックブログを読む会をやってみた">前回の所感はここ&lt;/a> 。淡々と始めて淡々と終えた。これはそういうイベント。一方でマネージャーの視点からメンバーの取り組みをみていて1つ気付いたことがある。読解力、文章力、言語化力に個人差がある。そんなことは当たり前だが、たまたま最近ある動画をみた。8分20秒ぐらいからみてほしい。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/SB8-MOxFFCY" allowfullscreen title="【ビフォアフ】鬼才が売れないホストをプロデュース">&lt;/iframe>
&lt;/div>
&lt;p>この先輩が後輩に指導している中で日経新聞を題材に、情報処理能力を鍛えることの重要性を説明している。言語化能力を鍛えるために新聞を読む、映画をみる、日記も書く、文章能力を上げなさいと指導している。本当にこの通り。私が働いてきた組織では開発者で半分ぐらいの人しか文章を書けず、ビジネスの人に限ってはもっと多くの割合の人たちが書けない。そして若い人よりも年配の人たちの方ができない割合が多かった。それではビジネスで勝てないよという話し。テックブログを読む会はこの視点からも言語化能力を養うよい練習になるように思えた。&lt;/p>
&lt;h2 id="野菜スープのレシピ改改">野菜スープのレシピ改改&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2024/0129/#野菜スープのレシピ改">先日つくった野菜スープ&lt;/a> のさらなる改善。前回のレシピをさらにアレンジして今日のレシピはこれ。&lt;/p>
&lt;ul>
&lt;li>にんじん x 1&lt;/li>
&lt;li>新玉ねぎ x 1&lt;/li>
&lt;li>かぼちゃ 1/4切れ&lt;/li>
&lt;li>ミディアムトマト x 8&lt;/li>
&lt;li>セロリ x 1 の葉っぱ部分&lt;/li>
&lt;li>しめじ 1袋&lt;/li>
&lt;li>えのき 1袋&lt;/li>
&lt;li>鶏肉&lt;/li>
&lt;li>ローリエ 1枚&lt;/li>
&lt;li>塩コショウ 適当&lt;/li>
&lt;li>コンソメ (小さじ4杯)&lt;/li>
&lt;li>水 600cc&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="/diary/diary/img/2024/0201_vegisoup.jpg"/>
&lt;/figure>
&lt;p>調理のワークフローもだいぶわかってきて、食材を切って内鍋へ入れるのも次の順番がよいように思う。&lt;/p>
&lt;ol>
&lt;li>水を 600cc を入れる&lt;/li>
&lt;li>コンソメを小さじ4杯入れる&lt;/li>
&lt;li>ローリエを入れる&lt;/li>
&lt;li>塩コショウを少々入れる&lt;/li>
&lt;li>にんじんをさいの目に切って入れる&lt;/li>
&lt;li>新玉ねぎを細目にくし切りして入れる&lt;/li>
&lt;li>かぼちゃをさいの目に切って入れる&lt;/li>
&lt;li>しめじの石づきを切り落として、個々の房を分解しながら入れる&lt;/li>
&lt;li>えのきの石づきを切り落として、半分のところで切って、ばらかしながら入れる&lt;/li>
&lt;li>ミディアムトマトを洗って入れる (出来たては熱過ぎて火傷するから半分に切った方がよいかも？)&lt;/li>
&lt;li>鶏肉の身と皮を分離して、それぞれをさいの目のサイズに小さく切って入れる&lt;/li>
&lt;li>セロリの葉っぱ部分を切って、適当なサイズで入れる&lt;/li>
&lt;/ol>
&lt;p>これで内鍋の水位 MAX の線がちょっと隠れるぐらい。ちょうどいっぱいになる。あとはホットクックの調理ボタンを押すだけ。だいたい40分程度。&lt;/p>
&lt;h2 id="スクラムマスターという功罪">スクラムマスターという功罪&lt;/h2>
&lt;p>&lt;a href="https://distributed-agile-team.connpass.com/event/300798/">QAエンジニアがスクラムマスターに憧れてしくじった話&lt;/a> に参加した。&lt;/p>
&lt;iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/c20bb9169e284b0fb23f8dbf03fe9ce1" title="QAエンジニアがSMに憧れてしくじった話" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 600px; height: auto; aspect-ratio: 560 / 315;" data-ratio="1.7777777777777777">&lt;/iframe>
&lt;p>失敗経験の共有をするという意味で発表そのものはおもしろかった。regional scrum gathering tokyo (rsgt) 2024 の発表の再演だったみたい。開発経験の浅い人がスクラムに馴染んでいない会社に転職していきなりスクラムマスターに挑戦してみて、全然うまくいきませんでしたといった失敗談の共有。その会社では、その後、組織改編されてスクラム導入も断念して、その発表者も結果的に退職してしまったとのこと。いろいろ悲しい。スクラムマスターは組織のライン上もチームの役割としても、実務に対しての責任を負っていない (建前上はチームの成功にコミットとあるけど、スクラムの運営をうまくやるための支援をするといった活動がメインになる) ため、若い人がいきなりスクラムマスターをやるというのは難しいのではないかと感じた。スクラムマスターの役割の1つにファシリテーションをうまくやってチームを誘導するみたいな風潮がある。しかし、私の感覚的には、ファシリテーションをうまくやっただけで開発がうまくいくわけないだろと自分の経験則からの反発もある。&lt;/p>
&lt;p>私からみたら、この例は経験不足／実力不足の人が開発のマネジメントに影響力を及ぼそうとして、しかも転職したばかりの組織も開発もよくわかっていないチームで、そんなことそうそうできないってだけの話しにみえた。にもかかわらず、このイベントに参加している人たちはみんな優しくて、どうすればうまくいったか？を親身に相談にのってあげたり、その組織や会社の問題点をあげてフォローしたり、それはそれでやさしい世界ではあるけれど、社会人としての責任感といったところで私は相容れないものがあった。私自身、いろんな組織やチームで課題管理の価値を共有してきたけど、それも半年〜1年、私が実際に現実の開発の中で実践して、その価値が伝わっていく。こういった開発の運用を変えるというのをファシリテーションと啓蒙の (いわば) 口先介入だけで実現するのは相当のスキルや経験がいるのではないかとも思えた。&lt;/p></content></item><item><title>勉強のやり方の基本</title><link>/diary/posts/2024/0117/</link><pubDate>Wed, 17 Jan 2024 01:52:58 +0900</pubDate><guid>/diary/posts/2024/0117/</guid><description>3時過ぎに寝て1度起きて7時半に起きた。また体調を崩さないか心配になってくる。
今日の筋トレは腹筋:15x2,腕立て:10x1,スクワット20x1をした。
業務での勉強のやり方の基本 隔週で水曜日はメンバーと1on1をしている。今日は年明けで最初の1on1になる。あるメンバーと勉強のやり方について話題になった。私が普段、業務で行っている勉強のやり方を紹介してみた。
業務の中で未知の内容やわからないことに遭遇する ツールやフレームワークを学ぶなら公式ドキュメントを一通り読む チュートリアルやサンプルコードを書くためにサンプルリポジトリを作る 実際にコードを書いて、動かしてみて、ドキュメントの内容を理解する 自分が理解した内容をテックブログに書く 対象への理解の解像度が上がってから業務に応用する 業務をしながらこれを繰り返してプロダクト開発をしている。
私からみると、経験の浅い開発者は勉強せずに、インターネットでググった内容をそのまま業務に応用しようとする。そして、理解の解像度が低いために誤った設計や実装をしてしまう。それで手戻りが発生したり、品質が悪かったりする。何度も公式ドキュメントを読んだ方がよいと提唱しているものの、これがなかなか勉強しないといけない人には通じない。私も過去にそういう時期があったので意図が理解できないというのも理解できる。だからこそ、この話しは何度でもするし、いつかそのことを理解できるときがきたら役に立つことだと考えている。
メンバーから「公式ドキュメントを読んでも書いてあることが理解できない」というコメントをもらう。そう。理解できないから自分でコードを書いて、動かしてみて、その勉強をするんだよと教える。本当にそれだけのことなんだけど、それだけのことも理解できずに他人が書いた信頼できるかどうかわからない記事のコードを使う人が多い。本質的には技術の勉強を過小評価している。経験の浅い人は1-2時間読み書きしただけでモダンなフレームワークの抽象化や振る舞いを理解できるはずがない。私でもバックエンドならたいていのことは理解できるが、経験の浅いフロントエンドは怪しい。だから、分かるまでもっともっと勉強しないといけないという認識が必要だ。1-2時間で終えようではなく、勉強も含めて2-3日かけようと思うぐらいでちょうどよい。
さらに私はメンバーに「時間がかかってもよいからちゃんと理解して開発しなさい」と、これも何度も何度もメンバーに伝えている。それによってタスクが遅れても構わないとすら言っている。他社のプロダクト開発でそこまで言うと経営者からクレームがくる可能性はあるが、おそらくお手伝い先の経営者もいっときの開発の速度よりも、地に足の着いた開発者として成長してもらう方がずっと価値があると理解してもらっていると、私は考えている。だからこそ、メンバーにそう言って、みせかけだけで開発しないように伝えている。
今日話していて、ようやく自覚できるようになってきたんじゃないかと手応えを感じた。1年かかったけれど。私自身マネージャーとして未熟でもあるし、マネジメントがよくなかったところもあるし、伝え方もよくなかったのかもしれない。それでも繰り返し繰り返し、開発において大事な価値観はメンバーに伝えていこうと気持ちを新たにした。
災害義援金の推移 先日 石川県の災害義援金に寄付した ときにサイトにその日の残高を掲載していることに気付いた。関心をもったのでその記録を付けている。チェックを忘れたときは internet archive から分かる範囲で調べた。次のような感じに推移していて、そろそろ落ち着くのかもしれない。約60億円といったところ。他の団体や期間からの寄付もあるだろうけど、被害総額は約8,000億円らしいのでまだまだ全然足らない。
コワーキングのオンラインイベント 月例のカフーツさんのオンラインイベントに参加した。前回の所感はここ 。今回のテーマは「自治体とコワーキング」だった。私は行政を好ましく思っていない。行政と関わるお仕事もいくつかやってきた中で行政側の態度がよくなかったり、担当者も上から指示されたからやってますといったやっつけだったり、若い担当者は理解があっても決済権をもってなくて上司に没にされたり、一緒に働いていて楽しいようなお仕事に巡りあわなかったからだ。そして、目的意識からの違いから行政とのお仕事やプロジェクトが失敗とまで言わなくても、うまくいかないケースをいくつも見聞きしてきた。うまくいかないのに対して、うまくいったというのはほとんど聞いたことがないからまずうまくいかない。
それはともかく、行政と一緒になってコワーキングの事業をやろうとしている人たちもいるのでそれはそれでどんなことをやっているのかを聞いていた。今回は新しい参加者がいてその人の経歴ややっているコワーキングの行動なども聞けておもしろかった。街の人たちとどうやって仲良くなるかという話しで単純接触効果がもっとも効果が大きいのではないかと話されていた。なにもしなくてもそこにいて、徐々に人がくるようになって、人と会っているうちに仲良くなるといった話し。営業さんが取引先をまわるのもその戦略。
空き家バンク は住居向けしか対象としていなくて事業用にはなっていない。事業に使える空き家を探すのが難しい。空き家のマッチングシステムはあるようでないらしい。空き家がいっぱいあるのはわかっているので空き家をコワーキングスペースに改装して、町興しの拠点に使えばいいのではないかといった話しがあった。それはそうかもしれないが、私の感覚では、田舎にスペースは山ほどあるが人がいない。コワーキング的な新しい価値観で個々が自律して課題解決するような人を田舎でみつけるのはなかなか難しいと考えている。どちらかというと、一定の人口がいる地方都市や大きめの市が落とし所なのではないかと思う。</description><content>&lt;p>3時過ぎに寝て1度起きて7時半に起きた。また体調を崩さないか心配になってくる。&lt;/p>
&lt;p>今日の筋トレは腹筋:15x2,腕立て:10x1,スクワット20x1をした。&lt;/p>
&lt;h2 id="業務での勉強のやり方の基本">業務での勉強のやり方の基本&lt;/h2>
&lt;p>隔週で水曜日はメンバーと1on1をしている。今日は年明けで最初の1on1になる。あるメンバーと勉強のやり方について話題になった。私が普段、業務で行っている勉強のやり方を紹介してみた。&lt;/p>
&lt;ol>
&lt;li>業務の中で未知の内容やわからないことに遭遇する&lt;/li>
&lt;li>ツールやフレームワークを学ぶなら公式ドキュメントを一通り読む&lt;/li>
&lt;li>チュートリアルやサンプルコードを書くためにサンプルリポジトリを作る&lt;/li>
&lt;li>実際にコードを書いて、動かしてみて、ドキュメントの内容を理解する&lt;/li>
&lt;li>自分が理解した内容をテックブログに書く&lt;/li>
&lt;li>対象への理解の解像度が上がってから業務に応用する&lt;/li>
&lt;/ol>
&lt;p>業務をしながらこれを繰り返してプロダクト開発をしている。&lt;/p>
&lt;p>私からみると、経験の浅い開発者は勉強せずに、インターネットでググった内容をそのまま業務に応用しようとする。そして、理解の解像度が低いために誤った設計や実装をしてしまう。それで手戻りが発生したり、品質が悪かったりする。何度も公式ドキュメントを読んだ方がよいと提唱しているものの、これがなかなか勉強しないといけない人には通じない。私も過去にそういう時期があったので意図が理解できないというのも理解できる。だからこそ、この話しは何度でもするし、いつかそのことを理解できるときがきたら役に立つことだと考えている。&lt;/p>
&lt;p>メンバーから「公式ドキュメントを読んでも書いてあることが理解できない」というコメントをもらう。そう。理解できないから自分でコードを書いて、動かしてみて、その勉強をするんだよと教える。本当にそれだけのことなんだけど、それだけのことも理解できずに他人が書いた信頼できるかどうかわからない記事のコードを使う人が多い。本質的には技術の勉強を過小評価している。経験の浅い人は1-2時間読み書きしただけでモダンなフレームワークの抽象化や振る舞いを理解できるはずがない。私でもバックエンドならたいていのことは理解できるが、経験の浅いフロントエンドは怪しい。だから、分かるまでもっともっと勉強しないといけないという認識が必要だ。1-2時間で終えようではなく、勉強も含めて2-3日かけようと思うぐらいでちょうどよい。&lt;/p>
&lt;p>さらに私はメンバーに「時間がかかってもよいからちゃんと理解して開発しなさい」と、これも何度も何度もメンバーに伝えている。それによってタスクが遅れても構わないとすら言っている。他社のプロダクト開発でそこまで言うと経営者からクレームがくる可能性はあるが、おそらくお手伝い先の経営者もいっときの開発の速度よりも、地に足の着いた開発者として成長してもらう方がずっと価値があると理解してもらっていると、私は考えている。だからこそ、メンバーにそう言って、みせかけだけで開発しないように伝えている。&lt;/p>
&lt;p>今日話していて、ようやく自覚できるようになってきたんじゃないかと手応えを感じた。1年かかったけれど。私自身マネージャーとして未熟でもあるし、マネジメントがよくなかったところもあるし、伝え方もよくなかったのかもしれない。それでも繰り返し繰り返し、開発において大事な価値観はメンバーに伝えていこうと気持ちを新たにした。&lt;/p>
&lt;h2 id="災害義援金の推移">災害義援金の推移&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2024/0109/#災害義援金の寄付">石川県の災害義援金に寄付した&lt;/a> ときにサイトにその日の残高を掲載していることに気付いた。関心をもったのでその記録を付けている。チェックを忘れたときは internet archive から分かる範囲で調べた。次のような感じに推移していて、そろそろ落ち着くのかもしれない。約60億円といったところ。他の団体や期間からの寄付もあるだろうけど、被害総額は約8,000億円らしいのでまだまだ全然足らない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2024/0116_donation.png"/>
&lt;/figure>
&lt;h2 id="コワーキングのオンラインイベント">コワーキングのオンラインイベント&lt;/h2>
&lt;p>月例のカフーツさんのオンラインイベントに参加した。&lt;a href="/diary/diary/posts/2023/1220/#コワーキングのオンラインイベント">前回の所感はここ&lt;/a> 。今回のテーマは「自治体とコワーキング」だった。私は行政を好ましく思っていない。行政と関わるお仕事もいくつかやってきた中で行政側の態度がよくなかったり、担当者も上から指示されたからやってますといったやっつけだったり、若い担当者は理解があっても決済権をもってなくて上司に没にされたり、一緒に働いていて楽しいようなお仕事に巡りあわなかったからだ。そして、目的意識からの違いから行政とのお仕事やプロジェクトが失敗とまで言わなくても、うまくいかないケースをいくつも見聞きしてきた。うまくいかないのに対して、うまくいったというのはほとんど聞いたことがないからまずうまくいかない。&lt;/p>
&lt;p>それはともかく、行政と一緒になってコワーキングの事業をやろうとしている人たちもいるのでそれはそれでどんなことをやっているのかを聞いていた。今回は新しい参加者がいてその人の経歴ややっているコワーキングの行動なども聞けておもしろかった。街の人たちとどうやって仲良くなるかという話しで単純接触効果がもっとも効果が大きいのではないかと話されていた。なにもしなくてもそこにいて、徐々に人がくるようになって、人と会っているうちに仲良くなるといった話し。営業さんが取引先をまわるのもその戦略。&lt;/p>
&lt;p>&lt;a href="https://www.homes.co.jp/akiyabank/">空き家バンク&lt;/a> は住居向けしか対象としていなくて事業用にはなっていない。事業に使える空き家を探すのが難しい。空き家のマッチングシステムはあるようでないらしい。空き家がいっぱいあるのはわかっているので空き家をコワーキングスペースに改装して、町興しの拠点に使えばいいのではないかといった話しがあった。それはそうかもしれないが、私の感覚では、田舎にスペースは山ほどあるが人がいない。コワーキング的な新しい価値観で個々が自律して課題解決するような人を田舎でみつけるのはなかなか難しいと考えている。どちらかというと、一定の人口がいる地方都市や大きめの市が落とし所なのではないかと思う。&lt;/p></content></item><item><title>2回目の仕事納め</title><link>/diary/posts/2023/1229/</link><pubDate>Fri, 29 Dec 2023 11:22:51 +0900</pubDate><guid>/diary/posts/2023/1229/</guid><description>2時に寝て何度か起きて7時過ぎに起きてゲームして10時ぐらいからオフィスに出掛けた。
年末の事務手続き 年末調整と給与支払報告書の作成を行った。年末は平時の月末と異なるからわちゃわちゃしてたら25日の給与の支払いも忘れていた。いや、忘れていたというよりは年末調整を12月分の給与で調整したいから年末調整を完了しないと給与確定できないと放置していた。今日は金曜日で平日だからシステムは稼働しているだろうと安易に考えていたら eltax も e-tax も稼働日を次のように書いてあった。
土・日・祝日、年末年始12/29～1/3は除く
eltax のアプリケーションで書類データは作成できたけれど、作成したデータを送信することはできなかった。年明けの4日まで持ち越し。こういう失敗が最近増えてきた。がっかりして嫌になる。あと eltax や e-tax の運用停止時間に遭遇することが私はとても多い。月に1回も使わないようなシステムなのに年間で2-3回ほどは使えない時間に遭遇する。それは当たり前で、私が余裕のある時間は早朝・深夜と休日になるため、メンテナンスの日程と重なることが多い。システムは基本的に24時間365日動いていないとダメだということがわかる。なにかトラブルがあったときの運用対応は年明けでも構わないが、定型的なデータ処理は24時間365日できるはずだと思う。
その後に自社の請求書を作成したり、他社の請求書の対応や会計の明細登録などをしていた。キャッシュフローも眺めていて 今季はもともと赤字想定で予算策定 していたが、受託開発のお仕事が長引いて黒字決算で着地する予定。あと3ヶ月しかないのでブレることもないだろうと思う。本当は今季に事業の体制変更もやらないといけなかったことが来季へずれ込む。計画通りに進捗していないという面からは、いろいろあって事業も経営もあまりうまくいっていない。
カフーツさんの忘年会 初めての参加。昨年も参加する予定が 父の訃報 があってドタキャンしたのでリトライ。手土産に 一心堂 のフルーツ大福をもっていくことにした。神戸の阪急百貨店にお店があったのでてっきり神戸発祥のお店かと思ったら大阪発祥だった。種別によって値段は異なるが、だいたい1個410-640円 (税抜き) ぐらい。9個入の詰め合わせにしてもらった。
他に持ち寄りであった食べものに 三宮一貫樓 のちび豚まんと焼売を撮った。神戸に住み始めて商店街の一角にあるのは知っていたのだけど、神戸の名物の1つだと知ったのは住み始めて2-3年経ってからだった。勉強会の食べものの定番はピザだけど、神戸なら一貫楼の 中華パーティーセット (送料/消費税込みで10,750円) などを頼むのもよいのかもしれない。
コミュニティとコワーキングの違い いとうさんと話していて、以前よりコミュニティとコワーキングの違いが明確になった。私の中では似て非なるものという考えはあったものの、あまり違いを明文化できていなかった。
コミュニティマネージャーと コワーキングマネージャー では求められるスキルセットが大きく異なる。キャリアとしてもコワーキングマネージャーの方がずっと難易度の高いものであるように話されていた。集合で言えば、コワーキングマネージャーはコミュニティマネージャーのスキルセットを含む。コミュニティマネージャーは私も身近なものだし、コミュニティマネージャー (会社によっては DevRel と呼ばれたりもする) を社員として雇用する会社も増えてきた。会社に雇われるコミュニティマネージャーというキャリアは、その会社のサービスやプロダクトのコミュニティを盛り上げたり宣伝したりといったマーケティング活動の一環とみなされることが多い。一方でコワーキングマネージャーというのは、会社に雇われるというよりもコワーキングスペースや地域のようなコミュニティに根付くものかもしれない。
コミュニティというのは、それ自体を1つの意思をもった人のように扱い、そこに集まる人たちがコミュニティの思想にあうよう1つにまとまって活動する、協調するといった趣きが強い。そのため、コミュニティマネージャーはコミュニティの理念にあうようメンバーをまとめたり、逆にあわない人たちを排除することもある。一方、コワーキングというのは、個々がそれぞれの背景をもち、得意・不得意があり、性格や思想も様々で多様な価値観をもつ人たちが集まり、それぞれの特性を活かした上で協調するといった趣きがある。そして、コワーキングマネージャーは個々人にあわせたホスピタリティを提供するという。これは主従において大きな違いの1つでもあると理解できた。コミュニティはそれ自体が主でその理念にメンバーが従う。コワーキングは個々が主でその人たちが協調するかどうかはそれぞれのコワーカーの判断に委ねられる。そして、コワーカー同士が協調しやすいように縁の下で支えるのがコワーキングマネージャーだという。コワーキングマネージャーは、訪れたコワーカーとコミュニケーションを取る中で、一緒に考え、相談にのり、そして答えや結論を出さなくてもよいという。コワーカーと一緒に考えてあげるだけでよいというのだ。どこかに落とし所に着地させたり、全体をまとめたりしないという点がコミュニティマネージャーと大きく異なる。
そこで素朴な疑問。コワーキングマネージャーが個々人に向き合うとしたら、そこには ダンバー数 (100-150人？) のように人間の認知能力の限界が出てくる。数千人や数万人が所属するコミュニティも存在するが、コミュニティといった枠組みで集団を抽象化して管理できなければ認知能力に限界がある。次の問いを投げかけてみた。
コワーキングマネージャーが個々人にホスピタリティを提供するとしたら、小さい規模や小集団でしか機能しないのではないか？スケールしないのではないか？
いとうさんが言うには、この弱点を補うのがツールの力だという。コワーキングマネージャーのチームを作り、コワーカーそれぞれと話した内容やその人の背景や特性、いまやっていることなどを記録し、その記録をチーム内で共有する。これなら個人の認知能力を拡張できるし、コンテキストを引き継いだ上で初めて会うコワーキングマネージャーとコワーカー間におけるホスピタリティも担保できるかもしれない。
ここまで聞いて、これはまさに私が開発の現場でやっている課題管理そのものだということに気付いた。日々の開発のアクティビティを課題管理システムにコメントとして記録し、そのタイムラインをメンバー全員で共有しながら、リアルタイムに必要なコミュニケーションをもって相互に情報共有または協調するといったことを、まさに私のチームでは実践している。これをコワーキングスペースにいるコワーキングマネージャー間で行う、もっと言えば、複数のコワーキングスペース間で共有できれば、それはさらに大きなホスピタリティになるのかもしれない。別のコワーキングスペースへ行っても、自分の背景が共有されていて、よりよいホスピタリティを受けることができるのかもしれない。
初めてカフーツさんに訪問したのが2022年6月 だった。当時いとうさんと話してみて、課題管理に通じるところがあると直感的に感じて、その後、やり取りを継続してきて、1年半経った。ようやくコワーキングと課題管理がつながった。いとうさんからみれば、課題管理とはコワーキングマネージャーが備えるべきホスピタリティの延長上にあるチームで協調するための概念なのだと思う。そして、私からみれば、コワーキングとは課題管理そのものなんだと理解できた。
課題管理システムの利用状況を表すメトリクスの1つに カレンダーチャート がある。これがいま課題管理を知らないチームでその実践を指導する上で想定外に役に立つことがわかった。この他にも課題管理特有のメトリクスを増やしていきたいと私は考えていた。そのアイディアの1つに「コワーキングチャート」というものを作ろうと思う。おそらく世の中にはないし、課題管理とコワーキングの両方を研究している人にしか、この発想は出てこないと思う。来年、他社のお手伝いを終えた後のアイディアの1つに寝かしておこうと思う。</description><content>&lt;p>2時に寝て何度か起きて7時過ぎに起きてゲームして10時ぐらいからオフィスに出掛けた。&lt;/p>
&lt;h2 id="年末の事務手続き">年末の事務手続き&lt;/h2>
&lt;p>年末調整と給与支払報告書の作成を行った。年末は平時の月末と異なるからわちゃわちゃしてたら25日の給与の支払いも忘れていた。いや、忘れていたというよりは年末調整を12月分の給与で調整したいから年末調整を完了しないと給与確定できないと放置していた。今日は金曜日で平日だからシステムは稼働しているだろうと安易に考えていたら eltax も e-tax も稼働日を次のように書いてあった。&lt;/p>
&lt;blockquote>
&lt;p>土・日・祝日、年末年始12/29～1/3は除く&lt;/p>
&lt;/blockquote>
&lt;p>eltax のアプリケーションで書類データは作成できたけれど、作成したデータを送信することはできなかった。年明けの4日まで持ち越し。こういう失敗が最近増えてきた。がっかりして嫌になる。あと eltax や e-tax の運用停止時間に遭遇することが私はとても多い。月に1回も使わないようなシステムなのに年間で2-3回ほどは使えない時間に遭遇する。それは当たり前で、私が余裕のある時間は早朝・深夜と休日になるため、メンテナンスの日程と重なることが多い。システムは基本的に24時間365日動いていないとダメだということがわかる。なにかトラブルがあったときの運用対応は年明けでも構わないが、定型的なデータ処理は24時間365日できるはずだと思う。&lt;/p>
&lt;p>その後に自社の請求書を作成したり、他社の請求書の対応や会計の明細登録などをしていた。キャッシュフローも眺めていて &lt;a href="/diary/diary/posts/2023/0331/">今季はもともと赤字想定で予算策定&lt;/a> していたが、受託開発のお仕事が長引いて黒字決算で着地する予定。あと3ヶ月しかないのでブレることもないだろうと思う。本当は今季に事業の体制変更もやらないといけなかったことが来季へずれ込む。計画通りに進捗していないという面からは、いろいろあって事業も経営もあまりうまくいっていない。&lt;/p>
&lt;h2 id="カフーツさんの忘年会">カフーツさんの忘年会&lt;/h2>
&lt;p>初めての参加。昨年も参加する予定が &lt;a href="/diary/diary/posts/2022/1226/">父の訃報&lt;/a> があってドタキャンしたのでリトライ。手土産に &lt;a href="https://issindo-osaka.com/">一心堂&lt;/a> のフルーツ大福をもっていくことにした。神戸の阪急百貨店にお店があったのでてっきり神戸発祥のお店かと思ったら大阪発祥だった。種別によって値段は異なるが、だいたい1個410-640円 (税抜き) ぐらい。9個入の詰め合わせにしてもらった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1229_daihuku.jpeg"/>
&lt;/figure>
&lt;p>他に持ち寄りであった食べものに &lt;a href="https://www.ikkanrou.jp/">三宮一貫樓&lt;/a> のちび豚まんと焼売を撮った。神戸に住み始めて商店街の一角にあるのは知っていたのだけど、神戸の名物の1つだと知ったのは住み始めて2-3年経ってからだった。勉強会の食べものの定番はピザだけど、神戸なら一貫楼の &lt;a href="https://www.ikkanrou.jp/items/394">中華パーティーセット&lt;/a> (送料/消費税込みで10,750円) などを頼むのもよいのかもしれない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/1229_ikkanrou.jpg"/>
&lt;/figure>
&lt;h2 id="コミュニティとコワーキングの違い">コミュニティとコワーキングの違い&lt;/h2>
&lt;p>いとうさんと話していて、以前よりコミュニティとコワーキングの違いが明確になった。私の中では似て非なるものという考えはあったものの、あまり違いを明文化できていなかった。&lt;/p>
&lt;p>コミュニティマネージャーと &lt;a href="https://www.coworkingmgr.com/">コワーキングマネージャー&lt;/a> では求められるスキルセットが大きく異なる。キャリアとしてもコワーキングマネージャーの方がずっと難易度の高いものであるように話されていた。集合で言えば、コワーキングマネージャーはコミュニティマネージャーのスキルセットを含む。コミュニティマネージャーは私も身近なものだし、コミュニティマネージャー (会社によっては DevRel と呼ばれたりもする) を社員として雇用する会社も増えてきた。会社に雇われるコミュニティマネージャーというキャリアは、その会社のサービスやプロダクトのコミュニティを盛り上げたり宣伝したりといったマーケティング活動の一環とみなされることが多い。一方でコワーキングマネージャーというのは、会社に雇われるというよりもコワーキングスペースや地域のようなコミュニティに根付くものかもしれない。&lt;/p>
&lt;p>コミュニティというのは、それ自体を1つの意思をもった人のように扱い、そこに集まる人たちがコミュニティの思想にあうよう1つにまとまって活動する、協調するといった趣きが強い。そのため、コミュニティマネージャーはコミュニティの理念にあうようメンバーをまとめたり、逆にあわない人たちを排除することもある。一方、コワーキングというのは、個々がそれぞれの背景をもち、得意・不得意があり、性格や思想も様々で多様な価値観をもつ人たちが集まり、それぞれの特性を活かした上で協調するといった趣きがある。そして、コワーキングマネージャーは個々人にあわせたホスピタリティを提供するという。これは主従において大きな違いの1つでもあると理解できた。コミュニティはそれ自体が主でその理念にメンバーが従う。コワーキングは個々が主でその人たちが協調するかどうかはそれぞれのコワーカーの判断に委ねられる。そして、コワーカー同士が協調しやすいように縁の下で支えるのがコワーキングマネージャーだという。コワーキングマネージャーは、訪れたコワーカーとコミュニケーションを取る中で、一緒に考え、相談にのり、そして答えや結論を出さなくてもよいという。コワーカーと一緒に考えてあげるだけでよいというのだ。どこかに落とし所に着地させたり、全体をまとめたりしないという点がコミュニティマネージャーと大きく異なる。&lt;/p>
&lt;p>そこで素朴な疑問。コワーキングマネージャーが個々人に向き合うとしたら、そこには &lt;a href="https://ja.wikipedia.org/wiki/%E3%83%80%E3%83%B3%E3%83%90%E3%83%BC%E6%95%B0">ダンバー数&lt;/a> (100-150人？) のように人間の認知能力の限界が出てくる。数千人や数万人が所属するコミュニティも存在するが、コミュニティといった枠組みで集団を抽象化して管理できなければ認知能力に限界がある。次の問いを投げかけてみた。&lt;/p>
&lt;blockquote>
&lt;p>コワーキングマネージャーが個々人にホスピタリティを提供するとしたら、小さい規模や小集団でしか機能しないのではないか？スケールしないのではないか？&lt;/p>
&lt;/blockquote>
&lt;p>いとうさんが言うには、この弱点を補うのがツールの力だという。コワーキングマネージャーのチームを作り、コワーカーそれぞれと話した内容やその人の背景や特性、いまやっていることなどを記録し、その記録をチーム内で共有する。これなら個人の認知能力を拡張できるし、コンテキストを引き継いだ上で初めて会うコワーキングマネージャーとコワーカー間におけるホスピタリティも担保できるかもしれない。&lt;/p>
&lt;p>ここまで聞いて、これはまさに私が開発の現場でやっている課題管理そのものだということに気付いた。日々の開発のアクティビティを課題管理システムにコメントとして記録し、そのタイムラインをメンバー全員で共有しながら、リアルタイムに必要なコミュニケーションをもって相互に情報共有または協調するといったことを、まさに私のチームでは実践している。これをコワーキングスペースにいるコワーキングマネージャー間で行う、もっと言えば、複数のコワーキングスペース間で共有できれば、それはさらに大きなホスピタリティになるのかもしれない。別のコワーキングスペースへ行っても、自分の背景が共有されていて、よりよいホスピタリティを受けることができるのかもしれない。&lt;/p>
&lt;p>&lt;a href="/diary/diary/posts/2022/0618/">初めてカフーツさんに訪問したのが2022年6月&lt;/a> だった。当時いとうさんと話してみて、課題管理に通じるところがあると直感的に感じて、その後、やり取りを継続してきて、1年半経った。ようやくコワーキングと課題管理がつながった。いとうさんからみれば、課題管理とはコワーキングマネージャーが備えるべきホスピタリティの延長上にあるチームで協調するための概念なのだと思う。そして、私からみれば、コワーキングとは課題管理そのものなんだと理解できた。&lt;/p>
&lt;p>課題管理システムの利用状況を表すメトリクスの1つに &lt;a href="https://developers.google.com/chart/interactive/docs/gallery/calendar?hl=ja">カレンダーチャート&lt;/a> がある。これがいま課題管理を知らないチームでその実践を指導する上で想定外に役に立つことがわかった。この他にも課題管理特有のメトリクスを増やしていきたいと私は考えていた。そのアイディアの1つに「コワーキングチャート」というものを作ろうと思う。おそらく世の中にはないし、課題管理とコワーキングの両方を研究している人にしか、この発想は出てこないと思う。来年、他社のお手伝いを終えた後のアイディアの1つに寝かしておこうと思う。&lt;/p></content></item><item><title>1回目の仕事納め</title><link>/diary/posts/2023/1226/</link><pubDate>Tue, 26 Dec 2023 15:05:18 +0900</pubDate><guid>/diary/posts/2023/1226/</guid><description>1時に寝て何度か起きて7時過ぎに起きた。寒くてなにもできない。
定例会議 年末という追い込みもあってか、このマイルストーンで対応した issue 数も多くて、ふりかえりの内容や議論する内容がいつもの定例よりも多かった。1時間の会議時間を20分ほどオーバーしながら定例会議を終えた。
テックブログを読む会 の調査報告をして年明けぐらいから社内でもやってみようかという話しをしていて、メンバーから開発が忙しいから勉強時間が取れないといった意見が出た。これは課題管理の文脈で取り組むよい問いに思えた。一番勉強しないといけないメンバーから出た意見でもあった。私の過去の経験則でもこの類の発言はスキルの高い開発者からは出ない。それは勉強することの価値を理解しているからだと推測する。
いまテスト駆動開発はどちらかと言うと文化に近いと言われる。その所以はテストを書かないから開発が遅くなるということをヒューリスティックもしくは経験則として理解している開発者が多いからだと私は考えている。現実のシステム開発でテストを書かないと開発と、テストを書く開発を定量的に評価したり比較することは相当に難しい。事実上そんなことはできない。なぜならば、業務はそのどちらか一方しか選択できないからだ。だから、これは開発者の感覚としてテストを書いて当たり前だという文化をもって、その実益もあると信じて業務に組み込むしかない。だから文化と言われる。それと同じで開発や技術の勉強をせずに、目の前の開発だけやっていてもスキルアップできないのは経験を積んだ開発者からみたら自明だが、それをどう伝えていくか、もしくはその気付きを課題管理の文脈で与える仕組みはないかな？と考えていたりした。
納会 今日はお手伝い先の仕事納めになる。私もそれにあわせて15時半にはお仕事を終えて退勤した。1人だけ働いていてもテンションが上がらないかなと思ってそうした。その後、お手伝い先の納会途中の写真がアップされていてスマブラやりながらのほほんしていたみたい。
納会：何かの出来事や物事が終わった時に締めくくりとして催す会
昔から会社の納会ってなんの意味があるのだろう？と思っている。だいたいお疲れ様でしたって感じで軽食とお酒があって、それを飲み食いしたらすぐ帰る人もいれば、そのまま残って雑談してから帰る人もいる。いつ帰ってもよい流れ解散となる。会社によってもやり方は異なるのだと思うけど、どうせイベントをやるならもうちょっとちゃんとやったらいいんじゃないかと思わないでもない。だらだらしたイベントが納会ってイメージすらある。
本当は夕方から明日の打ち合わせの議題を整理しようと思っていたものの、夕方から急にお腹が痛くなって、帰ってお腹を下して寝ていた。お昼に食べたもののせいかもしれない。寝ていたら直ったのでそんな大したことはないみたい。うちの会社の業務としてはいつも通りで29日までは働く予定。ちょうどカフーツさんの忘年会が29日17時からあるのでそれを２回目の仕事納めにするのがよさそう。</description><content>&lt;p>1時に寝て何度か起きて7時過ぎに起きた。寒くてなにもできない。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>年末という追い込みもあってか、このマイルストーンで対応した issue 数も多くて、ふりかえりの内容や議論する内容がいつもの定例よりも多かった。1時間の会議時間を20分ほどオーバーしながら定例会議を終えた。&lt;/p>
&lt;p>&lt;a href="/diary/diary/posts/2023/1211/#テックブログを読む会">テックブログを読む会&lt;/a> の調査報告をして年明けぐらいから社内でもやってみようかという話しをしていて、メンバーから開発が忙しいから勉強時間が取れないといった意見が出た。これは課題管理の文脈で取り組むよい問いに思えた。一番勉強しないといけないメンバーから出た意見でもあった。私の過去の経験則でもこの類の発言はスキルの高い開発者からは出ない。それは勉強することの価値を理解しているからだと推測する。&lt;/p>
&lt;p>いまテスト駆動開発はどちらかと言うと文化に近いと言われる。その所以はテストを書かないから開発が遅くなるということをヒューリスティックもしくは経験則として理解している開発者が多いからだと私は考えている。現実のシステム開発でテストを書かないと開発と、テストを書く開発を定量的に評価したり比較することは相当に難しい。事実上そんなことはできない。なぜならば、業務はそのどちらか一方しか選択できないからだ。だから、これは開発者の感覚としてテストを書いて当たり前だという文化をもって、その実益もあると信じて業務に組み込むしかない。だから文化と言われる。それと同じで開発や技術の勉強をせずに、目の前の開発だけやっていてもスキルアップできないのは経験を積んだ開発者からみたら自明だが、それをどう伝えていくか、もしくはその気付きを課題管理の文脈で与える仕組みはないかな？と考えていたりした。&lt;/p>
&lt;h2 id="納会">納会&lt;/h2>
&lt;p>今日はお手伝い先の仕事納めになる。私もそれにあわせて15時半にはお仕事を終えて退勤した。1人だけ働いていてもテンションが上がらないかなと思ってそうした。その後、お手伝い先の納会途中の写真がアップされていてスマブラやりながらのほほんしていたみたい。&lt;/p>
&lt;blockquote>
&lt;p>納会：何かの出来事や物事が終わった時に締めくくりとして催す会&lt;/p>
&lt;/blockquote>
&lt;p>昔から会社の納会ってなんの意味があるのだろう？と思っている。だいたいお疲れ様でしたって感じで軽食とお酒があって、それを飲み食いしたらすぐ帰る人もいれば、そのまま残って雑談してから帰る人もいる。いつ帰ってもよい流れ解散となる。会社によってもやり方は異なるのだと思うけど、どうせイベントをやるならもうちょっとちゃんとやったらいいんじゃないかと思わないでもない。だらだらしたイベントが納会ってイメージすらある。&lt;/p>
&lt;p>本当は夕方から明日の打ち合わせの議題を整理しようと思っていたものの、夕方から急にお腹が痛くなって、帰ってお腹を下して寝ていた。お昼に食べたもののせいかもしれない。寝ていたら直ったのでそんな大したことはないみたい。うちの会社の業務としてはいつも通りで29日までは働く予定。ちょうどカフーツさんの忘年会が29日17時からあるのでそれを２回目の仕事納めにするのがよさそう。&lt;/p></content></item><item><title>マネジメントは変わっていく、変わり続けるもの</title><link>/diary/posts/2023/1222/</link><pubDate>Fri, 22 Dec 2023 08:27:14 +0900</pubDate><guid>/diary/posts/2023/1222/</guid><description>晩ご飯食べて21時頃から横になっていた。なんか寒くてなにもやる気がしない。1時に寝て何度か起きて7時に起きた。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日は議題を準備するのを忘れていて、ふりかえりをしながらフリートークのような雑談をした。
2023年ふりかえり 昨日の 組織論の動画 なども共有しながら課題管理の文脈でマネジメントやリーダーシップの原則として思うことを言語化していた。次のような価値観をメンバーにもってほしい。
常に人間は学ぶ どのポジションの人も、どんな役割でも、人それぞれのペースで学ぶのは当たり前である 組織に学ばない人がいると足を引っ張るようになってしまう 人間は時間とともに成長して変わっていく 同じことを何年もずっとやり続ければよいという時代ではない 成長することでやり方もやることも責任も変わっていく プロジェクトは一期一会 人は学び成長することから同じプロジェクトを再現することは本当の意味でできない そのときそのメンバーで、その知識や習熟度で取り組むプロジェクトはその人の人生において1度しかない 本当の意味でプロジェクトマネジメントに再現性などないし、そのときの状況で最適解を考えて実践しないといけない 知の創造研究部会第63回 知の創造研究部会第63回 に参加した。内容は悪くなかったが、私が関心のあるテーマではなかった。
最初の30分ほど、会そのものの紹介やイベントの宣伝、登壇者の自己紹介が延々と続いて、ちょっと長過ぎてうんざりした。自分たちのことをちゃんと知ってもらった方が内容がわかりやすくなるというのはやや前時代的な考えだと私からは思えた。私がイベントに登壇するとき、ほとんど自己紹介を省いて本題へ入るようにしている。それはおっさんの経歴を多くの聴衆は関心がないというのもあるが、本題を聞きたいのに関係ない話しをされるのを私自身もしんどく思うようになったのがある。映画館で映画をみるとき開始前に他の映画の宣伝が10分ぐらいあるのをうんざりする気持ちと同じ。
知の創造部会 というクローズドな facebook グループがあると聞いたので参加申請した。翌日には承認されていた。今後はイベント情報などをここでチェックすればよいのかもしれない。</description><content>&lt;p>晩ご飯食べて21時頃から横になっていた。なんか寒くてなにもやる気がしない。1時に寝て何度か起きて7時に起きた。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日は議題を準備するのを忘れていて、ふりかえりをしながらフリートークのような雑談をした。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2023/1210/">2023年ふりかえり&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>昨日の &lt;a href="/diary/diary/posts/2023/1221/">組織論の動画&lt;/a> なども共有しながら課題管理の文脈でマネジメントやリーダーシップの原則として思うことを言語化していた。次のような価値観をメンバーにもってほしい。&lt;/p>
&lt;ul>
&lt;li>常に人間は学ぶ
&lt;ul>
&lt;li>どのポジションの人も、どんな役割でも、人それぞれのペースで学ぶのは当たり前である&lt;/li>
&lt;li>組織に学ばない人がいると足を引っ張るようになってしまう&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>人間は時間とともに成長して変わっていく
&lt;ul>
&lt;li>同じことを何年もずっとやり続ければよいという時代ではない&lt;/li>
&lt;li>成長することでやり方もやることも責任も変わっていく&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プロジェクトは一期一会
&lt;ul>
&lt;li>人は学び成長することから同じプロジェクトを再現することは本当の意味でできない&lt;/li>
&lt;li>そのときそのメンバーで、その知識や習熟度で取り組むプロジェクトはその人の人生において1度しかない&lt;/li>
&lt;li>本当の意味でプロジェクトマネジメントに再現性などないし、そのときの状況で最適解を考えて実践しないといけない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="知の創造研究部会第63回">知の創造研究部会第63回&lt;/h2>
&lt;p>&lt;a href="https://kmsj20231222.peatix.com/">知の創造研究部会第63回&lt;/a> に参加した。内容は悪くなかったが、私が関心のあるテーマではなかった。&lt;/p>
&lt;p>最初の30分ほど、会そのものの紹介やイベントの宣伝、登壇者の自己紹介が延々と続いて、ちょっと長過ぎてうんざりした。自分たちのことをちゃんと知ってもらった方が内容がわかりやすくなるというのはやや前時代的な考えだと私からは思えた。私がイベントに登壇するとき、ほとんど自己紹介を省いて本題へ入るようにしている。それはおっさんの経歴を多くの聴衆は関心がないというのもあるが、本題を聞きたいのに関係ない話しをされるのを私自身もしんどく思うようになったのがある。映画館で映画をみるとき開始前に他の映画の宣伝が10分ぐらいあるのをうんざりする気持ちと同じ。&lt;/p>
&lt;p>&lt;a href="https://www.facebook.com/groups/204376119725736">知の創造部会&lt;/a> というクローズドな facebook グループがあると聞いたので参加申請した。翌日には承認されていた。今後はイベント情報などをここでチェックすればよいのかもしれない。&lt;/p></content></item><item><title>うまくいかなくなった組織を立て直す難しさ</title><link>/diary/posts/2023/1221/</link><pubDate>Thu, 21 Dec 2023 09:18:36 +0900</pubDate><guid>/diary/posts/2023/1221/</guid><description>2時に寝て4時半に起きて7時半に起きた。昨日のオンラインイベントの後に課題管理についての質問を受けたらいろいろ調べ始めてしまって帰るのが遅くなった。
組織論のあれこれと元凶 たまたま教えてもらってみたらおもしろかった。私もこの歳までに10社以上の組織をみてきたことから、組織の問題、あるいは組織であるがゆえに避けられない問題があることは理解できるし、自分の経験則でもダメな組織の特徴などいくつも思いつく。だいたい知っている内容ではあったけれども、若いのに書籍や論文を研究して、そういう現象にこういった名前がついているというのを言語化してくれていることは知識を共有する上で大事なことでもある。そこまでは知らなかったのでとても参考になる。
私が思う解決策の1つに役職や地位が固定化されないような組織設計というのがある。「権力は腐敗する」 という言葉がある。権力を維持したまま、いまの人間社会でこれを避ける方法はないと私は考えている。どんな優秀な人であっても。上司も役員も社長でさえも、定期的に入れ替わる。どんなに成果をあげても優秀であっても一定期間以上とどまれない。そういう新陳代謝がいいんじゃないかと思う。実際にティール組織やホラクラシーといった組織形態はこの解決策を実現している。
動画の中で、心理的安全性の誤った解釈の文脈で組織がなぁなぁになっている世の中の流れがあって、私もずっと思っていたことの1つに自己肯定感を高めるのがよいというのは本当か？という問い。たしかに過去の行き過ぎたハラスメントは意味がないものではあったのは理解するが、できない人を然るべき内容で叱らないのもどうかという思いは私の中にもあった。坂井さんによると、自己肯定感が本当によいのかどうかという成果も怪しいという。
成果が出ていない人に対して自尊心を高めると、逆に成果が悪くなったり、他者へ横柄になったりする。
直感的に当たり前の話しだと思う。できない人を特別扱いする必要はない。そして、坂井さんは流行りのキーワードにとらわれず、自分たちの組織では本当にそうなのか？具体的で地に足の着いた制度や施策を見極めるべきだ、ちゃんと自分たちで考えましょうといったメッセージを発信していた。これは課題管理の文脈でも私もメンバーに常々言っている。自分たちのやり方にあうかどうかを考えるのが大事だ。
一方でうまくいっていない組織を立て直すのはとても難しい。それは組織のマネジメントというのは、上位の意思決定者、役員であったり部課長であったり、幹部社員の影響力がとても大きいため、うまくいっていないことを認めることそのものが役員や幹部社員へのダメ出しとなる。私もお手伝いをしていて、本質を追究すると経営陣への批判になってしまうため、お茶を濁すときもある。もちろん重要なことで言うべきところは言うが、それほど重要ではないところはお茶を濁してしまう。それは人間関係もあるし、取引関係もあるし、誰だって嫌な人になりたくないし、厳しいことも言いたくない。外部の人間ですら怯むところがあるのに、同じ会社の上下関係や人間関係ではもっと言いにくいことはあるだろうというのは容易に察することができる。優秀な若手が会社を去るのは至って自然だし、もっと言うと年配の人たちも若い人にポジションを譲って会社を去らないといけない。1つの会社で5-10年働くのはとても難しい時代にきているのだと私は思う。</description><content>&lt;p>2時に寝て4時半に起きて7時半に起きた。昨日のオンラインイベントの後に課題管理についての質問を受けたらいろいろ調べ始めてしまって帰るのが遅くなった。&lt;/p>
&lt;h2 id="組織論のあれこれと元凶">組織論のあれこれと元凶&lt;/h2>
&lt;p>たまたま教えてもらってみたらおもしろかった。私もこの歳までに10社以上の組織をみてきたことから、組織の問題、あるいは組織であるがゆえに避けられない問題があることは理解できるし、自分の経験則でもダメな組織の特徴などいくつも思いつく。だいたい知っている内容ではあったけれども、若いのに書籍や論文を研究して、そういう現象にこういった名前がついているというのを言語化してくれていることは知識を共有する上で大事なことでもある。そこまでは知らなかったのでとても参考になる。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/W_b2vp19nWA" allowfullscreen title="【組織崩壊のメカニズム】元DeNA人材育成責任者が日本のマネジメントに警鐘／大企業・メガベンチャーに共通する凡庸化すごろく／優秀なリーダーはこうして潰される【MANAGEMENT SKILL SET】">&lt;/iframe>
&lt;/div>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/1DKaP396Ybg" allowfullscreen title="【最も危険な上司はこの2種類】“かっこつけシャドーボクサー”と“承認欲求サンドバッグ”に気をつけろ／リクルートの「お前はどうしたい？」にまつわる誤解【MANAGEMENT SKILL SET】">&lt;/iframe>
&lt;/div>
&lt;p>私が思う解決策の1つに役職や地位が固定化されないような組織設計というのがある。&lt;strong>「権力は腐敗する」&lt;/strong> という言葉がある。権力を維持したまま、いまの人間社会でこれを避ける方法はないと私は考えている。どんな優秀な人であっても。上司も役員も社長でさえも、定期的に入れ替わる。どんなに成果をあげても優秀であっても一定期間以上とどまれない。そういう新陳代謝がいいんじゃないかと思う。実際にティール組織やホラクラシーといった組織形態はこの解決策を実現している。&lt;/p>
&lt;p>動画の中で、心理的安全性の誤った解釈の文脈で組織がなぁなぁになっている世の中の流れがあって、私もずっと思っていたことの1つに自己肯定感を高めるのがよいというのは本当か？という問い。たしかに過去の行き過ぎたハラスメントは意味がないものではあったのは理解するが、できない人を然るべき内容で叱らないのもどうかという思いは私の中にもあった。坂井さんによると、自己肯定感が本当によいのかどうかという成果も怪しいという。&lt;/p>
&lt;blockquote>
&lt;p>成果が出ていない人に対して自尊心を高めると、逆に成果が悪くなったり、他者へ横柄になったりする。&lt;/p>
&lt;/blockquote>
&lt;p>直感的に当たり前の話しだと思う。できない人を特別扱いする必要はない。そして、坂井さんは流行りのキーワードにとらわれず、自分たちの組織では本当にそうなのか？具体的で地に足の着いた制度や施策を見極めるべきだ、ちゃんと自分たちで考えましょうといったメッセージを発信していた。これは課題管理の文脈でも私もメンバーに常々言っている。自分たちのやり方にあうかどうかを考えるのが大事だ。&lt;/p>
&lt;p>一方でうまくいっていない組織を立て直すのはとても難しい。それは組織のマネジメントというのは、上位の意思決定者、役員であったり部課長であったり、幹部社員の影響力がとても大きいため、うまくいっていないことを認めることそのものが役員や幹部社員へのダメ出しとなる。私もお手伝いをしていて、本質を追究すると経営陣への批判になってしまうため、お茶を濁すときもある。もちろん重要なことで言うべきところは言うが、それほど重要ではないところはお茶を濁してしまう。それは人間関係もあるし、取引関係もあるし、誰だって嫌な人になりたくないし、厳しいことも言いたくない。外部の人間ですら怯むところがあるのに、同じ会社の上下関係や人間関係ではもっと言いにくいことはあるだろうというのは容易に察することができる。優秀な若手が会社を去るのは至って自然だし、もっと言うと年配の人たちも若い人にポジションを譲って会社を去らないといけない。1つの会社で5-10年働くのはとても難しい時代にきているのだと私は思う。&lt;/p></content></item><item><title>気付きというスキル</title><link>/diary/posts/2023/1129/</link><pubDate>Wed, 29 Nov 2023 09:04:37 +0900</pubDate><guid>/diary/posts/2023/1129/</guid><description>2時に寝てあまり眠れなくて6時半に起きた。スマホで ゴブリンスレイヤーⅡをみてから寝た。
プロジェクトの進捗報告 出張したときの月例報告の12回目。前回の進捗報告はこちら 。
開発の中盤を過ぎて、これから追い込みへ入っていく。予定していたバックエンドの機能開発は完了した。私の頭の中ではもう完了までの見通しができていて、あとはフロントエンドの新規画面を構築したり、品質や堅牢性のための小さい改善をしていくといったことを残りの1ヶ月で行う。若いメンバーに経験を積んでもらうことも考慮しているため、サポートを最小限にしながらメンバーの成長を期待したいところ。見た目上の開発スケジュールは順調なのでマネージャーとしスケジュールの懸念はほとんどない。kit/vite アプリケーションの調査 を私が自らやっていて、これを一区切りつけないと次の作業に進めないところが、私の課題でもある。インターネットを検索してもみつからないことを、どのように考え、仮説を立て、調査して、意思決定していくかをメンバーに示したい。マネージャーが一連のワークフローについて業務の参考になるようものをみせることができればいいなと考えている。
以前 コミュニケーションのレベルについて考えたこと をベースにした方法論を社内の wiki にも書いてある。5段階のコミュニケーションのレベルがあり、多くの人たちはレベル4までしか到達しないのだけど、課題管理のスキルを身につけるとレベル5の「聞かなくてもわかる」というエスパーのような状態に達する。メンバーのうちの1人はこのレベルに片足を踏み入れていて、十分にうまく課題管理できているという話題も共有した。一方でレベル5に至るためのプラクティスや施策を、課題管理という文脈でもっとうまくできないか？というのはうちの会社のビジネスの中核でもある。とても難しい。いわば「気付き」を習得するための短期修行コースのようなものを作りたい、業務の中で。この話題を話し始めると、気付きの有無はその人の性格や動機づけにも関連するせいか、賛否両論の多様な議論に発散しやすい。私の立場としては、一定レベルまでは誰でも身につけられるスキルとして扱いたいが「気付き」が本当にスキルなのかどうか、実は確信がない。しかし、諦めることなく継続的に考えていきたい。</description><content>&lt;p>2時に寝てあまり眠れなくて6時半に起きた。スマホで &lt;a href="https://goblinslayer.jp/">ゴブリンスレイヤーⅡ&lt;/a>をみてから寝た。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の12回目。&lt;a href="/diary/diary/posts/2023/1101/">前回の進捗報告はこちら&lt;/a> 。&lt;/p>
&lt;p>開発の中盤を過ぎて、これから追い込みへ入っていく。予定していたバックエンドの機能開発は完了した。私の頭の中ではもう完了までの見通しができていて、あとはフロントエンドの新規画面を構築したり、品質や堅牢性のための小さい改善をしていくといったことを残りの1ヶ月で行う。若いメンバーに経験を積んでもらうことも考慮しているため、サポートを最小限にしながらメンバーの成長を期待したいところ。見た目上の開発スケジュールは順調なのでマネージャーとしスケジュールの懸念はほとんどない。&lt;a href="/diary/diary/posts/2023/1127/#kitvite-アプリケーションのデバッグ">kit/vite アプリケーションの調査&lt;/a> を私が自らやっていて、これを一区切りつけないと次の作業に進めないところが、私の課題でもある。インターネットを検索してもみつからないことを、どのように考え、仮説を立て、調査して、意思決定していくかをメンバーに示したい。マネージャーが一連のワークフローについて業務の参考になるようものをみせることができればいいなと考えている。&lt;/p>
&lt;p>以前 &lt;a href="/diary/diary/posts/2022/0107/#情報共有とコミュニケーションコスト">コミュニケーションのレベルについて考えたこと&lt;/a> をベースにした方法論を社内の wiki にも書いてある。5段階のコミュニケーションのレベルがあり、多くの人たちはレベル4までしか到達しないのだけど、課題管理のスキルを身につけるとレベル5の「聞かなくてもわかる」というエスパーのような状態に達する。メンバーのうちの1人はこのレベルに片足を踏み入れていて、十分にうまく課題管理できているという話題も共有した。一方でレベル5に至るためのプラクティスや施策を、課題管理という文脈でもっとうまくできないか？というのはうちの会社のビジネスの中核でもある。とても難しい。いわば「気付き」を習得するための短期修行コースのようなものを作りたい、業務の中で。この話題を話し始めると、気付きの有無はその人の性格や動機づけにも関連するせいか、賛否両論の多様な議論に発散しやすい。私の立場としては、一定レベルまでは誰でも身につけられるスキルとして扱いたいが「気付き」が本当にスキルなのかどうか、実は確信がない。しかし、諦めることなく継続的に考えていきたい。&lt;/p></content></item><item><title>テックブログの書き始め</title><link>/diary/posts/2023/1121/</link><pubDate>Tue, 21 Nov 2023 08:51:59 +0900</pubDate><guid>/diary/posts/2023/1121/</guid><description>昨日は夜にいろいろ作業して、1時に寝て4時に起きて7時に起きた。
テックブログ執筆 先週から調査している内容 についてテックブログを書き始めた。マネジメントや実装をしていると筆が進まなくて書き始めるのが随分と遅くなってしまった。学校の試験前に、試験勉強やらずに部屋の掃除をやってしまったりするような感覚。午前中は昨日 go-ldap に送った pr がまとめてマージされた。その修正を取り込んだライブラリのバージョンで関連するところのコードをリファクタリングしていた。それでもようやく書き始めた。書き始めたら一気に 2/3 は書けた。本当は晩ご飯を食べた後にレビューできるところまで書いてしまおうと思っていたが、そこまで体力 (集中力) が続かなかった。なんとなく張り合いがなくて適当なところで妥協してしまう。
試行錯誤から学ぶ開発スタイル たまたまみかけた記事でひどい内容の記事をみた。一読しただけでもやもやしていたのを知人と議論していて言語化できるようになったので書いてみる。
エンジニアが仕様案を手戻りさせるアンチパターンはもう終わりにしよう もっと前段にエンジニアが議論に参加する、なんなら議論をリードするくらいのことをしていく必要があるでしょう。
こういうこと言い出すマネージャー (PO) 多いし、意見そのものは一理あるんだけど、これをエンジニアがイニシアティブとってやっていたらマネージャーいらないでしょ？ということを自覚していない。もっと言うと、PO という責任のある立場の人が大変という理由で責任放棄しているようにみえてしまう。(翻訳) ビッグテックのプロジェクトマネジメントとスクラム不在の謎 という記事では実際にテックリードまたはエンジニアがプロジェクトのイニシアティブを取っていると書かれている。もしそうするなら、まず自身のスキル不足や未熟さを受け入れないといけない。
マネージャー (PO) にとって大きな役割は意思決定であって、仕様案や計画において技術的なところがわからないのであれば、エンジニアに委譲したり相談して事前にいくらでも調整できるはずだし、その調整作業そのものはマネージャーの仕事の1つと言える。そういった調整をマネージャーがやるからエンジニアは実開発の設計や実装に集中できる。結果的に生産性も上がる。この文章から伺えることはリファインメントや計画に臨んだときにダメ出しされてやり直すことを手戻り、大変、効率が悪いとネガティブに捉えている。逆に言えば、最初から完璧に仕様案を作れるはずだと思い込んでいるふしがある。
そして、誰もが知っていることだが、最初から完璧な仕様案や計画など作れるはずがなく、不確実性を許容しながらスクラムやアジャイル開発といった開発方法論の取り組みで調整していくというのが、モダンな開発のやり方である。その試行錯誤や手戻りは無駄なことではなく、チームやプロジェクトが学ぶべきことの1つだという考えがこの文章からは読み取れない。そして、自分が仕様案を適切に作れなかったのを自分のスキル不足だと認めず、チームのエンジニアが議論に参加していないからだと責任転嫁している。それはマネージャーが技術的に大事なことを理解できていなかったとふりかえり、計画を修正したり、次に計画するときは同じようなことが起こらないよう、努めていくというのがスクラム的なプロジェクトの進め方になるはずだ。手戻りはアンチパターンではなく、学びの過程や必要な試行錯誤であると認めて受け入れるところから始めるべき。</description><content>&lt;p>昨日は夜にいろいろ作業して、1時に寝て4時に起きて7時に起きた。&lt;/p>
&lt;h2 id="テックブログ執筆">テックブログ執筆&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1117/">先週から調査している内容&lt;/a> についてテックブログを書き始めた。マネジメントや実装をしていると筆が進まなくて書き始めるのが随分と遅くなってしまった。学校の試験前に、試験勉強やらずに部屋の掃除をやってしまったりするような感覚。午前中は昨日 go-ldap に送った pr がまとめてマージされた。その修正を取り込んだライブラリのバージョンで関連するところのコードをリファクタリングしていた。それでもようやく書き始めた。書き始めたら一気に 2/3 は書けた。本当は晩ご飯を食べた後にレビューできるところまで書いてしまおうと思っていたが、そこまで体力 (集中力) が続かなかった。なんとなく張り合いがなくて適当なところで妥協してしまう。&lt;/p>
&lt;h2 id="試行錯誤から学ぶ開発スタイル">試行錯誤から学ぶ開発スタイル&lt;/h2>
&lt;p>たまたまみかけた記事でひどい内容の記事をみた。一読しただけでもやもやしていたのを知人と議論していて言語化できるようになったので書いてみる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://yigarashi.hatenablog.com/entry/2023/11/20/093000">エンジニアが仕様案を手戻りさせるアンチパターンはもう終わりにしよう&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>もっと前段にエンジニアが議論に参加する、なんなら議論をリードするくらいのことをしていく必要があるでしょう。&lt;/p>
&lt;/blockquote>
&lt;p>こういうこと言い出すマネージャー (PO) 多いし、意見そのものは一理あるんだけど、これをエンジニアがイニシアティブとってやっていたらマネージャーいらないでしょ？ということを自覚していない。もっと言うと、PO という責任のある立場の人が大変という理由で責任放棄しているようにみえてしまう。&lt;a href="https://t2y.hatenablog.jp/entry/2023/09/03/011023">(翻訳) ビッグテックのプロジェクトマネジメントとスクラム不在の謎&lt;/a> という記事では実際にテックリードまたはエンジニアがプロジェクトのイニシアティブを取っていると書かれている。もしそうするなら、まず自身のスキル不足や未熟さを受け入れないといけない。&lt;/p>
&lt;p>マネージャー (PO) にとって大きな役割は意思決定であって、仕様案や計画において技術的なところがわからないのであれば、エンジニアに委譲したり相談して事前にいくらでも調整できるはずだし、その調整作業そのものはマネージャーの仕事の1つと言える。そういった調整をマネージャーがやるからエンジニアは実開発の設計や実装に集中できる。結果的に生産性も上がる。この文章から伺えることはリファインメントや計画に臨んだときにダメ出しされてやり直すことを手戻り、大変、効率が悪いとネガティブに捉えている。逆に言えば、最初から完璧に仕様案を作れるはずだと思い込んでいるふしがある。&lt;/p>
&lt;p>そして、誰もが知っていることだが、最初から完璧な仕様案や計画など作れるはずがなく、不確実性を許容しながらスクラムやアジャイル開発といった開発方法論の取り組みで調整していくというのが、モダンな開発のやり方である。その試行錯誤や手戻りは無駄なことではなく、チームやプロジェクトが学ぶべきことの1つだという考えがこの文章からは読み取れない。そして、自分が仕様案を適切に作れなかったのを自分のスキル不足だと認めず、チームのエンジニアが議論に参加していないからだと責任転嫁している。それはマネージャーが技術的に大事なことを理解できていなかったとふりかえり、計画を修正したり、次に計画するときは同じようなことが起こらないよう、努めていくというのがスクラム的なプロジェクトの進め方になるはずだ。手戻りはアンチパターンではなく、学びの過程や必要な試行錯誤であると認めて受け入れるところから始めるべき。&lt;/p></content></item><item><title>ジョブチェンジのアドバイス</title><link>/diary/posts/2023/1118/</link><pubDate>Sat, 18 Nov 2023 12:38:00 +0900</pubDate><guid>/diary/posts/2023/1118/</guid><description>能をみて帰ってきた後に晩ご飯を食べたらオフィスへ戻ってもよかったんだけど、なんかだらだらしているうちに22時になって、もういっかという感じでさぼってた。それから寝て1時に起きて4時に起きて7時過ぎに起きた。
ストレッチ 今週はのんびりしていた気がする。お昼もずっと自炊していて健康によいような感じがあった。実際ストレッチを受けていて、いつもよりも負荷も疲労もないように感じた。強いて言えば、左ふくらはぎと二の腕の辺りがやや張りがあったぐらい。あとコロナワクチンを接種して2週間以上経って、いまの自分は無敵だと思うストレスの無さもあってか、体調がよい。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。お尻の筋肉を鍛えるエクササイズを教えてもらった。
もくもく会 神戸でもくもく会 に参加した。ON PAPER というコワーキングスペースで開催された。うちの会社から徒歩2分ぐらいの場所にある。窓際は西日でやや光が気になったが、10階で外を眺めながら作業できるのはそれなりに快適で、広くて設備が新しくて雰囲気のよい施設だった。またイベントがあれば参加してみたいと思う。主催者がこのコワーキングスペースのメンバーまたは関係者なのかな？よく分かっていないけど、とくに参加料は受け取らずにコミュニティイベントを開催されていた。もくもく会のイベントを今後も続けるかどうかはまだ分からないとのこと。
主催者の関係者で異業種からジョブチェンジを考えている方が2人いていくつかやり取りした。1人は26歳でまだ若いので実績がなくても第2新卒枠でいけばいいのではないかと思う。もう1人は30歳でちょっと第2新卒は厳しそうだが、プログラミングスクールに通ってちゃんと勉強していて、自分で cms っぽい web アプリケーションを rails で開発されていた。デモもみせてもらったが、web アプリケーションでよく実装する機能を一通りは実装されていて、パッとみた感じはよさそうにみえた。
RUNTEQ というプログラミングスクールで勉強しているとのこと。話を聞く分には浮ついたスクールではなく、自分で調べて考えて作れというスパルタ的な方でキーワード以外あまり教えてくれないといったことを話していた。それはそれで自分で調べて理解して実装しないといけない。あと chatgpt に聞きながらも実装していると話していて、いまどきの未経験者は chatgpt に頼るのもよいと思う。最初は誰もがコピペで振る舞いを検証しながらそのコードが正しいかどうかを自分で理解して書けるようになればよい。未経験から半年ちょっと学んで、rails でここまで動くものが作れるなら十分に自分で学んで作る能力はあると思う。ポテンシャル採用でよい会社に入れればうまくステップアップできるのではないかと思う。
IT 業界へジョブチェンジしたい人たちも増えたように思う。未経験の方々が最初に経験を積むよいお仕事はないだろうか。前にもこの話題を誰かにしたか、どこかで書いた気がする。お金をもらう以上、発注者がいて、責任をもって成果物の納品を期待している人がいる限り、いくら価格調整をしても未経験者にシステム開発してほしくないだろうし、してもよいけど責任者が品質を担保してほしいと思うのは自然だと思う。普通の会社なら先輩がついて経験の浅い開発者の面倒をしっかりみている (はず) 。私もいま若い開発者を少なくない割合の時間を割いて指導している。経験の浅い開発者を同時に面倒をみることは物理的にできない。せいぜい2-3人といったころだろうか。教えるというドメインは労働集約になるのでスケールしない。実務のシステム開発を教えるビジネスというのはちょっと成り立たないとは思う。</description><content>&lt;p>能をみて帰ってきた後に晩ご飯を食べたらオフィスへ戻ってもよかったんだけど、なんかだらだらしているうちに22時になって、もういっかという感じでさぼってた。それから寝て1時に起きて4時に起きて7時過ぎに起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今週はのんびりしていた気がする。お昼もずっと自炊していて健康によいような感じがあった。実際ストレッチを受けていて、いつもよりも負荷も疲労もないように感じた。強いて言えば、左ふくらはぎと二の腕の辺りがやや張りがあったぐらい。あとコロナワクチンを接種して2週間以上経って、いまの自分は無敵だと思うストレスの無さもあってか、体調がよい。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。お尻の筋肉を鍛えるエクササイズを教えてもらった。&lt;/p>
&lt;h2 id="もくもく会">もくもく会&lt;/h2>
&lt;p>&lt;a href="https://study-kobe.connpass.com/event/299620/">神戸でもくもく会&lt;/a> に参加した。&lt;a href="https://onpaper.jp/">ON PAPER&lt;/a> というコワーキングスペースで開催された。うちの会社から徒歩2分ぐらいの場所にある。窓際は西日でやや光が気になったが、10階で外を眺めながら作業できるのはそれなりに快適で、広くて設備が新しくて雰囲気のよい施設だった。またイベントがあれば参加してみたいと思う。主催者がこのコワーキングスペースのメンバーまたは関係者なのかな？よく分かっていないけど、とくに参加料は受け取らずにコミュニティイベントを開催されていた。もくもく会のイベントを今後も続けるかどうかはまだ分からないとのこと。&lt;/p>
&lt;p>主催者の関係者で異業種からジョブチェンジを考えている方が2人いていくつかやり取りした。1人は26歳でまだ若いので実績がなくても第2新卒枠でいけばいいのではないかと思う。もう1人は30歳でちょっと第2新卒は厳しそうだが、プログラミングスクールに通ってちゃんと勉強していて、自分で cms っぽい web アプリケーションを rails で開発されていた。デモもみせてもらったが、web アプリケーションでよく実装する機能を一通りは実装されていて、パッとみた感じはよさそうにみえた。&lt;/p>
&lt;p>&lt;a href="https://runteq.jp/curriculum">RUNTEQ&lt;/a> というプログラミングスクールで勉強しているとのこと。話を聞く分には浮ついたスクールではなく、自分で調べて考えて作れというスパルタ的な方でキーワード以外あまり教えてくれないといったことを話していた。それはそれで自分で調べて理解して実装しないといけない。あと chatgpt に聞きながらも実装していると話していて、いまどきの未経験者は chatgpt に頼るのもよいと思う。最初は誰もがコピペで振る舞いを検証しながらそのコードが正しいかどうかを自分で理解して書けるようになればよい。未経験から半年ちょっと学んで、rails でここまで動くものが作れるなら十分に自分で学んで作る能力はあると思う。ポテンシャル採用でよい会社に入れればうまくステップアップできるのではないかと思う。&lt;/p>
&lt;p>IT 業界へジョブチェンジしたい人たちも増えたように思う。未経験の方々が最初に経験を積むよいお仕事はないだろうか。前にもこの話題を誰かにしたか、どこかで書いた気がする。お金をもらう以上、発注者がいて、責任をもって成果物の納品を期待している人がいる限り、いくら価格調整をしても未経験者にシステム開発してほしくないだろうし、してもよいけど責任者が品質を担保してほしいと思うのは自然だと思う。普通の会社なら先輩がついて経験の浅い開発者の面倒をしっかりみている (はず) 。私もいま若い開発者を少なくない割合の時間を割いて指導している。経験の浅い開発者を同時に面倒をみることは物理的にできない。せいぜい2-3人といったころだろうか。教えるというドメインは労働集約になるのでスケールしない。実務のシステム開発を教えるビジネスというのはちょっと成り立たないとは思う。&lt;/p></content></item><item><title>珍しく余裕のなかった一日</title><link>/diary/posts/2023/1010/</link><pubDate>Tue, 10 Oct 2023 21:16:44 +0900</pubDate><guid>/diary/posts/2023/1010/</guid><description>0時に寝て何度か起きて7時過ぎに起きた。眠れたような、そうじゃないようなよく分からない起き方をした。お昼ご飯を食べる間もなく、打ち合わせとコードレビューで1日を終えた。連休明けでよい慣らしになった。
税理士さんとの打ち合わせ2 税理士さん探し の続き。今回話した方は公認会計士だった。監査ができるのが公認会計士で、税務の申告ができるのが税理士という役割の違いになる。会計監査も含めてチェックしてほしかったら公認会計士さんにお願いするといった役割分担になるかもしれない。話してみて、若くて理路整然として悪い印象はなにもなかったのだけど、逆にこの人がうちの会社の会計／税務を親身にやってくれそうにもみえなかったし、ホームページの事業内容をみても公認会計士だから税務のビジネスだけではなく、もっと大きな会計のお仕事の方がを目指しているようにもみえた。同じ質問をして、前回の税理士さんの回答の違いなども考慮しながら選定の判断材料にはなるなと思いながらやり取りしていた。選択する側の打ち合わせはおもしろい。
アーキテクチャの再考 お手伝いしているシステム開発で、私の中ではもうアーキテクチャは固まったかな？と考えていたのが、お客さんと話していて、さらなる要件や展望を聞いているとそうじゃなかったことに気付いた。どうやら最初の実装としてはいまのアーキテクチャを堅牢に作って、その次の要件として待っていてくれたようにみえる。
私の認識を正す意味も含めて、さらにお客さんの要件や世の中の競合製品に対して競争力をもつにはどうするかといった視点をざっくばらんに雑談した。もう1段階アーキテクチャを見直す必要があるなと思えた。開発に着手して今月末でちょうど1年が経つ。これまで大きなアーキテクチャの変更もなく、順調に開発は進んできたものの、ここらで見直しやズレの補正が必要になってきてもなんらおかしくはない。いまの開発フェーズでは対応しないが、次の開発フェーズに向けてのアイディアの1つとしてアーキテクチャの再考が必要なことを認識した。</description><content>&lt;p>0時に寝て何度か起きて7時過ぎに起きた。眠れたような、そうじゃないようなよく分からない起き方をした。お昼ご飯を食べる間もなく、打ち合わせとコードレビューで1日を終えた。連休明けでよい慣らしになった。&lt;/p>
&lt;h2 id="税理士さんとの打ち合わせ2">税理士さんとの打ち合わせ2&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/1006/#税理士さんとの打ち合わせ1">税理士さん探し&lt;/a> の続き。今回話した方は公認会計士だった。監査ができるのが公認会計士で、税務の申告ができるのが税理士という役割の違いになる。会計監査も含めてチェックしてほしかったら公認会計士さんにお願いするといった役割分担になるかもしれない。話してみて、若くて理路整然として悪い印象はなにもなかったのだけど、逆にこの人がうちの会社の会計／税務を親身にやってくれそうにもみえなかったし、ホームページの事業内容をみても公認会計士だから税務のビジネスだけではなく、もっと大きな会計のお仕事の方がを目指しているようにもみえた。同じ質問をして、前回の税理士さんの回答の違いなども考慮しながら選定の判断材料にはなるなと思いながらやり取りしていた。選択する側の打ち合わせはおもしろい。&lt;/p>
&lt;h2 id="アーキテクチャの再考">アーキテクチャの再考&lt;/h2>
&lt;p>お手伝いしているシステム開発で、私の中ではもうアーキテクチャは固まったかな？と考えていたのが、お客さんと話していて、さらなる要件や展望を聞いているとそうじゃなかったことに気付いた。どうやら最初の実装としてはいまのアーキテクチャを堅牢に作って、その次の要件として待っていてくれたようにみえる。&lt;/p>
&lt;p>私の認識を正す意味も含めて、さらにお客さんの要件や世の中の競合製品に対して競争力をもつにはどうするかといった視点をざっくばらんに雑談した。もう1段階アーキテクチャを見直す必要があるなと思えた。開発に着手して今月末でちょうど1年が経つ。これまで大きなアーキテクチャの変更もなく、順調に開発は進んできたものの、ここらで見直しやズレの補正が必要になってきてもなんらおかしくはない。いまの開発フェーズでは対応しないが、次の開発フェーズに向けてのアイディアの1つとしてアーキテクチャの再考が必要なことを認識した。&lt;/p></content></item><item><title>次開発の要件決めは既定路線</title><link>/diary/posts/2023/0928/</link><pubDate>Thu, 28 Sep 2023 08:23:48 +0900</pubDate><guid>/diary/posts/2023/0928/</guid><description>1時に寝て何度か起きて7時に起きた。エアコンを入れていると夜は寒くなってきた。
feedly pro+ にアップグレード 前からやろうやろうと思っていながら忘れて放置していた feedly のサービスに課金した。基本的に sns をやめていく方針でいるため、情報収集のソースを rss リーダーに戻そうと考えている。これまでも sns と並行で feedly を使ってはいたんだけど、もうちょっと feedly の機能も使ってインプットの効率を上げられないかと考え始めた。Pricing をみると、pro, pro+, enterprise の3つのプランがある。真ん中のプランが推しのようだったのであまり調べもせず Pro+ プランを選択した。いまのところ、検索の機能を使うぐらいでしかないが、そのうち ai 機能的なものも触ってみようと思う。
次開発の優先順位付けと担当者の割り当て 先週の要件発散会議 の続き。発散させた要件を整理して優先順位を決めて、担当者まで割り当ててしまった。課題管理がうまくできている必然なのか、なにも迷わずに自然にこのモジュールは○○さんでといった棲み分けもできて、それぞれが役割を果たせば開発の要件が満たせる体制になっている。全体像としての要件一覧は概ね用意した通りではあったものの、要件や設計の詳細の話しをしていると、私の要件の誤解もいくつかあって、それらは訂正しながら設計していくことにはなる。それでもメンバーも成長してきて、私がお膳立てしなくても、メンバーが自ら考えてうまくいくように設計してくれそうな雰囲気もみえてきたりしていて、それによって、私は面倒で厄介なインフラの再整備に注力できたりもしている。前開発がうまくいったので、なんとなく次開発もうまくいきそうな、始まる前から気を抜き過ぎにも思えるが、もう始まる前から開発が終わっている (うまくいくことが分かっている) ような感覚をもっている。できることは分かっていて、あとはどれだけの量を次開発で実装できるかといった、私が区切りの線をどこに引くかだけ決めればいいんじゃないかと考えている。よいチームになってきたなとちょっと誇らしい。</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。エアコンを入れていると夜は寒くなってきた。&lt;/p>
&lt;h2 id="feedly-pro-にアップグレード">feedly pro+ にアップグレード&lt;/h2>
&lt;p>前からやろうやろうと思っていながら忘れて放置していた feedly のサービスに課金した。基本的に sns をやめていく方針でいるため、情報収集のソースを rss リーダーに戻そうと考えている。これまでも sns と並行で feedly を使ってはいたんだけど、もうちょっと feedly の機能も使ってインプットの効率を上げられないかと考え始めた。&lt;a href="https://feedly.com/i/pro">Pricing&lt;/a> をみると、pro, pro+, enterprise の3つのプランがある。真ん中のプランが推しのようだったのであまり調べもせず &lt;a href="https://feedly.com/i/landing/proPlus">Pro+&lt;/a> プランを選択した。いまのところ、検索の機能を使うぐらいでしかないが、そのうち ai 機能的なものも触ってみようと思う。&lt;/p>
&lt;h2 id="次開発の優先順位付けと担当者の割り当て">次開発の優先順位付けと担当者の割り当て&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0921/">先週の要件発散会議&lt;/a> の続き。発散させた要件を整理して優先順位を決めて、担当者まで割り当ててしまった。課題管理がうまくできている必然なのか、なにも迷わずに自然にこのモジュールは○○さんでといった棲み分けもできて、それぞれが役割を果たせば開発の要件が満たせる体制になっている。全体像としての要件一覧は概ね用意した通りではあったものの、要件や設計の詳細の話しをしていると、私の要件の誤解もいくつかあって、それらは訂正しながら設計していくことにはなる。それでもメンバーも成長してきて、私がお膳立てしなくても、メンバーが自ら考えてうまくいくように設計してくれそうな雰囲気もみえてきたりしていて、それによって、私は面倒で厄介なインフラの再整備に注力できたりもしている。前開発がうまくいったので、なんとなく次開発もうまくいきそうな、始まる前から気を抜き過ぎにも思えるが、もう始まる前から開発が終わっている (うまくいくことが分かっている) ような感覚をもっている。できることは分かっていて、あとはどれだけの量を次開発で実装できるかといった、私が区切りの線をどこに引くかだけ決めればいいんじゃないかと考えている。よいチームになってきたなとちょっと誇らしい。&lt;/p></content></item><item><title>プロジェクト管理のドキュメントや資料の更新</title><link>/diary/posts/2023/0926/</link><pubDate>Tue, 26 Sep 2023 14:48:54 +0900</pubDate><guid>/diary/posts/2023/0926/</guid><description>23時に寝て何度か起きて7時に起きた。
開発方法論／開発ガイドの更新 前回の改訂 から約4ヶ月ぶりに開発方法論と開発ガイドを改訂した。
開発方法論: プロダクトで採用している開発方法論の概念をまとめる 開発ガイド: 開発方法論を具体的に実践する方法についてまとめる 近いうち、チームに新規メンバーが入る。今回の開発を経て新たにわかったことや変わったところなどを更新するつもりで全体を読み直してみたが、大きく変わったところはなく小さいアップデートに留まった。開発方法論に 情報共有とコミュニケーションのレベル というタイトルで5段階のレベルについての考え方を追記した。この内容は私もまだ完全に言語化できているわけではない。「聞かなくてもわかる」という価値観の存在をまったく疑っていないが、その背景にあるコミュニケーションの在り方や人間関係や組織での運用についてまだ曖昧なところが多い。それも含めて考えるよい機会だと思ってうちのチームに向けた内容に整理し直してまとめてみた。もう2-3回ぐらいこのテーマで話しをしたりすると、より言語化できてもっとよいものができそうな気配は感じている。
fun/done/learn のカスタマイズ 昨年からふりかえりの手法として fun/done/learn という手法を採用している。2週間のイテレーションが終わったときに毎回このフレームワークを使って、やったことをメンバーに共有するといった用途のために使っている。大きな開発のふりかえりを行ったときにマイルストーンごとの fun/done/learn の個数の変化などもふりかえってはいるが、そこの統計値がなにかに役に立つようには、いまのところ、うちのチームでは思えない。
今回のふりかえりをしているときにメンバーから done はいらないのではないか？という意見が出た。この手法の発明者のオリジナルの記事 ファン・ダン・ラーン(FDL)ふりかえりボード と読むと、done = deliver だし、done しなかったことも含めてのふりかえりを実践していたことが伺える。うちらはやったことをふりかえるためのフレームワークとして活用しているため、done がデフォルトでプラス fun/learn が付くといった運用になっていた。その通りだなと納得して done に置き換わる、うちらの開発の運用にあうカテゴリを考えてみて give を採用した。ゴロがよいように fun/give/learn と呼ぶ。
give とは、このマイルストーンでやったことを形式知として、他のメンバーに共有可能な状態にしたという意図を表す。wiki を書いたりするのもよいし、テックブログを書くのもよい。暗黙知を形式知に変えるには少し手間暇がかかるのでちょうどよいカテゴリに思える。3つのカテゴリに属するときにもっとも価値が高いような運用にも向いている。そのためのボードも作って、これを jamboard の背景に設定してふりかえりをしている。何ヶ月か運用してみて、うまくいきそうだったら fun/done/learn の亜種としてどうだろう？といった提案のテックブログを書いてみたい。</description><content>&lt;p>23時に寝て何度か起きて7時に起きた。&lt;/p>
&lt;h2 id="開発方法論開発ガイドの更新">開発方法論／開発ガイドの更新&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0524/#開発方法論／開発ガイドの更新">前回の改訂&lt;/a> から約4ヶ月ぶりに開発方法論と開発ガイドを改訂した。&lt;/p>
&lt;ul>
&lt;li>開発方法論: プロダクトで採用している開発方法論の概念をまとめる&lt;/li>
&lt;li>開発ガイド: 開発方法論を具体的に実践する方法についてまとめる&lt;/li>
&lt;/ul>
&lt;p>近いうち、チームに新規メンバーが入る。今回の開発を経て新たにわかったことや変わったところなどを更新するつもりで全体を読み直してみたが、大きく変わったところはなく小さいアップデートに留まった。開発方法論に &lt;a href="/diary/diary/posts/2022/0107/#情報共有とコミュニケーションコスト">情報共有とコミュニケーションのレベル&lt;/a> というタイトルで5段階のレベルについての考え方を追記した。この内容は私もまだ完全に言語化できているわけではない。「聞かなくてもわかる」という価値観の存在をまったく疑っていないが、その背景にあるコミュニケーションの在り方や人間関係や組織での運用についてまだ曖昧なところが多い。それも含めて考えるよい機会だと思ってうちのチームに向けた内容に整理し直してまとめてみた。もう2-3回ぐらいこのテーマで話しをしたりすると、より言語化できてもっとよいものができそうな気配は感じている。&lt;/p>
&lt;h2 id="fundonelearn-のカスタマイズ">fun/done/learn のカスタマイズ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2022/1129/#ふりかえり">昨年からふりかえりの手法として fun/done/learn&lt;/a> という手法を採用している。2週間のイテレーションが終わったときに毎回このフレームワークを使って、やったことをメンバーに共有するといった用途のために使っている。大きな開発のふりかえりを行ったときにマイルストーンごとの fun/done/learn の個数の変化などもふりかえってはいるが、そこの統計値がなにかに役に立つようには、いまのところ、うちのチームでは思えない。&lt;/p>
&lt;p>今回のふりかえりをしているときにメンバーから done はいらないのではないか？という意見が出た。この手法の発明者のオリジナルの記事 &lt;a href="https://qiita.com/yattom/items/90ac533d993d3a2d2d0f">ファン・ダン・ラーン(FDL)ふりかえりボード&lt;/a> と読むと、done = deliver だし、done しなかったことも含めてのふりかえりを実践していたことが伺える。うちらはやったことをふりかえるためのフレームワークとして活用しているため、done がデフォルトでプラス fun/learn が付くといった運用になっていた。その通りだなと納得して done に置き換わる、うちらの開発の運用にあうカテゴリを考えてみて give を採用した。ゴロがよいように fun/give/learn と呼ぶ。&lt;/p>
&lt;p>give とは、このマイルストーンでやったことを形式知として、他のメンバーに共有可能な状態にしたという意図を表す。wiki を書いたりするのもよいし、テックブログを書くのもよい。暗黙知を形式知に変えるには少し手間暇がかかるのでちょうどよいカテゴリに思える。3つのカテゴリに属するときにもっとも価値が高いような運用にも向いている。そのためのボードも作って、これを jamboard の背景に設定してふりかえりをしている。何ヶ月か運用してみて、うまくいきそうだったら fun/done/learn の亜種としてどうだろう？といった提案のテックブログを書いてみたい。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0927_fun-give-learn.png"/>
&lt;/figure></content></item><item><title>次開発と要諦調和</title><link>/diary/posts/2023/0921/</link><pubDate>Thu, 21 Sep 2023 15:45:39 +0900</pubDate><guid>/diary/posts/2023/0921/</guid><description>0時に寝て何度か起きて7時に起きた。飲み歩いてお腹いっぱいでお酒もい飲んで寝たから連日でよく眠れなくて初めて泊まったホテルの部屋の印象が悪くなってしまった。ホテルに非があるとは思っていない。
3次開発の要件打ち合わせ 前回の開発課題の打ち合わせはここ 。2時間をとって要件を発散させる。
次は3次開発になるため、2次開発でできなかったこと + アルファな要件を発散させる。概ね予定調和にもなってしまって、私の中でモチベーションコントロールが難しい。私が準備していった展望や構想がブレていないことはよいことでもあるのだけど、会議がつまらないというか、私が緊張感を失ってしまう。私は自分の構想を一番理解しているのでそれをもっと明文化して関係者やメンバーに伝える必要がある。そこに私にはなかった刺激がいくつか入るとよいと考えている。1人の人間の考えることなんか、せいぜいうまくいって8割だと思う。残りの2割は誤っていたり、意味をなさなかったりするのではないか。だからこそ、他者の反論や別の視点の意見には注意している。
今回は用途の違う管理画面をどう設計するかが最も難しい意思決定の話題だった。いまも管理画面はあるが、一般ユーザーが使う情報更新のための管理画面を既存の管理画面に付加するか、独立した管理画面として新規に作るか。話し合った結果、後者のやり方で進めようと私は考えている。もともとの私の意見もそちら側であるし、次の開発体制やマイクロサービスに近いいまのアーキテクチャの構成を総合的にみてそれがよいと考えている。もうちょと突っ走ってやってみてメンバーから反発が起きないかを伺ってみることにする。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。飲み歩いてお腹いっぱいでお酒もい飲んで寝たから連日でよく眠れなくて初めて泊まったホテルの部屋の印象が悪くなってしまった。ホテルに非があるとは思っていない。&lt;/p>
&lt;h2 id="3次開発の要件打ち合わせ">3次開発の要件打ち合わせ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0518/">前回の開発課題の打ち合わせはここ&lt;/a> 。2時間をとって要件を発散させる。&lt;/p>
&lt;p>次は3次開発になるため、2次開発でできなかったこと + アルファな要件を発散させる。概ね予定調和にもなってしまって、私の中でモチベーションコントロールが難しい。私が準備していった展望や構想がブレていないことはよいことでもあるのだけど、会議がつまらないというか、私が緊張感を失ってしまう。私は自分の構想を一番理解しているのでそれをもっと明文化して関係者やメンバーに伝える必要がある。そこに私にはなかった刺激がいくつか入るとよいと考えている。1人の人間の考えることなんか、せいぜいうまくいって8割だと思う。残りの2割は誤っていたり、意味をなさなかったりするのではないか。だからこそ、他者の反論や別の視点の意見には注意している。&lt;/p>
&lt;p>今回は用途の違う管理画面をどう設計するかが最も難しい意思決定の話題だった。いまも管理画面はあるが、一般ユーザーが使う情報更新のための管理画面を既存の管理画面に付加するか、独立した管理画面として新規に作るか。話し合った結果、後者のやり方で進めようと私は考えている。もともとの私の意見もそちら側であるし、次の開発体制やマイクロサービスに近いいまのアーキテクチャの構成を総合的にみてそれがよいと考えている。もうちょと突っ走ってやってみてメンバーから反発が起きないかを伺ってみることにする。&lt;/p></content></item><item><title>ふりかえりのふりかえり、のふりかえり</title><link>/diary/posts/2023/0919/</link><pubDate>Tue, 19 Sep 2023 12:10:39 +0900</pubDate><guid>/diary/posts/2023/0919/</guid><description>深夜に1-2時間仮眠をとったものの、あまりうまく眠れなくて、3時に起きて準備して5時に家を出た。新幹線でも寝ていたが、夕方にはやはり眠くなった。
約4ヶ月間の開発のふりかえり 前回のふりかえりのふりかえりはここ 。2時間をとってこの約4ヶ月間の開発のふりかえりをした。
今回は2次開発というのもあって、メンバーも開発に成熟したし、1次開発でできなかったことのいろいろが改善できそうな見通しが立ってきたし、最高ではないものの最善ではあったんじゃないかと思う。私からみても十分によいものを提供できたと思う。8月の後半に私がテンパっていたのはなんだったのか？と思うぐらい、私が後半に詰め込んでやり過ぎたところもあったりはしたものの、それも終わってみればきれいにすべて回収できたのでよかったと思う。課題管理システムから情報を抜き出して1次開発のときと同じ指標の比較もしてみた。それによってメンバーのパフォーマンスが上がっていることも定量的に確認できた。これはまた会社のブログにもいずれ書きたい。これでメンバーも自信を付けて次の開発もがんばってくれるといいなと思う。今回はよい開発になったなと思う。
今回はいろいろ事情があって、私が東京へ出張してそのオフィスで1人でテレビ会議でふりかえりをするといったやり方になった。本当はこういう区切りになるふりかえりにもっと積極的に参加してほしい、オフラインで会議に参加してほしいと思う気持ちはある。それはそれで私の古い考えかもしれないし、メンバーからしてみたら、マネージャーがふりかえりにやかまして疎ましく思っているのかもしれない。若い人たちの考え方にあわせるという意味では、大きなふりかえりをテレビ会議で行うのも構わないのだが、オフィスで1人会議は私のテンションが上がらないことにも気付いた。先週から準備して資料を作って、わざわざ出張して会議をして、会議の場に誰もいないというのは、どう繕っても、私も出張せずにリモート会議した方が合理的だったと思えてしまう。その自分の中の違和感なのか反感に対して新しい答えを見い出さないとこの体制はうまくいかないと新たに思う一時でもあった。
大崎に泊まる 五反田のいつもホテルに泊まるのも飽きたので気分転換に大崎の ニューオータニイン東京 に泊まってみた。五反田から大崎は一駅の距離で川沿いを歩いていける。この川にかかる橋が夜はライトアップされていて散歩していて気持ちがよい。まだちょっと暑かったけれど、15分もあれば歩ける。宿泊プランを朝食付きプランにすると素泊まりに比べて500-1000円高くなる。それでもいつも泊まっているホテルの料金と比べて大差なかったので試しに朝食付きにしてみた。料理の種類の多い朝食ビッフェでとてもよかった。外食が多いと野菜が不足しがちになる。私はこういうところで基本的に野菜サラダを大盛りにしてたくさん食べるようにしている。その野菜の種類やコンビネーションのやり方が増えるほどアレンジする楽しみも増えて楽しい。これはいいなと思って今後もしばらく大崎に泊まってみようと思う。</description><content>&lt;p>深夜に1-2時間仮眠をとったものの、あまりうまく眠れなくて、3時に起きて準備して5時に家を出た。新幹線でも寝ていたが、夕方にはやはり眠くなった。&lt;/p>
&lt;h2 id="約4ヶ月間の開発のふりかえり">約4ヶ月間の開発のふりかえり&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0516/#半年間の開発のふりかえり">前回のふりかえりのふりかえりはここ&lt;/a> 。2時間をとってこの約4ヶ月間の開発のふりかえりをした。&lt;/p>
&lt;p>今回は2次開発というのもあって、メンバーも開発に成熟したし、1次開発でできなかったことのいろいろが改善できそうな見通しが立ってきたし、最高ではないものの最善ではあったんじゃないかと思う。私からみても十分によいものを提供できたと思う。8月の後半に私がテンパっていたのはなんだったのか？と思うぐらい、私が後半に詰め込んでやり過ぎたところもあったりはしたものの、それも終わってみればきれいにすべて回収できたのでよかったと思う。課題管理システムから情報を抜き出して1次開発のときと同じ指標の比較もしてみた。それによってメンバーのパフォーマンスが上がっていることも定量的に確認できた。これはまた会社のブログにもいずれ書きたい。これでメンバーも自信を付けて次の開発もがんばってくれるといいなと思う。今回はよい開発になったなと思う。&lt;/p>
&lt;p>今回はいろいろ事情があって、私が東京へ出張してそのオフィスで1人でテレビ会議でふりかえりをするといったやり方になった。本当はこういう区切りになるふりかえりにもっと積極的に参加してほしい、オフラインで会議に参加してほしいと思う気持ちはある。それはそれで私の古い考えかもしれないし、メンバーからしてみたら、マネージャーがふりかえりにやかまして疎ましく思っているのかもしれない。若い人たちの考え方にあわせるという意味では、大きなふりかえりをテレビ会議で行うのも構わないのだが、オフィスで1人会議は私のテンションが上がらないことにも気付いた。先週から準備して資料を作って、わざわざ出張して会議をして、会議の場に誰もいないというのは、どう繕っても、私も出張せずにリモート会議した方が合理的だったと思えてしまう。その自分の中の違和感なのか反感に対して新しい答えを見い出さないとこの体制はうまくいかないと新たに思う一時でもあった。&lt;/p>
&lt;h2 id="大崎に泊まる">大崎に泊まる&lt;/h2>
&lt;p>五反田のいつもホテルに泊まるのも飽きたので気分転換に大崎の &lt;a href="https://www.newotani-inntokyo.jp/">ニューオータニイン東京&lt;/a> に泊まってみた。五反田から大崎は一駅の距離で川沿いを歩いていける。この川にかかる橋が夜はライトアップされていて散歩していて気持ちがよい。まだちょっと暑かったけれど、15分もあれば歩ける。宿泊プランを朝食付きプランにすると素泊まりに比べて500-1000円高くなる。それでもいつも泊まっているホテルの料金と比べて大差なかったので試しに朝食付きにしてみた。料理の種類の多い朝食ビッフェでとてもよかった。外食が多いと野菜が不足しがちになる。私はこういうところで基本的に野菜サラダを大盛りにしてたくさん食べるようにしている。その野菜の種類やコンビネーションのやり方が増えるほどアレンジする楽しみも増えて楽しい。これはいいなと思って今後もしばらく大崎に泊まってみようと思う。&lt;/p></content></item><item><title>昼に寝て夜に考える</title><link>/diary/posts/2023/0916/</link><pubDate>Sat, 16 Sep 2023 12:24:09 +0900</pubDate><guid>/diary/posts/2023/0916/</guid><description>0時に寝て何度か起きて7時に起きた。昨日は晩ご飯食べてからだらだらしているうちにいつの間にか寝ていた。今日はオフィス暑くて14時から帰ってきてお昼寝して19時過ぎにまた戻った。
ストレッチ 先週末は実家や四国へ出掛けていたため、ストレッチをお休みしていた。2週間ぶりのストレッチとなる。右足がパンパンでひどいことになっていた。休んだことと出掛けていたことの疲労が重なったのか、右足のどこの部位も調子が悪くて歩くのもやや辛いと言える。相対的に左足が大丈夫なように聞こえるが、普通の感覚ではそれなりに張りがあるので左足も疲労している。あと腰も左右ともに負荷がかかっているように思えた。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。週末はちょっと休もうかと思ったぐらいの疲労度と体調の悪さを実感した。
工事業者の訪問 先日の 暑さ対策委員会 の続き。
ストレッチを終えてオフィスに向かうと、ちょうど同じエレベーターで工事業者さんと鉢合わせになった。いまから作業するところだったらしく、作業前にオフィスに入ってもらって通気口の状況を確認してもらった。いまの室温は30℃を少し上回ったところ。通気口からエアコンの風は出ているが、室内がまったく冷えないことを伝えた。そのときになにかの機器にガスを注入したという話しをしていた。これでダメなら (エアコンの？) メーカーの担当者と別の調査か対策を行うといった話しをされていた。何であれ、調査して原因の切り分けをして、次の作業へ進展している話しを聞いて安心した。但し、今日のところは、夜になっても室温の変化はみられなかった。まだ改善するかどうかはわからない。
遺産分割協議書の契印・割印の要否 弁護士さんから以前、作成した遺産分割協議書に割印をしていないことに気付き、税務署の手続きを進められない可能性があるから、もう一度、相続人全員の割印を取得してほしいと書類が届いた。すでに銀行・法務局の手続きは滞りなく終えている。こんな面倒なことを可能性があるという不確かな情報でやってられないと思って、本当に必要な手続きかどうかを税務署に確認してほしいと返信した。それと同時にググってみると、あるほうが改ざん防止になるので望ましいが、必須ではないという記事が多くみつかる。書類を作成するときに依頼されていれば応じるが、書類作成後になって大半の手続きも終えていて、相続税を払うためだけにそんなことやってられるかと思ってこのまま進めてほしいと押印せず書類も返送した。
https://www.souzoku-zei.jp/souzokuzei/souzoku-tetsuduki/%E9%81%BA%E7%94%A3%E5%88%86%E5%89%B2%E5%8D%94%E8%AD%B0%E6%9B%B8%E6%96%87%E4%BE%8B%E9%9B%86/ https://www.tax-tomoni.co.jp/blog/souzokuzei/stamp/ もちろん税理士さんや税務署に裏付けをとる必要はあるが、ちょっと調べれば分かることをベテランの弁護士さんが調べずに顧客へ工数を転嫁することにがっかりした。
ストーリーポイント再考 少し前にみかけたポストで「ストーリーポイントは機能しない」というものがあった。
Story Points don&amp;#39;t work.
Even Ron Jeffries, who invented them, said he was sorry years ago.
And not only did he apologize, but he called the whole estimation idea &amp;quot;Evil.&amp;quot;
Unfortunately, too many teams still use these points to estimate their work.
Story Points is a made-up… pic.twitter.com/w62WJRU7lg
&amp;mdash; Santiago (@svpino) August 31, 2023 私もストーリーポイント否定派の1人だが、その投稿に発明者ですら謝罪していると書かれていた。それでずっと気になっていたので発明者の元記事を読んでみた。翻訳に近いが、日本語でも要約された記事もある。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。昨日は晩ご飯食べてからだらだらしているうちにいつの間にか寝ていた。今日はオフィス暑くて14時から帰ってきてお昼寝して19時過ぎにまた戻った。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>先週末は実家や四国へ出掛けていたため、ストレッチをお休みしていた。2週間ぶりのストレッチとなる。右足がパンパンでひどいことになっていた。休んだことと出掛けていたことの疲労が重なったのか、右足のどこの部位も調子が悪くて歩くのもやや辛いと言える。相対的に左足が大丈夫なように聞こえるが、普通の感覚ではそれなりに張りがあるので左足も疲労している。あと腰も左右ともに負荷がかかっているように思えた。今日の開脚幅は開始前155cmで、ストレッチ後157cmだった。週末はちょっと休もうかと思ったぐらいの疲労度と体調の悪さを実感した。&lt;/p>
&lt;h2 id="工事業者の訪問">工事業者の訪問&lt;/h2>
&lt;p>先日の &lt;a href="/diary/diary/posts/2023/0915/">暑さ対策委員会&lt;/a> の続き。&lt;/p>
&lt;p>ストレッチを終えてオフィスに向かうと、ちょうど同じエレベーターで工事業者さんと鉢合わせになった。いまから作業するところだったらしく、作業前にオフィスに入ってもらって通気口の状況を確認してもらった。いまの室温は30℃を少し上回ったところ。通気口からエアコンの風は出ているが、室内がまったく冷えないことを伝えた。そのときになにかの機器にガスを注入したという話しをしていた。これでダメなら (エアコンの？) メーカーの担当者と別の調査か対策を行うといった話しをされていた。何であれ、調査して原因の切り分けをして、次の作業へ進展している話しを聞いて安心した。但し、今日のところは、夜になっても室温の変化はみられなかった。まだ改善するかどうかはわからない。&lt;/p>
&lt;h2 id="遺産分割協議書の契印割印の要否">遺産分割協議書の契印・割印の要否&lt;/h2>
&lt;p>弁護士さんから以前、作成した遺産分割協議書に割印をしていないことに気付き、税務署の手続きを進められない可能性があるから、もう一度、相続人全員の割印を取得してほしいと書類が届いた。すでに銀行・法務局の手続きは滞りなく終えている。こんな面倒なことを可能性があるという不確かな情報でやってられないと思って、本当に必要な手続きかどうかを税務署に確認してほしいと返信した。それと同時にググってみると、あるほうが改ざん防止になるので望ましいが、必須ではないという記事が多くみつかる。書類を作成するときに依頼されていれば応じるが、書類作成後になって大半の手続きも終えていて、相続税を払うためだけにそんなことやってられるかと思ってこのまま進めてほしいと押印せず書類も返送した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.souzoku-zei.jp/souzokuzei/souzoku-tetsuduki/%E9%81%BA%E7%94%A3%E5%88%86%E5%89%B2%E5%8D%94%E8%AD%B0%E6%9B%B8%E6%96%87%E4%BE%8B%E9%9B%86/">https://www.souzoku-zei.jp/souzokuzei/souzoku-tetsuduki/%E9%81%BA%E7%94%A3%E5%88%86%E5%89%B2%E5%8D%94%E8%AD%B0%E6%9B%B8%E6%96%87%E4%BE%8B%E9%9B%86/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.tax-tomoni.co.jp/blog/souzokuzei/stamp/">https://www.tax-tomoni.co.jp/blog/souzokuzei/stamp/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>もちろん税理士さんや税務署に裏付けをとる必要はあるが、ちょっと調べれば分かることをベテランの弁護士さんが調べずに顧客へ工数を転嫁することにがっかりした。&lt;/p>
&lt;h2 id="ストーリーポイント再考">ストーリーポイント再考&lt;/h2>
&lt;p>少し前にみかけたポストで「ストーリーポイントは機能しない」というものがあった。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Story Points don&amp;#39;t work.&lt;br>&lt;br>Even Ron Jeffries, who invented them, said he was sorry years ago.&lt;br>&lt;br>And not only did he apologize, but he called the whole estimation idea &amp;quot;Evil.&amp;quot;&lt;br>&lt;br>Unfortunately, too many teams still use these points to estimate their work.&lt;br>&lt;br>Story Points is a made-up… &lt;a href="https://t.co/w62WJRU7lg">pic.twitter.com/w62WJRU7lg&lt;/a>&lt;/p>&amp;mdash; Santiago (@svpino) &lt;a href="https://twitter.com/svpino/status/1697250711632003260?ref_src=twsrc%5Etfw">August 31, 2023&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>私もストーリーポイント否定派の1人だが、その投稿に発明者ですら謝罪していると書かれていた。それでずっと気になっていたので発明者の元記事を読んでみた。翻訳に近いが、日本語でも要約された記事もある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://note.com/shunk_py/n/n6bcf39bbe282">XP創始者、Ron Jeffries氏による「ストーリーポイントの再考」&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ronjeffries.com/articles/019-01ff/story-points/Index.html">Story Points Revisited&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これを読んでみて、発明者も言っていることは真っ当だと思う。ストーリーポイントがいかに誤用されているか、それによって意味のない時間を費やしているか。そもそも見積もりは現実のプロジェクトマネジメントにおいて必要とされるが、実際の開発においてまったく無意味であるといったことなどが書かれていて、ソフトウェア開発を見積もろうとする行為そのものがそもそも間違っていて、それをさらに相対化 (抽象化) させたストーリーポイントが役に立つわけがないとすら思えた。誤用されるなら、スプリントプランニングのためにストーリーポイントを使うのはまったくの無駄とまで言い切っている。&lt;/p>
&lt;p>この記事を読んで不思議なことの1つに、実際にスクラムでストーリーポイントを使ってみれば意味のない指標であることに気付く開発者は多いと思う。スクラムガイドにおいても、見積もりより経験主義の重要性を説いているにも関わらず、なぜこんな誤ったメトリクスがスクラムとセットで導入されているのか、私には理解できない。プロジェクトマネジメントては別の、政治力学においてストーリーポイントが使われているのではないか？という気すらしてくる。&lt;/p>
&lt;p>課題管理の文脈だと、見積もりは勘と経験でよいというのが私の解になる (ストーリーポイントを使ったところで出鱈目なんだから) 。課題管理と見積もりというテーマもなにかしらコンテツになりそうな気がした。&lt;/p></content></item><item><title>資料作りの一日</title><link>/diary/posts/2023/0914/</link><pubDate>Thu, 14 Sep 2023 20:35:21 +0900</pubDate><guid>/diary/posts/2023/0914/</guid><description>23時に寝て何度か起きて6時に起きた。疲労も溜まっているのでなるべく早く寝るように努めている。旅行中ずっと早起きしていたから早起きするのは苦にならない。
今開発の大きなふりかえりの資料作り ふりかえりのために課題管理システムの issue 情報から統計的な数値を取得する。
gitlab の cli ツールを使って issue 情報を取得して mongodb にインポートする。
$ glab api --paginate &amp;#34;groups/product%2Funicorncidm/issues?milestone=2023-09-05&amp;amp;not[labels]=Duplicate,Invalid,Wontfix&amp;#34; | jq -c &amp;#39;.[]&amp;#39; &amp;gt; 2023-09-05-issues.json $ mongoimport --authenticationDatabase=admin --uri &amp;#34;mongodb://root:secret@localhost:27017&amp;#34; --db gitlab --collection issues 2023-09-05-issues.json mongodb で aggregation (sql で言うところの group by 句に相当する) するときはパイプライン処理を実装する。例えば、最初にデータをフィルターして、次にグルーピングして、最後にソートするのは次のようなパラメーターになる。
$ mongosh --username root --password secret test&amp;gt; use gitlab gitlab&amp;gt; db.issues.aggregate([ { $match: { $or: [ { &amp;#34;milestone.title&amp;#34;: &amp;#34;2023-09-05&amp;#34; },{ &amp;#34;milestone.title&amp;#34;: &amp;#34;2023-09-19&amp;#34; } ] } }, { $group: { &amp;#34;_id&amp;#34;: { milestone: &amp;#34;$milestone.</description><content>&lt;p>23時に寝て何度か起きて6時に起きた。疲労も溜まっているのでなるべく早く寝るように努めている。旅行中ずっと早起きしていたから早起きするのは苦にならない。&lt;/p>
&lt;h2 id="今開発の大きなふりかえりの資料作り">今開発の大きなふりかえりの資料作り&lt;/h2>
&lt;p>ふりかえりのために課題管理システムの issue 情報から統計的な数値を取得する。&lt;/p>
&lt;p>gitlab の &lt;a href="https://gitlab.com/gitlab-org/cli">cli&lt;/a> ツールを使って issue 情報を取得して mongodb にインポートする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ glab api --paginate &lt;span style="color:#e6db74">&amp;#34;groups/product%2Funicorncidm/issues?milestone=2023-09-05&amp;amp;not[labels]=Duplicate,Invalid,Wontfix&amp;#34;&lt;/span> | jq -c &lt;span style="color:#e6db74">&amp;#39;.[]&amp;#39;&lt;/span> &amp;gt; 2023-09-05-issues.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ mongoimport --authenticationDatabase&lt;span style="color:#f92672">=&lt;/span>admin --uri &lt;span style="color:#e6db74">&amp;#34;mongodb://root:secret@localhost:27017&amp;#34;&lt;/span> --db gitlab --collection issues 2023-09-05-issues.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>mongodb で aggregation (sql で言うところの group by 句に相当する) するときはパイプライン処理を実装する。例えば、最初にデータをフィルターして、次にグルーピングして、最後にソートするのは次のようなパラメーターになる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ mongosh --username root --password secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test&amp;gt; use gitlab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab&amp;gt; db.issues.aggregate&lt;span style="color:#f92672">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> $match: &lt;span style="color:#f92672">{&lt;/span> $or: &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;milestone.title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-09-05&amp;#34;&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,&lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;milestone.title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-09-19&amp;#34;&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> $group: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_id&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span> milestone: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$milestone&lt;span style="color:#e6db74">.title&amp;#34;&lt;/span> , author: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$author&lt;span style="color:#e6db74">.username&amp;#34;&lt;/span> &lt;span style="color:#f92672">}&lt;/span>, councount: &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sum&lt;span style="color:#e6db74">&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span> $sort: &lt;span style="color:#f92672">{&lt;/span> _id: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これで前回の開発のときに取得した数値と今回の開発の数値を比較してみると、いろいろわかることもあって、メンバーが成長していることも伺えて、課題管理をしながら開発を進めることのメリットを実感できる開発になったのではないかと思う。gitlab のアクティビティ図 (草生え図) をみても前回の開発よりも草がたくさん生えているので課題管理に習熟している様子が伺える。これをあと2-3年ぐらいすれば、課題管理を使いこなせる一般の開発者になるのではないかと思う。課題管理 + イテレーション開発でチームビルディングしていくところの、地盤のようなものはできたようにみえる。&lt;/p>
&lt;p>この草生え図を匿名化して利用許可をもらって、うちの会社でいうところの課題管理ができるようになると、メンバーの働き方はこうなるというサンプルとして紹介させてもらうつもり。また来週メンバーにもその許諾を取ろうと思う。&lt;/p>
&lt;h2 id="次開発の要件打ち合わせの資料作り">次開発の要件打ち合わせの資料作り&lt;/h2>
&lt;p>今開発を始めるときに洗い出した要件の未対応のものと、今開発でやり残した非機能要件の開発課題を資料にまとめてたたき台とした。それだけでも3-4ヶ月分の開発課題になりそうだし、アーキテクチャとして大きな意思決定も1つある。私自身、7割型は決まっているが、考え方や要件によってはもう1つの案でいくのもよいかもしれない。機能要件は実際にお客さん先へ導入するときにもいくつか出てくるだろうけれど、非機能要件の運用に影響を与える懸念のところはなるべく早く改善しておきたい。次の開発期間にそこだけ対応すれば、一定の安心をもってお客さんへ提供できるようになると思う。&lt;/p></content></item><item><title>来週の出張準備</title><link>/diary/posts/2023/0913/</link><pubDate>Wed, 13 Sep 2023 08:04:20 +0900</pubDate><guid>/diary/posts/2023/0913/</guid><description>1時に寝て何度か起きて6時半に起きた。気分転換も兼ねた非日常の小旅行を終えてまた元の生活へ戻していく。
ドキュメント書き 昨日の続き。ドキュメントの一部レビューをお願いしているところがあるので別のところのドキュメントを書いていた。その過程で ldap の anonymous bind の設定ができないような制御になっていることに気付いてその設定を修正したりした。ドキュメントを書いていてバグをみつけた。
近況報告の資料作り 四国から帰ってきたばかりなのに来週は東京へ行かないといけない。開発はほぼ完了しているのでなにも憂いはないが、出張のタイミングで大きなふりかえりや次の開発フェーズの要件の発散などもやりたい。そのための資料の準備がまったくできていないことに昨日の夜、気付いた。明日・明後日ぐらいで準備して、できるだけ事前に参加者に共有したい。いまは忙しくないのだけど、なぜか空き時間をうまく作れなくても毎日バタバタしている感がある。
今日は月例の近況報告の資料を作っていた。客観的に、このタイミングで私を契約終了としてもよいだろうし、私の感覚的には次の開発フェーズを3-4ヶ月みて、その後にチームのメンバーにこのプロダクト開発を委譲するといった段取りがよいのではないかと考えている。そういった話しも来週はしてくるつもり。長く残ったとしても今年度いっぱいが区切りとしてよいのではないかな。</description><content>&lt;p>1時に寝て何度か起きて6時半に起きた。気分転換も兼ねた非日常の小旅行を終えてまた元の生活へ戻していく。&lt;/p>
&lt;h2 id="ドキュメント書き">ドキュメント書き&lt;/h2>
&lt;p>昨日の続き。ドキュメントの一部レビューをお願いしているところがあるので別のところのドキュメントを書いていた。その過程で ldap の anonymous bind の設定ができないような制御になっていることに気付いてその設定を修正したりした。ドキュメントを書いていてバグをみつけた。&lt;/p>
&lt;h2 id="近況報告の資料作り">近況報告の資料作り&lt;/h2>
&lt;p>四国から帰ってきたばかりなのに来週は東京へ行かないといけない。開発はほぼ完了しているのでなにも憂いはないが、出張のタイミングで大きなふりかえりや次の開発フェーズの要件の発散などもやりたい。そのための資料の準備がまったくできていないことに昨日の夜、気付いた。明日・明後日ぐらいで準備して、できるだけ事前に参加者に共有したい。いまは忙しくないのだけど、なぜか空き時間をうまく作れなくても毎日バタバタしている感がある。&lt;/p>
&lt;p>今日は月例の近況報告の資料を作っていた。客観的に、このタイミングで私を契約終了としてもよいだろうし、私の感覚的には次の開発フェーズを3-4ヶ月みて、その後にチームのメンバーにこのプロダクト開発を委譲するといった段取りがよいのではないかと考えている。そういった話しも来週はしてくるつもり。長く残ったとしても今年度いっぱいが区切りとしてよいのではないかな。&lt;/p></content></item><item><title>久しぶりの異文化懇親会</title><link>/diary/posts/2023/0909/</link><pubDate>Sat, 09 Sep 2023 08:16:17 +0900</pubDate><guid>/diary/posts/2023/0909/</guid><description>22時頃には戻ってきたそれから準備したらよいところを、だらだらしてうたた寝して気付いたら2時になっていた。もうこのまま寝て朝起きてから準備しようと3時50分にアラーム設定して起きた。それからお風呂入ってストレッチして荷造りして5時18分に三ノ宮を出発した。
実家 6時21分に実家へ着いた。休憩せずに一気に帰ると約1時間ぐらい。先月ジモティーで譲ってもらっていた机とバランスチェアを実家へ持って帰った。朝ご飯を食べてからバランスチェアを組み立てる。ちょうど机と椅子がよい感じにリモートワーク可能な環境になった。
9時半頃まで実家でのんびり過ごして、言うても暇なので少し早めに香川県へ向けて出発した。
オープンセミナー オープンセミナーとは、中四国地域で開催されている勉強会らしい。コロナ禍前はもっとたくさん開催されていたそうだが、いまは香川、広島、岡山といった地域で復活しているらしい。オープンセミナー2023@香川 に参加した。高松市の高松港の真横にある eｰとぴあ・かがわ という行政っぽいコミュニティ施設のイベントスペースを借りて開催された。実家から10分休憩を1度取った上で約1時間30分で着いた。実家から高松市まで1時間半とみておくとよさそう。
てらださん：Pythonの現状からデータ分析やLLM活用への発展 てらださんの応援も兼ねて参加してみた。基調講演のような位置づけ。参加者の python 習熟度のレベルをみながら話す内容をあわせていた。
あまり知らない ちょっと知っている がっつり使っている 最初は python の用途や得意・不得意といった、入門的な話しから始めつつ、徐々に最近の話題へと展開していた。
python の用途
システム系 web 系 データ分析や科学技術計算系 iot 系 3d グラフィックス 苦手なこと
web フロントエンド デスクトップ gui アプリ開発 速度重視の低レイヤーの処理 趙大規模なミッションクリティカルな分野の処理 python は年1リリース &amp;amp; 5年サポートになっている。
いまホットな話題として llm (large language model) がある。 私は chatgpt 以外のものはまったくわからないが、 oss で無料使えるツールや学習モデルがどんどん公開されているらしい。日本語に特化したものも出てきているみたい。
llm のツールチェーンを使って、任意のドキュメントに chatgpt のような質問で検索できるシステムの構築方法を紹介していた。 私が知らなかった技術として、インデクシングすると全文検索インデックスを作成する代わりにベクトル化をしてベクトル DB に保存する。 もっとも煩雑なところがドキュメントのベクトル化してベクトル DB に格納し、検索するときもクエリをベクトル化して、ベクトルの近似計算を行って検索結果を取得できる。 検索結果から回答の文章を生成するところを openai の api を使っているとのこと。有償なのでここだけお金がかかる。自前でやるには強力な gpu をもつマシンがないと処理が追いつかないといった話しだった気がする。 ai の学習モデルをホスティングするサービスとして Hugging Face というものが有名らしい。 github ではなく、なにかしらモデルを管理するときに都合のよいことがあるみたい。 web ui には streamlit を使っていた。私はまったく使ったことはないが、fin-py で紹介しているのを何度かみた感じでよいイメージをもっている。</description><content>&lt;p>22時頃には戻ってきたそれから準備したらよいところを、だらだらしてうたた寝して気付いたら2時になっていた。もうこのまま寝て朝起きてから準備しようと3時50分にアラーム設定して起きた。それからお風呂入ってストレッチして荷造りして5時18分に三ノ宮を出発した。&lt;/p>
&lt;h2 id="実家">実家&lt;/h2>
&lt;p>6時21分に実家へ着いた。休憩せずに一気に帰ると約1時間ぐらい。先月ジモティーで譲ってもらっていた机とバランスチェアを実家へ持って帰った。朝ご飯を食べてからバランスチェアを組み立てる。ちょうど机と椅子がよい感じにリモートワーク可能な環境になった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0909_desk-char.jpg"/>
&lt;/figure>
&lt;p>9時半頃まで実家でのんびり過ごして、言うても暇なので少し早めに香川県へ向けて出発した。&lt;/p>
&lt;h2 id="オープンセミナー">オープンセミナー&lt;/h2>
&lt;p>オープンセミナーとは、中四国地域で開催されている勉強会らしい。コロナ禍前はもっとたくさん開催されていたそうだが、いまは香川、広島、岡山といった地域で復活しているらしい。&lt;a href="https://osk.connpass.com/event/292551/">オープンセミナー2023@香川&lt;/a> に参加した。高松市の高松港の真横にある &lt;a href="https://www.e-topia-kagawa.jp/">eｰとぴあ・かがわ&lt;/a> という行政っぽいコミュニティ施設のイベントスペースを借りて開催された。実家から10分休憩を1度取った上で約1時間30分で着いた。実家から高松市まで1時間半とみておくとよさそう。&lt;/p>
&lt;h3 id="てらださんpythonの現状からデータ分析やllm活用への発展">てらださん：Pythonの現状からデータ分析やLLM活用への発展&lt;/h3>
&lt;p>てらださんの応援も兼ねて参加してみた。基調講演のような位置づけ。参加者の python 習熟度のレベルをみながら話す内容をあわせていた。&lt;/p>
&lt;ol>
&lt;li>あまり知らない&lt;/li>
&lt;li>ちょっと知っている&lt;/li>
&lt;li>がっつり使っている&lt;/li>
&lt;/ol>
&lt;p>最初は python の用途や得意・不得意といった、入門的な話しから始めつつ、徐々に最近の話題へと展開していた。&lt;/p>
&lt;p>python の用途&lt;/p>
&lt;ul>
&lt;li>システム系&lt;/li>
&lt;li>web 系&lt;/li>
&lt;li>データ分析や科学技術計算系&lt;/li>
&lt;li>iot 系&lt;/li>
&lt;li>3d グラフィックス&lt;/li>
&lt;/ul>
&lt;p>苦手なこと&lt;/p>
&lt;ul>
&lt;li>web フロントエンド&lt;/li>
&lt;li>デスクトップ gui アプリ開発&lt;/li>
&lt;li>速度重視の低レイヤーの処理&lt;/li>
&lt;li>趙大規模なミッションクリティカルな分野の処理&lt;/li>
&lt;/ul>
&lt;p>python は年1リリース &amp;amp; 5年サポートになっている。&lt;/p>
&lt;p>いまホットな話題として llm (large language model) がある。
私は chatgpt 以外のものはまったくわからないが、
oss で無料使えるツールや学習モデルがどんどん公開されているらしい。日本語に特化したものも出てきているみたい。&lt;/p>
&lt;p>llm のツールチェーンを使って、任意のドキュメントに chatgpt のような質問で検索できるシステムの構築方法を紹介していた。
私が知らなかった技術として、インデクシングすると全文検索インデックスを作成する代わりにベクトル化をしてベクトル DB に保存する。
もっとも煩雑なところがドキュメントのベクトル化してベクトル DB に格納し、検索するときもクエリをベクトル化して、ベクトルの近似計算を行って検索結果を取得できる。
検索結果から回答の文章を生成するところを openai の api を使っているとのこと。有償なのでここだけお金がかかる。自前でやるには強力な gpu をもつマシンがないと処理が追いつかないといった話しだった気がする。
ai の学習モデルをホスティングするサービスとして &lt;a href="https://huggingface.co/">Hugging Face&lt;/a> というものが有名らしい。
github ではなく、なにかしらモデルを管理するときに都合のよいことがあるみたい。
web ui には &lt;a href="https://streamlit.io/">streamlit&lt;/a> を使っていた。私はまったく使ったことはないが、fin-py で紹介しているのを何度かみた感じでよいイメージをもっている。&lt;/p>
&lt;h3 id="npo法人nemtus松岡さん後藤さん-ブロックチェーン概要説明--symbolブロックチェーンの特徴活用事例紹介">NPO法人NEMTUS　松岡さん、後藤さん 「ブロックチェーン概要説明 ＆ Symbolブロックチェーンの特徴・活用事例紹介」&lt;/h3>
&lt;p>NEM を広めるための NPO 法人らしい。ブロックチェーンの技術説明のスライドがめちゃくちゃわかりやすく作られていた。2人で発表していて、前半は技術的な解説、後半は事例紹介となっていた。事例紹介であちこちで使われているのはわかるけれど、その大半はブロックチェーンを使わなくてもできるものばかりだった。ブロックチェーンの特性が活きるアプリケーションはグローバルな仮想通貨のような用途以外にみつかっていないという気がする。既存の web 技術でもできるものをブロックチェーンに置き換えても、効率の悪さ (コスト高) をどうやってカバーするのかを説明しないのは不誠実なようにも感じられた。せめてスマートコントラクトを絡めて話さないと伝わらないんじゃないかと思う。&lt;/p>
&lt;h3 id="製造業-dx-を意識したときのiot-用-db-設計の注意点">製造業 dx を意識したときの、iot 用 db 設計の注意点&lt;/h3>
&lt;p>会社名は公けに書かれていないから伏せておく。名前だけ聞くと、創業400年という、財閥系の JTC の会社の情シス部門のようなお仕事をされていた。工場の運用改善のために iot と社内システムをすべて内製/自前で構築しているという。工場から生データを収集し、それをデータベースに正規化して、分析して日々の業務の運用改善にあてるという、ストーリーは当たり前のもの。工場の売上は数千億円といった規模になるという。例えば4-5人のチームをアサインすると2000万円ほどの経費がかかるが、1000億円の0.1%を改善すれば1億円になるのでペイするという。そういった考え方で工場の運用改善をしているうちに、いまのチームは30人といった規模になったという。&lt;/p>
&lt;p>事業会社で自分たちで技術を勉強してがんばっているようにみえる。発表のところどころの細かいところの認識が誤っていて、web のシニアエンジニアかアーキテクトがいれば、もっと効率のよいシステムを運用できるのになぁと思いながら聞いていた。あとで懇親会で詳しく聞いてみると、このチームは凄くてハードウェアまでカスタマイズできるという。基盤や回路まで自分たちで設計して作ったりもする。またメーカー品が自分たちの用途の機能を提供していなかったら、サポートを無視して勝手にメーカー品のハードウェアをカスタマイズして自分たちの用途にあったデータを取得できるようにカスタマイズしてしまうといったことも話していた。&lt;/p>
&lt;p>ハードウェアの基盤開発から組み込みのプログラミング、データベース、web と1つのチームですべてやっているという。なかなかこれだけの技術スタックを1チームですべて一気通貫でやっているところはないと思う。web 技術のところではいくつかツッコミ所はあったんだけど、これだけの広い分野をみていると、それは些事だなとちょっと反省した。私が自分の得意な分野だけをみていい気になっていたような気持ちになって反省した。&lt;/p>
&lt;p>懇親会で話していて、iot のシステムは基本的に安くて儲からないと話していて、しかし、ここに web システムを付けるだけで付加価値として売上の金額が上がるという。それは多くの iot メーカーは web に疎いため web システムを作れないらしい。ハードウェアと web の両方の技術に精通している会社/組織というのは意外に少ないらしく、iot + web が儲かるモデルとして話されていた。たしかに私は web に精通しているが iot はまったく分からないので納得感があった。&lt;/p>
&lt;h3 id="lt">LT&lt;/h3>
&lt;p>これが私のお仕事の部分だけど、会社としてイベントに登壇してきた。マーケティング活動の1つやね。&lt;/p>
&lt;iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/dd65b3a94e5b4feeb73f780c9626cb0a" title="Iintroduction of how big tech runs tech projects" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 600px; height: auto; aspect-ratio: 560 / 315;" data-ratio="1.7777777777777777">&lt;/iframe>
&lt;h3 id="懇親会">懇親会&lt;/h3>
&lt;p>17時から懇親会で21時過ぎまで飲んでいた。私は車で参加していたのでソフトドリンク。知らないイベントの懇親会で、あまりよく知らない人たちと技術の話題でわいわい盛り上がるのは久しぶりで楽しかった。昔の it 勉強会はこんな感じだったなとコロナ禍の終わりも実感した。&lt;/p>
&lt;p>懇親会の参加者には組み込みやハードウェアに詳しい方が何人もいて、私のような web 系の方が少数派でちょっといつもとは違ったメンバーで聞く話しもとても新鮮味があった。iot やハードウェアの話しにさっぱり付いていけなかった。web 系の勉強会やイベントにしか行かないというのも、一種のエコーチェンバーだなと実感した。&lt;/p>
&lt;h3 id="あと飲み">あと飲み&lt;/h3>
&lt;p>21時過ぎから23時まで、てらださんと飲んでいた。てらださんは酔っ払ってどんどん呑むんだけど、酔い潰れるみたいな状態にはならなくて、余裕があるのかないのかよく分からないけど、呑むペースが速いなと感心していた。コミュニティの話し、教育の話し、経営の話し、政治の話し、わりといろんな話しをして時間でお開きにした。&lt;/p>
&lt;h2 id="車中泊">車中泊&lt;/h2>
&lt;p>その後、車を移動して、24時間空いているサウナで泊まろうと近くまで行ったものの、あまり外観の雰囲気がよくなくて、そのまま駐車場に車を泊めて車中泊にした。1時頃だったと思う。駐車場料金がホテル代のようなものになった。あとで調べたらアイドリングしたまま車中泊するのは、付近に家があると騒音がうるさいらしくマナー違反だという。歓楽街だったので周りは若者が遊んでいて、もともとうるさい場所だったと思うのでそれほど迷惑にはならなかったと思いたい。&lt;/p></content></item><item><title>組織やプロジェクト横断的なメトリクスの視覚化</title><link>/diary/posts/2023/0907/</link><pubDate>Thu, 07 Sep 2023 12:19:38 +0900</pubDate><guid>/diary/posts/2023/0907/</guid><description>0時に寝て4時に起きてもう1回ぐらい起きて6時半に起きた。
もうすぐ期限がやってくる。私が担当している issue 対応はあらかた終わってメンバーに「大きいもので見落としある？」って尋ねて「ない」って返ってきたのでもうクローズに向けて調整していく感じ。今週末から月曜日と3日間お休みする (土日も含めて休むというのも変ではあるが) ので一安心。
dirsync 周りのリファクタリング ずっとレビューが放置されていた。おそらくいま go-ldap のプロジェクトで最も活発なメンテナーが夏休みだったのではないかと推測する。昨日帰ってきたようで怒涛のレビューをされていて、私が3週間前に送っていた pr もレビューしてくれた。
Refactor DirSync search process #458 概ね同意してくれて public な関数名をより適切な関数名に変えたところを、1度公開したものは互換性を維持するために deprecated のコメントをして残しておいてと言われたところだけ修正した。修正後、数時間ですぐにマージしてくれた。感謝。
go-ldap にいくつかコントリビュートした機能はうちのプロダクトのシステムに使われていて、それなりの qa テストをやった上で動いているので一定の品質は担保していると思う。直近1年間のコントリビューター を参照すると、私は2番目に貢献しているようにみえる。こういう見える化が自分のモチベーションになるならそれはそれでよいと思う。
組み込みの課題管理のプロダクトを作る上で、個人がみたいメトリクスを簡単に集計できるような機能を提供しようと考えている。それは自分が伸ばしたいスキルやプラクティスに対して、会社やプロダクトを横断的に計測できる仕組みがあるといいと私は考えている。とくにいまどきはプログラマーが転職するのは当たり前だが、転職したら前の会社でやっていたメトリクスがみれないとか、別の会社でのメトリクスと相対比較したいとか、そういうニーズはあるなと私自身が感じているからでもある。
go イベントのパネルディスカッション mercari.go #23 Go1.21 パネルディスカッション オンライン開催 に参加した。視聴者が少なかったのか、youtube のコメント欄でちょくちょくツッコミもいれたら現場で拾ってくれておもしろかった。私が関心のあった話題を3つあげてみる。
gonew の提供 For a long time now, we have heard from Go developers that getting started is often the hardest part.
Experimenting with project templates
go で新規プロジェクトを始めるときにテンプレートからプロジェクトのレイアウトを作ってくれるユーティリティとして gonew というツールが公式から提供されたらしい。知らんかった。私も新しいリポジトリ作るときに標準的なものはファイルを基本コピペしているのでこういうのできれいに作れると嬉しいかもしれない。 ￼
derrors の是非 pkgsite という pkg.</description><content>&lt;p>0時に寝て4時に起きてもう1回ぐらい起きて6時半に起きた。&lt;/p>
&lt;p>もうすぐ期限がやってくる。私が担当している issue 対応はあらかた終わってメンバーに「大きいもので見落としある？」って尋ねて「ない」って返ってきたのでもうクローズに向けて調整していく感じ。今週末から月曜日と3日間お休みする (土日も含めて休むというのも変ではあるが) ので一安心。&lt;/p>
&lt;h2 id="dirsync-周りのリファクタリング">dirsync 周りのリファクタリング&lt;/h2>
&lt;p>ずっとレビューが放置されていた。おそらくいま go-ldap のプロジェクトで最も活発なメンテナーが夏休みだったのではないかと推測する。昨日帰ってきたようで怒涛のレビューをされていて、私が3週間前に送っていた pr もレビューしてくれた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/458">Refactor DirSync search process #458&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>概ね同意してくれて public な関数名をより適切な関数名に変えたところを、1度公開したものは互換性を維持するために deprecated のコメントをして残しておいてと言われたところだけ修正した。修正後、数時間ですぐにマージしてくれた。感謝。&lt;/p>
&lt;p>go-ldap にいくつかコントリビュートした機能はうちのプロダクトのシステムに使われていて、それなりの qa テストをやった上で動いているので一定の品質は担保していると思う。&lt;a href="https://github.com/go-ldap/ldap/graphs/contributors?from=2022-09-08&amp;to=2023-09-07&amp;type=c">直近1年間のコントリビューター&lt;/a> を参照すると、私は2番目に貢献しているようにみえる。こういう見える化が自分のモチベーションになるならそれはそれでよいと思う。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0907_contributor.png"/>
&lt;/figure>
&lt;p>組み込みの課題管理のプロダクトを作る上で、個人がみたいメトリクスを簡単に集計できるような機能を提供しようと考えている。それは自分が伸ばしたいスキルやプラクティスに対して、会社やプロダクトを横断的に計測できる仕組みがあるといいと私は考えている。とくにいまどきはプログラマーが転職するのは当たり前だが、転職したら前の会社でやっていたメトリクスがみれないとか、別の会社でのメトリクスと相対比較したいとか、そういうニーズはあるなと私自身が感じているからでもある。&lt;/p>
&lt;h2 id="go-イベントのパネルディスカッション">go イベントのパネルディスカッション&lt;/h2>
&lt;p>&lt;a href="https://mercari.connpass.com/event/294164/">mercari.go #23 Go1.21 パネルディスカッション オンライン開催&lt;/a> に参加した。視聴者が少なかったのか、youtube のコメント欄でちょくちょくツッコミもいれたら現場で拾ってくれておもしろかった。私が関心のあった話題を3つあげてみる。&lt;/p>
&lt;h3 id="gonew-の提供">gonew の提供&lt;/h3>
&lt;blockquote>
&lt;p>For a long time now, we have heard from Go developers that getting started is often the hardest part.&lt;/p>
&lt;p>&lt;a href="https://go.dev/blog/gonew">Experimenting with project templates&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>go で新規プロジェクトを始めるときにテンプレートからプロジェクトのレイアウトを作ってくれるユーティリティとして gonew というツールが公式から提供されたらしい。知らんかった。私も新しいリポジトリ作るときに標準的なものはファイルを基本コピペしているのでこういうのできれいに作れると嬉しいかもしれない。
￼&lt;/p>
&lt;h3 id="derrors-の是非">derrors の是非&lt;/h3>
&lt;p>&lt;a href="https://github.com/golang/pkgsite">pkgsite&lt;/a> という pkg.go.dev というサイトのリポジトリの internal として実装されている derrors というパッケージがある。defer を使って必ず関数がエラーを返すときに wrap するという、ユニークな発想で実装されたツール。明示的なコードを書くという go の文化とはあわない気はするけど、ユニークな使い方ではあるのでおもしろい。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/golang/pkgsite/blob/master/internal/derrors/derrors.go">https://github.com/golang/pkgsite/blob/master/internal/derrors/derrors.go&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この延長でエラーが発生したときにレポートを生成する derrors のユーティリティもあったりする。google がやっていることだから、わりと開発者間でもこれと同じものを自前で実装する開発者が増えているといった話しも聞く。&lt;/p>
&lt;h3 id="go-2-はもうリリースされない">go 2 はもうリリースされない&lt;/h3>
&lt;blockquote>
&lt;p>The answer is never. Go 2, in the sense of breaking with the past and no longer compiling old programs, is never going to happen. Go 2 in the sense of being the major revision of Go 1 we started toward in 2017 has already happened.&lt;/p>
&lt;p>&lt;a href="https://go.dev/blog/compat">Backward Compatibility, Go 1.21, and Go 2&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>これまでの go の言語処理系の開発の中で非互換な変更について「go 2 で」とプロポーザルだったり、issue の議論で先送りされてきた。最近コア開発者の Russ Cox 氏が (現時点で) go 2 はもう出ないと宣言した。go は既存のプログラムをコンパイルできない状態で新しいバージョンを出すことはしない。この背景の1つとして、誰もがジェネリクスの導入で go の互換性は崩れると思っていたものが互換性を維持して導入できたことが大きいと思う。(現時点で) go 2 はもうリリースされないらしい。&lt;/p></content></item><item><title>開発フェーズの完了まであと2週間</title><link>/diary/posts/2023/0905/</link><pubDate>Tue, 05 Sep 2023 09:04:21 +0900</pubDate><guid>/diary/posts/2023/0905/</guid><description>0時に寝て何度か起きて7時に起きた。オーバートレーニング気味で夜帰ってきてゆっくり過ごしている。
定例会議 次のマイルストーンでこの開発フェーズを完了させる。その最後の打ち合わせとなる定例会議。話題が多過ぎて、始める前から今日の会議は1時間におさまらないんじゃないかと話しながら始めて10分ほどオーバーして終えた。会議時間が私の感覚とも一致していてよかった (違う) 。
qa テストでいろいろ issue が洗い出されていて、その中のアーキテクチャや仕様の抜本的な見直しを検討するのが2つ、管理画面の ui/ux に関する設計の2つ、よいことではあるが、私の設計の目が及ぶ範囲を超えて issue が上がるようになりつつある。本当はフロントエンド向けに ui/ux デザイナーがいれば画面設計について委譲したいところだが、そんな人はいないのでチームで話し合い、私が方針を決めて暫定的に修正していく。
また致命的な issue は出ていないという私の認識から、次の2週間でこの開発は収束させるという合意を行った。やや qa テストや issue の収束は遅れ気味ではある。いまから慌てても大きく変わることはないし、このチームは十分に私の課題管理の慣習にしたがって作業しているので、このまま成り行きでもうまく着地できるんじゃないかなと楽観的には考えている。その感覚は過去の経験からも来ているのだろうけど、もうこの歳になると脳ができることを自動的に判断している気がする。できるとわかっているから不安や焦燥感といった危機を感じられない。悪い言い方をするとさぼっているだけという見方もあるが、そういう感覚をここ2-3年で実感するようになってきた。
会議が終わってから私は reflection 関連のバグを2つ直した。</description><content>&lt;p>0時に寝て何度か起きて7時に起きた。オーバートレーニング気味で夜帰ってきてゆっくり過ごしている。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>次のマイルストーンでこの開発フェーズを完了させる。その最後の打ち合わせとなる定例会議。話題が多過ぎて、始める前から今日の会議は1時間におさまらないんじゃないかと話しながら始めて10分ほどオーバーして終えた。会議時間が私の感覚とも一致していてよかった (違う) 。&lt;/p>
&lt;p>qa テストでいろいろ issue が洗い出されていて、その中のアーキテクチャや仕様の抜本的な見直しを検討するのが2つ、管理画面の ui/ux に関する設計の2つ、よいことではあるが、私の設計の目が及ぶ範囲を超えて issue が上がるようになりつつある。本当はフロントエンド向けに ui/ux デザイナーがいれば画面設計について委譲したいところだが、そんな人はいないのでチームで話し合い、私が方針を決めて暫定的に修正していく。&lt;/p>
&lt;p>また致命的な issue は出ていないという私の認識から、次の2週間でこの開発は収束させるという合意を行った。やや qa テストや issue の収束は遅れ気味ではある。いまから慌てても大きく変わることはないし、このチームは十分に私の課題管理の慣習にしたがって作業しているので、このまま成り行きでもうまく着地できるんじゃないかなと楽観的には考えている。その感覚は過去の経験からも来ているのだろうけど、もうこの歳になると脳ができることを自動的に判断している気がする。できるとわかっているから不安や焦燥感といった危機を感じられない。悪い言い方をするとさぼっているだけという見方もあるが、そういう感覚をここ2-3年で実感するようになってきた。&lt;/p>
&lt;p>会議が終わってから私は reflection 関連のバグを2つ直した。&lt;/p></content></item><item><title>週末遊んで月曜日を迎える</title><link>/diary/posts/2023/0904/</link><pubDate>Mon, 04 Sep 2023 13:44:45 +0900</pubDate><guid>/diary/posts/2023/0904/</guid><description>21時に寝て何度か起きて7時に起きた。決して夜更ししているわけでもないのにずっと疲れている感があって早めに寝ていた。それでさらにお仕事が溜まる。
qa テストとバグ修正 先々週から qa テストが始まっていて、私はあまり参加できていないけれど、上がってくる issue のトリアージや致命的なバグの修正、インフラ周りの不具合の修正などをしている。1つは1つは難しくない小さい粒度のものだけれど、他の issue との関連があったり、アーキテクチャや既存の仕様そのものを見直した方がよいものもあったりと、背景の調査に時間がかかっていて、思ったよりも「ちぎっては投げちぎっては投げ」といった対応は取れていない。issue の優先順位付けしようにも、先に解決しないといけない issue があったり、この仕様はそもそもおかしいとか、よいことではあるのだけど qa でみつかる issue のトリアージが難しくなっている。それだけメンバーのシステムへの習熟度が上がって精度の高い issue をあげられるようになってきたという現れでもある。私がまごまごしているのは紛れもない事実ではある。</description><content>&lt;p>21時に寝て何度か起きて7時に起きた。決して夜更ししているわけでもないのにずっと疲れている感があって早めに寝ていた。それでさらにお仕事が溜まる。&lt;/p>
&lt;h2 id="qa-テストとバグ修正">qa テストとバグ修正&lt;/h2>
&lt;p>先々週から qa テストが始まっていて、私はあまり参加できていないけれど、上がってくる issue のトリアージや致命的なバグの修正、インフラ周りの不具合の修正などをしている。1つは1つは難しくない小さい粒度のものだけれど、他の issue との関連があったり、アーキテクチャや既存の仕様そのものを見直した方がよいものもあったりと、背景の調査に時間がかかっていて、思ったよりも「ちぎっては投げちぎっては投げ」といった対応は取れていない。issue の優先順位付けしようにも、先に解決しないといけない issue があったり、この仕様はそもそもおかしいとか、よいことではあるのだけど qa でみつかる issue のトリアージが難しくなっている。それだけメンバーのシステムへの習熟度が上がって精度の高い issue をあげられるようになってきたという現れでもある。私がまごまごしているのは紛れもない事実ではある。&lt;/p></content></item><item><title>台風の暴風雨にびびった</title><link>/diary/posts/2023/0815/</link><pubDate>Tue, 15 Aug 2023 20:46:29 +0900</pubDate><guid>/diary/posts/2023/0815/</guid><description>台風が来るということだったので昨日は18時には家に戻ってきてゆっくりしていた。とくに何をしていたわけでもないけれど、なぜか眠れなくて3時ぐらいまでは起きていた気がする。あまりちゃんと眠れない中、7時に起きた。朝から外の暴風雨がすごくて人が飛ばされそうな勢いだった。さすがにオフィス行けないなと諦めて家でリモートワークしていた。お昼過ぎぐらいまで暴風雨が続いていたと思う。夕方になってから外に出たら普通の雨になっていてそれからオフィスに来た。
課題管理とプロジェクトマネージメントの話を熱く語る 理由があって先日 チェックした音声データ とは違う音声データを使って昨日の夜に公開された。週末働いてバテていたせいか、昨日は余裕なくて聞けなかったものの、深夜に聞き始めた。よいこと言っているなーと自画自賛しつついくつか間違ったことも話してしまっているけれど、私の話しにそこまで注意して聞く人はいないでしょう。
#81 課題管理とプロジェクトマネージメントの話を熱く語る 課題管理の話題になると、ついつい熱中して話してしまう。「熱く語る」と書かれてしまうのはこの分野に熱意をもっている人が稀だからかな。私はこの1-2年この分野をずっと調べているから、ここで話した10倍ぐらいのコンテンツをもっている。勉強会の資料も数個はあるし、スライドは200枚ぐらいある。そして、調べれば調べるほど私が分かっていないことも分かってきて、もっともっと調べたいことがある。しかし、いまいまはもう体力と気力がない。
エージェントアプリケーション開発 昨日の続き 。昨日レビューをしっかりしてもらってマージした。windows ad サーバーとの dirsync の通信のところを、一切動かさず、既存のコードをインターフェースにあうように作り直したものの、実際に動かしてみると非同期の制御が意図したデータフローでなかったり、windows ad サーバーの知らない仕様があったり、細かいバグもあったりで半日ほどかけてデバッグしながらバグ修正してた。単体レベルのテストでこのバグ数だと、qa レベルだとさらにバグありそうだなという感触だけ確かめた。その後 dirsync の検索も非同期になった方が嬉しいなと思ってちょっとリファクタリングして検証がてら提案してみた。特別なことをしなくても go-ldap の非同期検索を使ってそのまま動くことも確認できたのでこれはこれで役に立つと思う。
Refactor DirSync search process #458</description><content>&lt;p>台風が来るということだったので昨日は18時には家に戻ってきてゆっくりしていた。とくに何をしていたわけでもないけれど、なぜか眠れなくて3時ぐらいまでは起きていた気がする。あまりちゃんと眠れない中、7時に起きた。朝から外の暴風雨がすごくて人が飛ばされそうな勢いだった。さすがにオフィス行けないなと諦めて家でリモートワークしていた。お昼過ぎぐらいまで暴風雨が続いていたと思う。夕方になってから外に出たら普通の雨になっていてそれからオフィスに来た。&lt;/p>
&lt;h2 id="課題管理とプロジェクトマネージメントの話を熱く語る">課題管理とプロジェクトマネージメントの話を熱く語る&lt;/h2>
&lt;p>理由があって先日 &lt;a href="/diary/diary/posts/2023/0811/#podcast-の内容チェック">チェックした音声データ&lt;/a> とは違う音声データを使って昨日の夜に公開された。週末働いてバテていたせいか、昨日は余裕なくて聞けなかったものの、深夜に聞き始めた。よいこと言っているなーと自画自賛しつついくつか間違ったことも話してしまっているけれど、私の話しにそこまで注意して聞く人はいないでしょう。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://podcast.terapyon.net/episodes/0090.html">#81 課題管理とプロジェクトマネージメントの話を熱く語る&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>課題管理の話題になると、ついつい熱中して話してしまう。「熱く語る」と書かれてしまうのはこの分野に熱意をもっている人が稀だからかな。私はこの1-2年この分野をずっと調べているから、ここで話した10倍ぐらいのコンテンツをもっている。勉強会の資料も数個はあるし、スライドは200枚ぐらいある。そして、調べれば調べるほど私が分かっていないことも分かってきて、もっともっと調べたいことがある。しかし、いまいまはもう体力と気力がない。&lt;/p>
&lt;h2 id="エージェントアプリケーション開発">エージェントアプリケーション開発&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0814/#エージェントアプリケーション開発">昨日の続き&lt;/a> 。昨日レビューをしっかりしてもらってマージした。windows ad サーバーとの dirsync の通信のところを、一切動かさず、既存のコードをインターフェースにあうように作り直したものの、実際に動かしてみると非同期の制御が意図したデータフローでなかったり、windows ad サーバーの知らない仕様があったり、細かいバグもあったりで半日ほどかけてデバッグしながらバグ修正してた。単体レベルのテストでこのバグ数だと、qa レベルだとさらにバグありそうだなという感触だけ確かめた。その後 dirsync の検索も非同期になった方が嬉しいなと思ってちょっとリファクタリングして検証がてら提案してみた。特別なことをしなくても go-ldap の非同期検索を使ってそのまま動くことも確認できたのでこれはこれで役に立つと思う。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-ldap/ldap/pull/458">Refactor DirSync search process #458&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>他山の転がる石</title><link>/diary/posts/2023/0728/</link><pubDate>Fri, 28 Jul 2023 13:41:15 +0900</pubDate><guid>/diary/posts/2023/0728/</guid><description>23時に寝て3時に起きて5時に起きて7時に起きた。昨日は早く帰ってきてまたオフィスに戻るつもりが、そのままゆっくり過ごしていたので休憩してた。
プレスリリース前のドキュメントチェック いよいよ来週に私が9ヶ月に渡って開発をマネジメントしてきたプロダクトのプレスリリースがあるらしい。4月末の段階でプレスリリースできる状態にはあったものの、足りない機能もあったし、展示会に出展して反応をみたり、営業さんとの調整もあったりで3ヶ月ほど時間を要した感じだ。発表されたプレスリリースを引用してうちの会社の事例紹介も書くつもり。まだまだ開発の課題はあるし、気を抜ける状況ではないが、いろんな歯車が噛み合ってきて、期待した未来になるよう、その方向にモノゴトが収束しているようにみえる。私にとっては結果はもう既定路線になっていて、あとは自分がどれだけがんばれるかでその品質が変わるだけの状況になりつつある。
開発においても「ラストワンマイル」に入りつつあるし、私の体力があと半年ぐらいもてばそれでいいんじゃないかと思う。まだまだ先は長いのだけど、終わりがみえてきて、ラストスパートをがんばっていこうといった心境になっている。
ビッグモーター問題の考察 先日 ビッグモーターの記者会見 をみた。そのときに元幹部社員で youtube に動画をあげている方が副社長である息子について言及していた。その後の報道もみていてその真偽も明らかになりつつあるので動画も貼っておく。
たまたま次の記事をみて、その副社長の line のスクリーンショットが公開されていた。
公開！ワンマン経営の果てに…ビッグモーター「兼重前社長親子の大豪邸」と戦慄の「罵倒LINE」 これをみていて思ったことの1つは「権力は腐敗する」の典型例なのだろうと思う。社長の息子というだけで、苦労も実績もない中で経営者になってしまって、権力を振るううちに度が過ぎてしまったのではないかと思えた。言い方を変えると、この副社長も社長の息子として生まれて不幸だった側面があるようにも思えた。普通の人は社内の人間関係を築くのに葛藤や逡巡を積み重ねて経験を増やしていくところが、社長の息子として特別扱いされるうちに分からなくなってしまったのではないかと推測する。
以前 dmm の亀山さんがこんなことを言っていた。
権力のもっとも上手い使い方は「持ってても使わない」こと。
「権力者の横暴」についてどう思いますか――DMM亀山会長に聞いてみた
私も過去にメディア力のコントロールが難しいことに気付いたことがある。会社で大きな成果をあげると、途端に周りが忖度し始めて普通の発言が周りに大きな影響力を与えたり、意図しない結果をもたらすことに気付いた。そうなったらできることは「発言しない」か「辞める」かの2択になる。亀山さんが仰っていることは前者のやり方に近いものと推測するが、権力をもってしまった時点でとても扱いが難しいことを自覚するのが大事だと思えた。</description><content>&lt;p>23時に寝て3時に起きて5時に起きて7時に起きた。昨日は早く帰ってきてまたオフィスに戻るつもりが、そのままゆっくり過ごしていたので休憩してた。&lt;/p>
&lt;h2 id="プレスリリース前のドキュメントチェック">プレスリリース前のドキュメントチェック&lt;/h2>
&lt;p>いよいよ来週に私が9ヶ月に渡って開発をマネジメントしてきたプロダクトのプレスリリースがあるらしい。4月末の段階でプレスリリースできる状態にはあったものの、足りない機能もあったし、展示会に出展して反応をみたり、営業さんとの調整もあったりで3ヶ月ほど時間を要した感じだ。発表されたプレスリリースを引用してうちの会社の事例紹介も書くつもり。まだまだ開発の課題はあるし、気を抜ける状況ではないが、いろんな歯車が噛み合ってきて、期待した未来になるよう、その方向にモノゴトが収束しているようにみえる。私にとっては結果はもう既定路線になっていて、あとは自分がどれだけがんばれるかでその品質が変わるだけの状況になりつつある。&lt;/p>
&lt;p>開発においても「ラストワンマイル」に入りつつあるし、私の体力があと半年ぐらいもてばそれでいいんじゃないかと思う。まだまだ先は長いのだけど、終わりがみえてきて、ラストスパートをがんばっていこうといった心境になっている。&lt;/p>
&lt;h2 id="ビッグモーター問題の考察">ビッグモーター問題の考察&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0725/#ビッグモーターの記者会見">ビッグモーターの記者会見&lt;/a> をみた。そのときに元幹部社員で youtube に動画をあげている方が副社長である息子について言及していた。その後の報道もみていてその真偽も明らかになりつつあるので動画も貼っておく。&lt;/p>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/W7CXsB5kmzo" allowfullscreen title="ビッグモーターの保険金不正請求問題がおきた本当の理由を元社員が解説します！">&lt;/iframe>
&lt;/div>
&lt;p>たまたま次の記事をみて、その副社長の line のスクリーンショットが公開されていた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://friday.kodansha.co.jp/article/324024">公開！ワンマン経営の果てに…ビッグモーター「兼重前社長親子の大豪邸」と戦慄の「罵倒LINE」&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これをみていて思ったことの1つは「権力は腐敗する」の典型例なのだろうと思う。社長の息子というだけで、苦労も実績もない中で経営者になってしまって、権力を振るううちに度が過ぎてしまったのではないかと思えた。言い方を変えると、この副社長も社長の息子として生まれて不幸だった側面があるようにも思えた。普通の人は社内の人間関係を築くのに葛藤や逡巡を積み重ねて経験を増やしていくところが、社長の息子として特別扱いされるうちに分からなくなってしまったのではないかと推測する。&lt;/p>
&lt;p>以前 dmm の亀山さんがこんなことを言っていた。&lt;/p>
&lt;blockquote>
&lt;p>権力のもっとも上手い使い方は「持ってても使わない」こと。&lt;/p>
&lt;p>&lt;a href="https://bunshun.jp/articles/-/6711">「権力者の横暴」についてどう思いますか――DMM亀山会長に聞いてみた&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>私も過去にメディア力のコントロールが難しいことに気付いたことがある。会社で大きな成果をあげると、途端に周りが忖度し始めて普通の発言が周りに大きな影響力を与えたり、意図しない結果をもたらすことに気付いた。そうなったらできることは「発言しない」か「辞める」かの2択になる。亀山さんが仰っていることは前者のやり方に近いものと推測するが、権力をもってしまった時点でとても扱いが難しいことを自覚するのが大事だと思えた。&lt;/p></content></item><item><title>開発とレビューで手いっぱい</title><link>/diary/posts/2023/0727/</link><pubDate>Thu, 27 Jul 2023 08:06:42 +0900</pubDate><guid>/diary/posts/2023/0727/</guid><description>2時に寝て3時半に起きて6時に起きて7時に起きた。最近は起き上がるまでに1時間ぐらいかかる。
開発の佳境に入ってきているので、メンバーの設計レビュー、コードレビューが増えてきている。メンバーも課題管理に慣れてきて開発のワークフローが洗練されてきている。私がボトルネックになりかける兆候がみえるようになってきてよい感じ。
差分比較の初期実装 昨日の続き 。一通り openldap 向けの実装で動くようになったのでマージリクエストに整理して送るところまでできた。
この変更によって id 連携のためのインターフェースを変更することになった。いま外部連携先として6種類あるので6つの実装を変更しないといけない。作業は機械的にできるのでなんら難しくないけれど、こういうインターフェースの変更作業が得意ではないというか、あまり好きではない。エディターや ide の機能で置換できないから、ソースコードを1つずつ確認しながら手で書き換えていく。まったく同じ作業をいくつものソースコードで行わないといけない。そういう作業がしんどいと思ってしまう。それでも静的型付けなら型チェックできるから修正漏れがなくて安心できるのがよい。
神戸阪急百貨店のデパ地下 三ノ宮駅にすぐ近くに阪急百貨店がある。もちろんあることは知っていたのだけど、このエリアには入ったことがなくてどういうゾーンになっているか知らなかった。もう5年ぐらい住んでいるのに行ったことのない場所だった。たまたまスーパーのお惣菜のお寿司の話題になって 阪急百貨店の地下 にもありますよと教えてもらった。せっかくなので試しに行ってみた。こんな場所あったんやと初めて入って驚いた。ここはデパ地下の一画なのでやや特別な買いものをする雰囲気がするエリアでお値段もそれ相応な感じだった。私は庶民がいくスーパーで普通に買いものをしているので普段行くような場所ではないけれど、たまにお客さんが来たときやイベントでケータリングするときなどにはよいかもしれない。知らない場所を知るよい機会になった。</description><content>&lt;p>2時に寝て3時半に起きて6時に起きて7時に起きた。最近は起き上がるまでに1時間ぐらいかかる。&lt;/p>
&lt;p>開発の佳境に入ってきているので、メンバーの設計レビュー、コードレビューが増えてきている。メンバーも課題管理に慣れてきて開発のワークフローが洗練されてきている。私がボトルネックになりかける兆候がみえるようになってきてよい感じ。&lt;/p>
&lt;h2 id="差分比較の初期実装">差分比較の初期実装&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0726/#差分比較の処理">昨日の続き&lt;/a> 。一通り openldap 向けの実装で動くようになったのでマージリクエストに整理して送るところまでできた。&lt;/p>
&lt;p>この変更によって id 連携のためのインターフェースを変更することになった。いま外部連携先として6種類あるので6つの実装を変更しないといけない。作業は機械的にできるのでなんら難しくないけれど、こういうインターフェースの変更作業が得意ではないというか、あまり好きではない。エディターや ide の機能で置換できないから、ソースコードを1つずつ確認しながら手で書き換えていく。まったく同じ作業をいくつものソースコードで行わないといけない。そういう作業がしんどいと思ってしまう。それでも静的型付けなら型チェックできるから修正漏れがなくて安心できるのがよい。&lt;/p>
&lt;h2 id="神戸阪急百貨店のデパ地下">神戸阪急百貨店のデパ地下&lt;/h2>
&lt;p>三ノ宮駅にすぐ近くに阪急百貨店がある。もちろんあることは知っていたのだけど、このエリアには入ったことがなくてどういうゾーンになっているか知らなかった。もう5年ぐらい住んでいるのに行ったことのない場所だった。たまたまスーパーのお惣菜のお寿司の話題になって &lt;a href="https://www.hankyu-dept.co.jp/kobe/floor/floorb1.html">阪急百貨店の地下&lt;/a> にもありますよと教えてもらった。せっかくなので試しに行ってみた。こんな場所あったんやと初めて入って驚いた。ここはデパ地下の一画なのでやや特別な買いものをする雰囲気がするエリアでお値段もそれ相応な感じだった。私は庶民がいくスーパーで普通に買いものをしているので普段行くような場所ではないけれど、たまにお客さんが来たときやイベントでケータリングするときなどにはよいかもしれない。知らない場所を知るよい機会になった。&lt;/p></content></item><item><title>マイルストーン終了直前の余裕</title><link>/diary/posts/2023/0724/</link><pubDate>Mon, 24 Jul 2023 17:11:52 +0900</pubDate><guid>/diary/posts/2023/0724/</guid><description>0時に寝て3時に起きて5時に起きて7時に起きた。足のしびれは治ったみたい。
マイルストーン終了直前の issue 整理 明日の火曜日がマイルストーン終了日でインフラ系や外部ライブラリの重たい issue は一通り完了したのでプロダクトの方に注力できるようになった。自分の issue よりもメンバーの issue や次マイルストーンの issue の整理などを主にしていた。自分の issue をやるよりも、メンバーやチームのサポート系の方に注力しようと思ってプロジェクトマネジメント的なところの作業をしていた。自分が開発や調査をやり始めると、どうしても注意力や認知を issue の方に取られてしまって全体を眺めたり管理したりといった側面が疎かになる気がする。会議を減らして自分の時間を増やしても、メンバーの都合でサポートする機会をみていないといけないのでこのバランスを取るのはなかなか難しいなと思う。少し時間的な余裕をもった方がよいかなといったことも思わないでもない。</description><content>&lt;p>0時に寝て3時に起きて5時に起きて7時に起きた。足のしびれは治ったみたい。&lt;/p>
&lt;h2 id="マイルストーン終了直前の-issue-整理">マイルストーン終了直前の issue 整理&lt;/h2>
&lt;p>明日の火曜日がマイルストーン終了日でインフラ系や外部ライブラリの重たい issue は一通り完了したのでプロダクトの方に注力できるようになった。自分の issue よりもメンバーの issue や次マイルストーンの issue の整理などを主にしていた。自分の issue をやるよりも、メンバーやチームのサポート系の方に注力しようと思ってプロジェクトマネジメント的なところの作業をしていた。自分が開発や調査をやり始めると、どうしても注意力や認知を issue の方に取られてしまって全体を眺めたり管理したりといった側面が疎かになる気がする。会議を減らして自分の時間を増やしても、メンバーの都合でサポートする機会をみていないといけないのでこのバランスを取るのはなかなか難しいなと思う。少し時間的な余裕をもった方がよいかなといったことも思わないでもない。&lt;/p></content></item><item><title>雑談について雑談した</title><link>/diary/posts/2023/0715/</link><pubDate>Sat, 15 Jul 2023 17:38:29 +0900</pubDate><guid>/diary/posts/2023/0715/</guid><description>1時に寝て何度か起きて7時に起きた。昨日は遅くまで調べものをしていたわりには達成感がなくていまいちな金曜日になった。
ストレッチ 東京出張から戻ってきたときはあまり体調がよくないことが多い。今日は右足全般の張りが強かった。すねの外側、太ももの後ろ、股関節の関節部位、あちこち硬いなと思えた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。数値もよくはなかった。なんとなくだけど、あと何年かしたら右足が動かなくなるんじゃないかとすら思えるようになってきた。いまストレッチしているのはその寿命を伸ばす行為だと考えている。なにもしていないのに体調が悪くなるというのがこれからどんどん増えてくるのだと推測する。悪いことばかりでもなく、先週まで辛かった首の痛みは気付いたら治っていた。
日本ナレッジ・マネジメント学会に加入申請を出した 先日の課題管理の雑談 のときに 日本ナレッジ・マネジメント学会 という学会があることを教えていただいた。学術的なところでナレッジマネジメント (知識経営) についてどのようなことが研究されていて (あるいはされていなくて)、どういう知見が溜まっているのかを知りたかったのでちょうどうちの会社にとってよい機会だと思える。
さっそく web のフォームから加入申請を送って、法人会員になるのは申請書を郵送する必要があるとのことでその事務手続きも終えた。法人会員は10万円/年の費用がかかる。学会などの年会費は「諸会費」という勘定科目使い、不課税となる。まぁこのぐらいの金額ならよいだろうと即断即決で決めた。
雑談の雑談 毎月お手伝い先の会社に出張して経営陣とサポート部門トップを含めたトップ3に プロジェクトの進捗報告 をしている。
プロジェクトの初期の頃は情報共有を密にしたり親睦を深める意図から (言うても月1回だけれども) 毎月行くことには意味はあった。しかし、うちのチームはフルリモートで開発が進む体制になっており、私が物理的にオフィスに出向かなくてもプロジェクトの開発にはほとんど影響を与えない。ではなぜ出張しているのかの意義はプロジェクトの進捗報告をオフライン会議でやっていることの方が大きいのではないかと思うようになってきた。早いときは20分ほどで報告は終わるし、普通にやっても30分もあったら報告内容は終わる。そこから参加者でその時々の雑談が始まる。会議のうち報告と雑談の時間が半々ぐらいといったときもある。
この雑談の機会を作る大義名分として、私が出張して進捗報告の会議があるから「出しになっている」のではないか？という仮説を思いついた。その場では「プロジェクトには直接関係ないのだけど、、、」という話題もちょくちょく出る。会社の業務には誰の責任でも担当でもない宙ぶらりんになる業務も発生する。チームならそれはマネージャーがすべて巻き取るわけだが、部署単位になると浮いたままになることもある。そういう話題がこの会議の中ではちょくちょくあがってくる。
建前上の会議を「出しにして」話す機会のない人たちが雑談するという、別の価値を提供している会議もあるんじゃないかと、顧問のはらさんと雑談していたところ、次の記事を紹介された。
なぜ雑談が重要か 私も前日にざっと読んでこれはひどい記事だなと思ってスルーしていた。意外とこの記事の是非について盛り上がった。私がこの記事をひどいと思うのは次の点になる。
目的と手段をベン図 (集合を扱う表現) で表すという奇妙さ 会議では重要な情報を得られず雑談でこそ得られるという極端な物言い そういうケースがあることは同意するが、大半は会議で重要な情報を得られているはずだ 会議と雑談を別の空間や時間で行う対立軸のように書いているところ 会議の中で雑談して、会議内の雑談で発見があったのならそれは会議で得られたのと同じこと (上述した事例が正にそう) 雑談は会議を補うものであって会議を置き換えるものではない 会議で重要な情報を得られないなんてことは一般の業務においてあり得ない 試しにこの記事の著者が書いた本のファンである友だちにも意見を聞いてみたところ、次のようなコメントが返ってきた。
目的と手段を同じ座標の集合にするのは無理がある 手段を「目的の役に立つもの」と独自定義を置き換えることへの懸念と分かりにくさ 本とブログとのギャップに驚いている。どちらかが本人でどちらかがゴーストライターなのか、とさえ思ってしまう 前半の大事な前提が受け入れられないからその続きの内容も入ってこないといったコメントをその友だちからもらった。そんな話しをしていると、はらさんが javascript と java を混同して話す人はなにを話しても聞く気にならないと解釈すれば理解できると共感していた。それぐらい冒頭の目的と手段について書かれた内容はわかりにくいと言える。
著者が言いたいことは、本質的な課題は最初からわかりにくいもので顧客自身も気付いていないことが多い。いくつか調査したりヒアリングしたり、その結果を分析したりしながら徐々にわかってきたりすることがある。イシューからはじめよ ではそのことを「解くべき問題 = 課題を見極める」と表現している。私はそれを課題管理で解決しようとしているが、著者は雑談で解決しようというアプローチの違いについて書いてあるものだと意図は理解できる。しかし、記事の内容は分かりにくいので支持しないというのが私の立場である。</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。昨日は遅くまで調べものをしていたわりには達成感がなくていまいちな金曜日になった。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>東京出張から戻ってきたときはあまり体調がよくないことが多い。今日は右足全般の張りが強かった。すねの外側、太ももの後ろ、股関節の関節部位、あちこち硬いなと思えた。今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。数値もよくはなかった。なんとなくだけど、あと何年かしたら右足が動かなくなるんじゃないかとすら思えるようになってきた。いまストレッチしているのはその寿命を伸ばす行為だと考えている。なにもしていないのに体調が悪くなるというのがこれからどんどん増えてくるのだと推測する。悪いことばかりでもなく、先週まで辛かった首の痛みは気付いたら治っていた。&lt;/p>
&lt;h2 id="日本ナレッジマネジメント学会に加入申請を出した">日本ナレッジ・マネジメント学会に加入申請を出した&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0711/#コパイロツトさんと雑談">先日の課題管理の雑談&lt;/a> のときに &lt;a href="https://kmsj.org/">日本ナレッジ・マネジメント学会&lt;/a> という学会があることを教えていただいた。学術的なところでナレッジマネジメント (知識経営) についてどのようなことが研究されていて (あるいはされていなくて)、どういう知見が溜まっているのかを知りたかったのでちょうどうちの会社にとってよい機会だと思える。&lt;/p>
&lt;p>さっそく web のフォームから加入申請を送って、法人会員になるのは申請書を郵送する必要があるとのことでその事務手続きも終えた。法人会員は10万円/年の費用がかかる。学会などの年会費は「諸会費」という勘定科目使い、不課税となる。まぁこのぐらいの金額ならよいだろうと即断即決で決めた。&lt;/p>
&lt;h2 id="雑談の雑談">雑談の雑談&lt;/h2>
&lt;p>毎月お手伝い先の会社に出張して経営陣とサポート部門トップを含めたトップ3に &lt;a href="/diary/diary/posts/2023/0712/">プロジェクトの進捗報告&lt;/a> をしている。&lt;/p>
&lt;p>プロジェクトの初期の頃は情報共有を密にしたり親睦を深める意図から (言うても月1回だけれども) 毎月行くことには意味はあった。しかし、うちのチームはフルリモートで開発が進む体制になっており、私が物理的にオフィスに出向かなくてもプロジェクトの開発にはほとんど影響を与えない。ではなぜ出張しているのかの意義はプロジェクトの進捗報告をオフライン会議でやっていることの方が大きいのではないかと思うようになってきた。早いときは20分ほどで報告は終わるし、普通にやっても30分もあったら報告内容は終わる。そこから参加者でその時々の雑談が始まる。会議のうち報告と雑談の時間が半々ぐらいといったときもある。&lt;/p>
&lt;p>この雑談の機会を作る大義名分として、私が出張して進捗報告の会議があるから「出しになっている」のではないか？という仮説を思いついた。その場では「プロジェクトには直接関係ないのだけど、、、」という話題もちょくちょく出る。会社の業務には誰の責任でも担当でもない宙ぶらりんになる業務も発生する。チームならそれはマネージャーがすべて巻き取るわけだが、部署単位になると浮いたままになることもある。そういう話題がこの会議の中ではちょくちょくあがってくる。&lt;/p>
&lt;p>建前上の会議を「出しにして」話す機会のない人たちが雑談するという、別の価値を提供している会議もあるんじゃないかと、顧問のはらさんと雑談していたところ、次の記事を紹介された。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tech.stmn.co.jp/entry/2023/07/14/115639">なぜ雑談が重要か&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>私も前日にざっと読んでこれはひどい記事だなと思ってスルーしていた。意外とこの記事の是非について盛り上がった。私がこの記事をひどいと思うのは次の点になる。&lt;/p>
&lt;ul>
&lt;li>目的と手段をベン図 (集合を扱う表現) で表すという奇妙さ&lt;/li>
&lt;li>会議では重要な情報を得られず雑談でこそ得られるという極端な物言い
&lt;ul>
&lt;li>そういうケースがあることは同意するが、大半は会議で重要な情報を得られているはずだ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>会議と雑談を別の空間や時間で行う対立軸のように書いているところ
&lt;ul>
&lt;li>会議の中で雑談して、会議内の雑談で発見があったのならそれは会議で得られたのと同じこと (上述した事例が正にそう)&lt;/li>
&lt;li>雑談は会議を補うものであって会議を置き換えるものではない
&lt;ul>
&lt;li>会議で重要な情報を得られないなんてことは一般の業務においてあり得ない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>試しにこの記事の著者が書いた本のファンである友だちにも意見を聞いてみたところ、次のようなコメントが返ってきた。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>目的と手段を同じ座標の集合にするのは無理がある&lt;/li>
&lt;li>手段を「目的の役に立つもの」と独自定義を置き換えることへの懸念と分かりにくさ&lt;/li>
&lt;li>本とブログとのギャップに驚いている。どちらかが本人でどちらかがゴーストライターなのか、とさえ思ってしまう&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>前半の大事な前提が受け入れられないからその続きの内容も入ってこないといったコメントをその友だちからもらった。そんな話しをしていると、はらさんが javascript と java を混同して話す人はなにを話しても聞く気にならないと解釈すれば理解できると共感していた。それぐらい冒頭の目的と手段について書かれた内容はわかりにくいと言える。&lt;/p>
&lt;p>著者が言いたいことは、本質的な課題は最初からわかりにくいもので顧客自身も気付いていないことが多い。いくつか調査したりヒアリングしたり、その結果を分析したりしながら徐々にわかってきたりすることがある。&lt;a href="http://www.eijipress.co.jp/book/book.php?epcode=2085">イシューからはじめよ&lt;/a> ではそのことを「解くべき問題 = 課題を見極める」と表現している。私はそれを課題管理で解決しようとしているが、著者は雑談で解決しようというアプローチの違いについて書いてあるものだと意図は理解できる。しかし、記事の内容は分かりにくいので支持しないというのが私の立場である。&lt;/p></content></item><item><title>定例会議のプラクティスとプロダクト</title><link>/diary/posts/2023/0709/</link><pubDate>Sun, 09 Jul 2023 20:15:38 +0900</pubDate><guid>/diary/posts/2023/0709/</guid><description>昨日も1時過ぎまで飲んでいて3時に寝て8時に起きて午前中はだらだらしていてお昼からオフィスへ出掛けて行って調べものをしていた。
課題管理の雑談会へ向けての準備 先日の準備 の続き。
先日は私が関心をもっていることの資料を整理し直して先方に提示した。今日は コパイロツト さんのプロダクトの1つである SuperGoodMeetings にアカウント登録していろいろ触っていた。その過程で Project Sprint プラクティカルガイド を読んだりもしていた。
SuperGoodMeetings は Project Sprint という考え方で定例会議をうまくやるためのプロダクトにみえる。アプリケーションの完成度も高いしよく出来ていると思う。私からみたら課題管理システムのサブセットにみえる。会議のアジェンダが個々の issue に相当して詳細に管理できる。ui も最近の課題管理システムのそれに近い。一方でこのプロダクトは開発者向けのツールではないため、このツールだけでシステム開発を管理することは想定していないのではないか？と推測される。その辺りの話しも来週、出張したときに中の人に聞いてみようと思う。</description><content>&lt;p>昨日も1時過ぎまで飲んでいて3時に寝て8時に起きて午前中はだらだらしていてお昼からオフィスへ出掛けて行って調べものをしていた。&lt;/p>
&lt;h2 id="課題管理の雑談会へ向けての準備">課題管理の雑談会へ向けての準備&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0617/#課題管理の雑談会へ向けての準備">先日の準備&lt;/a> の続き。&lt;/p>
&lt;p>先日は私が関心をもっていることの資料を整理し直して先方に提示した。今日は &lt;a href="https://copilot.jp/">コパイロツト&lt;/a> さんのプロダクトの1つである &lt;a href="https://supergoodmeetings.com/">SuperGoodMeetings&lt;/a> にアカウント登録していろいろ触っていた。その過程で &lt;a href="https://miro.com/app/board/uXjVMX-zl6s=/">Project Sprint プラクティカルガイド&lt;/a> を読んだりもしていた。&lt;/p>
&lt;p>SuperGoodMeetings は Project Sprint という考え方で定例会議をうまくやるためのプロダクトにみえる。アプリケーションの完成度も高いしよく出来ていると思う。私からみたら課題管理システムのサブセットにみえる。会議のアジェンダが個々の issue に相当して詳細に管理できる。ui も最近の課題管理システムのそれに近い。一方でこのプロダクトは開発者向けのツールではないため、このツールだけでシステム開発を管理することは想定していないのではないか？と推測される。その辺りの話しも来週、出張したときに中の人に聞いてみようと思う。&lt;/p></content></item><item><title>七夕と願い</title><link>/diary/posts/2023/0707/</link><pubDate>Fri, 07 Jul 2023 18:01:53 +0900</pubDate><guid>/diary/posts/2023/0707/</guid><description>23時に寝て2時に起きて6時に起きた。旅行から帰ってきてから最近はこのパターンになってきた。
google のロゴが Tanabata 2023 になっていて七夕だと気付いた。もう私にとって願いというのは健康を祈るぐらいしかない。残された寿命を使い切る前にいまやっていることをやり切りたい、もしくはその結果をみたいと思っていて、そのために必要なことは健康ぐらいかなと。
隔週の雑談 顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。
ADLIV さんふりかえり 社員旅行の同行ふりかえり 他社の社員旅行へ同行してみての所感として学ぶことは多々あった。
強制参加にはしない (断ってもよい) 仕事だけではない人間関係の構築という価値観を大事にしている 上下関係がフラットなので参加者が自由に行動したり話したりできる 経営陣や上司に忖度しないメンバーがいることでフラットな関係性を共有できる チーム単位で行動できるので組織の全体行動を強制される感覚が緩和される 野中郁二郎先生は業務外での暗黙知を共有する「場」づくりが大事だと説いている。会社が危機のときやしんどいお仕事をこなすとき、最後は経営者やリーダーの人生観や価値観がモノを言うという考え方がある。そんなときにこういった価値観の共有は役に立つのかもしれない。「社員旅行」という単語自体が古い価値観をイメージしてネガティブに聞こえる。いまだったらワーケーションと呼ぶ方がよいかもしれない。
過去にスタートアップで働いていたとき、会社が M&amp;amp;A で売却して、私にとってはあまりメリットがなかったので即断で辞めると伝えた。即断できたのは経営者に理念がなかったからというのも大きな要因の1つだといまになって思える。時期の差はあれど、私以外の主要メンバーもその後に全員辞めた。要はそういうこと。
go の generics 勉強会の準備 水曜日から資料を作っている。昨日はほぼまる一日コードレビューをやっていた。午前中の半日を費やしてようやく完成した。この資料は一般の go 勉強会でも使えるなと思ったのでお手伝い先のプロダクト開発に関するところを取り除いた資料を別途公開した。資料の中でその内容を検証するサンプルコードも次のリポジトリで公開している。
https://github.com/t2y/go-generics-study</description><content>&lt;p>23時に寝て2時に起きて6時に起きた。旅行から帰ってきてから最近はこのパターンになってきた。&lt;/p>
&lt;p>google のロゴが &lt;a href="https://www.google.com/doodles/tanabata-2023">Tanabata 2023&lt;/a> になっていて七夕だと気付いた。もう私にとって願いというのは健康を祈るぐらいしかない。残された寿命を使い切る前にいまやっていることをやり切りたい、もしくはその結果をみたいと思っていて、そのために必要なことは健康ぐらいかなと。&lt;/p>
&lt;h2 id="隔週の雑談">隔週の雑談&lt;/h2>
&lt;p>顧問のはらさんと隔週の打ち合わせ。今日の議題はこれら。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2023/0628/">ADLIV さんふりかえり&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/tags/sightseeing/">社員旅行の同行ふりかえり&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>他社の社員旅行へ同行してみての所感として学ぶことは多々あった。&lt;/p>
&lt;ul>
&lt;li>強制参加にはしない (断ってもよい)&lt;/li>
&lt;li>仕事だけではない人間関係の構築という価値観を大事にしている&lt;/li>
&lt;li>上下関係がフラットなので参加者が自由に行動したり話したりできる&lt;/li>
&lt;li>経営陣や上司に忖度しないメンバーがいることでフラットな関係性を共有できる&lt;/li>
&lt;li>チーム単位で行動できるので組織の全体行動を強制される感覚が緩和される&lt;/li>
&lt;/ul>
&lt;p>野中郁二郎先生は業務外での暗黙知を共有する「場」づくりが大事だと説いている。会社が危機のときやしんどいお仕事をこなすとき、最後は経営者やリーダーの人生観や価値観がモノを言うという考え方がある。そんなときにこういった価値観の共有は役に立つのかもしれない。「社員旅行」という単語自体が古い価値観をイメージしてネガティブに聞こえる。いまだったらワーケーションと呼ぶ方がよいかもしれない。&lt;/p>
&lt;p>過去にスタートアップで働いていたとき、会社が M&amp;amp;A で売却して、私にとってはあまりメリットがなかったので即断で辞めると伝えた。即断できたのは経営者に理念がなかったからというのも大きな要因の1つだといまになって思える。時期の差はあれど、私以外の主要メンバーもその後に全員辞めた。要はそういうこと。&lt;/p>
&lt;h2 id="go-の-generics-勉強会の準備">go の generics 勉強会の準備&lt;/h2>
&lt;p>水曜日から資料を作っている。昨日はほぼまる一日コードレビューをやっていた。午前中の半日を費やしてようやく完成した。この資料は一般の go 勉強会でも使えるなと思ったのでお手伝い先のプロダクト開発に関するところを取り除いた資料を別途公開した。資料の中でその内容を検証するサンプルコードも次のリポジトリで公開している。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/t2y/go-generics-study">https://github.com/t2y/go-generics-study&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>コードレビューで1日が終わる日</title><link>/diary/posts/2023/0706/</link><pubDate>Thu, 06 Jul 2023 08:19:59 +0900</pubDate><guid>/diary/posts/2023/0706/</guid><description>0時に寝て2時に起きて6時半に起きた。旅行から帰ってきて睡眠の質が上がってきた気がする。
コードレビュー 週明けから毎日ずっとコードレビューをしているわけだけど、今日は scim の id 連携の実装ができたのでそのコードレビューを半日以上やっていた。変更内容は2000行弱ぐらい。以前にも scim の調査 について少し書いた。
担当者は前マイルストーンのときから調査していて、今マイルストーンで初期実装は入れてしまおうという話しを昨日の 1on1 でしていた。また qa レベルのテストは来月末ぐらいでやるので詳細を作り込むよりもまずは大きな機能として入れておきたい。いまマイルストーンの期間を2週間に設定している。調査も含めて実装まで2つのマイルストーンを費やそうとしている。理想的にはどんな機能であっても、メンバーには2週間で完了する粒度で issue を分割して作業できるようになってほしいという狙いがある。
それは過去にどんな新機能を作っていても2週間を超えることはなかったという私の経験則でもある。これは2週間でどんな機能でも完成するという意味ではなく、2週間でマージできないような区切りのつかない機能開発はないという意味だ。機能実装のような issue でマイルストーンをまたぐ開発をしていると、進捗が不透明になったり、開発がダレると私は考えている。ダレるというのは短い期間に集中して開発した方が効率も品質もよいものができるのではないか。記憶の仕組みからは理屈上そうだと言える。開発のメリハリをつけるという働き方に範を示していきたい。</description><content>&lt;p>0時に寝て2時に起きて6時半に起きた。旅行から帰ってきて睡眠の質が上がってきた気がする。&lt;/p>
&lt;h2 id="コードレビュー">コードレビュー&lt;/h2>
&lt;p>週明けから毎日ずっとコードレビューをしているわけだけど、今日は scim の id 連携の実装ができたのでそのコードレビューを半日以上やっていた。変更内容は2000行弱ぐらい。以前にも &lt;a href="/diary/diary/posts/2023/0627/#scim-調査">scim の調査&lt;/a> について少し書いた。&lt;/p>
&lt;p>担当者は前マイルストーンのときから調査していて、今マイルストーンで初期実装は入れてしまおうという話しを昨日の 1on1 でしていた。また qa レベルのテストは来月末ぐらいでやるので詳細を作り込むよりもまずは大きな機能として入れておきたい。いまマイルストーンの期間を2週間に設定している。調査も含めて実装まで2つのマイルストーンを費やそうとしている。理想的にはどんな機能であっても、メンバーには2週間で完了する粒度で issue を分割して作業できるようになってほしいという狙いがある。&lt;/p>
&lt;p>それは過去にどんな新機能を作っていても2週間を超えることはなかったという私の経験則でもある。これは2週間でどんな機能でも完成するという意味ではなく、2週間でマージできないような区切りのつかない機能開発はないという意味だ。機能実装のような issue でマイルストーンをまたぐ開発をしていると、進捗が不透明になったり、開発がダレると私は考えている。ダレるというのは短い期間に集中して開発した方が効率も品質もよいものができるのではないか。記憶の仕組みからは理屈上そうだと言える。開発のメリハリをつけるという働き方に範を示していきたい。&lt;/p></content></item><item><title>徳島のコワーキングスペース訪問</title><link>/diary/posts/2023/0628/</link><pubDate>Wed, 28 Jun 2023 09:06:59 +0900</pubDate><guid>/diary/posts/2023/0628/</guid><description>23時に寝て4時に起きて6時に起きて8時に起きた。今日はお休みをとって徳島のコワーキングスペースの見学へ行くことにした。当初は明日の午前中だけ見学しようかと考えていたけど、宿泊もした方が気付きが多いんじゃないかと思って一昨日に予定変更した。結果的にこれはとてもうまくいった。
ADLIV さん訪問 以前 カフーツさんのオンラインイベント で 徳島県美馬市脇町 のコワーキングの取り組みを伺っていた。機会をみつけて行きたいと考えていたのを今日行くことにした。10時過ぎに実家を出て、途中 道の駅いたの で休憩して、11時45分には ADLIV さんに着いた。
近くのラーメン屋さんでお昼ご飯を食べて12時半過ぎに ADLIV さんに着き、少し待たせてもらう。宿泊は4,500円で13時からチェックインできる。翌日のチェックアウトまでのコワーキングスペースの利用料も込みだという。13時まで待ってスタッフさんが来られて施設を案内してもらうことになった。
2Fはシェアオフィスになっていて通常コワーキングスペースの利用者には案内しないということなんだけど、他に利用者が少なくて余裕があったのか、私が伊藤さんの紹介だとメモに書いたおかげなのか、2Fも案内してもらえた。ラッキー。外国人が来たときも2Fをみたいという要望も多いと話されていたのでちょくちょく案内しているように聞こえた。
コワーキングスペースに宿泊できるが、ホテルではないのでスタッフは19時にはいなくなって翌8時ぐらいまでいない。それは全然構わない。チェックアウトもとくにスタッフに声をかけなくても勝手に出ていけばよいらしい。お世話になったので挨拶はして出ようとは思う。
今日の宿泊者は私だけなので自由に使ってよいとのこと。カプセルのカーテンを締めると暑いから他に宿泊者がいないから開けっ放しの方がよいとお奨めされた。他に誰かいたらコワーキング的な話を聞いてみようかと思っていたが、週の半ばでそれは叶わなかった。
チェックインして普通に作業していたら、オーナーのなかがわさんが来られて名刺交換して軽くご挨拶した。小さいスペースの方が涼しいからこちらへどうぞとハンモックがあるスペースで作業した。
その後、18時過ぎから一緒に晩ご飯行きましょうとなかがわさんに声をかけてもらって、自転車も貸してくれて、うだつの街並みの案内を受けながらお好み焼き屋さんへ行った。あとから地元の農家さん夫婦も合流して4人で雑談していた。
経営者しか経営者の気持ちがわからないとはよく言ったもので本当にその通りだと思う。うちみたいなお気楽な1人会社であっても、経営者という立場にになって初めて考えることや悩むことが多々ある。そして、経営者は会社の中では孤独な役割になる。経営者は経営という共通の話題をもっていて、他社の経営的な話しに共感しやすく、普段相談する相手もいないことから経営者同士は打ち解けやすい。学校で友だちを作る感覚に似ている。徳島県は淡路島から近いし、なかがわさんとはまたなにかの機会で縁があるといいなと思えた。
プロジェクトを通してそれぞれの専門家が一緒に働く仕組み作り 寄せ集めのメンバーを統括してプロジェクトを為すマネージャー大事、超大事 人と人との信頼はアウトソースできない コワーキングスペースをやっていると、向こうからおもしろい人がやって来てくれる 気付きを得て自律的に働く人とそうじゃない人の見極めは難しい 社員にやってほしいことをやれと指示しても自律的に働くようにならない 楽しく働く 18時半から21時までお好み焼き屋さんでわいわい雑談して ADLIV さんに戻って休むことにした。田舎なので閉店も21時半と早めだ。
寝る前に眠くなるまで、書架にあった 史記 を読んでいた。歴史好きなので読み始めると止まらなくなる。</description><content>&lt;p>23時に寝て4時に起きて6時に起きて8時に起きた。今日はお休みをとって徳島のコワーキングスペースの見学へ行くことにした。当初は明日の午前中だけ見学しようかと考えていたけど、宿泊もした方が気付きが多いんじゃないかと思って一昨日に予定変更した。結果的にこれはとてもうまくいった。&lt;/p>
&lt;h2 id="adliv-さん訪問">ADLIV さん訪問&lt;/h2>
&lt;p>以前 &lt;a href="/diary/diary/posts/2022/1116/#コワーキングのオンラインイベント">カフーツさんのオンラインイベント&lt;/a> で &lt;a href="https://livinganywherecommons.com/base/mima/">徳島県美馬市脇町&lt;/a> のコワーキングの取り組みを伺っていた。機会をみつけて行きたいと考えていたのを今日行くことにした。10時過ぎに実家を出て、途中 &lt;a href="https://www.michinoeki-itano.jp/">道の駅いたの&lt;/a> で休憩して、11時45分には &lt;a href="https://www.adliv-tokushima.com/">ADLIV&lt;/a> さんに着いた。&lt;/p>
&lt;p>近くのラーメン屋さんでお昼ご飯を食べて12時半過ぎに ADLIV さんに着き、少し待たせてもらう。宿泊は4,500円で13時からチェックインできる。翌日のチェックアウトまでのコワーキングスペースの利用料も込みだという。13時まで待ってスタッフさんが来られて施設を案内してもらうことになった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0628_adliv1.jpg"/>
&lt;/figure>
&lt;p>2Fはシェアオフィスになっていて通常コワーキングスペースの利用者には案内しないということなんだけど、他に利用者が少なくて余裕があったのか、私が伊藤さんの紹介だとメモに書いたおかげなのか、2Fも案内してもらえた。ラッキー。外国人が来たときも2Fをみたいという要望も多いと話されていたのでちょくちょく案内しているように聞こえた。&lt;/p>
&lt;p>コワーキングスペースに宿泊できるが、ホテルではないのでスタッフは19時にはいなくなって翌8時ぐらいまでいない。それは全然構わない。チェックアウトもとくにスタッフに声をかけなくても勝手に出ていけばよいらしい。お世話になったので挨拶はして出ようとは思う。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0628_adliv2.jpg"/>
&lt;/figure>
&lt;p>今日の宿泊者は私だけなので自由に使ってよいとのこと。カプセルのカーテンを締めると暑いから他に宿泊者がいないから開けっ放しの方がよいとお奨めされた。他に誰かいたらコワーキング的な話を聞いてみようかと思っていたが、週の半ばでそれは叶わなかった。&lt;/p>
&lt;p>チェックインして普通に作業していたら、オーナーのなかがわさんが来られて名刺交換して軽くご挨拶した。小さいスペースの方が涼しいからこちらへどうぞとハンモックがあるスペースで作業した。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0628_adliv3.jpg"/>
&lt;/figure>
&lt;p>その後、18時過ぎから一緒に晩ご飯行きましょうとなかがわさんに声をかけてもらって、自転車も貸してくれて、うだつの街並みの案内を受けながらお好み焼き屋さんへ行った。あとから地元の農家さん夫婦も合流して4人で雑談していた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0628_adliv4.jpg"/>
&lt;/figure>
&lt;p>経営者しか経営者の気持ちがわからないとはよく言ったもので本当にその通りだと思う。うちみたいなお気楽な1人会社であっても、経営者という立場にになって初めて考えることや悩むことが多々ある。そして、経営者は会社の中では孤独な役割になる。経営者は経営という共通の話題をもっていて、他社の経営的な話しに共感しやすく、普段相談する相手もいないことから経営者同士は打ち解けやすい。学校で友だちを作る感覚に似ている。徳島県は淡路島から近いし、なかがわさんとはまたなにかの機会で縁があるといいなと思えた。&lt;/p>
&lt;ul>
&lt;li>プロジェクトを通してそれぞれの専門家が一緒に働く仕組み作り&lt;/li>
&lt;li>寄せ集めのメンバーを統括してプロジェクトを為すマネージャー大事、超大事&lt;/li>
&lt;li>人と人との信頼はアウトソースできない&lt;/li>
&lt;li>コワーキングスペースをやっていると、向こうからおもしろい人がやって来てくれる&lt;/li>
&lt;li>気付きを得て自律的に働く人とそうじゃない人の見極めは難しい&lt;/li>
&lt;li>社員にやってほしいことをやれと指示しても自律的に働くようにならない&lt;/li>
&lt;li>楽しく働く&lt;/li>
&lt;/ul>
&lt;p>18時半から21時までお好み焼き屋さんでわいわい雑談して ADLIV さんに戻って休むことにした。田舎なので閉店も21時半と早めだ。&lt;/p>
&lt;p>寝る前に眠くなるまで、書架にあった &lt;a href="https://www.shogakukan.co.jp/books/volume/13612">史記&lt;/a> を読んでいた。歴史好きなので読み始めると止まらなくなる。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0628_adliv5.jpg"/>
&lt;/figure></content></item><item><title>課題管理の雑談会の準備</title><link>/diary/posts/2023/0617/</link><pubDate>Sat, 17 Jun 2023 13:15:22 +0900</pubDate><guid>/diary/posts/2023/0617/</guid><description>疲れて18時過ぎに帰ってきて軽く野菜サラダを食べてそのまま寝てた。22時に起きたのでそれからオフィスへ行って2時過ぎまで作業してた。3時から寝て6時半に起きてそのまま8時半まで寝てた。
ストレッチ 出張から戻ってきた後の大事な体調管理の1つ。今回の出張はいつもより離れた場所にホテルをとってあちこち歩いたし、interop の展示会にも参加してたくさん歩いた。昨日はバテて早めにお仕事を終えて寝てたりもした。ストレッチを受けてみると、足の張りはいつもより大きかった。とくに右足すね・ふくらはぎの張りがひどかった。関節周りの痛みも気持ち分大きかったかもしれない。腰の張りは思ったよりひどくなかったのでそこまで歩き過ぎたというわけでもないみたい。ちょっと負荷の高い運動をしたぐらいかな。今日の開脚幅は開始前155cmで、ストレッチ後158cmだった。数値はほぼいつもとあまり変わらない。
課題管理の雑談会へ向けての準備 来月、東京出張したときに コパイロツトさんと雑談会 を予定している。課題管理の雑談をしたいといっても一般の人にはなんのことか理解できないので事前に資料を送るために過去の資料を見返していた。過去に勉強会で使った資料と、直近のお仕事の内容も踏まえての課題管理についての資料をいくつか整理し直した。選択した3つの資料でスライド数は100を超えている。
スクラムと課題管理+イテレーション開発の比較 ビッグテックのマネジメント 直近の話しも含めての課題管理の概要 気付けばコンテンツは十分に蓄積しつつある。これからそれらのコンテンツを体系化したり整理したり、うちの会社がどういう切り口でビジネスしていくかのコンテキストを構成していかないといけない。これがとても難しいと私は考えていて、時間がかかる作業だし、もしかしたら実際にやってみてうまくできないということもあるかもしれない。来月はどんな雑談会になるのかまだわからないけど、課題管理の話しをできる人は少ないので新たな視点が出てくればいいな。</description><content>&lt;p>疲れて18時過ぎに帰ってきて軽く野菜サラダを食べてそのまま寝てた。22時に起きたのでそれからオフィスへ行って2時過ぎまで作業してた。3時から寝て6時半に起きてそのまま8時半まで寝てた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>出張から戻ってきた後の大事な体調管理の1つ。今回の出張はいつもより離れた場所にホテルをとってあちこち歩いたし、interop の展示会にも参加してたくさん歩いた。昨日はバテて早めにお仕事を終えて寝てたりもした。ストレッチを受けてみると、足の張りはいつもより大きかった。とくに右足すね・ふくらはぎの張りがひどかった。関節周りの痛みも気持ち分大きかったかもしれない。腰の張りは思ったよりひどくなかったのでそこまで歩き過ぎたというわけでもないみたい。ちょっと負荷の高い運動をしたぐらいかな。今日の開脚幅は開始前155cmで、ストレッチ後158cmだった。数値はほぼいつもとあまり変わらない。&lt;/p>
&lt;h2 id="課題管理の雑談会へ向けての準備">課題管理の雑談会へ向けての準備&lt;/h2>
&lt;p>来月、東京出張したときに &lt;a href="/diary/diary/posts/2023/0106/#隔週の雑談">コパイロツトさんと雑談会&lt;/a> を予定している。課題管理の雑談をしたいといっても一般の人にはなんのことか理解できないので事前に資料を送るために過去の資料を見返していた。過去に勉強会で使った資料と、直近のお仕事の内容も踏まえての課題管理についての資料をいくつか整理し直した。選択した3つの資料でスライド数は100を超えている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/diary/diary/posts/2022/1202/">スクラムと課題管理+イテレーション開発の比較&lt;/a>&lt;/li>
&lt;li>&lt;a href="/diary/diary/posts/2023/0113/">ビッグテックのマネジメント&lt;/a>&lt;/li>
&lt;li>直近の話しも含めての課題管理の概要&lt;/li>
&lt;/ul>
&lt;p>気付けばコンテンツは十分に蓄積しつつある。これからそれらのコンテンツを体系化したり整理したり、うちの会社がどういう切り口でビジネスしていくかのコンテキストを構成していかないといけない。これがとても難しいと私は考えていて、時間がかかる作業だし、もしかしたら実際にやってみてうまくできないということもあるかもしれない。来月はどんな雑談会になるのかまだわからないけど、課題管理の話しをできる人は少ないので新たな視点が出てくればいいな。&lt;/p></content></item><item><title>予定調和な会議</title><link>/diary/posts/2023/0614/</link><pubDate>Wed, 14 Jun 2023 14:21:57 +0900</pubDate><guid>/diary/posts/2023/0614/</guid><description>2時過ぎに起きて、3時過ぎにおきて、5時台に起きて、6時半に起きた。なんか1時間おきにトイレに起きるみたいな空気で寝てた。
大門近くのホテル いつもは五反田のホテルに泊まっているが、今回はたまたま系列ホテルの全国旅行支援適用の部屋が大門近くのホテルにしかなかったのでそちらに泊まってみた。五反田-大門間は都営浅草線で9分なので近い。過去に東京で働いていた頃、その近くに住んでいて、勤めていた会社もあったので、街そのものが懐かしくて、大門、浜松町、新橋のエリアをあちこち散策した。それでいつもの出張よりめっちゃ歩いた。15年前と変わらず残っているお店やビルもあれば、まったく違う店舗に変わってしまったお店もある。新橋とか、コロナ禍も過ぎたせいか、めっちゃ飲み歩いている人たちで活気があった。
プロジェクトの進捗報告 出張したときの月例報告の7回目。前々回の進捗報告はこちら 。5月の報告は書いてないな。そのときは他の会議がたくさんあったから省略してしまっている。他の会議と出席者も重複しているしな。
今回はわりとしっかり資料も作っていって、特異なネタもいれて、コンテンツとしては手応えをもって臨んだ。しかし、会議をしてみてそれほど盛り上がらなかったので私の自己満足だったのかもしれない。もう半年以上やっているからそんなものなのかもしれないが、肯定も否定もなくて、淡々と準備した資料の内容を説明して、ちょっと雑談して終わるといった、予定調和な会議になってきた。「本気でそんなことやるの？ちょっと待って！」みたいなツッコミが入るような取り組みをしないといけないのか？内容は悪くなかったと思うんだけど、会議が退屈だったら申し訳ないなとか思った。
課題管理ができると働き方がどう変わるかを示す GitLab のアクティビティ図があって、その図の利用許可をもらった。また後日、会社のコンテンツを作るときに活用する。</description><content>&lt;p>2時過ぎに起きて、3時過ぎにおきて、5時台に起きて、6時半に起きた。なんか1時間おきにトイレに起きるみたいな空気で寝てた。&lt;/p>
&lt;h2 id="大門近くのホテル">大門近くのホテル&lt;/h2>
&lt;p>いつもは五反田のホテルに泊まっているが、今回はたまたま系列ホテルの全国旅行支援適用の部屋が大門近くのホテルにしかなかったのでそちらに泊まってみた。五反田-大門間は都営浅草線で9分なので近い。過去に東京で働いていた頃、その近くに住んでいて、勤めていた会社もあったので、街そのものが懐かしくて、大門、浜松町、新橋のエリアをあちこち散策した。それでいつもの出張よりめっちゃ歩いた。15年前と変わらず残っているお店やビルもあれば、まったく違う店舗に変わってしまったお店もある。新橋とか、コロナ禍も過ぎたせいか、めっちゃ飲み歩いている人たちで活気があった。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の7回目。&lt;a href="/diary/diary/posts/2023/0406/">前々回の進捗報告はこちら&lt;/a> 。5月の報告は書いてないな。そのときは他の会議がたくさんあったから省略してしまっている。他の会議と出席者も重複しているしな。&lt;/p>
&lt;p>今回はわりとしっかり資料も作っていって、特異なネタもいれて、コンテンツとしては手応えをもって臨んだ。しかし、会議をしてみてそれほど盛り上がらなかったので私の自己満足だったのかもしれない。もう半年以上やっているからそんなものなのかもしれないが、肯定も否定もなくて、淡々と準備した資料の内容を説明して、ちょっと雑談して終わるといった、予定調和な会議になってきた。「本気でそんなことやるの？ちょっと待って！」みたいなツッコミが入るような取り組みをしないといけないのか？内容は悪くなかったと思うんだけど、会議が退屈だったら申し訳ないなとか思った。&lt;/p>
&lt;p>課題管理ができると働き方がどう変わるかを示す GitLab のアクティビティ図があって、その図の利用許可をもらった。また後日、会社のコンテンツを作るときに活用する。&lt;/p></content></item><item><title>メリハリの付け直し</title><link>/diary/posts/2023/0613/</link><pubDate>Tue, 13 Jun 2023 04:21:59 +0900</pubDate><guid>/diary/posts/2023/0613/</guid><description>23時ぐらいまで作業して、1時から2時ぐらいまで仮眠した。いつも通り普通に寝ないで始発の新幹線に乗って寝てた。寝ていて体があちこち痛くて、月に1回ではあるけどこの生活を続けるのもよくないかもなと思い始めた。
新しい定例会議の初日 6月から新しい開発がスタートして 新しい定例会議の進め方 に変更した。ふりかえりと情報共有の定例を1時間に詰め込むので時間が足りないかも？と時間を意識しながら進めた。その甲斐もあってか、ちょうどぴったり1時間におさまった。これも一種のパーキンソンの法則のようなものが働いているのかもしれない。
仕事は、完成までに利用可能な時間を使い果たすように拡大していく
パーキンソンの法則
メンバーが2人なので機能開発が2つずつ並行に進む。1つは開発が完了し、もう1つも大半は完了している。完了できなかったことは残念だが、私からみても着実にステップアップしているのでそれほど問題視していない。ドッグフードテスト の導入も完了こそしなかったが、これも社内インフラの都合や管理者の工数を調整してもらったりするので着実に進捗しているのであれば、それほど厳密にスケジュール管理しなくてよいのかもしれない。
イテレーション開発のルール的には優先度を付けた issue はそのイテレーション内でやり切るという目標をもつように促している。但し、まだ開発の序盤であるので現時点ではそれほど重要ではない。これも1つのメリハリだとみなすこともできる。また様々な状況の変化や調整をしながら期限を意識して働くのは一定のスキルと自律的な行動を取れる開発者に限られる。
なんのために働くかの答えを見い出せていない若い人にそれを求めるのもまた違うなと思えて、この状況を作り出しているのは、働く目的そのものを導くようなリーダーシップを取れていない私自身の責任だと実感した。つまり私が自身の規律を緩めているのがメンバーに伝わって、結果的にスケジュールを守ろうとする最後の底力を支えられていないと思えた。開発の仕切り直しに私自身も切り替えていかないといけない。
厄介なインフラの問題 x 2 ちょうどインフラに関する、特定の状況においてパフォーマンスが劇的に劣化したり、意図しない振る舞いをしたりする事象を2つ確認している。これこそ私が面倒をみる issue だなと思って着手した。m2 macbook はこういったインフラの再現環境を作るのに向いていない。2022年に virtualbox 7.0 で m1/m2 に対応したという changelog があるけど、少し前にインストールしようとするとエラーになって動かなくて諦めた。
macOS host: Providing a Developer Preview package for systems with an Apple silicon CPU. This is unsupported work in progress, and is known to have very modest performance.
Changelog for VirtualBox 7.0
アプリケーションのコンテナイメージも、現時点では amd64 向けにしか提供していないため、どのみちコンテナでの検証が必要になったら m2 macbook では動作させられない。そういう厄介な issue を抱えた。帰ったらオフィスのデスクトップマシンで再現環境を作るところから始める。</description><content>&lt;p>23時ぐらいまで作業して、1時から2時ぐらいまで仮眠した。いつも通り普通に寝ないで始発の新幹線に乗って寝てた。寝ていて体があちこち痛くて、月に1回ではあるけどこの生活を続けるのもよくないかもなと思い始めた。&lt;/p>
&lt;h2 id="新しい定例会議の初日">新しい定例会議の初日&lt;/h2>
&lt;p>6月から新しい開発がスタートして &lt;a href="/diary/diary/posts/2023/0607/">新しい定例会議の進め方&lt;/a> に変更した。ふりかえりと情報共有の定例を1時間に詰め込むので時間が足りないかも？と時間を意識しながら進めた。その甲斐もあってか、ちょうどぴったり1時間におさまった。これも一種のパーキンソンの法則のようなものが働いているのかもしれない。&lt;/p>
&lt;blockquote>
&lt;p>仕事は、完成までに利用可能な時間を使い果たすように拡大していく&lt;/p>
&lt;p>&lt;a href="https://asana.com/ja/resources/parkinsons-law">パーキンソンの法則&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>メンバーが2人なので機能開発が2つずつ並行に進む。1つは開発が完了し、もう1つも大半は完了している。完了できなかったことは残念だが、私からみても着実にステップアップしているのでそれほど問題視していない。&lt;a href="/diary/diary/posts/2023/0526/#ドッグフードテストと運用談義">ドッグフードテスト&lt;/a> の導入も完了こそしなかったが、これも社内インフラの都合や管理者の工数を調整してもらったりするので着実に進捗しているのであれば、それほど厳密にスケジュール管理しなくてよいのかもしれない。&lt;/p>
&lt;p>イテレーション開発のルール的には優先度を付けた issue はそのイテレーション内でやり切るという目標をもつように促している。但し、まだ開発の序盤であるので現時点ではそれほど重要ではない。これも1つのメリハリだとみなすこともできる。また様々な状況の変化や調整をしながら期限を意識して働くのは一定のスキルと自律的な行動を取れる開発者に限られる。&lt;/p>
&lt;p>なんのために働くかの答えを見い出せていない若い人にそれを求めるのもまた違うなと思えて、この状況を作り出しているのは、働く目的そのものを導くようなリーダーシップを取れていない私自身の責任だと実感した。つまり私が自身の規律を緩めているのがメンバーに伝わって、結果的にスケジュールを守ろうとする最後の底力を支えられていないと思えた。開発の仕切り直しに私自身も切り替えていかないといけない。&lt;/p>
&lt;h2 id="厄介なインフラの問題-x-2">厄介なインフラの問題 x 2&lt;/h2>
&lt;p>ちょうどインフラに関する、特定の状況においてパフォーマンスが劇的に劣化したり、意図しない振る舞いをしたりする事象を2つ確認している。これこそ私が面倒をみる issue だなと思って着手した。m2 macbook はこういったインフラの再現環境を作るのに向いていない。2022年に virtualbox 7.0 で m1/m2 に対応したという changelog があるけど、少し前にインストールしようとするとエラーになって動かなくて諦めた。&lt;/p>
&lt;blockquote>
&lt;p>macOS host: Providing a Developer Preview package for systems with an Apple silicon CPU. This is unsupported work in progress, and is known to have very modest performance.&lt;/p>
&lt;p>&lt;a href="https://www.virtualbox.org/wiki/Changelog-7.0">Changelog for VirtualBox 7.0&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>アプリケーションのコンテナイメージも、現時点では amd64 向けにしか提供していないため、どのみちコンテナでの検証が必要になったら m2 macbook では動作させられない。そういう厄介な issue を抱えた。帰ったらオフィスのデスクトップマシンで再現環境を作るところから始める。&lt;/p></content></item><item><title>一期一会</title><link>/diary/posts/2023/0608/</link><pubDate>Thu, 08 Jun 2023 08:24:16 +0900</pubDate><guid>/diary/posts/2023/0608/</guid><description>1時に寝て何度か起きて6時に起きた。鬼滅の刃を読みながら寝落ちした。
近況報告の資料作り 来週また東京出張することになり、あわてて資料作りしていた。5月に落ち穂拾いして6月は開発始まりだし、経費削減の意図もあって出張しなくてもよいんじゃないか？と緩く考えていた。しかし、先方は全然そんなつもりなくて「当然出張してくるよね」的なノリだった。毎月の顔合わせというリズムもあるし、新しい定例会議の進め方 を初めて実践する上でもオフラインでやるのが大事かもしれない。
能は一回限りの公演 武田宗典さんという能楽師が1分25秒頃から次のように話している。
能は全部一回限りの公演なんですよね。
すべてそのときだけに集まる人たちなので、
そのときにしかできない空間の作品が出来上がる。
観世流 能楽師シテ方・武田宗典
プロジェクトマネジメントも同じところがあるなと親近感をもって聞いていて印象に残った。プロジェクトマネジメントの目的はプロジェクトの再現性にあるわけだけど、実際には、あるプロジェクトでうまくいったもの (いかなかったもの) を完全には再現できない。それはまったく同じ状況、同じ要件、同じ開発メンバーでプロジェクトに取り組めないことが大半だろうし、仮に同じ開発メンバーであっても、人は時間とともに成長するので成長前に戻ることはできない。「歴史に if はない」という言葉と同様に過去のプロジェクトマネジメントや、よそのプロジェクトマネジメントになにかを言っても意味のない行為である。</description><content>&lt;p>1時に寝て何度か起きて6時に起きた。鬼滅の刃を読みながら寝落ちした。&lt;/p>
&lt;h2 id="近況報告の資料作り">近況報告の資料作り&lt;/h2>
&lt;p>来週また東京出張することになり、あわてて資料作りしていた。5月に落ち穂拾いして6月は開発始まりだし、経費削減の意図もあって出張しなくてもよいんじゃないか？と緩く考えていた。しかし、先方は全然そんなつもりなくて「当然出張してくるよね」的なノリだった。毎月の顔合わせというリズムもあるし、&lt;a href="/diary/diary/posts/2023/0607/">新しい定例会議の進め方&lt;/a> を初めて実践する上でもオフラインでやるのが大事かもしれない。&lt;/p>
&lt;h2 id="能は一回限りの公演">能は一回限りの公演&lt;/h2>
&lt;div class="video-container">
&lt;iframe src="https://www.youtube.com/embed/RU-svIQGYIo" allowfullscreen title="能楽師 観世流 武田宗典">&lt;/iframe>
&lt;/div>
&lt;p>武田宗典さんという能楽師が1分25秒頃から次のように話している。&lt;/p>
&lt;blockquote>
&lt;p>能は全部一回限りの公演なんですよね。&lt;br />
すべてそのときだけに集まる人たちなので、&lt;br />
そのときにしかできない空間の作品が出来上がる。&lt;/p>
&lt;p>観世流 能楽師シテ方・武田宗典&lt;/p>
&lt;/blockquote>
&lt;p>プロジェクトマネジメントも同じところがあるなと親近感をもって聞いていて印象に残った。プロジェクトマネジメントの目的はプロジェクトの再現性にあるわけだけど、実際には、あるプロジェクトでうまくいったもの (いかなかったもの) を完全には再現できない。それはまったく同じ状況、同じ要件、同じ開発メンバーでプロジェクトに取り組めないことが大半だろうし、仮に同じ開発メンバーであっても、人は時間とともに成長するので成長前に戻ることはできない。「歴史に if はない」という言葉と同様に過去のプロジェクトマネジメントや、よそのプロジェクトマネジメントになにかを言っても意味のない行為である。&lt;/p></content></item><item><title>ぼくのかんがえたさいきょうの定例会議</title><link>/diary/posts/2023/0607/</link><pubDate>Wed, 07 Jun 2023 18:48:14 +0900</pubDate><guid>/diary/posts/2023/0607/</guid><description>1時に寝て何度か起きて8時に起きた。昨日ブログを書き終えてほっとしたのか、珍しく寝坊した。
課題管理の定例会議の進め方 5月31日から 新しい開発がスタート していてイテレーションを2週間に、そして定例会議も同様に隔週とした。その狙いは先日の日記に書いてあるが、これまで毎週やっていた定例会議の進め方はあわないので新規に会議の進め方を刷新した。これまでふりかえりと定例会議を別にやっていたのを1つにした。またふりかえりの会議のときに、ふりかえり作業そのものもやっていたのを、定例までに事前にメンバーがそれぞれやってきて、結果を定例のときに共有しようというやり方に改めた。ネガティブなふりかえりは発生時点で課題管理システムに登録してフィルター可能というのがアピールポイント。いまチームのメンバーが3人なのでこれでも会議は1時間でおさまる見積もり。メンバーが増えたらふりかえりと定例は別の時間にわけてやるかな？会議時間が長くなるとダレるので1つの会議は1時間以内で締めるというのは徹底したい。
現マイルストーンのふりかえり (目安時間: 25分) fun/done/learn を使ったポジティブなふりかえり で共有 ネガティブなふりかえりは課題管理システムに Postmortem ラベルを付与して issue 登録したものを共有 次マイルストーンでやることの確認 (目安時間: 25分) 課題管理システムにある次マイルストーンでフィルターした issue を共有 issue になっていないもので聞きたいことや分からないことを聞く (目安時間: 10分) メンバーが自由に意見を表明 雑談 (余り時間) メンバーが自由に雑談 事前準備を済ましてから、スクラムでいうところの、レトロスペクティブとプランニングを同時にやるといったもの。実践としてうまくいくかどうか、今回の開発で試してみる。</description><content>&lt;p>1時に寝て何度か起きて8時に起きた。昨日ブログを書き終えてほっとしたのか、珍しく寝坊した。&lt;/p>
&lt;h2 id="課題管理の定例会議の進め方">課題管理の定例会議の進め方&lt;/h2>
&lt;p>5月31日から &lt;a href="/diary/diary/posts/2023/0530/#落ち穂拾いの終了">新しい開発がスタート&lt;/a> していてイテレーションを2週間に、そして定例会議も同様に隔週とした。その狙いは先日の日記に書いてあるが、これまで毎週やっていた定例会議の進め方はあわないので新規に会議の進め方を刷新した。これまでふりかえりと定例会議を別にやっていたのを1つにした。またふりかえりの会議のときに、ふりかえり作業そのものもやっていたのを、定例までに事前にメンバーがそれぞれやってきて、結果を定例のときに共有しようというやり方に改めた。ネガティブなふりかえりは発生時点で課題管理システムに登録してフィルター可能というのがアピールポイント。いまチームのメンバーが3人なのでこれでも会議は1時間でおさまる見積もり。メンバーが増えたらふりかえりと定例は別の時間にわけてやるかな？会議時間が長くなるとダレるので1つの会議は1時間以内で締めるというのは徹底したい。&lt;/p>
&lt;ol>
&lt;li>現マイルストーンのふりかえり (目安時間: 25分)
&lt;ol>
&lt;li>&lt;a href="/diary/diary/posts/2022/1129/">fun/done/learn を使ったポジティブなふりかえり&lt;/a> で共有&lt;/li>
&lt;li>ネガティブなふりかえりは課題管理システムに &lt;code>Postmortem&lt;/code> ラベルを付与して issue 登録したものを共有&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>次マイルストーンでやることの確認 (目安時間: 25分)
&lt;ol>
&lt;li>課題管理システムにある次マイルストーンでフィルターした issue を共有&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>issue になっていないもので聞きたいことや分からないことを聞く (目安時間: 10分)
&lt;ol>
&lt;li>メンバーが自由に意見を表明&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>雑談 (余り時間)
&lt;ol>
&lt;li>メンバーが自由に雑談&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>事前準備を済ましてから、スクラムでいうところの、レトロスペクティブとプランニングを同時にやるといったもの。実践としてうまくいくかどうか、今回の開発で試してみる。&lt;/p></content></item><item><title>落ち穂を拾い集めて課題管理を促す</title><link>/diary/posts/2023/0530/</link><pubDate>Tue, 30 May 2023 08:42:38 +0900</pubDate><guid>/diary/posts/2023/0530/</guid><description>2時に寝て何度か起きて7時に起きた。能の本を読みながら寝落ちした。
落ち穂拾いの終了 4月末にリリースしてその後 GW に入って、5月は「落ち穂拾い」として 開発全体のふりかえり をやったり、次の開発の要件を整理 したりしていた。ドッグフードテスト の導入もまだ作業中ではあるが、社内のシステム管理者にも協力していただいて進めている。私の作業でも十分な余裕をもって次の準備につなげることができたので開発の区切りで1ヶ月ぐらい準備期間があることはよいように思える。経営者はもっと働かせたがるかもしれないが。
これまでの開発は定例会議も 1on1 も毎週行ってきたが、次の開発ではこれらの会議を隔週にしてみる。口頭による同期コミュニケーションのコストを減らし、より開発そのものに時間を割いて注力できるようにする。もしかしたら、これによって私も開発に参加する時間を作りやすくなるかもしれない。もう1つ 必要なときに必要な人とすぐに話す (会議の日まで待たない) という狙いがある。毎週会議があると、すぐ聞けばよいことを次の会議まで待ってしまうということがある。私もある。私ですら待つときがあるのだからおそらくメンバーにもそうしてしまうことがあると推測する。会議の頻度を下げることでこの待ち時間を削減して即時問い合わせ、即時解決するといったコミュニケーションに移行していきたいという狙いがある。開発者の自律性を高めるためにはこういった取り組みも必要だと思える。もっと言えば、毎週会議しないと情報共有できないというのは開発者を子ども扱いして堕落させるのではないかと考える。実際に意図したようにうまくいくかどうかはやってみてから考える。
うちの開発メンバーは半年前より見違えて課題管理に習熟したので次の開発がどうなるかが本当に楽しみだ。</description><content>&lt;p>2時に寝て何度か起きて7時に起きた。能の本を読みながら寝落ちした。&lt;/p>
&lt;h2 id="落ち穂拾いの終了">落ち穂拾いの終了&lt;/h2>
&lt;p>4月末にリリースしてその後 GW に入って、5月は「落ち穂拾い」として &lt;a href="/diary/diary/posts/2023/0516/#半年間の開発のふりかえり">開発全体のふりかえり&lt;/a> をやったり、&lt;a href="/diary/diary/posts/2023/0518/#開発課題の打ち合わせ">次の開発の要件を整理&lt;/a> したりしていた。&lt;a href="/diary/diary/posts/2023/0526/#ドッグフードテストと運用談義">ドッグフードテスト&lt;/a> の導入もまだ作業中ではあるが、社内のシステム管理者にも協力していただいて進めている。私の作業でも十分な余裕をもって次の準備につなげることができたので開発の区切りで1ヶ月ぐらい準備期間があることはよいように思える。経営者はもっと働かせたがるかもしれないが。&lt;/p>
&lt;p>これまでの開発は定例会議も 1on1 も毎週行ってきたが、次の開発ではこれらの会議を隔週にしてみる。口頭による同期コミュニケーションのコストを減らし、より開発そのものに時間を割いて注力できるようにする。もしかしたら、これによって私も開発に参加する時間を作りやすくなるかもしれない。もう1つ &lt;strong>必要なときに必要な人とすぐに話す (会議の日まで待たない)&lt;/strong> という狙いがある。毎週会議があると、すぐ聞けばよいことを次の会議まで待ってしまうということがある。私もある。私ですら待つときがあるのだからおそらくメンバーにもそうしてしまうことがあると推測する。会議の頻度を下げることでこの待ち時間を削減して即時問い合わせ、即時解決するといったコミュニケーションに移行していきたいという狙いがある。開発者の自律性を高めるためにはこういった取り組みも必要だと思える。もっと言えば、毎週会議しないと情報共有できないというのは開発者を子ども扱いして堕落させるのではないかと考える。実際に意図したようにうまくいくかどうかはやってみてから考える。&lt;/p>
&lt;p>うちの開発メンバーは半年前より見違えて課題管理に習熟したので次の開発がどうなるかが本当に楽しみだ。&lt;/p></content></item><item><title>開発の隙間の終わり</title><link>/diary/posts/2023/0526/</link><pubDate>Fri, 26 May 2023 08:45:07 +0900</pubDate><guid>/diary/posts/2023/0526/</guid><description>1時に寝て何度か起きて7時に起きた。23時に帰ってきて一昨日にお土産にもらったロールケーキだけ食べてしまった。あかんねんけど、おいしかった。
ドッグフードテストと運用談義 リリースしたばかりのプロダクトを社内に導入するべくインフラ作業をしている。社内の管理者が運用を考慮していくつか質問がくる中で、開発側としても運用の考慮の足りないところがあったりして、実運用における不測の自体に対する運用を想定しておく必要がある。こういうやり取り自体が、開発者だけでは得られない知見なので貴重と言える。追加の検証をして、場合によってはなんらかの機能を作ったりする可能性もある。
ドッグフードテストは本当によく出来た仕組みだと思っていて、仮になにか大きな障害が発生してもそれはお客さんのところで発生する前に自社でみつけられればよかったと考えられる。もちろん障害がなければそれはそれで構わない。障害が発生してもしなくてもどちらも開発にとって大きな資産となる。いわゆる win-win のような関係と言える。開発視点から言えばドッグフードテストを行うと決めた時点でうちらはすでに勝っていると言えよう。
プロダクト説明会 毎週やっているチーム勉強会の時間を使って社内向けにプロダクトの説明会を行った。リリースを終えて、その後のドキュメント作りやパッケージングの最適化なども行えた。インフラは十分に機能しているし、ドキュメントも一通り揃っていて、機能はまだまだ足りないけれど、プロダクトとしての体裁はうまくまとまっていると自画自賛している。リソースをかけた分だけスケールするといった開発体制に変化しつつある。おそらく私がマネージャーとして必要なのもあと3-6ヶ月といったところではないか？重要なことは 開発方法論/開発ガイド に書いてあるし、課題管理 + イテレーション開発は特別なことをしなくてもうまくいくことも立証された。メンバーが私と同じように振る舞えば誰でもマネジメントはできるはずである。
来週からは次開発のマイルストーンに入っていく。メンバーが成長して私のマネジメント工数が減るようになってくれば、私も開発に入って下支えすればいいと考えている。まずは3ヶ月でどのぐらいの追加の機能開発が出来ていくのかを見定めたい。
開発合宿の日程確定 そろそろ宿を予約しないといけない。冬の開発合宿 の予定を2024年3月1-3日に決めた。現時点で参加者は4名確定していて、前向きに検討してくれている人が3名いる。昨年が4名だったので倍増して今年は8名程で行ければいいなと希望をもっている。不特定多数に声をかけられるほどキャパシティはないけど、もう3人ぐらい声をかけてもよさそう。</description><content>&lt;p>1時に寝て何度か起きて7時に起きた。23時に帰ってきて一昨日にお土産にもらったロールケーキだけ食べてしまった。あかんねんけど、おいしかった。&lt;/p>
&lt;h2 id="ドッグフードテストと運用談義">ドッグフードテストと運用談義&lt;/h2>
&lt;p>リリースしたばかりのプロダクトを社内に導入するべくインフラ作業をしている。社内の管理者が運用を考慮していくつか質問がくる中で、開発側としても運用の考慮の足りないところがあったりして、実運用における不測の自体に対する運用を想定しておく必要がある。こういうやり取り自体が、開発者だけでは得られない知見なので貴重と言える。追加の検証をして、場合によってはなんらかの機能を作ったりする可能性もある。&lt;/p>
&lt;p>ドッグフードテストは本当によく出来た仕組みだと思っていて、仮になにか大きな障害が発生してもそれはお客さんのところで発生する前に自社でみつけられればよかったと考えられる。もちろん障害がなければそれはそれで構わない。障害が発生してもしなくてもどちらも開発にとって大きな資産となる。いわゆる win-win のような関係と言える。開発視点から言えばドッグフードテストを行うと決めた時点でうちらはすでに勝っていると言えよう。&lt;/p>
&lt;h2 id="プロダクト説明会">プロダクト説明会&lt;/h2>
&lt;p>毎週やっているチーム勉強会の時間を使って社内向けにプロダクトの説明会を行った。リリースを終えて、その後のドキュメント作りやパッケージングの最適化なども行えた。インフラは十分に機能しているし、ドキュメントも一通り揃っていて、機能はまだまだ足りないけれど、プロダクトとしての体裁はうまくまとまっていると自画自賛している。リソースをかけた分だけスケールするといった開発体制に変化しつつある。おそらく私がマネージャーとして必要なのもあと3-6ヶ月といったところではないか？重要なことは &lt;a href="/diary/diary/posts/2023/0524/#開発方法論開発ガイドの更新">開発方法論/開発ガイド&lt;/a> に書いてあるし、課題管理 + イテレーション開発は特別なことをしなくてもうまくいくことも立証された。メンバーが私と同じように振る舞えば誰でもマネジメントはできるはずである。&lt;/p>
&lt;p>来週からは次開発のマイルストーンに入っていく。メンバーが成長して私のマネジメント工数が減るようになってくれば、私も開発に入って下支えすればいいと考えている。まずは3ヶ月でどのぐらいの追加の機能開発が出来ていくのかを見定めたい。&lt;/p>
&lt;h2 id="開発合宿の日程確定">開発合宿の日程確定&lt;/h2>
&lt;p>そろそろ宿を予約しないといけない。&lt;a href="/diary/diary/posts/2023/0428/#開発合宿の計画づくり">冬の開発合宿&lt;/a> の予定を2024年3月1-3日に決めた。現時点で参加者は4名確定していて、前向きに検討してくれている人が3名いる。昨年が4名だったので倍増して今年は8名程で行ければいいなと希望をもっている。不特定多数に声をかけられるほどキャパシティはないけど、もう3人ぐらい声をかけてもよさそう。&lt;/p></content></item><item><title>クラフトジン: YOHAKHU</title><link>/diary/posts/2023/0524/</link><pubDate>Wed, 24 May 2023 11:25:43 +0900</pubDate><guid>/diary/posts/2023/0524/</guid><description>遅く帰ってきたわけではないが、うまく眠れなくて3時に寝て7時に起きた。
開発方法論／開発ガイドの更新 今週が開発の谷間の最後の週。毎週いろいろ資料を作ったり、あちこちのドキュメントを更新したりしていた。最後に残ったものの1つ (を2つに分割した) として、うちのプロダクト開発における開発方法論と開発ガイドを仕上げた。開発方法論は開発のマネジメント手法やプロセスの概念などを抽象的な表現で説明したもの。簡単に言えば、アジャイル開発とかスクラムとか、そういった概念の説明やなぜそれが大事なのかの意図や背景を説明したドキュメントになる。当初はこの1つしかなかったのだけど、実際に課題管理システムを使ってイテレーション開発をする具体的な話しと抽象的な話しを一緒に書くのはまとまりが悪いように思えてきた。抽象的な内容と実務に近い内容は分けて書くことにした。
開発方法論: プロダクトで採用している開発方法論の概念をまとめる 開発ガイド: 開発方法論を具体的に実践する方法についてまとめる 例えば、開発ガイドにはマージリクエストの運用について書いてある。どこの会社へ行っても私は次のような「マージリクエストを作成しなくてよいもの」という文章を書いている。
すべての修正にマージリクエストを要求すると開発がとても遅くなる。それは人間が介在するトコロがもっともコストを要求するからである。とくにコミュニケーションコストは開発の中でも最も大きいコストの1つである。レビューしなくてもコミット履歴は誰でも把握できる。修正内容が気になる開発者は自分でコミット履歴を確認すればよい。
従ってレビューの必要がないと想定される修正は直接 main ブランチに push してよい。例えば、軽微な修正は CI/CD の自動化により品質を担保できるように努める。テストを失敗させる修正を push してしまったとしてもデプロイできないために障害を発生させることはない。
この運用は軽微な修正だと思って push したものが不具合を発生させてしまうリスクを許容している。そのときは気付きの学びとして「ごめんなさい」で終わらせる。稀に不具合を発生させることよりも、開発の速度を上げる方を優先する。
カフーツさんイベント カフーツ13周年Jelly〜カクサク（やりたいこと宣言）第1弾〜 に参加した。私がカフーツさんへ遊びに行ったときに人がたくさんいたことはない。記念イベントだったので参加者多いかな？と思って行ってみた。10人ぐらいいた。参加者の大半は私と同じぐらいか、それ以上の年配の方にみえた。やや年齢層が高め。13年やっているコミュニティなので同じぐらい歳をとったんだと思う。みんなでわいわい話しながら0時前まで飲んでた。ここ行くと基本飲み会w
YOHAKHU というクラフトジンがあってロックと炭酸割りで4-5杯ほど飲んでいた。これまでジンをあまり飲んだことがないので、普通のジンとの比較はできないが、強烈なインパクトのある風味で圧倒されてしまった。おいしいかどうかというよりもこれは強烈やなぁという所感が先にくる。さらに「余白」という名前がよい。いとうさんに影響を受けて私が「ゆとり」と呼んでいた概念にいくつか補強がされて、最近は私も余白という言葉を気に入って使っている。人生に必要な余白を忘れない飲みものがこれだと言えるかもしれない。なんだか酔っ払ったようなコメントになってしまった。</description><content>&lt;p>遅く帰ってきたわけではないが、うまく眠れなくて3時に寝て7時に起きた。&lt;/p>
&lt;h2 id="開発方法論開発ガイドの更新">開発方法論／開発ガイドの更新&lt;/h2>
&lt;p>今週が開発の谷間の最後の週。毎週いろいろ資料を作ったり、あちこちのドキュメントを更新したりしていた。最後に残ったものの1つ (を2つに分割した) として、うちのプロダクト開発における開発方法論と開発ガイドを仕上げた。開発方法論は開発のマネジメント手法やプロセスの概念などを抽象的な表現で説明したもの。簡単に言えば、アジャイル開発とかスクラムとか、そういった概念の説明やなぜそれが大事なのかの意図や背景を説明したドキュメントになる。当初はこの1つしかなかったのだけど、実際に課題管理システムを使ってイテレーション開発をする具体的な話しと抽象的な話しを一緒に書くのはまとまりが悪いように思えてきた。抽象的な内容と実務に近い内容は分けて書くことにした。&lt;/p>
&lt;ul>
&lt;li>開発方法論: プロダクトで採用している開発方法論の概念をまとめる&lt;/li>
&lt;li>開発ガイド: 開発方法論を具体的に実践する方法についてまとめる&lt;/li>
&lt;/ul>
&lt;p>例えば、開発ガイドにはマージリクエストの運用について書いてある。どこの会社へ行っても私は次のような「マージリクエストを作成しなくてよいもの」という文章を書いている。&lt;/p>
&lt;blockquote>
&lt;p>すべての修正にマージリクエストを要求すると開発がとても遅くなる。それは人間が介在するトコロがもっともコストを要求するからである。とくにコミュニケーションコストは開発の中でも最も大きいコストの1つである。レビューしなくてもコミット履歴は誰でも把握できる。修正内容が気になる開発者は自分でコミット履歴を確認すればよい。&lt;/p>
&lt;p>従ってレビューの必要がないと想定される修正は直接 main ブランチに push してよい。例えば、軽微な修正は CI/CD の自動化により品質を担保できるように努める。テストを失敗させる修正を push してしまったとしてもデプロイできないために障害を発生させることはない。&lt;/p>
&lt;p>この運用は軽微な修正だと思って push したものが不具合を発生させてしまうリスクを許容している。そのときは気付きの学びとして「ごめんなさい」で終わらせる。稀に不具合を発生させることよりも、開発の速度を上げる方を優先する。&lt;/p>
&lt;/blockquote>
&lt;h2 id="カフーツさんイベント">カフーツさんイベント&lt;/h2>
&lt;p>&lt;a href="https://www.facebook.com/events/1411909236316752/">カフーツ13周年Jelly〜カクサク（やりたいこと宣言）第1弾〜&lt;/a> に参加した。私がカフーツさんへ遊びに行ったときに人がたくさんいたことはない。記念イベントだったので参加者多いかな？と思って行ってみた。10人ぐらいいた。参加者の大半は私と同じぐらいか、それ以上の年配の方にみえた。やや年齢層が高め。13年やっているコミュニティなので同じぐらい歳をとったんだと思う。みんなでわいわい話しながら0時前まで飲んでた。ここ行くと基本飲み会w&lt;/p>
&lt;p>&lt;a href="https://www.yohakhu.jp/">YOHAKHU&lt;/a> というクラフトジンがあってロックと炭酸割りで4-5杯ほど飲んでいた。これまでジンをあまり飲んだことがないので、普通のジンとの比較はできないが、強烈なインパクトのある風味で圧倒されてしまった。おいしいかどうかというよりもこれは強烈やなぁという所感が先にくる。さらに「余白」という名前がよい。いとうさんに影響を受けて私が「ゆとり」と呼んでいた概念にいくつか補強がされて、最近は私も余白という言葉を気に入って使っている。人生に必要な余白を忘れない飲みものがこれだと言えるかもしれない。なんだか酔っ払ったようなコメントになってしまった。&lt;/p></content></item><item><title>次開発へのモチベーション</title><link>/diary/posts/2023/0523/</link><pubDate>Tue, 23 May 2023 08:56:34 +0900</pubDate><guid>/diary/posts/2023/0523/</guid><description>0時に寝て何度か起きて6時に起きて7時半に起きた。最近疲れからか6時ぐらいに2度寝してしまうことが多い。
定例会議 先週の東京出張で次開発の打ち合わせをしてきたので、今日はそこでいくつか絞り込んだものから決議を行った。すんなりと次の開発課題が決まって時間に余裕があったので、別の曖昧な要件の認識合わせもしていた。半年やって私自身のシステムへの理解やドメイン知識も付いてきたところではあるが、この要件の認識合わせが現状の範囲で私の理解が追いついていないところの最後のピースにもみえる。この要件の背景と解決方法の設計を論理的にやってしまえば、あとは課題管理に馴染んできたうちのメンバーがうまく開発してくれるのではないかと思う。
半年間の開発、課題管理とイテレーション開発のプラクティス、リリースできたという結果、そして主体変容を示唆して過去の自分と比べてどう変わったかをふりかえりで確認した。なんとなくメンバーの働き方が変わってきた感じがして頼もしくなってきた。少なくとも半年前より私が言っていることの意味や価値を理解して開発に取り組んでくれているのではないかと思う。次の開発がどのように展開していくのか、楽しみになってきた。今週はドッグフードテストのインフラ作業をメインにして来週の水曜日から次開発に入ることにした。
車でお買いもの 少し早めに帰ったので車で近所のスーパーへ買いものに行ってきた。過去の記録をみると1月29日に満タンで給油した。そのガソリンがまだ半分ぐらいある。うちの車は燃費のよいハイブリッドカーだ。いくつかの記事をみるとガソリンの消費期限は3-6ヶ月程度だと書いてある。目安としては3ヶ月程度で消費するのが望ましい。長くて6ヶ月程度にしないとエンジンや燃料系の故障の原因となりえるらしい。気温の変化が大きいとさらに劣化が早まるとかあるそうだ。平時はガソリン満タンじゃなくて少しずつ給油した方がよいことに気付いた。</description><content>&lt;p>0時に寝て何度か起きて6時に起きて7時半に起きた。最近疲れからか6時ぐらいに2度寝してしまうことが多い。&lt;/p>
&lt;h2 id="定例会議">定例会議&lt;/h2>
&lt;p>先週の東京出張で次開発の打ち合わせをしてきたので、今日はそこでいくつか絞り込んだものから決議を行った。すんなりと次の開発課題が決まって時間に余裕があったので、別の曖昧な要件の認識合わせもしていた。半年やって私自身のシステムへの理解やドメイン知識も付いてきたところではあるが、この要件の認識合わせが現状の範囲で私の理解が追いついていないところの最後のピースにもみえる。この要件の背景と解決方法の設計を論理的にやってしまえば、あとは課題管理に馴染んできたうちのメンバーがうまく開発してくれるのではないかと思う。&lt;/p>
&lt;p>半年間の開発、課題管理とイテレーション開発のプラクティス、リリースできたという結果、そして主体変容を示唆して過去の自分と比べてどう変わったかをふりかえりで確認した。なんとなくメンバーの働き方が変わってきた感じがして頼もしくなってきた。少なくとも半年前より私が言っていることの意味や価値を理解して開発に取り組んでくれているのではないかと思う。次の開発がどのように展開していくのか、楽しみになってきた。今週はドッグフードテストのインフラ作業をメインにして来週の水曜日から次開発に入ることにした。&lt;/p>
&lt;h2 id="車でお買いもの">車でお買いもの&lt;/h2>
&lt;p>少し早めに帰ったので車で近所のスーパーへ買いものに行ってきた。過去の記録をみると1月29日に満タンで給油した。そのガソリンがまだ半分ぐらいある。うちの車は燃費のよいハイブリッドカーだ。いくつかの記事をみるとガソリンの消費期限は3-6ヶ月程度だと書いてある。目安としては3ヶ月程度で消費するのが望ましい。長くて6ヶ月程度にしないとエンジンや燃料系の故障の原因となりえるらしい。気温の変化が大きいとさらに劣化が早まるとかあるそうだ。平時はガソリン満タンじゃなくて少しずつ給油した方がよいことに気付いた。&lt;/p></content></item><item><title>issue を作るとストレスが軽減する</title><link>/diary/posts/2023/0519/</link><pubDate>Fri, 19 May 2023 19:49:10 +0900</pubDate><guid>/diary/posts/2023/0519/</guid><description>お酒飲んで新幹線乗ったせいか、新幹線の中であまり寝られなくて暑くていつもより移動に疲れた。その後1時に寝て何度か起きて7時に起きた。2日酔いではないが、寝起きの気分はよくなかった。
issue を作ることによるストレス軽減 昨日の打ち合わせのメモから議事録を作ったり、そこから新しい issue を作ったりしながら来週の打ち合わせの資料作りをしていた。資料を作っている途中、割り込みでメンバーのコードレビューが入ったりして、あまり資料作りは進捗しなかった。
打ち合わせした内容から issue を作る作業を、私は好きだったりする。何をやってよいかわからない状況というのは苦しい。issue を作ること、要件を言語化したり、背景を調べたり、他の issue との関連付けしたり、そういった手を動かすことがきっかけになって、その issue を明確化していく作業を積み重ねれば時間の経過とともに課題が解決するということを経験的に理解しているからだ。
大雑把に言えば、私にとって、issue さえ作れればその課題解決は優先順位付けと (解決までの) 時間の問題に置き換えられる。あれやらなきゃ、これもやらなきゃ、なにか抜け・漏れがあるんじゃないかと頭の中でもやもやしているものを issue という概念に変換することで考えなくて済むようになっていく過程がストレスを軽減している気もする。
コンテナ勉強会 先日公開したテックブログ とプラスアルファで勉強会をした。コンテナという汎用的な話題だったので CTO から社内向けにアナウンスされて (半業務命令っぽい雰囲気で) いつもより参加者は多かったように思える。10人前後は参加されていた。40分ぐらいで話し終えて20分ほど雑談の時間をとって盛り上がりは微妙だったけど、いくつか意見や質問が出たのでよかったのではないかと思う。
チームのメンバーが発表するときは私がモデレーターの役割をしている。私が発表するときはモデレーター兼発表者になってしまう。モデレーターと発表者を兼任するのはとても難しい。おそらく脳の集中力を向ける先が異なるからではないかと思う。モデレーターは質問者の質問を広げたり、コミュニケーションがうまくいくように手伝ったりする。回答から次の質問を考えたりもする。一方で発表者は自分の調べたことや伝えたいことを聴衆にわかりやすく伝えることのみに注力する。
モデレーターと発表者が同じになってしまうと、自分の説明のどこが伝わっていないのか、質問者の意図を組むにはどうすればいいかといったモデレーターの視点がなくなってしまう。以前 tenntenn さんの個人カンファレンス に参加したときに1人2役でパネルディスカッションをされていて、そのときに同僚からあまりやり過ぎると人格崩壊するから気をつけた方よいといった忠告を受けたと冗談で話されていた意味が理解できた。役者が他人になりきるように、これは兼任じゃなくて1人で2つの人格を演じないといけない。そんな器用なことはそうそうできない。</description><content>&lt;p>お酒飲んで新幹線乗ったせいか、新幹線の中であまり寝られなくて暑くていつもより移動に疲れた。その後1時に寝て何度か起きて7時に起きた。2日酔いではないが、寝起きの気分はよくなかった。&lt;/p>
&lt;h2 id="issue-を作ることによるストレス軽減">issue を作ることによるストレス軽減&lt;/h2>
&lt;p>昨日の打ち合わせのメモから議事録を作ったり、そこから新しい issue を作ったりしながら来週の打ち合わせの資料作りをしていた。資料を作っている途中、割り込みでメンバーのコードレビューが入ったりして、あまり資料作りは進捗しなかった。&lt;/p>
&lt;p>打ち合わせした内容から issue を作る作業を、私は好きだったりする。何をやってよいかわからない状況というのは苦しい。issue を作ること、要件を言語化したり、背景を調べたり、他の issue との関連付けしたり、そういった手を動かすことがきっかけになって、その issue を明確化していく作業を積み重ねれば時間の経過とともに課題が解決するということを経験的に理解しているからだ。&lt;/p>
&lt;p>大雑把に言えば、私にとって、issue さえ作れればその課題解決は優先順位付けと (解決までの) 時間の問題に置き換えられる。あれやらなきゃ、これもやらなきゃ、なにか抜け・漏れがあるんじゃないかと頭の中でもやもやしているものを issue という概念に変換することで考えなくて済むようになっていく過程がストレスを軽減している気もする。&lt;/p>
&lt;h2 id="コンテナ勉強会">コンテナ勉強会&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0516/#テックブログ公開">先日公開したテックブログ&lt;/a> とプラスアルファで勉強会をした。コンテナという汎用的な話題だったので CTO から社内向けにアナウンスされて (半業務命令っぽい雰囲気で) いつもより参加者は多かったように思える。10人前後は参加されていた。40分ぐらいで話し終えて20分ほど雑談の時間をとって盛り上がりは微妙だったけど、いくつか意見や質問が出たのでよかったのではないかと思う。&lt;/p>
&lt;p>チームのメンバーが発表するときは私がモデレーターの役割をしている。私が発表するときはモデレーター兼発表者になってしまう。モデレーターと発表者を兼任するのはとても難しい。おそらく脳の集中力を向ける先が異なるからではないかと思う。モデレーターは質問者の質問を広げたり、コミュニケーションがうまくいくように手伝ったりする。回答から次の質問を考えたりもする。一方で発表者は自分の調べたことや伝えたいことを聴衆にわかりやすく伝えることのみに注力する。&lt;/p>
&lt;p>モデレーターと発表者が同じになってしまうと、自分の説明のどこが伝わっていないのか、質問者の意図を組むにはどうすればいいかといったモデレーターの視点がなくなってしまう。以前 &lt;a href="/diary/diary/posts/2023/0401/#個人カンファレンス">tenntenn さんの個人カンファレンス&lt;/a> に参加したときに1人2役でパネルディスカッションをされていて、そのときに同僚からあまりやり過ぎると人格崩壊するから気をつけた方よいといった忠告を受けたと冗談で話されていた意味が理解できた。役者が他人になりきるように、これは兼任じゃなくて1人で2つの人格を演じないといけない。そんな器用なことはそうそうできない。&lt;/p></content></item><item><title>次開発と打ち上げ</title><link>/diary/posts/2023/0518/</link><pubDate>Thu, 18 May 2023 08:48:14 +0900</pubDate><guid>/diary/posts/2023/0518/</guid><description>能のサイトを眺めつつ 世界を変えた“愚か者”フラーとジョブズ をみているうちに寝落ちした。0時過ぎに寝て何度か起きて8時過ぎに起きた。休日以外に8時まわるまで寝ていたという記憶が直近数ヶ月にはないので久しぶりに寝坊した。起きたら8時10数分でそんなことあるはずないとか思ってしまって脳が現実を受け入れられなくて起きた時間を認識できなかった。明らかに8時10数分なんだけど、時計が壊れているなとか思ってしまった。
開発課題の打ち合わせ 大きく時間を使って次開発の打ち合わせ。事前にいくつか開発課題を洗い出せているが、その優先順位付けをしていかないといけない。開発メンバー + 別チームのコンサルタントにも入ってもらって各々の意見を出し合うといった会議をした。私が議題の資料を予め作っておいた。その進行に応じて議論や意見が盛り上がったのでうまくいってよかったと思う。 大項目でまとまった機能をやるよりも、個々の機能単位に優先順位付けした方がよいだろうという話しになって小さい単位で担当者を割り当てて開発を進めていくことになる。いずれはすべてやるが、開発の順番を決めていくのは意外と難しい。
話し終えてからメモをまとめ直しているうちに私自身が要件を詳細に把握できていない要件があることもわかってきた。空中戦だとわからないままふわっと進んでしまうので、文字に落とし込んで整理した上で、本当に必要なものをさらに深堀りして議論しないといけないことに気付いた。
少ない人数で会議をやる利点の1つとして、みんなの意見を順番に聞いていく余裕をもてることがあげられる。「誰一人取り残されない」とどこかの省庁がミッションにあげているように、うちのチームも課題管理を駆使して、それぞれのメンバーができることややりたいことでチームに貢献するような開発にしていきたい。もう半年やって課題管理に慣れてきているので、次開発は前回のようなやり方を教えるところからスタートにはならないはずだと思う。
打ち上げ 4月末にリリースを終えたので区切りとして打ち上げしてきた。うちのチームメンバーと偉い人の5人で行くのだと思っていたら直前に社内のメンバーにたくさん声を掛けたそうで10数人での飲み会になって送別会や部署のキックオフみたいな飲み会になった。賑やかでよかった。個人だとあまり行かないようなちょっとお値段のするコースでよいものを食べられておいしかった。日本酒もいろいろ飲んだ。神戸の酒どころに住んでいるので日本酒に関心をもつようになってきた。
山形 上喜元 愛知 醸し人九平次 18-20時と打ち上げやって、21時に新幹線を予約していたのでそのまま帰ってきた。このスケジュールの段取りもちょうどよかった。お酒を飲んで新幹線に乗ると思いの外眠れなくてそこだけ疲れた。</description><content>&lt;p>能のサイトを眺めつつ &lt;a href="https://www.nhk.jp/p/ts/9N81M92LXV/episode/te/6XWRL58JNK/">世界を変えた“愚か者”フラーとジョブズ&lt;/a> をみているうちに寝落ちした。0時過ぎに寝て何度か起きて8時過ぎに起きた。休日以外に8時まわるまで寝ていたという記憶が直近数ヶ月にはないので久しぶりに寝坊した。起きたら8時10数分でそんなことあるはずないとか思ってしまって脳が現実を受け入れられなくて起きた時間を認識できなかった。明らかに8時10数分なんだけど、時計が壊れているなとか思ってしまった。&lt;/p>
&lt;h2 id="開発課題の打ち合わせ">開発課題の打ち合わせ&lt;/h2>
&lt;p>大きく時間を使って次開発の打ち合わせ。事前にいくつか開発課題を洗い出せているが、その優先順位付けをしていかないといけない。開発メンバー + 別チームのコンサルタントにも入ってもらって各々の意見を出し合うといった会議をした。私が議題の資料を予め作っておいた。その進行に応じて議論や意見が盛り上がったのでうまくいってよかったと思う。
大項目でまとまった機能をやるよりも、個々の機能単位に優先順位付けした方がよいだろうという話しになって小さい単位で担当者を割り当てて開発を進めていくことになる。いずれはすべてやるが、開発の順番を決めていくのは意外と難しい。&lt;/p>
&lt;p>話し終えてからメモをまとめ直しているうちに私自身が要件を詳細に把握できていない要件があることもわかってきた。空中戦だとわからないままふわっと進んでしまうので、文字に落とし込んで整理した上で、本当に必要なものをさらに深堀りして議論しないといけないことに気付いた。&lt;/p>
&lt;p>少ない人数で会議をやる利点の1つとして、みんなの意見を順番に聞いていく余裕をもてることがあげられる。「誰一人取り残されない」とどこかの省庁がミッションにあげているように、うちのチームも課題管理を駆使して、それぞれのメンバーができることややりたいことでチームに貢献するような開発にしていきたい。もう半年やって課題管理に慣れてきているので、次開発は前回のようなやり方を教えるところからスタートにはならないはずだと思う。&lt;/p>
&lt;h2 id="打ち上げ">打ち上げ&lt;/h2>
&lt;p>4月末にリリースを終えたので区切りとして打ち上げしてきた。うちのチームメンバーと偉い人の5人で行くのだと思っていたら直前に社内のメンバーにたくさん声を掛けたそうで10数人での飲み会になって送別会や部署のキックオフみたいな飲み会になった。賑やかでよかった。個人だとあまり行かないようなちょっとお値段のするコースでよいものを食べられておいしかった。日本酒もいろいろ飲んだ。神戸の酒どころに住んでいるので日本酒に関心をもつようになってきた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.kigawaya.com/sake/jyouki/">山形 上喜元&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kuheiji.co.jp/">愛知 醸し人九平次&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>18-20時と打ち上げやって、21時に新幹線を予約していたのでそのまま帰ってきた。このスケジュールの段取りもちょうどよかった。お酒を飲んで新幹線に乗ると思いの外眠れなくてそこだけ疲れた。&lt;/p></content></item><item><title>半期に1回のふりかえり大会</title><link>/diary/posts/2023/0516/</link><pubDate>Tue, 16 May 2023 08:37:07 +0900</pubDate><guid>/diary/posts/2023/0516/</guid><description>少し寝ようかと思って横になった時間はあったものの、寝過ごすのが怖くて結局は新幹線の始発まで起きていた。この時期は4時を回り始めると徐々に外が明るくなっていき、5時は普通に明るくなっている。夏至も近い。
テックブログ公開 先日書いてレビューを終えた テックブログを公開した。
Docker とは何か？ コンテンツは狙ってバズらない
私の言葉だ。多くの開発者が関心をもつ話題ではないけれど、仲間内では評判がよかったので拡散されると嬉しい、、、。と淡い期待を寄せていたが、そうでもなかった。工数をかけて丁寧に書いても関心をもたれないことはよくある。個々のコンテンツがバズらなくてもコンテンツは積み重ねることも大事なので私がよいと思う記事を今後も書いていく。
半年間の開発のふりかえり 2時間をとって半年間の開発のふりかえりをやった。課題管理システムから定量的な数字をみたり、定性的なのは、過去のマイルストーンのふりかえりのふりかえりをしたり、課題管理システムから特定の issue を取り上げて改善するにはどうしたらよいかなどを議論したりしてみた。
私もチームのファシリテーションに慣れてきて、自由に意見を求めるよりも、個人個人を指してどうですか？と尋ねる方が意見がわーっと出てきて議論が活発になることに気付いた。なにか議題があったら必ず当てられて意見を言わないといけないとメンバーも察してくれるようになっていると思う。そういう空気になってきた。そして、ちゃんと答えてくれるのでそれで問題ないと思う。大人しいというのか、消極的というのか、うちのチームのメンバーには意見を求められなければ言わないという姿勢が垣間みえる。これは開発の自律性とは反対にある価値観なのでなるべくそこから脱却して自分から議題に意見を言うようになってほしい。もしかしたら私が喋り過ぎなのかもしれない？
ふりかえりをしないチームは多いので何もしないよりはなにかしら 示唆は与えられた のではないかと思いたい。</description><content>&lt;p>少し寝ようかと思って横になった時間はあったものの、寝過ごすのが怖くて結局は新幹線の始発まで起きていた。この時期は4時を回り始めると徐々に外が明るくなっていき、5時は普通に明るくなっている。夏至も近い。&lt;/p>
&lt;h2 id="テックブログ公開">テックブログ公開&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0509/#Docker-についてのテックブログ執筆">先日書いてレビューを終えた&lt;/a> テックブログを公開した。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.osstech.co.jp/posts/2023/05/what-is-docker/">Docker とは何か？&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>コンテンツは狙ってバズらない&lt;/p>
&lt;/blockquote>
&lt;p>私の言葉だ。多くの開発者が関心をもつ話題ではないけれど、仲間内では評判がよかったので拡散されると嬉しい、、、。と淡い期待を寄せていたが、そうでもなかった。工数をかけて丁寧に書いても関心をもたれないことはよくある。個々のコンテンツがバズらなくてもコンテンツは積み重ねることも大事なので私がよいと思う記事を今後も書いていく。&lt;/p>
&lt;h2 id="半年間の開発のふりかえり">半年間の開発のふりかえり&lt;/h2>
&lt;p>2時間をとって半年間の開発のふりかえりをやった。課題管理システムから定量的な数字をみたり、定性的なのは、過去のマイルストーンのふりかえりのふりかえりをしたり、課題管理システムから特定の issue を取り上げて改善するにはどうしたらよいかなどを議論したりしてみた。&lt;/p>
&lt;p>私もチームのファシリテーションに慣れてきて、自由に意見を求めるよりも、個人個人を指してどうですか？と尋ねる方が意見がわーっと出てきて議論が活発になることに気付いた。なにか議題があったら必ず当てられて意見を言わないといけないとメンバーも察してくれるようになっていると思う。そういう空気になってきた。そして、ちゃんと答えてくれるのでそれで問題ないと思う。大人しいというのか、消極的というのか、うちのチームのメンバーには意見を求められなければ言わないという姿勢が垣間みえる。これは開発の自律性とは反対にある価値観なのでなるべくそこから脱却して自分から議題に意見を言うようになってほしい。もしかしたら私が喋り過ぎなのかもしれない？&lt;/p>
&lt;p>ふりかえりをしないチームは多いので何もしないよりはなにかしら &lt;a href="/diary/diary/posts/2023/0424/#示唆を与えなければならない">示唆は与えられた&lt;/a> のではないかと思いたい。&lt;/p></content></item><item><title>法人決算の続き</title><link>/diary/posts/2023/0504/</link><pubDate>Thu, 04 May 2023 08:24:43 +0900</pubDate><guid>/diary/posts/2023/0504/</guid><description>0時に寝て何度か起きて6時過ぎに起きた。休日は朝だらだらしてオフィスへ行くのが9-10時ぐらいになることが多いのだけど、今日は普通に8時過ぎに行けた。
法人決算 朝から法人決算の続き。昨日たまたま消費税の計算をして、祝日やのに e-tax 稼働しているんやと思いながら申告した。これまで休日や祝日は稼働していなかった気がするので時代の変化にあわせてシステムはなるべく24時間稼働するように少しずつ変わってきている。今日も法人決算の続きをやっていて、課税所得を確認して、カテゴリ的には3つに分類される法人3税と呼ばれる税金を算出した。具体的には6つの税金を算出しないといけない。
法人税 (=&amp;gt; 国税 =&amp;gt; e-tax) 法人税 地方法人税 法人住民税 (=&amp;gt; 地方税 =&amp;gt; eltax) 法人県民税 法人市民税 法人事業税 (=&amp;gt; 地方税 =&amp;gt; eltax) 法人事業税 特別法人事業税 過去の法人決算の経験からまず法人住民税と法人事業税を確定させてから法人決算の申告をすべきだというプラクティスがある。というのは、法人住民税と法人事業税の数値になんらかの誤りがあると法人決算で提出する別表の数字も修正しないといけないため、先に地方税を確定させた方が手戻りを少なくできる可能性が高い。電子申請するとそれぞれの書類の数値のバリデーションが機能するので手計算や手入力で誤りがあったときに発見できる可能性がある。これは電子申請をするメリットの1つでもある。
地方税を管轄するのが eltax で国税を管轄するのが e-tax で別システムになる。いまとなっては、事前にチェックしておけばよかったなと思うところだが、あとの祭り。e-tax は5月3-4日が稼働していて5-7日が休止している。eltax は5月3-5日が休止していて6-7日が稼働しているというスケジュールになっていた。双方のシステムが稼働していれば今日中に終えられたものが、なんともちぐはぐなスケジュールで申告を完了させるのは来週以降に持ち越すことになる。また来年やるときはこのそれぞれのシステムの稼働スケジュールを事前にチェックして法人決算の作業日程を決めるように法人決算の issue に書き込んでおいた。来年はもっとうまくやる。
e-tax e-Taxの利用可能時間 eltax 令和5年度の休日運用日 今日のところは法人3税の税金を算出し終えて、それらと関係ない別表の大半を作成した。基本的には決算の試算表から数値を転記したり、特例措置の申請のための書類を作ったりでなにも難しくない。
iijmio と iphone で作るモバイル wifi ルーター 今年に入ってから 実家のオフィス化 の準備を着々と進めている。晩年は足が不自由だった祖父が生活できるよう、倉庫の一部を改築して車椅子でも生活できるような部屋になっていて、ある種の離れのようなスペースになっている。祖父が他界してからは誰も使っていない。トイレもお風呂もキッチンもついていて広さで言えば14畳ぐらいある。これまで使いにくかった理由は2つあってエアコンとインターネットがなかった。この前、母にお願いしてエアコンを購入してもらい、つい先日、設置が完了したらしい。
インターネットの回線をひくことも検討していたが、どうやら5000円/月ぐらいかかることがわかってきた。母はインターネットを必要としていないので月1回ぐらいしか使わないのに5000円も支払うのはもったいないなと一旦ストップしていた。スマートフォンのテザリングでお仕事できないわけではないから当初はそれでもいいかと考えていた。私の個人のスマホとインターネット回線は iijmio を使っていて iij さん好きなので同じように pocket wifi 的なものはないのかな？と調べたら正にそういう記事をみつけた。
格安！IIJmioでポケットWiFiを作る！料金・手順・注意点まとめ よくよく考えたらデータ専用の sim を購入したらあとはモバイル wifi ルーターだけあればよいことに気付いて、それって iphone でできるやんということに気付いて、過去に使っていた古い iphone 11 を再利用できることに気付いた。さらにいまは esim という物理 sim を必要としないソフトウェアベースの sim もあるようで月額の料金も esim の方が安い。 音声通話なしのデータ専用プランで税込で次の金額になる。さらに使わなかったらデータ量は翌月以降に繰越できる。プランによって繰越できる期間が異なる。例えば2GiBなら翌月末まで繰越できる。繰越という概念はたまにしか使わない私の用途にぴったりでひとまず2GiBプランを選択してお試し運用してみることにした。</description><content>&lt;p>0時に寝て何度か起きて6時過ぎに起きた。休日は朝だらだらしてオフィスへ行くのが9-10時ぐらいになることが多いのだけど、今日は普通に8時過ぎに行けた。&lt;/p>
&lt;h2 id="法人決算">法人決算&lt;/h2>
&lt;p>朝から法人決算の続き。昨日たまたま消費税の計算をして、祝日やのに e-tax 稼働しているんやと思いながら申告した。これまで休日や祝日は稼働していなかった気がするので時代の変化にあわせてシステムはなるべく24時間稼働するように少しずつ変わってきている。今日も法人決算の続きをやっていて、課税所得を確認して、カテゴリ的には3つに分類される法人3税と呼ばれる税金を算出した。具体的には6つの税金を算出しないといけない。&lt;/p>
&lt;ul>
&lt;li>法人税 (=&amp;gt; 国税 =&amp;gt; e-tax)
&lt;ul>
&lt;li>法人税&lt;/li>
&lt;li>地方法人税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>法人住民税 (=&amp;gt; 地方税 =&amp;gt; eltax)
&lt;ul>
&lt;li>法人県民税&lt;/li>
&lt;li>法人市民税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>法人事業税 (=&amp;gt; 地方税 =&amp;gt; eltax)
&lt;ul>
&lt;li>法人事業税&lt;/li>
&lt;li>特別法人事業税&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>過去の法人決算の経験からまず法人住民税と法人事業税を確定させてから法人決算の申告をすべきだというプラクティスがある。というのは、法人住民税と法人事業税の数値になんらかの誤りがあると法人決算で提出する別表の数字も修正しないといけないため、先に地方税を確定させた方が手戻りを少なくできる可能性が高い。電子申請するとそれぞれの書類の数値のバリデーションが機能するので手計算や手入力で誤りがあったときに発見できる可能性がある。これは電子申請をするメリットの1つでもある。&lt;/p>
&lt;p>地方税を管轄するのが &lt;a href="https://www.eltax.lta.go.jp/">eltax&lt;/a> で国税を管轄するのが &lt;a href="https://www.e-tax.nta.go.jp/">e-tax&lt;/a> で別システムになる。いまとなっては、事前にチェックしておけばよかったなと思うところだが、あとの祭り。e-tax は5月3-4日が稼働していて5-7日が休止している。eltax は5月3-5日が休止していて6-7日が稼働しているというスケジュールになっていた。双方のシステムが稼働していれば今日中に終えられたものが、なんともちぐはぐなスケジュールで申告を完了させるのは来週以降に持ち越すことになる。また来年やるときはこのそれぞれのシステムの稼働スケジュールを事前にチェックして法人決算の作業日程を決めるように法人決算の issue に書き込んでおいた。来年はもっとうまくやる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.e-tax.nta.go.jp/info_center/index.htm">e-tax e-Taxの利用可能時間&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.eltax.lta.go.jp/news/07638">eltax 令和5年度の休日運用日&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>今日のところは法人3税の税金を算出し終えて、それらと関係ない別表の大半を作成した。基本的には決算の試算表から数値を転記したり、特例措置の申請のための書類を作ったりでなにも難しくない。&lt;/p>
&lt;h2 id="iijmio-と-iphone-で作るモバイル-wifi-ルーター">iijmio と iphone で作るモバイル wifi ルーター&lt;/h2>
&lt;p>今年に入ってから &lt;a href="/diary/diary/posts/2023/0321/#実家の出張所オフィスの準備">実家のオフィス化&lt;/a> の準備を着々と進めている。晩年は足が不自由だった祖父が生活できるよう、倉庫の一部を改築して車椅子でも生活できるような部屋になっていて、ある種の離れのようなスペースになっている。祖父が他界してからは誰も使っていない。トイレもお風呂もキッチンもついていて広さで言えば14畳ぐらいある。これまで使いにくかった理由は2つあってエアコンとインターネットがなかった。この前、母にお願いしてエアコンを購入してもらい、つい先日、設置が完了したらしい。&lt;/p>
&lt;p>インターネットの回線をひくことも検討していたが、どうやら5000円/月ぐらいかかることがわかってきた。母はインターネットを必要としていないので月1回ぐらいしか使わないのに5000円も支払うのはもったいないなと一旦ストップしていた。スマートフォンのテザリングでお仕事できないわけではないから当初はそれでもいいかと考えていた。私の個人のスマホとインターネット回線は &lt;a href="https://www.iijmio.jp/">iijmio&lt;/a> を使っていて iij さん好きなので同じように pocket wifi 的なものはないのかな？と調べたら正にそういう記事をみつけた。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mobile.inest-inc.co.jp/iijmio-pocket-wifi/">格安！IIJmioでポケットWiFiを作る！料金・手順・注意点まとめ&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>よくよく考えたらデータ専用の sim を購入したらあとはモバイル wifi ルーターだけあればよいことに気付いて、それって iphone でできるやんということに気付いて、過去に使っていた古い iphone 11 を再利用できることに気付いた。さらにいまは &lt;a href="https://www.iijmio.jp/gigaplan/esim/">esim&lt;/a> という物理 sim を必要としないソフトウェアベースの sim もあるようで月額の料金も esim の方が安い。
音声通話なしのデータ専用プランで税込で次の金額になる。さらに使わなかったらデータ量は翌月以降に繰越できる。プランによって繰越できる期間が異なる。例えば2GiBなら翌月末まで繰越できる。繰越という概念はたまにしか使わない私の用途にぴったりでひとまず2GiBプランを選択してお試し運用してみることにした。&lt;/p>
&lt;ul>
&lt;li>1GiB: 165円/月&lt;/li>
&lt;li>2GiB: 440円/月&lt;/li>
&lt;li>5GiB: 660円/月&lt;/li>
&lt;li>10GiB: 1,100円/月&lt;/li>
&lt;li>20GiB: 1,650円/月&lt;/li>
&lt;/ul>
&lt;p>esim というソフトウェアベースのものだと、申し込みして5分後に設定できましたというメールが届き、すぐにアクティベートして iphone 11 に esim の設定をしたら10分後にはインターネットに接続できるようになった。その後 apn の設定を行ってテザリングもできるようになって、30分後には iphone 11 をモバイル wifi ルーターとして macbook からインターネットにアクセスできるかの疎通確認を終えた。&lt;/p>
&lt;p>つまりソフトウェアベースで業務を行うことのワークフローの効率が半端なく高い。これが物理 sim なら数人の人手と待ち時間がかかることは容易に想像できる。物理的にしかできなかったことをソフトウェアベースにしてワークフローを洗練化させることの強力さを実感した。常々、私が課題管理の文脈でコミュニケーションコストを減らせれば生産性が上がると開発者に啓蒙していることと同じで自分がやろうとしていることの概念を追体験するような経験となった。ワークフローの効率を極端に落とすのは人間である。&lt;/p></content></item><item><title>リリース前日</title><link>/diary/posts/2023/0424/</link><pubDate>Mon, 24 Apr 2023 08:30:02 +0900</pubDate><guid>/diary/posts/2023/0424/</guid><description>22時頃から寝て何度か起きて7時に起きた。久しぶりに夢をみた気がする。オフィスに着いた頃にはもう覚えていないけど。
リリース前日 プロダクトの開発、テスト、パッケージングとすべて完了していてドキュメントや社外に提供するためのインフラの仕組みの作業を行っている。これはリリースまでに出来ていなくてもプロダクトが動かないわけではないのでリリース後もしばらくは継続する。今日は運用ツールのちょっとしたリファクタリングをしたり、コードレビューをしたり、windows インストーラーの調査をしたりと、なんやらかんやらで忙しかった。
示唆を与えなければならない ここ1ヶ月ほど私がクリティカルパスの作業を担ってきたのでメンバーの作業を落ち着いてみる余裕がなかった。たまたまというか、私がクリティカルパスから脱したことでメンバーのレビューやアドバイスを行うときの余裕も戻ってきた。CSK の新人研修で習うことに社是と経営理念とサービス精神という言葉がある。
サービス精神
お得意様にあくまでも満足していただく技術を提供しなければならない 技術は高度で専門的でなければならない 仕事は正確に、かつ迅速・効率的に行なわなければならない 常に、お得意様の利益を考え、示唆を与えなければならない 新人研修ではこれらを暗唱して暗記させられる。20年以上経ったいまでも覚えている。もともと私の考え方にあっていたのか、それとも新人の頃に刷り込まれたのか、その両方なのか。いま見返すと私の課題管理の考え方とこのサービス精神には共通しているところもある。その上で最後の 「示唆を与えなければならない」 という言葉を、今日メンバーとやり取りしているときにふと思い出した。
アドバイスをしていると、なぜこの懸念を考えずに作業を継続してしまったのだろうか？と思う機会がちょくちょくある。そのときに質問してその背景を尋ねたり、効率や保守のための考え方を教えたりする。ふと私が指摘しなかったらそういった効率や品質の低い結果のまま進んだのだろうと推測される。当たり前の話しだが、意識的にしろ無意識にしろ、個人では気付けなかったフィードバックや示唆を与えてくれる人がいなかったら個人の能力では限界がある。気付きがないところに学びも改善もないから成長もしない。いまお手伝いしている会社はこれまで個人でやってきた働き方を、チームで協調して働くように変えていきたいという話しから始まった。私自身、どちらかと言えば個人主義の働き方をしてきた方でチームでの働き方をちゃんと教えられるか、当初はあまり自信がなかった。半年やってきて、チームで働く上で必要なことはメンバーのアウトプットに対して質問するだけでよかったんやと理解できるようになってきた。個人の視点しかない働き方と他者の視点から常にツッコミが入る働き方はまったく異なる。うちのメンバーをみていて、まだまだ道半ばではあるが、それまでの状況と私が啓蒙している課題管理は、おそらく根本的に働き方を変えてしまっていることにようやく私の理解が追いついてきた。</description><content>&lt;p>22時頃から寝て何度か起きて7時に起きた。久しぶりに夢をみた気がする。オフィスに着いた頃にはもう覚えていないけど。&lt;/p>
&lt;h2 id="リリース前日">リリース前日&lt;/h2>
&lt;p>プロダクトの開発、テスト、パッケージングとすべて完了していてドキュメントや社外に提供するためのインフラの仕組みの作業を行っている。これはリリースまでに出来ていなくてもプロダクトが動かないわけではないのでリリース後もしばらくは継続する。今日は運用ツールのちょっとしたリファクタリングをしたり、コードレビューをしたり、windows インストーラーの調査をしたりと、なんやらかんやらで忙しかった。&lt;/p>
&lt;h2 id="示唆を与えなければならない">示唆を与えなければならない&lt;/h2>
&lt;p>ここ1ヶ月ほど私がクリティカルパスの作業を担ってきたのでメンバーの作業を落ち着いてみる余裕がなかった。たまたまというか、私がクリティカルパスから脱したことでメンバーのレビューやアドバイスを行うときの余裕も戻ってきた。&lt;a href="https://ja.wikipedia.org/wiki/CSK_%5C%28%E4%BC%81%E6%A5%AD%5C%29">CSK&lt;/a> の新人研修で習うことに社是と経営理念とサービス精神という言葉がある。&lt;/p>
&lt;blockquote>
&lt;p>サービス精神&lt;/p>
&lt;ul>
&lt;li>お得意様にあくまでも満足していただく技術を提供しなければならない&lt;/li>
&lt;li>技術は高度で専門的でなければならない&lt;/li>
&lt;li>仕事は正確に、かつ迅速・効率的に行なわなければならない&lt;/li>
&lt;li>常に、お得意様の利益を考え、示唆を与えなければならない&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>新人研修ではこれらを暗唱して暗記させられる。20年以上経ったいまでも覚えている。もともと私の考え方にあっていたのか、それとも新人の頃に刷り込まれたのか、その両方なのか。いま見返すと私の課題管理の考え方とこのサービス精神には共通しているところもある。その上で最後の &lt;strong>「示唆を与えなければならない」&lt;/strong> という言葉を、今日メンバーとやり取りしているときにふと思い出した。&lt;/p>
&lt;p>アドバイスをしていると、なぜこの懸念を考えずに作業を継続してしまったのだろうか？と思う機会がちょくちょくある。そのときに質問してその背景を尋ねたり、効率や保守のための考え方を教えたりする。ふと私が指摘しなかったらそういった効率や品質の低い結果のまま進んだのだろうと推測される。当たり前の話しだが、意識的にしろ無意識にしろ、個人では気付けなかったフィードバックや示唆を与えてくれる人がいなかったら個人の能力では限界がある。気付きがないところに学びも改善もないから成長もしない。いまお手伝いしている会社はこれまで個人でやってきた働き方を、チームで協調して働くように変えていきたいという話しから始まった。私自身、どちらかと言えば個人主義の働き方をしてきた方でチームでの働き方をちゃんと教えられるか、当初はあまり自信がなかった。半年やってきて、チームで働く上で必要なことはメンバーのアウトプットに対して質問するだけでよかったんやと理解できるようになってきた。個人の視点しかない働き方と他者の視点から常にツッコミが入る働き方はまったく異なる。うちのメンバーをみていて、まだまだ道半ばではあるが、それまでの状況と私が啓蒙している課題管理は、おそらく根本的に働き方を変えてしまっていることにようやく私の理解が追いついてきた。&lt;/p></content></item><item><title>ゆとりのある休日</title><link>/diary/posts/2023/0423/</link><pubDate>Sun, 23 Apr 2023 14:12:36 +0900</pubDate><guid>/diary/posts/2023/0423/</guid><description>0時に寝て6時に起きた。午前中は掃除したり買いものへ出掛けたりムック本を買って読んだりして午後からもくもく会に参加してきた。昨日から休日って心地よくて素晴らしい時間だということに改めて気付いた。
いまがわかる地政学 やぎさんからおすすめされて オールカラー図解 いまがわかる地政学 を読んだ。ちょうど余裕もあったので読んでみることにした。私も過去に地政学の雑誌を気分で買って読んだことがあった。教えてもらってなければいまは買ってなかったと思うが、関心のある分野ではある。
見開きの2ページで左ページを地図で図解しながら右ページにその説明が書いてある。読み始めてすぐにドキュメントランドスケープを構築できるので読みやすい。地政学なので地図で説明するのがわかりやすいのと、特定の地域の限られた国で、且つ話題を限定して説明するから簡潔でわかりやすい。過去にはアメリカ／イギリス系統とドイツ系統の2つの地政学があり、地政学はナチスドイツの御用学問となり、ドイツが敗戦したことによりドイツ系統の地政学は封印指定された。日本で学ばれていた地政学もドイツ系統だったようで、戦後 GHQ により封印指定されていまに至るらしい。
地政学の解説を読んでいて、なにかを分類して、そこから得られる知見に方向性や解釈を与えて、さらに歴史が積み重なると立派な研究や学問になるという印象を受けた。観察して分類して仮説を立てて記録を取り続けるとそれはもう科学である。課題管理につながるヒントもありそうな気がしている。課題管理は事象が発生した記録を取り続けて、ある程度溜まったところで分類したり分析したりできる。
もくもく会 【三宮.dev オフライン】もくもく会 に参加した。昨日の続きでプロダクトのドキュメントを2時間ほど書いてた。集中してドキュメントと mermaid のフローチャートを書いた。初めて参加された方も何人かいたのでいろんな人の話しを聞くこともできてよい機会だった。参加者の1人から 芋屋HUG のスィートポテトをもらった。お店の存在は知っていたが、1度も買ったことがなくて初めて食べておいしかった。調べてたら神戸発祥のお店っぽいので東京出張するときのお土産に買って行ってもよさそう。よいお土産を知ることができてよかった。</description><content>&lt;p>0時に寝て6時に起きた。午前中は掃除したり買いものへ出掛けたりムック本を買って読んだりして午後からもくもく会に参加してきた。昨日から休日って心地よくて素晴らしい時間だということに改めて気付いた。&lt;/p>
&lt;h2 id="いまがわかる地政学">いまがわかる地政学&lt;/h2>
&lt;p>やぎさんからおすすめされて &lt;a href="https://one-publishing.co.jp/books/9784651203294/">オールカラー図解 いまがわかる地政学&lt;/a> を読んだ。ちょうど余裕もあったので読んでみることにした。私も過去に地政学の雑誌を気分で買って読んだことがあった。教えてもらってなければいまは買ってなかったと思うが、関心のある分野ではある。&lt;/p>
&lt;p>見開きの2ページで左ページを地図で図解しながら右ページにその説明が書いてある。読み始めてすぐにドキュメントランドスケープを構築できるので読みやすい。地政学なので地図で説明するのがわかりやすいのと、特定の地域の限られた国で、且つ話題を限定して説明するから簡潔でわかりやすい。過去にはアメリカ／イギリス系統とドイツ系統の2つの地政学があり、地政学はナチスドイツの御用学問となり、ドイツが敗戦したことによりドイツ系統の地政学は封印指定された。日本で学ばれていた地政学もドイツ系統だったようで、戦後 GHQ により封印指定されていまに至るらしい。&lt;/p>
&lt;p>地政学の解説を読んでいて、なにかを分類して、そこから得られる知見に方向性や解釈を与えて、さらに歴史が積み重なると立派な研究や学問になるという印象を受けた。観察して分類して仮説を立てて記録を取り続けるとそれはもう科学である。課題管理につながるヒントもありそうな気がしている。課題管理は事象が発生した記録を取り続けて、ある程度溜まったところで分類したり分析したりできる。&lt;/p>
&lt;h2 id="もくもく会">もくもく会&lt;/h2>
&lt;p>&lt;a href="https://kobe-sannomiya-dev.connpass.com/event/277856/">【三宮.dev オフライン】もくもく会&lt;/a> に参加した。昨日の続きでプロダクトのドキュメントを2時間ほど書いてた。集中してドキュメントと mermaid のフローチャートを書いた。初めて参加された方も何人かいたのでいろんな人の話しを聞くこともできてよい機会だった。参加者の1人から &lt;a href="https://tabelog.com/hyogo/A2801/A280101/28055400/">芋屋HUG&lt;/a> のスィートポテトをもらった。お店の存在は知っていたが、1度も買ったことがなくて初めて食べておいしかった。調べてたら神戸発祥のお店っぽいので東京出張するときのお土産に買って行ってもよさそう。よいお土産を知ることができてよかった。&lt;/p></content></item><item><title>リリース後の展望</title><link>/diary/posts/2023/0406/</link><pubDate>Thu, 06 Apr 2023 08:28:32 +0900</pubDate><guid>/diary/posts/2023/0406/</guid><description>0時に寝て7時半に起きた。そろそろ出張バテしてきた。
プロジェクトの進捗報告 出張したときの月例報告の5回目。前回の進捗報告はこちら 。私のマネジメントの不手際で1ヶ月延期 (元の計画通り) して、未だに開発は完了していないものの、今月末にリリースできる見通しでプロジェクトを進めている。おそらくあと1-2回は私が休出するのだろう。これからメンバーにはできる限りの QA テストを3週間に渡って行ってもらう。
チームが fix した3月の issue 数は47、そのうちの34を、enhance ラベルが付いたものは12でそのうちの9を私が担当した。クリティカルパスになりそうなものは、一旦はメンバーにアサインするものの、進捗をみて遅れていれば私が issue を引き取って対応している。先月から引き続き、やばそうな芽が出てきたら私が本気出して対応する。見た目上のスケジュールには影響を与えないようにしている。先月の反省で早めに引き取ることにしたのでずるずる後ろへ延びることはない。このやり方をすると、私がボトルネックになりかねないが、私の工数は調整次第でメンバーよりも大きくできるのでいまのところ問題ない。リリースまで1ヶ月を切った中で取り得る手段は限られてくる。
2月から ハドルと雑談 の試験運用をしていた。ほぼ毎日午前中は私が slack のハドルに在籍 (オフィスアワーに近い取り組み) するようにして、メンバーから雑談する機会は増えるかどうかを試していた。約2ヶ月やって結果は次の通りとなった。
対象日数: 34日 雑談人数: 10人 雑談時間: 5.75時間 3日に1日ぐらい軽く雑談するといった結果になった。おそらく私がハドルにいなかったら話す機会はなかったのでこの価値をどう見積もるかは人によって分かれると思う。うちのチームはリモートワークが中心なので雑談する機会があるほど望ましい。それほど強く提案するわけではないが、slack のハドル活用をもっと展開してもよいのではないかと経営者に推奨した。
聞いた話では着任前にこのプロダクト開発は2年近く迷走していたらしい。それによって要件は整理されていたと言える。私がこの半年でリリース (予定) できる状態にしたのを評価してもらえているようにはみえる。余談だが、自分のスキルを社会の役に立てられるのがいまは嬉しい。前職では、誰でもできる簡単なお仕事しかできず、開発もあまりつまらなかった。いまは自分がよいと思うものを一定の裁量で判断し、さらにマネージャー経験も積めて、今回のお仕事は私の中でも達成感は高い方でもある。
あとは今後の開発の話し、販売戦略の話しなどもしていた。4月末で初期開発の区切りもつく。今後は毎月1週間も出張しなくてよいのではないかという話しもして、5月は会議を2-3日に集中してやったらいいんじゃないかということになった。出張はそろそろ疲れてきたのと、私がオフィスにいてもメンバーは半分以上リモートワークなのでオフィスに来る意義があまりない。うちのチームはリモートワークで開発に支障が出ない仕組みを構築できているとは思う。</description><content>&lt;p>0時に寝て7時半に起きた。そろそろ出張バテしてきた。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の5回目。&lt;a href="/diary/diary/posts/2023/0309/">前回の進捗報告はこちら&lt;/a> 。私のマネジメントの不手際で1ヶ月延期 (元の計画通り) して、未だに開発は完了していないものの、今月末にリリースできる見通しでプロジェクトを進めている。おそらくあと1-2回は私が休出するのだろう。これからメンバーにはできる限りの QA テストを3週間に渡って行ってもらう。&lt;/p>
&lt;p>チームが fix した3月の issue 数は47、そのうちの34を、enhance ラベルが付いたものは12でそのうちの9を私が担当した。クリティカルパスになりそうなものは、一旦はメンバーにアサインするものの、進捗をみて遅れていれば私が issue を引き取って対応している。先月から引き続き、やばそうな芽が出てきたら私が本気出して対応する。見た目上のスケジュールには影響を与えないようにしている。先月の反省で早めに引き取ることにしたのでずるずる後ろへ延びることはない。このやり方をすると、私がボトルネックになりかねないが、私の工数は調整次第でメンバーよりも大きくできるのでいまのところ問題ない。リリースまで1ヶ月を切った中で取り得る手段は限られてくる。&lt;/p>
&lt;p>2月から &lt;a href="/diary/diary/posts/2023/0202/#ハドルと雑談">ハドルと雑談&lt;/a> の試験運用をしていた。ほぼ毎日午前中は私が slack のハドルに在籍 (オフィスアワーに近い取り組み) するようにして、メンバーから雑談する機会は増えるかどうかを試していた。約2ヶ月やって結果は次の通りとなった。&lt;/p>
&lt;ul>
&lt;li>対象日数: 34日&lt;/li>
&lt;li>雑談人数: 10人&lt;/li>
&lt;li>雑談時間: 5.75時間&lt;/li>
&lt;/ul>
&lt;p>3日に1日ぐらい軽く雑談するといった結果になった。おそらく私がハドルにいなかったら話す機会はなかったのでこの価値をどう見積もるかは人によって分かれると思う。うちのチームはリモートワークが中心なので雑談する機会があるほど望ましい。それほど強く提案するわけではないが、slack のハドル活用をもっと展開してもよいのではないかと経営者に推奨した。&lt;/p>
&lt;p>聞いた話では着任前にこのプロダクト開発は2年近く迷走していたらしい。それによって要件は整理されていたと言える。私がこの半年でリリース (予定) できる状態にしたのを評価してもらえているようにはみえる。余談だが、自分のスキルを社会の役に立てられるのがいまは嬉しい。前職では、誰でもできる簡単なお仕事しかできず、開発もあまりつまらなかった。いまは自分がよいと思うものを一定の裁量で判断し、さらにマネージャー経験も積めて、今回のお仕事は私の中でも達成感は高い方でもある。&lt;/p>
&lt;p>あとは今後の開発の話し、販売戦略の話しなどもしていた。4月末で初期開発の区切りもつく。今後は毎月1週間も出張しなくてよいのではないかという話しもして、5月は会議を2-3日に集中してやったらいいんじゃないかということになった。出張はそろそろ疲れてきたのと、私がオフィスにいてもメンバーは半分以上リモートワークなのでオフィスに来る意義があまりない。うちのチームはリモートワークで開発に支障が出ない仕組みを構築できているとは思う。&lt;/p></content></item><item><title>考えているとストリームが発生する</title><link>/diary/posts/2023/0404/</link><pubDate>Tue, 04 Apr 2023 09:07:41 +0900</pubDate><guid>/diary/posts/2023/0404/</guid><description>18時から20時半ぐらいまで寝て、それから晩ご飯を食べに出掛けて、23時頃に戻ってきてまた寝て、4時に起きて、6時に起きた。出張の初日は不規則な寝方になる。
定例会議とふりかえり リリースまであと3週間。一部の開発がまだ完了していないことに大きなストレスと懸念を感じつつ、進捗はしているそうなのでその対応が完了するのを待つ。いまは日々の進捗や発生する事象に注意を配りつつ、メンバーは QA レベルのテストを、私は淡々とリリースの準備をしている。外部からアクセスできるプライベートなコンテナレジストリを docker hub でお金を払うか、自社で運用するかの決めの問題や外部向けにドキュメントを公開するための決めごとなどを確認したりしていた。
毎月のマイルストーン終了後にふりかえりをしている。今月は対応した issue のうち、70%超を私が fix しているのであまり話題がないかなぁとか思っていたけど、全然そんなことはなく、活発にふりかえりのコメント (付箋に書く) が出てよかった。当初は付箋に書いた内容に対して関心のあるものをメンバーに投票してもらっていた。そして、メンバーの関心の高いマークがたくさん付いたものから掘り下げて聞くようにしていた。最近は3人でふりかえりをやっているため、すべての付箋をみていっても10個未満程度、すべてヒアリングしても時間がちょうどよいので投票をやめた。そうすると、メンバーが自分のやったことや思ったことを他者へ話す機会になっていて、これは内省を促す意図でとてもよいことじゃないかと思うようになってきた。
ふりかえりをしない人やチームは成長しない
これは私の持論だ。うまくいかなかったときにふりかえりすると、当事者が嫌な気持ちになったりしんどかったり、責任を感じたりとネガティブなイメージから、私の経験則ではふりかえりを行わないチームの方がずっと多かった。こういう小さい積み重ねを継続的にやるのは後になってその人の価値観や成長に影響を与えるのではないかと最近は思う。うちのチームでは厳しく責任追及はしないのでメンバーが率直的にこれができなかったとふりかえることはできるようになっているとは思う。
ふとふりかえりをしていてこんな言葉が私の口から出た。
作業の進捗をストリームとして確認できると嬉しい、ストリームを眺めているとメンバーが考えているのかどうかが分かる
エンジニアリング組織論への招待 に次のような節がある。
「悩む」と「考える」の違い
「考える」は行動であり、「悩む」は状態なのです。考えているのであれば、それはメンターがその行動を見ることができます。しかし、「悩む」であれば、メンターは心の状態を観察することはできません。
悩んでいる状態は手が止まっていて、頭の中で思考がぐるぐる巡っていて、もやもやしている状態。考えているとは、課題を書き出したり、分解したり、調査したりと忙しく行動していると言える。当然、考えないと優れた品質のアウトプットは出せない。正に私がやっている課題管理も、そのための課題管理システムも考えていることを確認・監視するために有効な手法とシステムであることが伺える。チームのふりかえりをしながら、そういった話しをメンバーに共有したりしていた。</description><content>&lt;p>18時から20時半ぐらいまで寝て、それから晩ご飯を食べに出掛けて、23時頃に戻ってきてまた寝て、4時に起きて、6時に起きた。出張の初日は不規則な寝方になる。&lt;/p>
&lt;h2 id="定例会議とふりかえり">定例会議とふりかえり&lt;/h2>
&lt;p>リリースまであと3週間。一部の開発がまだ完了していないことに大きなストレスと懸念を感じつつ、進捗はしているそうなのでその対応が完了するのを待つ。いまは日々の進捗や発生する事象に注意を配りつつ、メンバーは QA レベルのテストを、私は淡々とリリースの準備をしている。外部からアクセスできるプライベートなコンテナレジストリを docker hub でお金を払うか、自社で運用するかの決めの問題や外部向けにドキュメントを公開するための決めごとなどを確認したりしていた。&lt;/p>
&lt;p>毎月のマイルストーン終了後にふりかえりをしている。今月は対応した issue のうち、70%超を私が fix しているのであまり話題がないかなぁとか思っていたけど、全然そんなことはなく、活発にふりかえりのコメント (付箋に書く) が出てよかった。当初は付箋に書いた内容に対して関心のあるものをメンバーに投票してもらっていた。そして、メンバーの関心の高いマークがたくさん付いたものから掘り下げて聞くようにしていた。最近は3人でふりかえりをやっているため、すべての付箋をみていっても10個未満程度、すべてヒアリングしても時間がちょうどよいので投票をやめた。そうすると、メンバーが自分のやったことや思ったことを他者へ話す機会になっていて、これは内省を促す意図でとてもよいことじゃないかと思うようになってきた。&lt;/p>
&lt;blockquote>
&lt;p>ふりかえりをしない人やチームは成長しない&lt;/p>
&lt;/blockquote>
&lt;p>これは私の持論だ。うまくいかなかったときにふりかえりすると、当事者が嫌な気持ちになったりしんどかったり、責任を感じたりとネガティブなイメージから、私の経験則ではふりかえりを行わないチームの方がずっと多かった。こういう小さい積み重ねを継続的にやるのは後になってその人の価値観や成長に影響を与えるのではないかと最近は思う。うちのチームでは厳しく責任追及はしないのでメンバーが率直的にこれができなかったとふりかえることはできるようになっているとは思う。&lt;/p>
&lt;p>ふとふりかえりをしていてこんな言葉が私の口から出た。&lt;/p>
&lt;blockquote>
&lt;p>作業の進捗をストリームとして確認できると嬉しい、ストリームを眺めているとメンバーが考えているのかどうかが分かる&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3">エンジニアリング組織論への招待&lt;/a> に次のような節がある。&lt;/p>
&lt;blockquote>
&lt;p>「悩む」と「考える」の違い&lt;/p>
&lt;p>「考える」は行動であり、「悩む」は状態なのです。考えているのであれば、それはメンターがその行動を見ることができます。しかし、「悩む」であれば、メンターは心の状態を観察することはできません。&lt;/p>
&lt;/blockquote>
&lt;p>悩んでいる状態は手が止まっていて、頭の中で思考がぐるぐる巡っていて、もやもやしている状態。考えているとは、課題を書き出したり、分解したり、調査したりと忙しく行動していると言える。当然、考えないと優れた品質のアウトプットは出せない。正に私がやっている課題管理も、そのための課題管理システムも考えていることを確認・監視するために有効な手法とシステムであることが伺える。チームのふりかえりをしながら、そういった話しをメンバーに共有したりしていた。&lt;/p></content></item><item><title>リリース延期の危機</title><link>/diary/posts/2023/0309/</link><pubDate>Thu, 09 Mar 2023 08:38:31 +0900</pubDate><guid>/diary/posts/2023/0309/</guid><description>1時に寝て7時に起きた。いつも通り夕方にホテルに戻って2時間ほど寝て起きたらテレビで WBS をやっていてそのままみてた。そしたら晩ご飯食べるタイミングも作業するタイミングも逃して日記を書いたり雑多なことをしていた。
プロジェクトの進捗報告 出張したときの月例報告の4回目。前回の進捗報告はこちら 。1月にリリース前倒しを提案して颯爽と1ヶ月前倒しをしたのにその翌月に現時点ではまだリリース可能かどうかを判断できないといったことを報告した。まったく情けない。サーバーサイドとフロントエンドの開発はすでに完了しているのに。しかし、もともとこのプロジェクトの開発対象に入っていなかったもので、ほぼ完成していると聞いていたモジュール群の半分が機能不足や低品質で作り直すことになった。残りの半分もそのままでは動かない。
経験の浅いメンバーに1ヶ月以上の時間を与えて作り直してもらうようにお願いしていたが、うまく進捗せず時間だけが過ぎていって、結果的に2月の半ばから私が引き取って大半の機能を開発している。結果的にそのメンバーにお願いしていた開発の8割を私が2週間でほとんど実装した。2月の中旬から私がずっと休祝日に開発のお仕事をしていたのはこの開発遅れを補填するためだった。チームが fix した2月の issue 数が57でそのうちの30を、enhance ラベルが付いたものは28でそのうちの13を私が担当した。今月の半分の開発を私が代替わりして帳尻を無理やりあわせた。もはや遊撃のレベルではなく、私が本気出して全部作っておきましたみたいなことをした。
本当はメンバーに開発経験をつけてもらうために私がいるので私が主担当で開発するのはよくない。とはいえ、このままいくと2ヶ月ほど開発遅延する、しかもこのプロジェクトの中核でもない機能のために、それも悔しいし、うちの会社の信頼にも関わるのでズルしてしまいましたと経営陣へ正直に報告した。自分がやるよりも他人に教える方がずっと難しい。先方からは咎めるものではなかったし、私が開発して帳尻をあわせるのを止めるものでもないという承認は得た。
難しい開発課題を経験の浅いメンバーに担当させてしまった私のマネジメントの誤りであることは、チームのふりかえりでも、経営者への報告でも伝えている。なにが起ころうとプロジェクトの責任はマネージャーの私にあることは理解している。その遅れはマネージャーが責任をもって対応するのだとメンバーが学ぶ機会にもなったんじゃないかという意見も出た。私も過去にそういう上長をみて思うところはあったのでそれはそうかもしれない。なぜ1ヶ月以上も時間を与えているのに芋づる式にスケジュールが遅延するのか。その要因もメンバーの行動や進捗をみていて理解できた。第一に経験が浅いために開発の見通しや見積もりを立てられない。例えば課題が3つあるとして、1つしかみえていないから「できそうです」と言っていても、1つ終えた後にまた1つありましたと報告があり、その1つを終えてもまだもう1つありましたと報告が来る。一定の経験があれば作業を開始する前に3つあることを整理して、その上で納期にあわせて3つを対処する。納期いっぱい使って1つだけやろうとするところの意識の差は大きい。第二に期日までに実装できる一定のスキルをもっていないとコードレビューが1週間とか続いてしまう。そういった開発者にクリティカルパスとなる issue を担当させてはいけないように思えた。
ある issue がクリティカルパスになってしまった時点で、私かスキルのあるメンバーのどちらかへ引き継ぐように2月中旬に調整していればいまの状況は変わったのではないだろうか。その判断が2週間遅れたことに今回は気付けた。結果論ではあるが、厳しい判断をもう少し早めに下さないといけなかった。</description><content>&lt;p>1時に寝て7時に起きた。いつも通り夕方にホテルに戻って2時間ほど寝て起きたらテレビで WBS をやっていてそのままみてた。そしたら晩ご飯食べるタイミングも作業するタイミングも逃して日記を書いたり雑多なことをしていた。&lt;/p>
&lt;h2 id="プロジェクトの進捗報告">プロジェクトの進捗報告&lt;/h2>
&lt;p>出張したときの月例報告の4回目。&lt;a href="/diary/diary/posts/2023/0209/">前回の進捗報告はこちら&lt;/a> 。1月にリリース前倒しを提案して颯爽と1ヶ月前倒しをしたのにその翌月に現時点ではまだリリース可能かどうかを判断できないといったことを報告した。まったく情けない。サーバーサイドとフロントエンドの開発はすでに完了しているのに。しかし、もともとこのプロジェクトの開発対象に入っていなかったもので、ほぼ完成していると聞いていたモジュール群の半分が機能不足や低品質で作り直すことになった。残りの半分もそのままでは動かない。&lt;/p>
&lt;p>経験の浅いメンバーに1ヶ月以上の時間を与えて作り直してもらうようにお願いしていたが、うまく進捗せず時間だけが過ぎていって、結果的に2月の半ばから私が引き取って大半の機能を開発している。結果的にそのメンバーにお願いしていた開発の8割を私が2週間でほとんど実装した。2月の中旬から私がずっと休祝日に開発のお仕事をしていたのはこの開発遅れを補填するためだった。チームが fix した2月の issue 数が57でそのうちの30を、enhance ラベルが付いたものは28でそのうちの13を私が担当した。今月の半分の開発を私が代替わりして帳尻を無理やりあわせた。もはや遊撃のレベルではなく、私が本気出して全部作っておきましたみたいなことをした。&lt;/p>
&lt;p>本当はメンバーに開発経験をつけてもらうために私がいるので私が主担当で開発するのはよくない。とはいえ、このままいくと2ヶ月ほど開発遅延する、しかもこのプロジェクトの中核でもない機能のために、それも悔しいし、うちの会社の信頼にも関わるのでズルしてしまいましたと経営陣へ正直に報告した。自分がやるよりも他人に教える方がずっと難しい。先方からは咎めるものではなかったし、私が開発して帳尻をあわせるのを止めるものでもないという承認は得た。&lt;/p>
&lt;p>難しい開発課題を経験の浅いメンバーに担当させてしまった私のマネジメントの誤りであることは、チームのふりかえりでも、経営者への報告でも伝えている。なにが起ころうとプロジェクトの責任はマネージャーの私にあることは理解している。その遅れはマネージャーが責任をもって対応するのだとメンバーが学ぶ機会にもなったんじゃないかという意見も出た。私も過去にそういう上長をみて思うところはあったのでそれはそうかもしれない。なぜ1ヶ月以上も時間を与えているのに芋づる式にスケジュールが遅延するのか。その要因もメンバーの行動や進捗をみていて理解できた。第一に経験が浅いために開発の見通しや見積もりを立てられない。例えば課題が3つあるとして、1つしかみえていないから「できそうです」と言っていても、1つ終えた後にまた1つありましたと報告があり、その1つを終えてもまだもう1つありましたと報告が来る。一定の経験があれば作業を開始する前に3つあることを整理して、その上で納期にあわせて3つを対処する。納期いっぱい使って1つだけやろうとするところの意識の差は大きい。第二に期日までに実装できる一定のスキルをもっていないとコードレビューが1週間とか続いてしまう。そういった開発者にクリティカルパスとなる issue を担当させてはいけないように思えた。&lt;/p>
&lt;p>ある issue がクリティカルパスになってしまった時点で、私かスキルのあるメンバーのどちらかへ引き継ぐように2月中旬に調整していればいまの状況は変わったのではないだろうか。その判断が2週間遅れたことに今回は気付けた。結果論ではあるが、厳しい判断をもう少し早めに下さないといけなかった。&lt;/p></content></item><item><title>合間の休養</title><link>/diary/posts/2023/0211/</link><pubDate>Sat, 11 Feb 2023 12:17:53 +0900</pubDate><guid>/diary/posts/2023/0211/</guid><description>23時に寝て何度か起きて8時に起きた。疲れていたせいか、いつもよりよく眠れた。18時過ぎぐらいまで調べ物をしていて、それから実家へ車で帰った。初めて夜の高速道路を走ってみたらわりと道がわからなくて怖かった。昼間よりは速度を出せないので夜に帰るならゆっくり帰るのが安全にはよさそう。20時頃には実家について晩ご飯を食べ始めてた。
ストレッチ 今日の開脚幅は開始前156cmで、ストレッチ後160cmだった。出張帰りだったのもあって腰に張りはあってやや疲労が溜まっている感はあったものの、前月に比べたら全然ましだった。やはり前月が葬儀の後に事務手続きと出張が重なって特別に疲労していたことがわかった。トレーナーさんといつも通りの話をしていた。最近はサッカーの三笘選手が大活躍しているので毎週その話題が定番になっている。
こってり天津飯 天津飯は日本発祥！カニ玉との違いとは によると、天津飯は日本の中華料理屋さんが考えた料理らしい。麻婆春雨と同じ類の料理。
少し前に天下一品の新メニューでこってり天津飯ができた。天津飯は日本の中華料理屋さんならどこでも食べられる料理だが、こってり天津飯は「こってりスープ」がある天下一品でしか食べられない。天津飯というコモディティを、こってりスープという天下一品独自のプロダクトで再発見または再発明したような商品とみなせる。
課題管理という分野もそれ自体はどこにでもある概念やスキル体系でしかないが、うちの会社独自のプロダクトを作ったり、プラクティスを構築できれば、再発明できるんじゃないかとたまたま食べていて思った。いつか課題管理ビジネスが軌道にのってインタビューされるようなことがあったらこってり天津飯を食べていて気付きましたみたいな、カッコいい談話にしたい。</description><content>&lt;p>23時に寝て何度か起きて8時に起きた。疲れていたせいか、いつもよりよく眠れた。18時過ぎぐらいまで調べ物をしていて、それから実家へ車で帰った。初めて夜の高速道路を走ってみたらわりと道がわからなくて怖かった。昼間よりは速度を出せないので夜に帰るならゆっくり帰るのが安全にはよさそう。20時頃には実家について晩ご飯を食べ始めてた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今日の開脚幅は開始前156cmで、ストレッチ後160cmだった。出張帰りだったのもあって腰に張りはあってやや疲労が溜まっている感はあったものの、前月に比べたら全然ましだった。やはり前月が葬儀の後に事務手続きと出張が重なって特別に疲労していたことがわかった。トレーナーさんといつも通りの話をしていた。最近はサッカーの三笘選手が大活躍しているので毎週その話題が定番になっている。&lt;/p>
&lt;h2 id="こってり天津飯">こってり天津飯&lt;/h2>
&lt;p>&lt;a href="https://www.cookdoor.jp/chinese-food/dictionary/21228_china_028/">天津飯は日本発祥！カニ玉との違いとは&lt;/a> によると、天津飯は日本の中華料理屋さんが考えた料理らしい。麻婆春雨と同じ類の料理。&lt;/p>
&lt;p>少し前に天下一品の新メニューでこってり天津飯ができた。天津飯は日本の中華料理屋さんならどこでも食べられる料理だが、こってり天津飯は「こってりスープ」がある天下一品でしか食べられない。天津飯というコモディティを、こってりスープという天下一品独自のプロダクトで再発見または再発明したような商品とみなせる。&lt;/p>
&lt;p>課題管理という分野もそれ自体はどこにでもある概念やスキル体系でしかないが、うちの会社独自のプロダクトを作ったり、プラクティスを構築できれば、再発明できるんじゃないかとたまたま食べていて思った。いつか課題管理ビジネスが軌道にのってインタビューされるようなことがあったらこってり天津飯を食べていて気付きましたみたいな、カッコいい談話にしたい。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0211_kotteri.jpg"/>
&lt;/figure></content></item><item><title>windows の調査を開始</title><link>/diary/posts/2023/0210/</link><pubDate>Fri, 10 Feb 2023 15:39:06 +0900</pubDate><guid>/diary/posts/2023/0210/</guid><description>1時に寝て7時過ぎに起きた。やや飲み過ぎて、2日酔いではないけど起きたときは気分が悪かった。
go-winio を触ってみた windows 向けのモジュールを作り直すにあたり、有識者のサポートをお願いしているものの、私も最低限の知識はないとあかんやろと調査を開始した。microsoft/go-winio というライブラリが ms 社のリポジトリで公開されている。公式ならよいのだろうと安易に考えて触ってみたものの、ドキュメントがほとんどなくて、まず使い方がわからん。いまのところ、windows に詳しい人向けのライブラリみたい。ひとまずリポジトリにある pipe_test.go のテストコードを読みながら名前付きパイプを介したプロセス間通信をやってみた。一応は動いたのでここから内部の windows api の仕様や設定などをみていく。その過程で go-winio のチュートリアルがないのであれば、私がテックブログを書いてもよいのかもしれない。
チュートリアル的に書いてみたコードは次の通り。
https://gitlab.com/t2y/misc/-/tree/main/winio-send https://gitlab.com/t2y/misc/-/tree/main/winio-receive 課題管理勉強会 出張のときに毎月の課題管理勉強会。とくにネタが思いつかなかったので エンジニアリング組織論への招待 を題材にしてみた。資料はすでに作ってあった 。私にとっては課題管理をやる意義や価値の大半がこの書籍の中で解説されている。用語や考え方のところでとても参考になるし、いまメンタリングの技術の章を読み直したりもしている。昔はマネージャーやってなかったからその章は読み飛ばしてた。開発組織向けの組織論を解説した書籍でこれ以上のものは、いまのところ、私が読んだ本の中では知らない。4年前に読んだ本を、今回の勉強会を開く機会でまた読み直すきっかけにもなってよかった。本はコンテキストがきれいに構成されているので他の人の所感や意見を聞いたり雑談したりする題材としてもよさそうに思える。</description><content>&lt;p>1時に寝て7時過ぎに起きた。やや飲み過ぎて、2日酔いではないけど起きたときは気分が悪かった。&lt;/p>
&lt;h2 id="go-winio-を触ってみた">go-winio を触ってみた&lt;/h2>
&lt;p>windows 向けのモジュールを作り直すにあたり、有識者のサポートをお願いしているものの、私も最低限の知識はないとあかんやろと調査を開始した。&lt;a href="https://github.com/microsoft/go-winio">microsoft/go-winio&lt;/a> というライブラリが ms 社のリポジトリで公開されている。公式ならよいのだろうと安易に考えて触ってみたものの、ドキュメントがほとんどなくて、まず使い方がわからん。いまのところ、windows に詳しい人向けのライブラリみたい。ひとまずリポジトリにある pipe_test.go のテストコードを読みながら名前付きパイプを介したプロセス間通信をやってみた。一応は動いたのでここから内部の windows api の仕様や設定などをみていく。その過程で go-winio のチュートリアルがないのであれば、私がテックブログを書いてもよいのかもしれない。&lt;/p>
&lt;p>チュートリアル的に書いてみたコードは次の通り。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gitlab.com/t2y/misc/-/tree/main/winio-send">https://gitlab.com/t2y/misc/-/tree/main/winio-send&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gitlab.com/t2y/misc/-/tree/main/winio-receive">https://gitlab.com/t2y/misc/-/tree/main/winio-receive&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="課題管理勉強会">課題管理勉強会&lt;/h2>
&lt;p>出張のときに毎月の課題管理勉強会。とくにネタが思いつかなかったので &lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3">エンジニアリング組織論への招待&lt;/a> を題材にしてみた。&lt;a href="/diary/diary/posts/2023/0205/#課題管理勉強会の資料作り">資料はすでに作ってあった&lt;/a> 。私にとっては課題管理をやる意義や価値の大半がこの書籍の中で解説されている。用語や考え方のところでとても参考になるし、いまメンタリングの技術の章を読み直したりもしている。昔はマネージャーやってなかったからその章は読み飛ばしてた。開発組織向けの組織論を解説した書籍でこれ以上のものは、いまのところ、私が読んだ本の中では知らない。4年前に読んだ本を、今回の勉強会を開く機会でまた読み直すきっかけにもなってよかった。本はコンテキストがきれいに構成されているので他の人の所感や意見を聞いたり雑談したりする題材としてもよさそうに思える。&lt;/p></content></item><item><title>1週間を管理しようとしない</title><link>/diary/posts/2023/0207/</link><pubDate>Tue, 07 Feb 2023 08:34:05 +0900</pubDate><guid>/diary/posts/2023/0207/</guid><description>1時に寝て5時に起きた。ホテルのテレビを付けっぱなしで寝たら朝のニュースで起きた。なんとなくニュースをみながら7時ぐらいまでのんびりしてた。
1週間のイテレーションはナンセンス？ 毎月行っているマイルストーンのふりかえり。今回で3回目なのでメンバーもだいぶ慣れてきた。11, 12, 1月と3ヶ月に渡って課題管理をメンバーに実践してもらいながら開発してきた。当初、開発のイテレーションを1週間で行うか、2週間で行うかの話し合いで短い方がいいんじゃないかとなり、あまり深く考えずに1週間のイテレーションで開発をまわしてきた。しかし、いまとなってはこれは開発のイテレーションとは違うものになっている。
最初の1ヶ月はメンバーにとって慣れないワークフローだから、1週間のイテレーションでこの issue をやる・やらないといった厳密な取り決めはしなかった。その後、徐々に慣れてきたのを見越して、定例会議のときに issue 一覧をみながら、メンバーに2-3個ぐらいの issue をアサインしたり、issue の優先順位付けを明確にしたりしてきた。必ず issue を完了させるという強い制約を課していないものの、だいたい毎週アサインしたものをメンバーは対応してくれていたので、マネージャーとしての私の視点からもとくに問題はないようにみえた。要はうまくまわっているのでそれ以上の管理をしなくてもいい状態だったと言える。
一方で、本来の課題管理のイテレーションとは異なる開発のワークフローになっていて、それがよいことなのかどうか、私自身にも明確な答えがなかった。それでメンバーに尋ねてみた。いまの1週間単位のイテレーション (開発のワークフロー) をどう思いますか？
メンバーからは、1週間の作業内容を厳密に決めなくてもいいんじゃないかという意見が出た。それは私の考えとも一致していたものの、開発のイテレーションを2週間に伸ばすことについて話しているときに、そうしたとしても、定例会議は毎週やりたいという意見が出た。要件確認や仕様共有のために重要だという。通常、イテレーションの成果共有のために定例会議とイテレーションの長さは一致している。仮にイテレーションを2週間にしたら定例会議は2週間に1回となる。しかし、メンバーの視点からはイテレーションを1週間にするか2週間にするかについて関心はないものの、毎週の定例会議で行っている情報共有は重要だという認識があった。
ここで開発のイテレーションと定例会議の頻度は別にあわせなくてもいいんじゃないかと考えるきっかけを私は得られた。スクラムもスプリントと会議体の頻度はセットになっているのでこの発想はなかった。ちなみにアリエル時代は1つのイテレーションが3ヶ月で定例会議もなかった。そして、うちのチームは1ヶ月のマイルストーンに対してふりかえりをセットにしている。これはもはやイテレーション開発の文脈でいえば、実質うちのチームはマイルストーンと呼んでいる1ヶ月が1つのイテレーションになっていて、1つのイテレーション内に4回の定例会議があるというイテレーション開発のワークフローになっていることに気付いた。課題管理の考え方やワークフローがもっと洗練されていくと、毎週の定例会議をやらなくてもよいようになっていくのが私の経験から自明である。しかし、うちの開発は私も含めて8割以上がフルリモートワークなので、メンバー全員の顔を合わせる機会を作るという観点から毎週の定例会議は大事な場にもなっている。
実際の開発のマネジメントをしてみると、私自身、分かっていなかったことや新たな発見があって、まだまだ自分自身も修行の身であることを実感する。ここでの結論としてわかったことは次の通りで、ロードマップにおける最初のフェーズが完了する3月末までは現状のワークフローを継続してみることに決めた。
開発のイテレーションとして1週間は短過ぎて管理対象としてあわない 開発のイテレーションと定例会議の頻度をあわせなくてもよい フルリモートワークの場合、メンバー全員を集める目的は情報共有だけではない</description><content>&lt;p>1時に寝て5時に起きた。ホテルのテレビを付けっぱなしで寝たら朝のニュースで起きた。なんとなくニュースをみながら7時ぐらいまでのんびりしてた。&lt;/p>
&lt;h2 id="1週間のイテレーションはナンセンス">1週間のイテレーションはナンセンス？&lt;/h2>
&lt;p>毎月行っているマイルストーンのふりかえり。今回で3回目なのでメンバーもだいぶ慣れてきた。11, 12, 1月と3ヶ月に渡って課題管理をメンバーに実践してもらいながら開発してきた。当初、開発のイテレーションを1週間で行うか、2週間で行うかの話し合いで短い方がいいんじゃないかとなり、あまり深く考えずに1週間のイテレーションで開発をまわしてきた。しかし、いまとなってはこれは開発のイテレーションとは違うものになっている。&lt;/p>
&lt;p>最初の1ヶ月はメンバーにとって慣れないワークフローだから、1週間のイテレーションでこの issue をやる・やらないといった厳密な取り決めはしなかった。その後、徐々に慣れてきたのを見越して、定例会議のときに issue 一覧をみながら、メンバーに2-3個ぐらいの issue をアサインしたり、issue の優先順位付けを明確にしたりしてきた。必ず issue を完了させるという強い制約を課していないものの、だいたい毎週アサインしたものをメンバーは対応してくれていたので、マネージャーとしての私の視点からもとくに問題はないようにみえた。要はうまくまわっているのでそれ以上の管理をしなくてもいい状態だったと言える。&lt;/p>
&lt;p>一方で、本来の課題管理のイテレーションとは異なる開発のワークフローになっていて、それがよいことなのかどうか、私自身にも明確な答えがなかった。それでメンバーに尋ねてみた。いまの1週間単位のイテレーション (開発のワークフロー) をどう思いますか？&lt;/p>
&lt;p>メンバーからは、1週間の作業内容を厳密に決めなくてもいいんじゃないかという意見が出た。それは私の考えとも一致していたものの、開発のイテレーションを2週間に伸ばすことについて話しているときに、そうしたとしても、定例会議は毎週やりたいという意見が出た。要件確認や仕様共有のために重要だという。通常、イテレーションの成果共有のために定例会議とイテレーションの長さは一致している。仮にイテレーションを2週間にしたら定例会議は2週間に1回となる。しかし、メンバーの視点からはイテレーションを1週間にするか2週間にするかについて関心はないものの、毎週の定例会議で行っている情報共有は重要だという認識があった。&lt;/p>
&lt;p>ここで開発のイテレーションと定例会議の頻度は別にあわせなくてもいいんじゃないかと考えるきっかけを私は得られた。スクラムもスプリントと会議体の頻度はセットになっているのでこの発想はなかった。ちなみにアリエル時代は1つのイテレーションが3ヶ月で定例会議もなかった。そして、うちのチームは1ヶ月のマイルストーンに対してふりかえりをセットにしている。これはもはやイテレーション開発の文脈でいえば、実質うちのチームはマイルストーンと呼んでいる1ヶ月が1つのイテレーションになっていて、1つのイテレーション内に4回の定例会議があるというイテレーション開発のワークフローになっていることに気付いた。課題管理の考え方やワークフローがもっと洗練されていくと、毎週の定例会議をやらなくてもよいようになっていくのが私の経験から自明である。しかし、うちの開発は私も含めて8割以上がフルリモートワークなので、メンバー全員の顔を合わせる機会を作るという観点から毎週の定例会議は大事な場にもなっている。&lt;/p>
&lt;p>実際の開発のマネジメントをしてみると、私自身、分かっていなかったことや新たな発見があって、まだまだ自分自身も修行の身であることを実感する。ここでの結論としてわかったことは次の通りで、ロードマップにおける最初のフェーズが完了する3月末までは現状のワークフローを継続してみることに決めた。&lt;/p>
&lt;ul>
&lt;li>開発のイテレーションとして1週間は短過ぎて管理対象としてあわない&lt;/li>
&lt;li>開発のイテレーションと定例会議の頻度をあわせなくてもよい&lt;/li>
&lt;li>フルリモートワークの場合、メンバー全員を集める目的は情報共有だけではない&lt;/li>
&lt;/ul></content></item><item><title>資料作りを丸半日</title><link>/diary/posts/2023/0205/</link><pubDate>Sun, 05 Feb 2023 12:19:23 +0900</pubDate><guid>/diary/posts/2023/0205/</guid><description>23時に寝て何度か起きて7時に起きた。起きたものの、なんかしんどくてお昼前まで寝てた。
課題管理勉強会の資料作り 出張前の定例作業になりつつある。本当は余裕をもって事前に資料作りしておけばよいのに、日々の余裕がないから出張直前の日曜日に資料作りしている。これはよくない兆し。次の課題管理勉強会は エンジニアリング組織論への招待 を取り上げる。Chapter 1 の思考のリファクタリングから、私が関心のあるところ、もしくは課題管理で解決できそうな話題などを重点的に取り上げる。たたき台はできた。構成や進行をさらに練りたいので少し寝かせてからもうちょっと考える。読み返していると忘れていたことを思い出したり、課題管理と密接な内容を再発見したり、本の内容をずっと覚えているとかないから自分の勉強にもなる。本当は参加者同士で内容の議論ができるといいんじゃないかと思うけど、少人数の勉強会ではないから発言しにくい空気がある。もしくは発言するのは一部のメンバーに限られてしまう。とくにリモート参加が多いと勉強会は盛り上がらない。それは オンライン飲み会が盛り上がらない理由 と同じ。
12時頃にオフィス来て、途中に休憩を取っているけど、ひと段落して気付いたら23時まわってた。明日は始発で新幹線に乗る。このまま起きたまま夜通し出張の準備をして新幹線で寝る作戦に移行する。</description><content>&lt;p>23時に寝て何度か起きて7時に起きた。起きたものの、なんかしんどくてお昼前まで寝てた。&lt;/p>
&lt;h2 id="課題管理勉強会の資料作り">課題管理勉強会の資料作り&lt;/h2>
&lt;p>出張前の定例作業になりつつある。本当は余裕をもって事前に資料作りしておけばよいのに、日々の余裕がないから出張直前の日曜日に資料作りしている。これはよくない兆し。次の課題管理勉強会は &lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3">エンジニアリング組織論への招待&lt;/a> を取り上げる。Chapter 1 の思考のリファクタリングから、私が関心のあるところ、もしくは課題管理で解決できそうな話題などを重点的に取り上げる。たたき台はできた。構成や進行をさらに練りたいので少し寝かせてからもうちょっと考える。読み返していると忘れていたことを思い出したり、課題管理と密接な内容を再発見したり、本の内容をずっと覚えているとかないから自分の勉強にもなる。本当は参加者同士で内容の議論ができるといいんじゃないかと思うけど、少人数の勉強会ではないから発言しにくい空気がある。もしくは発言するのは一部のメンバーに限られてしまう。とくにリモート参加が多いと勉強会は盛り上がらない。それは &lt;a href="/diary/diary/posts/2023/0203/#隔週の雑談">オンライン飲み会が盛り上がらない理由&lt;/a> と同じ。&lt;/p>
&lt;p>12時頃にオフィス来て、途中に休憩を取っているけど、ひと段落して気付いたら23時まわってた。明日は始発で新幹線に乗る。このまま起きたまま夜通し出張の準備をして新幹線で寝る作戦に移行する。&lt;/p></content></item><item><title>週末はドライブで気分転換</title><link>/diary/posts/2023/0128/</link><pubDate>Sat, 28 Jan 2023 13:42:54 +0900</pubDate><guid>/diary/posts/2023/0128/</guid><description>22時に寝て2時前に吐き気で起きて少しだらだらして寝て7時に起きた。
ストレッチ 今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。あまり数値は振るわなかったものの、この1ヶ月ぐらいではもっとも復調しつつある。まだ腰の張りがやや残っていて全快とまではいかないものの先週よりはよくなりつつある気はする。先週から左右への開脚以外に前後の開脚のときの股関節のストレッチを重視するよう、トレーナーさんからも指示はあったものの、今週は全然そんな余裕がなくてあまり取り組めなかった。それを余暇でうまくできなかった分の、数値の悪化かなとも受け取れた。
2-2. 傾聴・可視化・リフレーミング エンジニアリング組織論への招待 のメンタリングの技術の章を読み直し。前回 からだいぶ間があいた。
メンターはメンティに対して「問題を解決してあげよう」ではなく「モヤモヤしていない問題に変換してあげよう」と考えることが重要。問題を次のように考え、
感情的に固執していて解けないので「傾聴」をする 客観視できずに解けないので「可視化」をする そもそも解けない問題なので前提を変える「リフレーミング」をする というのが、メンタリングで意識すべき流れになる。
共感と同感の違い
共感という言葉の意味は「相手がそのような気持ちになった理由を理解する」こと 同感は「自分が相手と同じ気持ちになる」こと 傾聴において示すべきことは、「共感」であって、「同感」ではありません。
認知フレームとリフレーミング
人はありのままに物事を見られない 人は認知する枠組みの範囲でしか処理できない この枠組みのことを「認知のフレーム」と呼ぶ この外側にあることは「心理的な盲点」と呼ばれる 対話によって認知フレームを変えることを「リフレーミング」と呼ぶ 「解けない問題」を「解ける問題」へと変えていく 確認された前提を「一旦、この前提がなかったらどうなりますか？」というように外して考えるようにすることで、リフレーミングを促すことができます。 また、この中で「一番重要だと思うものは何ですか？」というように前提の優先順位を問うこともリフレーミングを促します。気になって仕方なかったことが、実はあまり重要ではないかもしれないと気がつく契機になります。
「情報の非対称性」を解消するには、
自分の情報を相手に伝える 相手の情報を自分が聞く という行動をとればよいのですが、この当たり前のことができなくなってしまうケースがある
これは、メンター役になる人に対しても重要な警句です。メンターは、メンティの問題を「自分の課題」として捉えてはいけません。メンターにとっての課題は「メンティを自立的な問題解決」に導くことであって、「メンティの課題を解決すること」ではないのです。
この節を読み終えて、課題管理とは、メンターを必要とせず、自分で自分をメンタリングするツールとも言い換えられるかもしれないと思えた。課題管理を習熟すると自分で自分の間違いに気付けるというメリットを周りに伝えたりしていたことがメンタリングで大事なことのいくつかの共通することが書いてあった。
車を運転して実家へ 明日は父の35日なので夕方から購入した車で初めて実家に帰った。神戸の高速道路の路面が少し濡れていたり北淡で小雪が降ってきたりして、さっそくタイヤ周りを汚れてしまった。まぁ仕方ないか。door-to-door で1時間15分ぐらいで実家に帰れる。高速バスで帰るとこんな段取りになる。
マンションからバス停へ移動する (10分) バス停でバスが到着するのを待つ (待ち時間10分) 高速バスで移動する (1時間20分) バス停まで親に車で迎えに来てもらって実家へ移動する (15分) 待ち時間の調整が入ると2時間ほどはかかっていた。これが自分の都合で移動できるので調整時間がない分のストレスが溜まらない。帰ろうと思って1時間強で移動できる気楽さがある。</description><content>&lt;p>22時に寝て2時前に吐き気で起きて少しだらだらして寝て7時に起きた。&lt;/p>
&lt;h2 id="ストレッチ">ストレッチ&lt;/h2>
&lt;p>今日の開脚幅は開始前154cmで、ストレッチ後158cmだった。あまり数値は振るわなかったものの、この1ヶ月ぐらいではもっとも復調しつつある。まだ腰の張りがやや残っていて全快とまではいかないものの先週よりはよくなりつつある気はする。先週から左右への開脚以外に前後の開脚のときの股関節のストレッチを重視するよう、トレーナーさんからも指示はあったものの、今週は全然そんな余裕がなくてあまり取り組めなかった。それを余暇でうまくできなかった分の、数値の悪化かなとも受け取れた。&lt;/p>
&lt;h2 id="2-2-傾聴可視化リフレーミング">2-2. 傾聴・可視化・リフレーミング&lt;/h2>
&lt;p>&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3">エンジニアリング組織論への招待&lt;/a> のメンタリングの技術の章を読み直し。&lt;a href="/diary/diary/posts/2022/1106/#2-1-メンタリングで相手の思考をリファクタリング">前回&lt;/a> からだいぶ間があいた。&lt;/p>
&lt;blockquote>
&lt;p>メンターはメンティに対して「問題を解決してあげよう」ではなく「モヤモヤしていない問題に変換してあげよう」と考えることが重要。問題を次のように考え、&lt;/p>
&lt;ul>
&lt;li>感情的に固執していて解けないので「傾聴」をする&lt;/li>
&lt;li>客観視できずに解けないので「可視化」をする&lt;/li>
&lt;li>そもそも解けない問題なので前提を変える「リフレーミング」をする&lt;/li>
&lt;/ul>
&lt;p>というのが、メンタリングで意識すべき流れになる。&lt;/p>
&lt;p>共感と同感の違い&lt;/p>
&lt;ul>
&lt;li>共感という言葉の意味は「相手がそのような気持ちになった理由を理解する」こと&lt;/li>
&lt;li>同感は「自分が相手と同じ気持ちになる」こと&lt;/li>
&lt;/ul>
&lt;p>傾聴において示すべきことは、「共感」であって、「同感」ではありません。&lt;/p>
&lt;p>認知フレームとリフレーミング&lt;/p>
&lt;ul>
&lt;li>人はありのままに物事を見られない
&lt;ul>
&lt;li>人は認知する枠組みの範囲でしか処理できない&lt;/li>
&lt;li>この枠組みのことを「認知のフレーム」と呼ぶ
&lt;ul>
&lt;li>この外側にあることは「心理的な盲点」と呼ばれる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>対話によって認知フレームを変えることを「リフレーミング」と呼ぶ
&lt;ul>
&lt;li>「解けない問題」を「解ける問題」へと変えていく&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>確認された前提を「一旦、この前提がなかったらどうなりますか？」というように外して考えるようにすることで、リフレーミングを促すことができます。 また、この中で「一番重要だと思うものは何ですか？」というように前提の優先順位を問うこともリフレーミングを促します。気になって仕方なかったことが、実はあまり重要ではないかもしれないと気がつく契機になります。&lt;/p>
&lt;p>「情報の非対称性」を解消するには、&lt;/p>
&lt;ul>
&lt;li>自分の情報を相手に伝える&lt;/li>
&lt;li>相手の情報を自分が聞く&lt;/li>
&lt;/ul>
&lt;p>という行動をとればよいのですが、この当たり前のことができなくなってしまうケースがある&lt;/p>
&lt;p>これは、メンター役になる人に対しても重要な警句です。メンターは、メンティの問題を「自分の課題」として捉えてはいけません。メンターにとっての課題は「メンティを自立的な問題解決」に導くことであって、「メンティの課題を解決すること」ではないのです。&lt;/p>
&lt;/blockquote>
&lt;p>この節を読み終えて、課題管理とは、メンターを必要とせず、自分で自分をメンタリングするツールとも言い換えられるかもしれないと思えた。課題管理を習熟すると自分で自分の間違いに気付けるというメリットを周りに伝えたりしていたことがメンタリングで大事なことのいくつかの共通することが書いてあった。&lt;/p>
&lt;h2 id="車を運転して実家へ">車を運転して実家へ&lt;/h2>
&lt;p>明日は父の35日なので夕方から購入した車で初めて実家に帰った。神戸の高速道路の路面が少し濡れていたり北淡で小雪が降ってきたりして、さっそくタイヤ周りを汚れてしまった。まぁ仕方ないか。door-to-door で1時間15分ぐらいで実家に帰れる。高速バスで帰るとこんな段取りになる。&lt;/p>
&lt;ul>
&lt;li>マンションからバス停へ移動する (10分)&lt;/li>
&lt;li>バス停でバスが到着するのを待つ (待ち時間10分)&lt;/li>
&lt;li>高速バスで移動する (1時間20分)&lt;/li>
&lt;li>バス停まで親に車で迎えに来てもらって実家へ移動する (15分)&lt;/li>
&lt;/ul>
&lt;p>待ち時間の調整が入ると2時間ほどはかかっていた。これが自分の都合で移動できるので調整時間がない分のストレスが溜まらない。帰ろうと思って1時間強で移動できる気楽さがある。&lt;/p></content></item></channel></rss>