<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>smartplug on forest nook</title><link>/diary/tags/smartplug/</link><description>Recent content in smartplug on forest nook</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2021 Tetsuya Morimoto</copyright><lastBuildDate>Sun, 18 Jun 2023 12:35:35 +0900</lastBuildDate><atom:icon>/diary/favicon.ico</atom:icon><icon>/diary/favicon.ico</icon><atom:link href="/diary/tags/smartplug/index.xml" rel="self" type="application/rss+xml"/><item><title>クラウド経由で tapo を制御する方法がわからない</title><link>/diary/posts/2023/0618/</link><pubDate>Sun, 18 Jun 2023 12:35:35 +0900</pubDate><guid>/diary/posts/2023/0618/</guid><description>0時に寝て7時に起きて8時過ぎまでだらだらしてた。オフィスのエアコンの効き具合がよくなくて昼間暑くてやる気にならなかった。
tp-link cloud api で tapo の制御を調べる 先日 ifttt で tapo p105 の制御 を行った。これが動くということはなんらかのクラウドの api 経由で tapo p105 を制御できている。次の記事をみながらやってみようと試してみた。結論から言ってクラウドの api 経由ではできなかった。
TP-Link cloud APIを使ってみる アクセストークンを取得する。terminalUUID は適当に生成すればよい。
$ curl -s -X POST -H &amp;#34;Content-Type: application/json&amp;#34; -d &amp;#39;{&amp;#34;method&amp;#34;: &amp;#34;login&amp;#34;, &amp;#34;params&amp;#34;: {&amp;#34;appType&amp;#34;: &amp;#34;iphone&amp;#34;, &amp;#34;cloudUserName&amp;#34;: &amp;#34;register@kazamori.jp&amp;#34;, &amp;#34;cloudPassword&amp;#34;: &amp;#34;***&amp;#34;, &amp;#34;terminalUUID&amp;#34;: &amp;#34;bf63e1d0-d5dc-4636-abf1-7eeada585935&amp;#34;}}&amp;#39; https://wap.tplinkcloud.com/ | jq . { &amp;#34;error_code&amp;#34;: 0, &amp;#34;result&amp;#34;: { &amp;#34;accountId&amp;#34;: &amp;#34;142785160&amp;#34;, &amp;#34;regTime&amp;#34;: &amp;#34;2023-06-11 04:59:43&amp;#34;, &amp;#34;countryCode&amp;#34;: &amp;#34;JP&amp;#34;, &amp;#34;riskDetected&amp;#34;: 0, &amp;#34;email&amp;#34;: &amp;#34;register@kazamori.jp&amp;#34;, &amp;#34;token&amp;#34;: &amp;#34;***-***&amp;#34; } } ここで取得したアクセストークンを使ってデバイスの一覧を取得する。</description><content>&lt;p>0時に寝て7時に起きて8時過ぎまでだらだらしてた。オフィスのエアコンの効き具合がよくなくて昼間暑くてやる気にならなかった。&lt;/p>
&lt;h2 id="tp-link-cloud-api-で-tapo-の制御を調べる">tp-link cloud api で tapo の制御を調べる&lt;/h2>
&lt;p>先日 &lt;a href="/diary/diary/posts/2023/0612/">ifttt で tapo p105 の制御&lt;/a> を行った。これが動くということはなんらかのクラウドの api 経由で tapo p105 を制御できている。次の記事をみながらやってみようと試してみた。結論から言ってクラウドの api 経由ではできなかった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zenn.dev/book000/articles/tp-link-cloud-api">TP-Link cloud APIを使ってみる&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>アクセストークンを取得する。terminalUUID は適当に生成すればよい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -s -X POST -H &lt;span style="color:#e6db74">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;method&amp;#34;: &amp;#34;login&amp;#34;, &amp;#34;params&amp;#34;: {&amp;#34;appType&amp;#34;: &amp;#34;iphone&amp;#34;, &amp;#34;cloudUserName&amp;#34;: &amp;#34;register@kazamori.jp&amp;#34;, &amp;#34;cloudPassword&amp;#34;: &amp;#34;***&amp;#34;, &amp;#34;terminalUUID&amp;#34;: &amp;#34;bf63e1d0-d5dc-4636-abf1-7eeada585935&amp;#34;}}&amp;#39;&lt;/span> https://wap.tplinkcloud.com/ | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;error_code&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;result&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;accountId&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;142785160&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;regTime&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-06-11 04:59:43&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;countryCode&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;JP&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;riskDetected&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;register@kazamori.jp&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;token&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;***-***&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ここで取得したアクセストークンを使ってデバイスの一覧を取得する。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -s -X POST -H &lt;span style="color:#e6db74">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;method&amp;#34;: &amp;#34;getDeviceList&amp;#34;}&amp;#39;&lt;/span> https://wap.tplinkcloud.com/?token&lt;span style="color:#f92672">=&lt;/span>***-*** | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;error_code&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;result&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceList&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceType&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;SMART.TAPOPLUG&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;role&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fwVer&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.3.6 Build 20230308 Rel. 52591&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;appServerUrl&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://aps1-wap.tplinkcloud.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceRegion&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ap-southeast-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceId&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;802241DA5175CF114E567DE8D72A3094210CB12D&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;P105&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceHwVer&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;alias&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;U21hcnQgUGx1ZyAoS2F6YW1vcmkgT2ZmaWNlKQ==&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceMac&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;482254AC1D25&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;oemId&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;495AC9D888EB711C42A28BECF62071CF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;deviceModel&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;P105&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;hwId&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;58070BD9D8ECC915CD3D6F20A2172712&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fwId&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1D18AD293A25ABDE41405B20C6F98816&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;isSameRegion&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ここまでは従来のスマートプラグと同様に動く。ここから先の手順は従来の hs105 と tapo p105 では手順が異なるみたい。&lt;code>passthrough&lt;/code> というメソッドを呼び出してみてもエラーが返ってくる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -s -X POST -H &lt;span style="color:#e6db74">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;method&amp;#34;:&amp;#34;passthrough&amp;#34;, &amp;#34;params&amp;#34;: {&amp;#34;deviceId&amp;#34;: &amp;#34;802241DA5175CF114E567DE8D72A3094210CB12D&amp;#34;, &amp;#34;requestData&amp;#34;: &amp;#34;{\&amp;#34;system\&amp;#34;:{\&amp;#34;get_sysinfo\&amp;#34;:null},\&amp;#34;emeter\&amp;#34;:{\&amp;#34;get_realtime\&amp;#34;:null}}&amp;#34;}}&amp;#39;&lt;/span> https://wap.tplinkcloud.com/?token&lt;span style="color:#f92672">=&lt;/span>***-*** | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;error_code&amp;#34;&lt;/span>: -20571,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Device is offline&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>どうやら tapo シリーズはスマートプラグ自体が web api のエンドポイントを提供していて、ローカルからデバイスの web api を呼び出して制御できるらしい。例えば、次の記事でその手順が書いてあって、同様のやり方で実装した野生のライブラリもたくさんみつかる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://guminote.sakura.ne.jp/archives/911">ESP8266 で Tp-Link のスマートプラグ『Tapo P105』を直接操作する&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>うちのシェアオフィスのネットワークはローカルの ip アドレスへの通信をすべて拒否しているようなのでこのやり方はうちのオフィスでは検証できない。しかし、tp-link 社のスマホアプリと ifttt の webhook 経由で p105 の制御ができているため、おそらくローカルのエンドポイントに接続する以外の別の手段があるのだと推測する。それをインターネット上で数時間探してみたものの、発見できなかった。この前 interop の展示で聞いた話しだと ifttt は非公開 api を使ってインテグレーションを実装しているという話しだったけど、どうやってクラウド経由で通信しているのだろう？と不思議に思った。&lt;/p></content></item><item><title>アイディアのコラボレーション</title><link>/diary/posts/2023/0616/</link><pubDate>Fri, 16 Jun 2023 09:57:15 +0900</pubDate><guid>/diary/posts/2023/0616/</guid><description>2時に寝て何度か起きて7時に起きた。今日は勉強会の登板なのになにも準備できてなくてどうしようとか思いながら寝た。
パッケージングとリリースのドキュメント 5月の落ち穂拾いの時期にプロジェクトの開発ドキュメントを刷新していろいろな要項を書き残している。最後に残ったまだ書いていないドキュメントに次の2つがある。水曜日から課題管理やコードレビューの隙間時間に書き出していって3日ほどかけて一通り書き終えた。私は文章を書くのが遅いのと、1回ですべての内容を網羅できなくて、書いているうちに思い出して追記したり、寝かした文章をあとで見返して推敲したりすることが多い。そのため、ドキュメントを1週間ぐらいかけて書いたりする。
パッケージング リリース たまたまメンバーにあるモジュールをリファクタリングのために再実装してもらっている。その開発を完了したら古いモジュールと入れ替える必要があるので、開発だけではなく、パッケージングやリリース周りの作業を把握してもらう、よい機会と言える。これまでパッケージングやリリース周りのインフラはほとんど私が作って運用をまわしてきたので徐々にそれらを引き継ぐタイミングとも言える。開発者はインフラのことを気にせず、アプリケーションを開発してコミットすれば後はすべて ci/cd が自動的にいろいろやってくれて便利ぐらいの感覚で扱えるようにするのが、外資系などではプラットフォームに投資しろと言われたりするものだと推測する。うちらが開発しているプロダクトはコンテナ、RPM、Windows インストーラーとパッケージングする種類が多い。その要項に加えて QA 責任の考え方などについても書いておいた。主には私がいなくなった後に役に立つドキュメントとなるだろう。
チーム勉強会 本当は go の generics の勉強会をやりますと先週宣言していた。しかし、私が遊んでいて全然準備できなかったので代わりに決済とスマートプラグの話しをした。先週末と月曜日 に作った決済とスマートプラグを組み合わせたもの。サービスや仕組みを簡単に説明して、実際にデモを動かして電球を灯す。
参加者からスマートプラグをラズベリーパイに置き換えてパワーリレーというモジュールを使えばもっとスマートにできるんじゃないかという意見が出た。たしかにラズベリーパイなら stripe の決済イベントを受け取るサーバーをデバイス内に同梱させることもできるかもしれない。そうすると、スマートプラグのような電源の on/off だけではなく、ラズベリーパイが扱えるセンサーとインテグレーションすることもできそう。また時間のあるときにやってみたい。コラボレーションって正にこういうことを言うとわかってきた。私が1人でこの仕組みを実装していたときにはラズベリーパイというキーワードはまったく頭の中になかった。他者の視点が加わるから新しいアイディアが広がる。</description><content>&lt;p>2時に寝て何度か起きて7時に起きた。今日は勉強会の登板なのになにも準備できてなくてどうしようとか思いながら寝た。&lt;/p>
&lt;h2 id="パッケージングとリリースのドキュメント">パッケージングとリリースのドキュメント&lt;/h2>
&lt;p>5月の落ち穂拾いの時期にプロジェクトの開発ドキュメントを刷新していろいろな要項を書き残している。最後に残ったまだ書いていないドキュメントに次の2つがある。水曜日から課題管理やコードレビューの隙間時間に書き出していって3日ほどかけて一通り書き終えた。私は文章を書くのが遅いのと、1回ですべての内容を網羅できなくて、書いているうちに思い出して追記したり、寝かした文章をあとで見返して推敲したりすることが多い。そのため、ドキュメントを1週間ぐらいかけて書いたりする。&lt;/p>
&lt;ul>
&lt;li>パッケージング&lt;/li>
&lt;li>リリース&lt;/li>
&lt;/ul>
&lt;p>たまたまメンバーにあるモジュールをリファクタリングのために再実装してもらっている。その開発を完了したら古いモジュールと入れ替える必要があるので、開発だけではなく、パッケージングやリリース周りの作業を把握してもらう、よい機会と言える。これまでパッケージングやリリース周りのインフラはほとんど私が作って運用をまわしてきたので徐々にそれらを引き継ぐタイミングとも言える。開発者はインフラのことを気にせず、アプリケーションを開発してコミットすれば後はすべて ci/cd が自動的にいろいろやってくれて便利ぐらいの感覚で扱えるようにするのが、外資系などではプラットフォームに投資しろと言われたりするものだと推測する。うちらが開発しているプロダクトはコンテナ、RPM、Windows インストーラーとパッケージングする種類が多い。その要項に加えて QA 責任の考え方などについても書いておいた。主には私がいなくなった後に役に立つドキュメントとなるだろう。&lt;/p>
&lt;h2 id="チーム勉強会">チーム勉強会&lt;/h2>
&lt;p>本当は go の generics の勉強会をやりますと先週宣言していた。しかし、私が遊んでいて全然準備できなかったので代わりに決済とスマートプラグの話しをした。&lt;a href="/diary/diary/posts/2023/0612/">先週末と月曜日&lt;/a> に作った決済とスマートプラグを組み合わせたもの。サービスや仕組みを簡単に説明して、実際にデモを動かして電球を灯す。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0616_payment-and-smartplug.png"/>
&lt;/figure>
&lt;p>参加者からスマートプラグをラズベリーパイに置き換えてパワーリレーというモジュールを使えばもっとスマートにできるんじゃないかという意見が出た。たしかにラズベリーパイなら stripe の決済イベントを受け取るサーバーをデバイス内に同梱させることもできるかもしれない。そうすると、スマートプラグのような電源の on/off だけではなく、ラズベリーパイが扱えるセンサーとインテグレーションすることもできそう。また時間のあるときにやってみたい。コラボレーションって正にこういうことを言うとわかってきた。私が1人でこの仕組みを実装していたときにはラズベリーパイというキーワードはまったく頭の中になかった。他者の視点が加わるから新しいアイディアが広がる。&lt;/p></content></item><item><title>ネットワークからスマートプラグの制御</title><link>/diary/posts/2023/0612/</link><pubDate>Mon, 12 Jun 2023 09:15:47 +0900</pubDate><guid>/diary/posts/2023/0612/</guid><description>昨日は夕方に親が立ち寄るかもしれないというから待機していたのに空振りに終わった。0時に寝ようとしてあまり眠れなくて7時に起きた。ここ最近寝ているのか寝てないのかよく分からない眠り方になる。
決済してスマートプラグを ON にしろ 昨日の続き 。夕方に Tapo P105 が届いたので業務を終えてからさっそく使ってみた。
オフィスの wifi に接続して、tp-link 社のスマホアプリからデバイス登録する。スマホアプリからはすぐに on/off できた。スマホで電源の on/off を制御できてあまり嬉しいことはパッと思いつかないけど、プログラムから制御できるならなにか遊べそうな気もしてくる。ifttt というインテグレーションサービスがあって、それを使うと tp-link 社のデバイスと ifttt 社の web api 経由で制御できる。おそらくなんらかの web api が tp-link 社からも提供されているはず。それが公開されていれば ifttt を使う必要はないし、すでにハックされているものを使うのでもよいかもしれない。ひとまず動かすことを目的とするので ifttt を使う。スマートプラグに電球をつなげて、決済したら電球が灯って3秒後に消えるようなサンプルアプリを作った。一通り最後まで動かすことができておもしろかった。
https://github.com/kazamori/stripe-webhook-sample</description><content>&lt;p>昨日は夕方に親が立ち寄るかもしれないというから待機していたのに空振りに終わった。0時に寝ようとしてあまり眠れなくて7時に起きた。ここ最近寝ているのか寝てないのかよく分からない眠り方になる。&lt;/p>
&lt;h2 id="決済してスマートプラグを-on-にしろ">決済してスマートプラグを ON にしろ&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0611/">昨日の続き&lt;/a> 。夕方に &lt;a href="https://www.tp-link.com/jp/home-networking/smart-plug/tapo-p105/">Tapo P105&lt;/a> が届いたので業務を終えてからさっそく使ってみた。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0612_smartplug.jpeg"/>
&lt;/figure>
&lt;p>オフィスの wifi に接続して、tp-link 社のスマホアプリからデバイス登録する。スマホアプリからはすぐに on/off できた。スマホで電源の on/off を制御できてあまり嬉しいことはパッと思いつかないけど、プログラムから制御できるならなにか遊べそうな気もしてくる。&lt;a href="https://ifttt.com">ifttt&lt;/a> というインテグレーションサービスがあって、それを使うと tp-link 社のデバイスと ifttt 社の web api 経由で制御できる。おそらくなんらかの web api が tp-link 社からも提供されているはず。それが公開されていれば ifttt を使う必要はないし、すでにハックされているものを使うのでもよいかもしれない。ひとまず動かすことを目的とするので ifttt を使う。スマートプラグに電球をつなげて、決済したら電球が灯って3秒後に消えるようなサンプルアプリを作った。一通り最後まで動かすことができておもしろかった。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/kazamori/stripe-webhook-sample">https://github.com/kazamori/stripe-webhook-sample&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>スマートプラグ制御の調査</title><link>/diary/posts/2023/0611/</link><pubDate>Sun, 11 Jun 2023 15:44:47 +0900</pubDate><guid>/diary/posts/2023/0611/</guid><description>23時に寝てうまく眠れなくて5時に起きた。そのまま10時ぐらいまでだらだらしてた。
スマートプラグの通電テスター 昨日の続き 。スマートプラグを検索すると TP-Link 社の製品がよく出てくるのでミニスマート wi-fi プラグの Tapo P105 を購入してみた。この製品だとネットワーク経由で電源の on/off ができそう。ifttt というサービスが TP-Link Tapo インテグレーションを公開している。TP-Link 社も自前で TP-LINK Cloud というサービスを提供していて、どうやらその web api は公開されていないようだけど、おそらくそこで使っている web api を調べてライブラリにしたのが tplink-cloud-api のようにみえる。サイトをみる限りはカメラしかサポートしていないようにもみえる。スマートプラグのようなデバイスがハックしやすい性質のせいか、書いてある情報が曖昧で実際にどうやってデバイスを制御したらよいのかネット上の記事からよくわからない。実際に購入したもので試してみるのが早そう。明日届く予定。
このスマートプラグによる電源 on/off のテスターに、ダイソーで電球を購入してきた。電源ソケットアダプタが100円、電球は100円、200円、300円とそれぞれあったんだけど、100円の差異でどうせ買うなら精度のよいものをと考えて300円のものを購入した。LED で電力消費も少ない。
試しにオフィスにあった amazon 純正スマートプラグ経由で接続して alexa アプリで on/off したら意図したように電球が灯ってテスターの代替にできた。デモのために使うのでそれぐらいわかりやすいのがよい。
モロゾフ 昨日参加したもくもく会を借りていた 中央区文化センター には2フロアに渡って大小いくつかの会議室がある。それぞれの会議室には張り紙をしていて借り主の名前が外からわかる。たまたま通ったところに「モロゾフ労働組合」と書いてあって、どこかの会社の労組が会議しているんだなと覚えていた。今日になって来週の東京出張のお土産を探していたらモロゾフというお店があることに気付いた。モロゾフの歩み によると1931年創業の神戸本店の洋菓子の会社らしい。これもなにかの縁だと思って今回はモロゾフさんの神戸本店へ行って ブロードランド 15個入 をお土産用に購入した。
自分用にアーモンドケーキを買って食べてみた。しっとり食感で控え目にアーモンドの風味がして甘過ぎなくて後味のよいケーキでおいしかった。</description><content>&lt;p>23時に寝てうまく眠れなくて5時に起きた。そのまま10時ぐらいまでだらだらしてた。&lt;/p>
&lt;h2 id="スマートプラグの通電テスター">スマートプラグの通電テスター&lt;/h2>
&lt;p>&lt;a href="/diary/diary/posts/2023/0610/">昨日の続き&lt;/a> 。スマートプラグを検索すると TP-Link 社の製品がよく出てくるのでミニスマート wi-fi プラグの &lt;a href="https://www.tp-link.com/jp/home-networking/smart-plug/tapo-p105/">Tapo P105&lt;/a> を購入してみた。この製品だとネットワーク経由で電源の on/off ができそう。ifttt というサービスが &lt;a href="https://ifttt.com/tplink_tapo">TP-Link Tapo&lt;/a> インテグレーションを公開している。TP-Link 社も自前で &lt;a href="https://www.tplinkcloud.com/">TP-LINK Cloud&lt;/a> というサービスを提供していて、どうやらその web api は公開されていないようだけど、おそらくそこで使っている web api を調べてライブラリにしたのが &lt;a href="https://www.npmjs.com/package/tplink-cloud-api">tplink-cloud-api&lt;/a> のようにみえる。サイトをみる限りはカメラしかサポートしていないようにもみえる。スマートプラグのようなデバイスがハックしやすい性質のせいか、書いてある情報が曖昧で実際にどうやってデバイスを制御したらよいのかネット上の記事からよくわからない。実際に購入したもので試してみるのが早そう。明日届く予定。&lt;/p>
&lt;p>このスマートプラグによる電源 on/off のテスターに、ダイソーで電球を購入してきた。電源ソケットアダプタが100円、電球は100円、200円、300円とそれぞれあったんだけど、100円の差異でどうせ買うなら精度のよいものをと考えて300円のものを購入した。LED で電力消費も少ない。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0611_light.jpeg"/>
&lt;/figure>
&lt;p>試しにオフィスにあった amazon 純正スマートプラグ経由で接続して alexa アプリで on/off したら意図したように電球が灯ってテスターの代替にできた。デモのために使うのでそれぐらいわかりやすいのがよい。&lt;/p>
&lt;h2 id="モロゾフ">モロゾフ&lt;/h2>
&lt;p>昨日参加したもくもく会を借りていた &lt;a href="https://www.kobe-bunka.jp/facilities/chuo/">中央区文化センター&lt;/a> には2フロアに渡って大小いくつかの会議室がある。それぞれの会議室には張り紙をしていて借り主の名前が外からわかる。たまたま通ったところに「モロゾフ労働組合」と書いてあって、どこかの会社の労組が会議しているんだなと覚えていた。今日になって来週の東京出張のお土産を探していたらモロゾフというお店があることに気付いた。&lt;a href="https://www.morozoff.co.jp/company_ir/history_index.html">モロゾフの歩み&lt;/a> によると1931年創業の神戸本店の洋菓子の会社らしい。これもなにかの縁だと思って今回はモロゾフさんの神戸本店へ行って &lt;a href="https://www.morozoff.co.jp/products/baked_sweets/15_3/">ブロードランド 15個入&lt;/a> をお土産用に購入した。&lt;/p>
&lt;p>自分用にアーモンドケーキを買って食べてみた。しっとり食感で控え目にアーモンドの風味がして甘過ぎなくて後味のよいケーキでおいしかった。&lt;/p>
&lt;figure>&lt;img src="/diary/diary/img/2023/0611_armond-cake.png"/>
&lt;/figure></content></item></channel></rss>